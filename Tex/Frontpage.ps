%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: Frontpage.dvi
%%CreationDate: Thu May 29 13:26:47 2014
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CharterBT-Roman CharterBT-Bold CMSY10 Times-Roman
%%+ Times-Bold CMMI10 CMBX10 CMR10 CMEX10 CMMI8 CMSY8 CMR8
%%+ CharterBT-Italic CMBX8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/texbin/dvips -o Frontpage.ps Frontpage.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.05.29:1326
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.665 1.665 3.00003 0.0 3.00003 curveto -1.665 3.00003
-3.00003 1.665 -3.00003 0.0 curveto -3.00003 -1.665 -1.665 -3.00003
0.0 -3.00003 curveto 1.665 -3.00003 3.00003 -1.665 3.00003 0.0 curveto
closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore
newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMBX8
%!PS-AdobeFont-1.0: CMBX8 003.002
%%Title: CMBX8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX8 known{/CMBX8 findfont dup/UniqueID known{dup
/UniqueID get 5000766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX8 def
/FontBBox {-59 -250 1235 750 }readonly def
/UniqueID 5000766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX8.) readonly def
/FullName (CMBX8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4350D67F24B396427
8808B79FF5CAF896E4A8A31E46499CEE35E6A5AF0CFD175C2DD628620C681947
A02A01D3C2B715AB79D7FDAB638D887B77DFFEC5C3A9484104D84FCECC7296CE
2A3488AE246E233A8D5B40ED5DCC44558B77422BDE47E0435F960EEC3A26DA9C
E137555F0638511AAA14992C8DDA9A4A11B3F90BD4DAAD1883BBEC357DBD8389
16EBE2AA8F93C2AD44F383ABE13B8C95B240563FAB987EA98794D301785E1E9F
03DD545E51A6D58B3618E0750208D3AB913F9CE8C3B865D4CB83B90FB24962D6
142B0204A1E271854F903A2FF600E087EE2FC222326051F155BE709B3E7A808A
487B8AC3CD7D2EAB52C2ED68285F962D06677C2A5015A16B3D12D15D658D89E5
18513C020222D1A995EA14D7D9CCAC4A552172146B53AA4DCF6DD217B61CFE98
1E14709295D97DC8B168AFBBA9990F0BFB9F72A5305570A1848A9E2CCA702C77
DF4F414CDDA4FD7DA25D9B09F05A77F37F1496F2601AA5FBE9B52C1C16FBE860
A3FCA20DCAA3BBADDA16304242A306400D2BEC9BA12788A5AE0E0CABDCF565BF
474A615DB6A14695E6C7288DE0B852EB91153F8A337E66DB5CB43E8234589F00
4868530A5216CFCFA0DCDB92D6BDB092855E9BA80682D5679EF88F3152E8C2B9
E38D0D6F26276BC74B8664E13D4B388124C88D19FFD2448E2743BC02AEB14694
1AC48CB776F8526FA416549A3C35616E8FA5632AA0D557B90C5CF40BE1B62325
97E45F7EC4F04CBC178B72A195912CD18498098C901CD35834FD6EEF765CB292
5A753BAACA557BEA0AF989BDEE0F0C5DF8177084AFC20E7A78BFA536DC28E9DA
FEBFF50E908CA6B5DA15D3CC28A00DBFF8A1D7FF0D82F2A397C0B8B23F959C99
63BFBA5FC83D7F51CD0EA2E2C925F7F4AAEEC8A0483F50E02E4C0373FA4D7891
3EDAB498C44A259B6A2E3E176143C12E25C7B880E2E6B96592BE77AEE1190C74
35F4BA28952C002AB6B3A4B0BD9054855CBDC143CA9D20D20EB111A030D1C979
86BDE77F3BB47918F4A456513EDCB90B7CF72E97296FE07F51D0DF8C9E666024
69C209E6A4A5343F3DEDB6F09B06297505F8F8AC2AA857DC545E030DC9337FBC
E48DC186C5DB047D0FF564B444054F7664AC72B7C39F39959BD574C099562FAF
9832B2260D4F1E9FE64F6BE5243308B57499B6220EB4431A53E8D9A3C6BDF5F3
8D7EA0754D363E897EC68D7E45DB4635D3E7D7176C8C364082D1D6B00D9A7AEE
5E978FC3AC4D9D73E8FAE3086930DA11497F8867E01CAE42CD9D7D1558DA4694
48501C4729614948B9DD2065E5F13275325302C24E28A22AC2F33304EAE0A317
FE51288D91EFB7AF68B8B9C3BE1294CBC390862BC28463FBBD62A32E0AE3344C
5F96E2343E5E1662E5626C6014E1F0E661126A00E1E24A4F7A2546C37B701BA8
F18F93372B48893E3C0449CEA14D228BDB8FD17256DF2FE0767661F6A3972DA9
33C746E2AFF1EFF2B44159CFF6A570C10260751299D8A30A3BC19239C9FE0DC6
BAD2AD2558223FF4CA1B672426EBC422A12514F67D9152099848B13E131C0E90
9037A6DBEC1CB183720F78C37D5EE5BFE81FCB2F615A9595791C6F56210C84FE
62FF6F5F15B866C686D8881212D7B3F4342FD09FC1E4874D35DCDFDB9D506D5A
06E5DB61F496E70C8E8B145B9BB951B2160B6FE86EA7AC1671BC40CDD866A9DB
3103E91EB483E5BE3C037F2D2388A44D8154B216C433FB85231DA4F55D3D4A8E
7FDA4387923679067F13454B02D9F2E2B030FD62C0750576F32F090E9A054DBF
4BBB729B94162C080ECD81F2DB2BD1D65C1D50CE414D0FFB4C7E994B65177F04
E786CACF71A5690F62AE3AE57F43247B8392D2BBD4E61262EA0CAD3868F33296
BC7002271448E865DED4324FCD923313969D1355A579F918E6225955A2BD5B7E
C2A0E02809102F295895722930FCCCE6E8DB301635221B57FA589533C2C3BEC4
9B1958680BE6102180C667E4984C7B9250C5BB231F8E443B98EF07FAE3AC29F0
B4CC4BE8A3DC0058FB2CCEB90262FC959D5ECC3A887E10E1E43FAE7DFBDE4882
BA9035B38BB0F69F8659C0094EA643DEBCACFC8EB5C73AA25A1B83B2DA2D1D47
29A27B554BB9A762D020EC05001DC8559E096F82581B248AF95D6F12FB73E4E9
58BFF246EB803809F561F8E17E6B1B7B1472FC342761EF29FA2C3890FEEB96FF
6B1A173A74A2A61837BE90AD9574EFD8D65602C63C560DEFBE5F0C1F8250E66B
E7A8C1A68E8445CF67F672E2F11583F70E77F479916339FA7E5672DFD1907CAE
45A5DBD35C535D903442EECF453495A6B256DC635941A6781C426A2E12BAF3BB
73C147A74DDE4925D642BB73D9F2608554D967A0944D38CB29F984379073F6B2
77301EA7AD503121EAA1AF349D72677869515D0E537AD762304A6A5CF31E8431
D053D4A1B6C03A4DBE6BDAE2312FBC65F18FC8F4AA546FA69D09DCC722CEE1DA
E02B6F69B69F675AE544ACAEFCDE959350E1EB6C45C162E08E153D1F3151AFF7
B539D0834CA4B87B06732D5EC077B37373348A5CD7B39811286092ADBDD86931
3F6867AC5D53E565234847205FEDC23BC1E1166CA113787DEB72AC251FE7FD1E
250557284E533F3B2DA3BB22AFF13428D2537BBAFB70734A7FDDC68AF58A9D3F
DD456ED2E4A0A89C6E22080101412164A955748ED5E689308C96FA5D23D63513
5B8890A57983C9DAE333B38ADFE356C6CD6BB865C493151B24B9A1FC4D66C491
12E8637906EBCBD60E76227E8847112135CE4FFB00B396FE3DC237292B8D2EA3
03B263C1B6CDA2719C0D99B6CEEE6C86CB397C4D0C058BC2EE9D6298612D01BD
31531819BFC228868453DB8EB836AF2394D45A222A21EBDE795E558E84A277F7
D8591ADCD9E16C34201CB0D0FC1FE62FB107D53DA0D95F61A9A55585A3D106B5
48B258A35D3AF66995A9DEE4312C0DA4C91CD3AA7FFBB7A5278FACBA05E5BBA0
F936BC210EA4E107EB883DEBC83BBA0798B665F2DAF2BCFC00D524930B394187
4712AC73DC2F901BDA21589E9132A50B6F16FE8C6153209BDEEC9025C3C24035
F8623B3CDF420E064D2D3F1BEDA64E39C8482972C96B38BF7D25C1025A9DC57C
40BE36086161C419BE1B0CB4B653DB07FA28934C41AFE90152A14AF2688FB6A0
71AEB8175EEA7775C13F2B7C598C30E91EA8DB07ECDDAD64E40A8C8FAA3ACCAE
ECD1296AB2075DE150F10502847E970256A70B7329834B1D80D40AC5C8DF55DD
E3922D85820114F898F87E644EB8F460BFCFF752B635B6D08F46AEF2123A2E86
913CF1B45DD2D01B8E560EC04230CC8DE7C78EA2970C224B371777430ED41B02
63C87C9B29161341DAC785F547C2E6256370BF3BD8D7AEC72F6F9A4BDDFB6EFD
45AF0A366B9387A4CD9164326B997BCDCFFE0D25D88E22888889D8E47C5709F7
CAD17E0DD435B20E767B31521E9E14ADE57C7C9CDC2FD7D09DAF912F6C5CDC34
6362133B50B8E5954814EFAE6AB8D004AF3CBE097BB0F61FDF1E10170F4EA28D
CD93B802BE124A435403D3BAEBE8C1131718579194420AD650A3986AF9220363
75155975B60093A9A6CD171834B2E39629041BEDA7CFAC7BA6411A206B09DD78
CFF14E36304B7FAC838FEC6E4AC6847C6CEC1559B41D81383017668DD230C98B
C317B08B199C270FEAF50868DFE6AD4243EAEB67590855074A248CEF8F64DB80
D5CCAE6445AE92150058660E861467D0CECF61DCD5D4062CE9DF07CB098B90FB
6CB59553A0956BD6339CAC2FA9C519C46AE9775672DD69D33C0E6D7F626EC2D5
85070A68A450227CD535911F9E0CCD1BA379C750CD10C4190EC8B979C1E4ECBD
DE2836E85616406FC2DFDA7E27A411276AD1B3900453DC3AD85C7A9BE51CCAEE
315E3E5C31F8E6962721DA166B9660C8087C1F1ABD77950E061A2D924FBF4A89
3FF5C570ABAC5EED011D2BF94BC1268EE4F2A2CCBCBA29FBCC4B186A3FCDDDD3
B462305EABECBFD279C9860D5E490EA63D9231638E06EE8D58EE6E926C4A3D3A
C5E957A20F1F99FA05C43BC4D1918DA051656EEF0C498748879BA4258DD73CAB
0F32F20B98014C2B14A77186E43470F0182828955730F440493D34B0877065A7
6E7B704B27F93DAD747DA77109C541A15F08A694A703E6E7C62BD0A86331EE79
6C18A6C38923B88BF83BF212C76BA6EAC620CC859F0365F5511821261CE29DC2
BFEBDE0CD36F0052692C9945077CD606E4841CB991D3C3DE9BE28EC7CBEC2FA6
75984071CFDFA8857CCDF9005AA8FC549EF295DC701260CB4A5CE8FA0F439B22
BC2C19D3C14E7B2B6B41AAA158659C307D9C91C2B12331BE152D3EF8FD324B9F
8C3B74D553AADE2B0E89805F47FA2DF36766B8DF01CC2B6B44344BF4B11C7FD3
186662A11137448ACE7D3F4CA515E0BEC21859D2BB5A25F67C48817404DFA0CA
7B3D11495250150C6A1E32B80334E8F5C52D4769C8BDF3E6E3DA4FF1BC97E009
A1AFD195205FC741837F21CC2942CC8322F3D6AAB6D330E6CE120E1A15E91987
AD98FC12019A945B215BC72768F32A7635AB0F0E6E185AC7099F1A0EAEEC5FA0
341EBECA077B25102310331CA87B74345506156CA5E853728217608416EC8173
2D24CEE766E2B3B0BE183CF2A8B794E0E0E91C11D59B98DF5F4E5EA119F197B5
D8800744F9FD45015FCF5E740105ECE72AB5AB7E1CFEB15807A0D1CDE00A44AD
E94EF57AB546990A691FB2E24CB55477B7FAB6F12A28676DB7ECCC014AC70C80
9199E921F449C232EEB88268A48DD86FCFA2E29FB450FEC618E9E317F4AACC68
C51EBDB1B9E43F7574B40C0EB05E769D30F1C172645006D799E8C3D7C79DACD4
FD269ABF9B24B215B534365D79535AE3578D714606D22AAA5A2039FE7A5DD52E
506D293824BEF78F5E1C7228FF9097FF5AE8CB7B46E69C72FB43EEA7110A9EAA
546E9975C54CFD56022EB1B21E00CEC393DFA488C49C90E73D57CAB0324E36CD
0D2F0F0641DC3785CA9BFD680D609392CC2F852056E90276DA93043B14F30BDB
C32808FCF16CD13E4A13B727BEB4FD42B29D6C215AF4811B965822960F6D7CDE
92BBB8FB84B59075FC14075C30CEFD9D095ADD8043FD12452D3C5E4EFABC9671
6E929D5932C337969F3F5448A2BC8001ACDDA043EE975F35E64D7436FB73B197
697E87860E071F326C7080E9C2930CBA600C6875ECFA85DD4C3741945004B3C3
298F2B741302E0FD39D990F20D68542B2FD0D71F52DE1ADF30FFA332306360C7
C6BE3E6D510A691029D503FBFE96831D332831C69B590025C831281881968B86
42817BFDCE322355F994FA9C8BE68A9222CC09AF9AB2AAE8BCFDEB69B8481CB5
75E66873B08A4E8265F369448F0E3BC0C82D82F65216D0C93DE88322EE7D0FD4
1089A1D6CC3B52F681BAEADB1C82EC3B82949C27C6C340BE7E27020015CF142C
37DC3BA8E4EC2A4FA81E50EE6854C23B3EE301E43D83CF6B82E80ABAA01EC82A
36CFE930297EE3A45783871EC4E77DCCC0923A9FB1654406FC8070BDADBD27D6
0BA8837A459481ECB63F03DC3007700D360643864AFB3728C5573A20870E5D55
4F698DB4B5610C30876DE56786D84C71AA9FDD5198B4F3F8918AF319B7FCD04C
F06C90B2CD0CF2241C2055DB68F1CA5CD57990E68F6F832A5820A481B0823F98
0F4BAE4D7E92F4F2BC118E01ADDB7D527E6BB49E85D37D7E0BE7BEFBD1BF9E1B
9ECE91D28E664284D190010D1578C1F61F02610A9AA6E9527872276E59A25362
68F74B88959CE84F497D8D89735413981FE4EF573E4E0C02D3F0EED5FC100A4A
563949D21A3E29D86A84C9F945602D9EDA860C6C44492EF219DFEBCC016FA7A4
AA12A727D4E218D22805E5EC878AEA7D8B5D79E84E74E78FD9E017FEC4220A7F
9ABCD125BA6E9D378BDC19D0B267A323FDD0831C5E7EB7D4A5CE7047F272D3AD
1E25F7C5327127A058C287FEC98BD81144447D5BF73C56472E552C7B1AAF6705
05286122B612BF5A2AA8C4A6CD64088BAB59B008A43121FBF5692418FFCFAF05
260D6EB20C680BB73F3988C3E4E3CEFC65BA637FDFBA60E6D9D63E6C7FE196F4
412367C1F43343EC6FEE8F97FA0E95BF1BC2C15F14CB6C8E8B28248B5EBB6478
FDDA9D183AFF6A63145824E518377F384740984DC6095FCF3F8B777DD23A221B
AB1ED5EE27C19941184967846B8800E489E1B86F23ABC34237502ABCAF092C77
38A1720A851E8EED24BFEC9AB4C8D4D7FFC3ED0C1CF4FC73B962EB53725DB67D
983A8C2B9E30F4F85AFAA17D86EEFD57CB17BACFB8BB2204E7CDAC446C679226
F21D1A5CF2EA719888BC727725346D58479B69213F9EC3520B9C3A1778061AB0
3B330514114833525D40B3F7F45EE401534732803B807953EE20C9660FB790C2
71513A220EBE1731295B205324F275FE110D60A77CBB43441472193570E67BD0
E97D51AEDD94B4DA0D71DE66E18F22F1E6CCB81D1DAD113125743D82DD4BBC8C
190BF7073078FB1235E8A329EC3C69E3D25B37B1BCBDFA50D0C34BA486AB50CE
0F411AE5DDD05BF3ABA16151A06D566860A08B2C634786C823D615BE622BC8DC
36FADBEE389BA4F7A5A32BBAC6403282F02E92ADF11C14F45B51D579631F067E
09C17ACC247837A8B6F66C66574F91317CC12C73D09A75B80CFD11993FEFCED9
859D36B55033A149ECF0A845F611FAC0A8DEE32B407091C0233808C79857C2C1
540A530EBFAE98C5D51C955D02FE62C8F207C97D614636AF826A7F2247E56B54
3B496509DEDA8A277F0100A94376F5FF85586C6721F65F3F6BCF8B19CAAF8E4A
EB16AC97AB71C32FD3DC9E7F1CF02D29ED516BE9F8F0BA027C68A5467A91338C
CB52C099EC4FB72775138197BFF472B4FB75B84D5D45824A705412F13EC5A2DF
363D37E7ED7DEBD14AB754B8F7C829998351F76E0660BBBFAE6DE96BEA394965
F14D65CD28C593B5056D41FBE0780AE9AFE5F697D3F41FD750D327F5DC23FE02
1DC31AC1DC74721C939D38710BB1BE55E895C2181365CD2BF61E8B59023253B9
7694B2215942A702B855A0102029229F2CFB8EBDED2BA9B723CD915E0CF54FD2
D8B4CA2A0BD43DEB478AC342F292FF590B2FDCFEB7195BA687A7C7D4E17D5E06
EDA0D7F0195D255CEA7288396CB53A961DC4EC29F949EA8AA48DBFD6BD2BC7C5
7019E26D342B8BBD0AD9D48E689550DC1FD581EB0D6E4156D107E116D9326BF7
E29F3479790283C8FA5AD1BF8562D11A26F81783E7B9CB3C74EDB9A2BCEE56F0
0A6FF68026B320FAA86EF294C07F310B832941D400337C0A1C8DD466F2AEA9C9
7284F09CF01CB6D17E333AFEAB84DB7E5451829DEE0B97F8D4037877EB32BE6C
871C9B477865AFA9BECE34891B81B4416BF1C82CEBFBBB6757B7032E04E2ED10
38DC59E06E65379DF10372264804733507A929783916D02CF3158E4AEC0531EB
95502E07ECAAAE6EF0E70EE934263D6C8404739F468228484BC5BF2EDF9BF06C
D5CABBE2E28975711AD2F485846A92D22DB307ED63FDF99120684837B21AE421
751B4681AF90A153AE3B977850AF1B7FADFB4A0D074AEE539DD1B553D99CF869
0D589B7C27086CD89458E78A94E33C2610617A56771E56B146D9143488B01742
017A7EE0444948173C783DB8643039B61CAE1D863047ED474E47A1CB49DC43DA
0099D2BE926D5C8CE61D98B0DF3B532AAB90EE57BC17191EF4119FCDB991ACE4
B124110BEAD7BC80EC8A205638E2727D8464AFE44C65F47D33F454316DD87FAF
A1C93E7C6C1E357F3E111E41706635476A360F789F0153DD8DBBFD19826BDB1C
AD807F7DC8E44222D425EF8E4FA926096F9CD6FA39A45095F0B0D83DEE822BEB
1A13607B8DF12AAB3255373E4A572C228A9C47758328495C21C8C2ADBE3B0224
25A1D5DFCB522D590FA814314A9A4469CD7E3659E3A3D7357783F96BC2C5564F
381E21BA97EAA2A8D4BD0650654EAFC504B97FF24348AA29AB56E746201FB07B
396D29CE96CEC32C865AFACE3EC8056994B039C274B18BDEB4255E834F1DD09B
4EEDA289F55AA04C859851B50F6845ABBADD57325CE8A8688A0ED3F20769EDA5
DD3FC3800B71BE47A5B2BD65EB350BE0D351C364BC1BE009CBB2DCAC119961EF
DFEAA3BAB0B3BCD7015B717BEB32393B9E30B3D39625540B52FDE9E17FBBE94B
1F160A2AA161B09FE93946BA5437A543E0D6AE9D9C7CC19C4E219C1B7FC9935A
4FD7B009D2E117FC79FB12DCADE1D60AC0DA9D4C7BAA9675FE5ED151D91C563D
AF8DD3FA315BD4D52A33ABCB144E276B8FE834CF12D4A72056C0DC86AC7D5712
A9C80DB4DBF794348B47DC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CharterBT-Bold
%!PS-AdobeFont-1.0
%%CreationDate: Sat Nov 3 22:32:22 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter Bold) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 90 def
end readonly def
/FontName /CharterBT-Bold def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-166 -236 1262 963} readonly def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0EDEF4D057DACD7D
60580599064BABAB1CE351349341DD17F6E45A394DAC1BF2583D7AEC9DB9E268
F71BE0A3B79D4AB66BEB5DA2692C914E559CCA97703DEA33768930331FD700A6
9D4D881F8360359A40000866170171E0A3E4304B373820B2A511BF86ABB5D456
DE6BB662E45B073CD156F6191A05297E9DA5DB76E42DF8104DFA7C3D40DD3EF0
615E10F769BFC1568199B1F24634B3D9B4B1779C020BA15D10F5794D16712E97
2CFAF492B0BB8FC9DF38B0287E29E7182221C44525DEA95099B47C4248CF7CCB
4F5478DB01E5DB9271CB97760847C7B1991EF887B6F5BE0A8439F177B7678201
574B0F417E23F656ACE9DF23CB96D16B78CA04B0FC907F5A61FB3053DB4C7595
1369F73975D7F8C2D88E0266AAE511E1BD46DC818475EA689C03E91B7D5AECB3
41CA1C4AC8D6BFC11C7ABD2B4CFD92396527A3704607E67F861A1956D34F9EC3
A75D92B3370998BE0CFA8862F70124C86F3F2846837ED2A517582672645CD374
8C4EBEF1F1933AE744E072854E4D6A430F368256CF9EA0D4E5ADBF3AF025AEDD
5F289ACBD9DA6E4875B720711084153EE2C60A9277E16322AA0B8E08ECA734BE
CE911C49140621D3A445D7D6256E6FB057A6D50C35020F3CD374C017DCFCE717
E7831D030168CC0CE30C2D6DD186AAAC02EC119034FBD17D7C0EB7729E9C605C
4B5B33CDCF2CCFB7D0752ED2D54DE841D0AAC0CA57824E1838A12C24428EBDAE
008DBDE380B680E4DB60AC14916C65D8FB507EEDC29289926404C8A10727313C
6FBB4D6CDFB521FD1533020ED7EF07150803697A98E01D00A0E848E629271892
E708B594A3D6D3FBC37141AA375205EFA30478067380BBE0D8C4EA41D16D22DC
809DDD97C73CBE9008E88CCC394CFD3B7A670D3AE5EB91F77851BA811EEC7EB9
D1C2DBC40E24908FC65500C95AF2DE6862F54C634BE7AE511A271C470EABC9D0
D924A9BF2F4841144E5B06E3583F7CF83E083956B3A0D43C76127F8CE68790EE
463774DEDFC3928949F19EEE26306A74F977CB008C3323FB3B457065184C4906
C86EAB1DF73EEC1E8AFA48A69FACEE23ECB52D220BD1D110E04F7F237051A9CC
47F695536EA269D3EEB4B4B21CE31A6EDA5DEF84F27475BC144DA4019F2A6EFA
4D5E4A0891191C6C6B91E45527870CAE0AE19BC0516309F32D00B0225754F349
8DA1DEFB73462798C4CBB945704A540F7095F29BF11B2870DB7C3ACC90801CA7
82B2413469757D973E4F2F216108EEA17CF4A9394722F4596B941EEE41F2B753
58A9F9A9F929301FA702AAE462955BCD54FA20856C7855509CD57489F07108D9
B5C94608F8321966FAC5DC8FF75E0DBF78094FD10296D1AB863C95186206F765
55F2080ADF81CF0BC1C0849A1009A55A9FE8B59E831FE36EAC3405A6648F656E
F42022D59A8BC9F8C0ACBE0DDB99B19753CA1EE77CD65AE2967B26280EC428FC
E74B7A4FF55FD6DA780B585B4721A33D64F4F31BF52E9D7C88792A2199B8D101
CD4C8C73972DCFF9FF59AD543C6E2C1F68AB4DFB66CCFC65865B62320915C3E2
5EF7CBA2F26A639CF3B67B59CB7630AE1F548FDEE4EF0D9508A003EB192924BD
74BB89866A2EEF4B5407362B5950593BADF78CF2010F195C2582FC2B7408CADB
F7FF13F73D15EFF2C1356930D54A12B340594BF9377CD6203A18615DB93A053D
095E938FD45B0085053B12E7D0CF9F5F9F5E52BAE4D5E68D15AB0EE7023EA9FE
B26972FBF21D3A6DDF0D61D5535840379E8F07D1B5A8ADFCC091A39BA3F94062
55E3382B0BF1D7ED268DDEE51AA377D7B82C72EB4B6CCC8C3E6B41C591D526E2
1F9E8B99CAD8B8FEA60D67D5EA9375F90BF210DD13724760E5887767B815BD00
977EE19BC690BCDC1C21BD8B0331A7A8676ABFBE804B0302F177E83159361A4A
EB299E0848567D85E7D3F4A4259F05748E894E5A7EA4526FBC45FE8317D94487
B7BBCC02681EC19A47BEF9FA3B04C1CACAF8989DF8B952B1DC3D59D44E7A9E4E
DB0DB1C957FFFD78A70E297A70449A9C183D32A58D72AFDC3280479B5A7E2F02
24A87EB7789685F6922F432FBD93006DAC651B68E757F60DABD00B606247E509
FA294C6CB1C25DE35B70C70C0AA09FB2263C83AA38957C0972FFEDF562CDB899
E63AC758040FB12B24F1AE4D3E7D2C6FF67C139D5F1951860382DEEDFF0C8F14
65A8E9B198F157406A308F72B87FEFE9217A4AF01AADEF9B662AC0457F5871EB
B8955021BF2EFCF174699999BC8A198A35D9D39DCE614922537DAE21BECE0A85
E6E7CE34EEA78D3C4A7DE20C6A2FB2717F0278E9BB1D1764AA34AEF4312A3B4E
CE25F8EB3038A8F9A9D769E4B4BD5C4F7875A8041DF7794D747A0C86770FA787
F267499DA09EB703969F823150571DE1D855BF192F87B72ACD61CF7A1A381FF6
72442A66A601FE471DBD456B7DFAFE9CBEF6DAAD953978834F2493201FDE2D2E
1EA7349E3268298EE4AC048C897052A71A849C48835E12C89A0196EA151A6F42
A1D3A42DF38CD702E62C978E73A019E188369717B133DE2B68467A2A8B50B4E2
4AC7004C28C66BABE89EB8A043278CFA0D9E2033033428704E2224DBD973F1A1
AD29A5FA10863BEF5BC5056E81FDD10942804BCAB7DBCE1D74C167EF0894D413
77969049DE7E94D0337F9DA947EB5B9FCF47B666FC96828F4441E3AF6BDD781F
814F6CDA26146DB6CF977E29E6736DB5B7B433F79D89077598CADA587F95B402
41FF32EA022278786E36F07F613C7179F4246065FFE66DE483011A4F305AB159
0266D4DEB18A1C0A0F0E9B18F155CF537B4C3174259C939D85719FF6F8502C8D
710954634B1F4B42C3E5C9AE4BD62F21918DCBDDA802361E47C72B82A38A9BAA
5E7495CBB418B5B20897EEC307AD6E5FDDC4A0670381F786CE56D882D09F3C04
13BC931BBABBF3875B17DC889CEA63E96A16488857909078CCAD5FA2E1182AA8
1684E63F0E612D3A1A174A028FA3E61128BC435E0F0C08146AAC5B77E44C847A
B90B1602E398D58BBB6978C37FABD59589B143DF971E42B6C91988AAACD7B98E
2265F319FD93FA38C46066B1C75E62AE2E8115FCE5B370F52E38E750F117A616
670EAFAE1D379807417A1485ED3D3D008CA7598149F1127C0CE693575EE9CF5F
2479C97B0FE4C7AE808727C754CDB848E9CEAB88D3291F039314890C58ABF46C
CEBE747F67574FC637FC529254FA284784BB61FCB5E3A04B00038E4F5DCBA9F9
4721C67999AFD40BD1FEC7C581770316C8E793D1CB666FC722A776D2944C69F7
D6B2219EEC913FC00A0892D2C122391FE6A514D300575C2ED63A29FC3E1B9925
97252F6C801CC51BE0EF94A7DAB4A519BA4D71504FA2BEC21427FA2D3F96CE63
F7F50FB6A5AC1755BA4EB4B104028FACB79604658F77DB1E421DE3152AAA0D62
613C385B0F0A2DD57FF0E52C6C707F57FF8F41352EEB75DDB402B5ACD7F7081E
D01E97EC769FED6D6B43E2DDB4B645FC6E912847FDE31D9A0955DB534E487DA0
DDDFC213D5711AF76F736AC813FBCD7F1BAC51AD0B078DFB8D8027680F175B65
BB0A9796DFC3EE751BE8A268D83B462609D2A46FEDA7E17CD64F2600DD208DE2
AB861A1314074FED3A4C816A2FF24E7BFB91553D15242A501B1BB98F2CBB518D
01FBDEDCCA816E82D5176264C9DC2A23ABFD739D95F220433CA46C50EF8A2920
EF79E1A7990975EA6AD0CC53E9F28FDCEFB76593D6B65CA8B122B450EF93D48A
129E368E1B0402A867A033EF243F8AA0392427F462E1B763C562FE06B460C797
CC3D64052B39277820874B7E6605A0C12553FF37AB4668B14AC46AD1F488F036
C8DD5A99D30EA24A60623EB234EA75D4FA0DC9C48D56AB9FB3D4ABEE416223E2
61B15D7A7EFAFA28CF1EF31B873BB2862DE32B462F8DB9C7CE0414A4B663EB2A
69E834799356CE6D4DE195B334BBD87C93B2AC665CFABEFB280385D2FEA6E404
32CB09DCCF5C286D5E903E7D771BD1E97971962010BDC79A29F57D0C287D6454
72E49931F5C4CFDB12F0A1B371C766966B30E6CE5B0586EDC6E12808E3212835
34F91CFE4A015CF44547A06F5A197F913933699C2643EBEC1682AA02B897A5ED
4709B6DCE7BB61A94DF50297CB03C351E9063A64804E46E51534E6FF73120542
EA25681E017995670CC2806160D3ED93C0B822F07B115BFD8B78B9B81878ACAD
C8AB6FAC6C1A365C7C44AE73DAD01220FAF168AC45A332E36A67FD71C4DCEDF3
CFB6AA7BA30C2B26314DC8729C3DD6E4619834FEB539B493A1170CB474788AA9
5A9F8DC4FD7B6D64FE4EDA2CA6DF0C215B9E38FB9B97FFB1C9913179AA9EFAF1
F1ABD07DF0758A4FED6D2DC00D4CC06FD8B594B6CAE544A908F0C2698A4F1D50
227960A6F959E12215756374799B24F6AEF3BDA22768D2B788481484E533930E
D910B77C8C23F9734749CCEA3E53E1AAD246B3DEA8134A6B041619DBB7D9465F
33C4D3C5B3E759E39B69B54F0A1BDCA70656E65B9B9DA9DF6F804D0AC5B96274
2800EE1C479D89FD1287E14AB97E34A8086AA0DA358DB224E49AFCF42284E440
3E1E3C43AB10AE3F92A5A62DCDF72A6CCD45AFBF57096754C2220DA97E2FEAC1
91237E390D8DFCA62C376FE0067DD47D120C5F0BF5C151A95C32BF1C6209EDF7
6AC31ABD4E08E64E3AEF0DD187BB933165D3A32EB608D822556DBC2194671D72
B6FF1F01E26F049866FBD828C4C345C59AFF485107A14D5740F601C39CBDFAD7
18478F9333BD5F2F7AFAF9568ACFB174DFA2EE3DB16A972A66636C88BFCAB916
DCBE930A2C228C0921C23626014AC2AAF242058CB47B8853519F8C839854373D
4C1DE79601A19A3D25C1B2A7C151A95C32BF1C6209EDF76AC31ABD4E08E64E39
21B87D97F9B3A128F65C56DCD324461BCCE95ADE1BE8D25BE5B1FC5555CF1B23
D85746171F817A462625C09098DB5F75E68A722F24F8B6340F50198E2C85C908
3633A24477BD011DB02AB939D46A8EB43B028A10E6C7EC319C8E7A56E01ABD54
7CD5F1E1B801E3AF359A0E9B819FAAC94C9B34CFA145F53F7408F5F65C651F0D
9A37852C909D4DC920E6BCE5E3C17FDFE401C352ECBA8A10A70D6BF1C02FA71C
2E13D4D489B720C5893745FCC98899A6E852881FCEE9E7745FA000854AFEAA6E
8E69AAC2484D98892C070A5385663C8DA8580E916C33DFEB87F8F4990311352F
C0E64C379C031C3F33A2B2975DEF4064209DD583C24797DB9A2422887F0BA24A
4A1EC45B4D51231F9D1B4EB039358CEC7D8E8A9B917BB0AE076AB9196E9BCB54
85888C5C1DC30EF4EC0A7FC9BE1B0AD364A3C01B7379E68230DB433F0516F1FF
4532326B68559CFBD38731EF6FE9B3986CB259E5C7D5AAB85CF509976DCF16A3
12AB71C9B4450DB50E60B24C0829218D06A67C39D589B284E319535EC0B3B799
B856C41AA9B0B5686ABC157581CDA38DB1EFD6BDE543D72209EE8E2702BBF020
7CBBE3CF66829AB49A4C736AA98B4175AC6BEDCD825160079C217C5603D65719
B37E4F50EB499EBFBDBD4D634FC4A738C024E0957497F5308780D3309964862D
B6783426832215E9B9E11DC5C2D7BF65028B8CB67A6A0D8AE6EBC0A11C582835
8DA30BD858175D508E2DDD82ED8D2491A58CCCE1DBB176C125E61FF828EBAEF7
749AB93106452934CBB424CBF50AF8D845E3FA77DE5FEB367265BEB8D9EB3BEC
6B37C1FE7A0C7E380F3E98C89A09BD03BC32F27C852769C38A0ABF4E88F88F75
4C304C54C8A9D0814370A95B52B79652EF033B0FE5488E046B4614BD460FE547
5EC6D4D31379E1100668342CB00085E830E7B4D0FB4E830C6EE762E49C388119
38C663FA2491204A71C14FD58885E2D64E71423A0800763B133FCA7E65C1C99D
BA33E5B0AD0B6E8EF304520983CC06F2F441631890850A589B99D611F0DE80F0
4ABD4B6A43D25B72FF4415FCFF497D5482472512D1C86B1BB2D71EE7367F120E
E06461820546A83F8E267FEFD0154F59D2409BCC7786F63CAD547689DFB8A501
14DCF27C6B9C3F28A5E98923E618F4BD0DD92B14253CA0A9B35204580FF75409
F958FA870D08ED2D3740C4BBD648918F1CE0E7046C29CB834856ADCB6DB02ADA
8540B29CCBDA23B28895B8019A6360F321153F19202E93E95ACCD3BBDC77F101
9EAF0FB4A3CD05244BB273198862C5AF9BD0923E31255CE9510A533BC182465C
39CBFEF6558FAD40F89B5C7F3F7D42416327B18993779267093B6B6B0E6A0DC1
FFF760E678FAD523AE70773809F04D084261FFFF845F24EA082C8B2723830FB0
30D440C6F4FB755324020C24870D04B6CDC2228583A81E85ACF2BB7CD5E5217C
9712D56B31FD08C1C2011C43B948E326AAFB962E7BBF3E03A2D4A30556116353
A58A264B27AB6452A9DFD0D67E0784CBE7EBC74F90EB3F153917680B3067FD3E
C2F84AF3788A724381E8AD89F0BD5B91384DF83538DDDFF0830734A7C580BF61
1B8D71EC860569BBC5DE7A6A199AB4C243DC390D3A0197AE38E6FFED03398367
E8D5B345AB9DCEE931DA11C898E1835FD4F9FD0EF0EE5135956A7B0E8195E410
3AE9C3471DC0EA79847D43E94777ABFB34BB677D809D9009E1B4678ECDA6041A
24AD7CB5022255701F23FB5D40FB5C9BA42B4934CE7C55CF814833A636FE3664
A102CC3DE20B65E85C4F6D5104A2DC6F9F67952116166482CAE5E0ABDC942BA8
5D8C3AFD14B08FBC0ED3CA5125E10D8E8E2B3D65611110CF0C3FA08EB8E67526
213C73E4B86617AE2AEAA6DCF3CB55EE7C24B660C83D41E7A8B82E8B1E37734E
7DAD6CEA035127D77B4516E2525F33FFB72E03A05ED59A723EA87D5B0E4EA444
E19C4C474BE5CD8FF9B3CFDF3AC1E6FCFA9D92F96615A5922333D12234A1D7E8
E43634A8413F376461B27E1D61F33B18F2990562BC363599360086B7F9B42E33
DC972956B96D501AC2E477F3CC1AAD51256F0DC437F527F4AFBBE2C192D0D956
AF444F2600FB9FDEC6FE4167ADF31139C3BADD2EE20443E015CFC5893745FCC9
8899A6E852881FCEE9E7745FA63E7A4B9DE98FCF9B0FDA17BB2C9152F46B6519
300E07C2C522FEC64590A3E6AE9061BA84717637F4F62A76A595F373461E821B
C18BACB91B1CFF48903150D0969D371E39FE966AC1214E4DA30F2D0AA80EB328
87CCE996260229D5ADFC6174D60D8971159ABA83504664F9F6AD783556484108
8ECA33EC2F141C98FAF8883D60BA7A90A8F857C2F54BA01FAAC221F77109B73B
6103DEDFC126E673B594B2F889014054797AB7402A7E4EDAF950966EE2CB4C20
BE72B4DB8DB4953CE190839BC15E8125F8CAF3D67B0C1CEE2B4815DAD012BD1A
40E9FBC43539D94893E36CE80CB1F77A275DEF5DFF9A0F32C2954C48924A89CA
E338DCB6C8AAE4726022D0F92FACE8A77676ACBDCDFEF42722BCAE2713401F6D
16F9DC06F421E8A0CC30A5A830AEB465BD8F7E2E0A664B48E5D1B41A3E68109B
1823EA5C1E1D6F70C1B6E7FBB6C9481940972EBA774E02F5DD902FBE6997A589
EC5DDB2B13C9545F8B0DC79FDE0455D6870F268F04A18665F01C9A4433EB4966
002592DC50FD222083EAC81F20E084696DF1DF9B36FE935AC7ED5F9CAAC69C9F
CDC2DFBE42C97B78FC232393D8A4C3AE6B9AF13A25D14ECC5FF4C6F132E58AFC
5FA6E36B0BB7B6048488706536AD0FF574A8D39B97395B46C494BC2FB694CEC2
366DB49314176ABD5E2952106A74D2CFE4616B871C7AFACD58F93FEDCEFC5B61
B72207A06A4F6CDED20371FA6C3443B5D6F83CE3CC63FD1CF93E89068115CA6F
E015CA4BA5A6A2D8BDB89DADA555C9D13AEA4AD9599669F4EACA96EBA1575C0A
C3A7AC13E07161F5E84699D18733A0086A47A0EC71D4169ECC5A9AD15171B677
75DF7CC621C4F1FF18B37A143FC2324B0FB13575A3128991794AD3435CE5E556
D9D4EF3E8AA371C192759CA1504DB1B744C46EB5162C712A7237C68B627219D1
9ACE26F7BF0EC2621E0AF8522E7970135504B1C171007C9CFC745B0C26BFD0FE
4B0EB1CA33B1B37B2BD9D6B1D698E8318CD532395FD31FDC369BA93DD5EBF86E
3FEB3FDC9F56421FEE0F6B8798F8BF6A555A6111439A38CF68242C2EE52CF943
8E200918E5ADA9D79667371118F3F3AC23F58C8EF808B093595E63358D90FD0A
AC3354B695236934B72ECF11646157B42E5ED7AB77C3AF347CDFBC4B43971A4D
028258A9E31D561F1B68A3A5249B86ECEF9D4D51001EF6E00C9CBA35CAE3AFF8
1C24CA2F5C60E1E0FB1EF3B026B80FB5E0E8706A72A69CACFE93145FD9ECC2FF
339981EEBDE24C315E9262C14630639DA02ABCD1BE3963D734D64B21F0CD6D50
B7C3313C3F7DFF154E4B79B1671E491E02EE65922C82D1831EEBC119D55F3DEE
ACD5085DFDED8379CF890239F1F95095196DB28B1A5318E868D3EF9B9C5EF821
4FB2D66E56FA252D1A294F807F1F6A6487656C1A822C24636E6FD822657A9754
E3BDBA89177C15791F330A89AEA95D1717CA3493A7590E27B34C2E0E123812BB
1116AC94F8F5DB82CE9E7C4BD6719CEAC3F1391D72DB08B0C95A9C2AD31BE872
DF5CF6F88C848D995FB0E88F7820544E8504F9815DB6DB1EB3472A3C180BE290
064B2DD8FDB416CBE9E1B82208B63047B57EE28268FA3F2101AFF3ABD0AF5D7A
0D621EC837BB064A8B18DAB231C3ECA30E3953723558747BA233EB795A16A4EC
F39657864A973FC2CFB46A86BF7EB62F595D634D4D311EEFAD3F823458BEBB23
F963DCF90AA96B40616650B24A9EB8288931FD635A654243F2DB2DAB124D1F1A
6693C40429E2C976B763A8DB66FC2D5102B01F5FB9CA6867E652C65EBFEBC639
95A1F4902796BBE67F36FDFAD166C5536228FCE80FD44B49B8059AEFEC95096E
2C4EADA4D5B19C48D07EDE0C12E5EA40275953E222C1AB7FD8AFB2E628246589
21FEDB5CF473D56D65A54424BD035CB5B1268A665A68223DF9E80F8A63295BE8
C0F0E7601133078DE48F3CDFBE08B84B243FC3A0CAE847B3AD58CBC7751AAA9E
031209C2C1EE15F93CFF3D70D8439A1EADB479F7FA83797FE2BB8B780CA274E3
CB278E24BC4967A471576D4893AB06D5EDBBA164DC9E9B3414D00EBFB648D189
1B1D46ED6DD16B34B63553B3A5567AB90F845F7845A9A2364BD94EFD373ED399
0BA9A98829180E424A9F151E017C13F9C188FF1D9C3BA73A8A85885A326342E4
8585AECB68F10E5BCCD284480EA151FBD32AE761D29E7A2E61CECC9BC49731EE
786663FA76A545972D35EDDD2F64407E3605DECD9D47E4669B250CEA8F37EDF9
5B1DBB9BFE54E4EEB4E1430CC804A0017AB7E3A91418DEE48399AC9A037CF9A2
59E82EBA11CF2A6E55C23FC87354C604F4C1E2AE758EB7547FCF4EF388427F32
11E35A3B5B2271AE4E6168C756A4C6A216EE8C2D9C96FF0A04F2EBECD0D1E3EC
1E434EA9D09C5DF65674588FFA1E1ADD96A7DAAA193CE2C271F8A7C2B6A2F235
4C679CE1BE7DC77B20E1DF3B8211684136F6F25950DC671AF32CB754261B3EA8
26E2E4382774F93FBA26D6EF2E4689B5CE51D229B3BE5AFDD189B9F129B12881
8D5CE4646BEC8E33E53898AF2D36B60B910DB288BA3D575E787E6BA1A9DE74B3
ED2922DBF3B1477D403806BCDF37B9B9918C0626FBF8C4B10DFE838FC8C3DC77
634F86A4DED1EB111E1D1826E3FCEAA5F5A4BF996E234AF26AAEAEA2A5680242
C9DE1E35250AA1F80E163B94665690279C07CEED888552651930637E6FB181DD
670EDDFA94231F8C0D596E109B60EA4F71C63297B03C9F7F76B44EC9C8851F72
3A2F2C0A5422233F7AFFACC5179350BCA42C273B2E43D802111363A803DC0E5F
C841394C02E2672A5F3DC8E90973295572B872969A0EF5C919AFF884B44F1122
2C8CD71DBF38C5AE738EDEF13250F1C0A0522F8D6CB3BFB57F14A02B067A0655
B6AC47EB960A2168A144019E8941CF5104318FE113C2FEE0BE9AFC6D363D99CA
8404B811702199227D09123F6902DFC378ED5A321793FE8C9126468AC5671266
B19259CF057AA40767D0C90FF837EFC5923F0F6920DDBD0985505929CF41A5F1
1E5AE7C363134DA775748776B3EBDBD7A2D1DD7C0F9A9E06D1DBA60112916489
BC37E66CCF943F7758617EED2B9878E6D392E74F3585D758C54FD101750C91ED
AC9C996A073466C6CD57845D3BF718CBA9228316348C3B2217A8D85B2E5B1444
D9394D7CB00B503A530180BDB086AEFF569A392E7CC9275D7E91FCE2339DED68
A78AB0E6BB3C08300B74A162C53E477699AAC59F57DD2CEEA3A071F68570813A
46DA8068790A3B561655F7B758F6302EFC76AC81D5F2B62830B4A50E8DCED4DB
E42AAB28BD58AACBFF7B970E5E89BAB7A7B501EDEE6707DA78CB525AFA77A345
85459A861BA71F873C2A698E420E5B9D8F485F983D435CA36E98F066B1D8C7D6
784FB53168173DE3866CAA382097F5A356D85C019D757DC6AF0388267FA0E40C
45E53E28E312E66046280E69CFF9DF2C17819756B1388705BDCEF016CEA70DB1
4BE9EF99CFFF4F94E6FBC8CEAE81F262E7ACA4AE95502A1258A5149EB705F99D
625B1847BAA7A1F3BBA8AC2BCD5423D6A36E5EC4AF73192D727BAD7989F686E7
E82FDF75E5F1BFC07D68B60E3D0B62407FFA0CC6F96D5969E54CD526C2498185
05B7F9C945ED8C6BDCCBE2C456AB13ECC353A390FF507EB368773329E03801F9
0EC8C580F9FA4B5A30C719CD750FD69793E3B7C7897E2FFBDC89B204EB9C5386
BDA0BAD71C109DE6402D3F09E69BE96A94C4BC29955CCBEA18DB8C335E1970C0
F10DD9961D55CD9CF476AB006BFD3DF47283BDD67E5CF8F2C5E9FD82BFA15CDB
4EF6AA16F2CBE59E96F89637BDD8ACAF82BDA6362852771703526CC4596BF85D
7FF6156A55F390E013AEFBE18F2D01E599AB131350C57554C7D85C41A5BAA89A
FD23A2C4886B74B3DB06D70259DD01976AE5BE3A0FBD00FC368309B9DCE65710
B2222DCFE483086CAB9E863733B3297B75E7451225925F9E88B5EDB7EB126B2B
8006A5FDF367DC5763EE74F08F6286F0188CF9ACDD4D14F876143903D61E719C
01ABD76C7244C49082AD48E6604211ABDE6EE8AD10D12CC0AC2BF1AD62D6078C
EE7012FE2455DC60CFE7A41B0474762D46DB6AA6F5AA9E3C499667EE7D79737E
67629FA6DA4C254C5ED1FF27C7ABA47DAE0635DB3E5D1BA45A0EA67BF7696B12
E33C3C50609F192EF74F74FC8865845E33855F95D687A9803A173D82E68FD540
293A0CC1CFCF7F8202AC5B4D6CED0C0322AEB1A4EF87180D99AE8A2463745B5C
B7722A55DF630EC429F95E6FB07A54469CD03851D36C38926CFD117DB5161D1D
11CEC31019B26F91166FAA4C7DA094209A82C233A40710E97E75896E3466AAB8
EA73071AD8A127ED3F2BA5BA9D6DB372E911D855D16B505A2E964660D10B6495
14B059859797BE266D24E117CDB137FBA0031D1735D1403082952B2957ED8FA5
0F02BD78A1F7F5DBC4D4838ACCEDE2D696C68E9C545919A0077E261298DC9F2E
B5F021FF8791584A00C7FF15A4A4D7BF0423E9DC7EC60D84508B9A8E70DEFBED
0B897FCBAC15396EBECD3B7BF306046262DB8ED96EEA5E7A5EC4B6E57916A817
122449B39FD50A8FDDD973C2910E0169D50155B2E1FB3D94D4A29CA4FAFD1E4C
164A63B416853814FA84BF6DA7C81BF13804F8505C7F0980A88B4571C1EA4C54
8A98800593B37050179123C3D7C41EDADF6A50E98FB4AE20F0D1F698C69B7DCC
E85F7107DAF6B4B7BB62E18C411FF7A802659235AFF3D9FB75DC32A3EB283F38
128F02D03807B3B66C03143E50FF71DB6791F43AC12CA4C05880A4FD05D22E17
5FE28D28657671ED197238B91CB4D95BA36F97550FAD85486FADAA0B3C7E9ED4
B080B622DC25206E6DBD30104B4801520E8412EF50030417A3CBD31EFD9A367F
2E11889221A826B45B00EA672D81284FEC1E415932FD343C28344CC416F2F2C2
32D44E6ACF3F62C650A6EE393BB5DD0EEC4732A77BDC886B6237949841336683
C4B36610663879E7EB54C6C8F82F6C696CC07C39F015289736FDC25F6DA895E1
58402520FDCC656A83B45C840807FE71A1E9FE8F04B7CADB0A1410A7C66046A9
142E72F9045BCFA2C853AD26C236CA672FC70229EE0E63962EFD5D9D9C7414B1
0EBAE5B5D0327A5DA029E66437B61F8B19A7EE4FE1F120FC70C7625274C985F7
C8C89711BD8CA3CF8BB035E8F0F9932358ACABA6F0E3E355B8C39526BC1DBC91
E3FF1650EC866B7195787027C729700AC78637CBE5A3D2164B8642B81F3D2AA8
3E462F7C5200DA91935879605D84EF4E57750A70D379E88C0B3599CBAFC8E5C7
A8B996AB57ACDCAD22F6D299E0204AEE4B6E642D0B55FEEFD3EF2FC15D915D2B
41EF35207C224DFE6A5F7D1C860780656759FA738205D22702EB5F413D94D5FA
EF1EFA22BB79CF136A9D1B7D13902D1B08FEC58D965D1E7AB3432371A0F84C92
DED5371CB8DB7F2FFF8C65A687B3E5ED166035CC830C56C1360C965201E9498A
21C736B00A4C6DDF72B5BADC6EF513C533C44B4524925A6E01B6C6B407835896
5A10B0651BC59C65AB61DC352320C41738B0B4233204F5C775CDA1A41ED65602
EA93305E78E5AD53D84E85ABFBDE3747312A5E26BB279190CB15E7A4254B2243
15CA97CAFBD2D84EC177B1535166689C69BA0FDD7AB5AABB81144512EA45026F
C34E9A8C9FC18C9BB3FCB88D65D35754FCC6C29C98526E2B96D49671C10F470D
D53F5395067C139BFDC8A9BD1D46D63C123D090324935868D670963D0AF84E6F
37F5FEC29167D6A25ACD76D90672260F294E311A4A66726C2CBE98868AE63383
A89EEA6800454FDBB7A447C8B56EEA4D9AA68AFA2B8890C4A082811DD9B34538
8511E17B268E6EFDA8AA4698F672449DA6FD8FE9E19ACECC81734213994CBBE4
5A37AA7F27B88C4E4E846AD541960B0FBDA8859B84A00C3CADEFCA0044688989
4444134CF9172CC7DD33BAB77D194A529A5CB130751C2ED17386AD808C3A6452
56C7123BFB773CB6A1A674F0F2543757A9943584958F82CD1A20E07AA60F16A1
D12F78DDC3ABC2CAD4E1E0291C73C2EE877842901BFFC97CD8E5DFC565A82A51
242070C4D352C434C6C591AC19AAF13F4BEDBE1272D40BEE78B019D9AF3DFEFB
9F681B8E0E9E3C006A62C10C77BF7B9E39D76E47A1799AC09A00BB5E88A0B857
68E503B73833FD2084AC792D29171E849D19C98C15244C5138A2DFB08E981066
02F8BA2AD3AB0DADCD0A14E26014BF96300E93045FB884A074D58F6350E251D7
84868B73115CF1A8741DAE9D2D26890805988F4BF917C9686113B238D6C4E4E3
8792358B5177B63F7E41BCE96180D4D03D2F1A35ED83196FC274C2158D739252
C51B10776203180CD7B0C3AB8ACBA4A73FCE7C0DAE68A1F547A1BD4256B78013
1684EF90DE862EF26860D2CFBCF87450BC76FB4EA6AD37CEB70CF35096F012F2
FC84C324FA8BC62CE323FA7B7C04C121EE8629836556E055E7796CB71AA224AF
D2DD70B791E05DEF6E0FDBC484A4EFDDF7DBC993E59EF15AAE407623B1987291
3EBAAFA574C8B5E36F770FB6118C2564412CF8236EDC2C436CAE9EFC9396E4C4
EFE3AE68558B6B36E06B95ADFAE8F6BFCE25878F42C48C23491A2E3DAF7CB809
CF0302BAABBD5CF851ED0744F667FA21B14E04280A3786F837EA7824E05208DE
F7C64DD61FD3360F47EF7F2602A59DBB796F0715BA2FAFA2D8102C86B69EF23C
BD50092D04F1C2A71BC51C75B2BFFB139BC97C04FC9876EF916B56AC0D6A7AA4
DB7A8004753B6ECD37F691ADD533EA6B6F625A26B123CA65A723377910CD46FE
59EEC3AE64B7C5554326D55EE656C1B0E62DAED851DB42295FE99FF7261590B6
8BD4FCB076B50AA407948862307C110148CF828FDC5B8305B06DDAD52215AA70
52A8EC429F06238464CD0DF759AE68B9A188508B24B19CD3621B95F5A7ECA25B
9BD6C525C265C633C2B9514FAE833759A671DE5F77153E1DA5A170E858955348
D9FC46A68529110E64F4B3B9686D4425E2F77EFAA6B6BA3946DF3B5D4C6F7DAD
1E78A6D753BCE4107520E71CFE6C053DFD44C6CE16CFEB47479A9D0827CDF21C
63DE3BB81BD7A6DF090FC5966DE55B7186EBFA114CC0DB1BB4F969C5FC32E82D
25CE65AEEF4E5E25033F936D81CBA064D8C838A431DAD8C2F878E1E3F5E9960C
8B7382A4ECAE11A2469A33D06C694542C6DC1E25EC1D32B5EF97EB8D82CD8959
BDBEB8E7AF3FC7E4E6212312FED5A7F9E40F784B70BA5A3C83797116B4CA4398
A2B40FAF287B395110D4303EBE31FB4473C59FDBD369E76E13F27A4AACAE38B1
D1C114BF18DCFBEE19B0E233D564B7D4CD09375C6F4B15C71E3865873FCB8823
C52F2EB507CFFFB25A59EDD2CDE0ED41BDB896DEBB8B1D7CCD8F1433DD989921
988C61CE185B4A90E5C8FE56610BB1370880E1586F015D194DC472BE7AA18379
31FFF7A83EBBF097B9538EA2F18C4BA4EB339B1F1A5651C95F16E0C3D4732D4A
9C870E4F2ADF86C4A2AE5BBF88352BCAE8298F0101D9687EC111D186E11280F1
AC4E4D18D26DBD08B144B93F30043B96BC125E0005BAE981CD450D50598D0945
E59E74C44D24F7E9B9887152C39028C36C457757A91176A172E9C1CA28DD5ED3
A33ABE6CA9C08214448666D726D337C7F3AA60DE8E27C741B0966F5D3F8E260B
981300BD82B47DB2D3B12743563971D9A3CD37E3E9596ED8DE4C6A67C842BB43
011D5E07710DFDE092AD500596C3D5F2BBBDAC42F81A42AC7405216D37403318
F878E20B5CD7CA5230E14E9515B59AD0A2E839641F0385E9E148FC15FE7D84E8
104D522991AA8932E8F21F19F5642E7DE0C425A09A66966059F43500D044769D
B0FD521EBA744C0B6BDE6069D9B86ECC30F0F53CB90B2F39F95127377CB59414
192FDFED8EA668E9E1B207EBAB9215C5694E3415C43CE935AB9927B280D3F2BC
C9E79B6564486201DB460459AE200C58436BE8322FCFC6882E6B8EA105F8D460
6AF3C35BBA65D638FB2BA5DBECA22491FE4D4F8DB86CBFCB1689B37D3F0967B8
8A224DBFFCB8A4BB5C4DEDEEAB099D8E5CD2A06576C1F6D6ABBCB567BB3DF048
7DEE64719FFE04A963D080DDD2982973ACEA80698611338EB933E967E4D0D451
342AABD29797D5D79397ABCBBDD2ED04570888DB887A29F6B5BBEE4E600DCA78
0F334F36409E25F1A037142421BDBF4E384619021FB76096A4FAF0197785CA41
30BD380CC214C7AF3055E8750AE5E587F78F6C99B7F0638AC6C68984BB487BAF
E7A60636FC75C5783FDFD971E9172807C0ACF5912818EF2BC97256975A3CE404
198CA74B99BF8193A682D94D110D18A4419D6F7C61E6CF5A2FDCBEEA4C2C8C0D
2C9A9D8595A26DE22FC1C79D250EFA16AE6E5E1BD0D8C03388A6CB7A6C97D19C
BD9FA8409E5C988F7F72A74F044D78C64C5F45CC45FB1335855CDB9EEA76933A
C614B0C87454613FB74D5BFD1233EAA7D04DEE4A0F145E09F1AD4860E8C38C93
5817558A11536919102839F564A72EB7CB2821CA8AC00E10A70C0E984D47FA56
52D644FE56436AAEAB9BA0DD26E65963527449A1AE88B1FC089A92A22757E43F
B1AA152659914F888FAEDE5DFC823C2FC10544FAFE1C9EF728BCA9CCC3127787
E6D61513A93E5F21778E4C116F71148BA4B0B8F46D563D264E6CA0855C08F29F
78FE7132DC888A75B6FD4D37C4EA286E7BF8C14282D1D51EF7D3E11639C83B90
E88085D303CF0FFA22247A686D4A623E4DB2BE2DEC10C06FDE855ACF62BC596F
B9E456800D7F81B30806C8FE800DE19F627326447D4D88987DE0740C075E7018
BBEC319871B74D74F3664F38F57EFFB2701F60DB33B2B0A79409B94FFB55B9D0
B26A29B5F83F28658C7ECB3051500A5DDFA182547F371A6D3FD64077C0F10204
6FA34F60B782045DD6A4914E67C435E0ED3E16A751CDE2CAE5FB6BF1623606E8
1B66D03F5D22FB6D3C67E6F95CDC92FB266342DFAB78928F9B1C79AC26006EC4
D4657893FA836548CB63D18AB0AA1DF006AD66662CC17ED5FC342660B1167054
7F7969852EA6745118AE013F2D2AE8A73079B72C3B650450F6F50CF7B5BA2420
3D075876F2BE11225D5DEDD5171D68CD2F50776BCB4974FD99576FFD321E5EF0
EC8C6047263BA9E38D25A5B88BB8DF64D6F3471131597725736629CFF739708C
4298C9276E75B4111ED91F2C64CD0922E5565D9966E9D16D052E3D904F5A9CB8
981212BED5792E3AD1A64F3BDD07BC898154411BD57622B5528D2262E08DD32C
0B80ECBBEEC9F094872078A797F79FA0C085AA75A4EC8CEF011330A0973D3745
C25F76FCD76AB9D3DD1A30201D05C7CCA39E91AC21BF5236F48F6D4CB413E169
B2C127D0BF2F734D046DA7D5246BC00691DB18CF21049FA4883DF1BF0741E6D7
32C5D588734DD84486B9BE60BDB7593283D494157D467C04408DC0E04E4C7489
4E94EC4E35631F9CFB4B75F46AD0B8BFA03CF6A7635003D2ABB303C216996E8C
2E59059D4545B612DA842BAF5874A5F8B96A1DC6013540AE00E26B80B7CA4E20
018900547879F81E4D44A0A5854F012316A292166D1F6C7629204674ECA98777
A48A49ED4F53CCCF03DFD581E986C2ECB9E63D136D3E4D27D7500A969D4CD3D6
100C4130CC4CFE755BC6E034565CE465478ECF340FA7334409448CA2415F7D70
098F7027642255D734FDB7741750CD2DA7F09398CFA586BBABA77DD9DDF2A823
5AF6E100919F0174B7632ACEFE6A7E69CEB3BDEFA98A078B50AFE300F6920C1C
59362D0510243A73EA3BC01E3071D96E066AFDCF8812AC8B09B7E18DC5D19FB7
44CB7C416DFC44DE0F458D789682425CC1E0F9A3140528F93FC3118032DEE5C4
8BD3CC1A4E0D37006FE67507A8267CC8E080B941A5512959CD24262B32971423
3C4D2DD5DAC360DDA9200AAC37EC119DC115910E06DFEB2356854C6489C11A9B
CDFE985B3EB7B0B5C91E7A97A80A7C15E2FE0412DD07D64BC15201E17E918A23
18C38B55DF875F732E0BFED5C528EC37305A3FE46B30752433578C428D728B02
42548D8092537403E9CD8BC1C97A89DBC517BEEF4C9B1E533CBAA291D9E7EA52
B0E29217B732EE9D23DA2B525775160217C3BC827552D5CC121148A1934346CE
EF566FAA9983A85403EE8C6676F7107125EC86F37E16CE29CE98A521F68CEB3E
EAAD694684ABF8D3B9DBB5C13B1383C56FBC4477FF4321A4FB0CB401ADA6AF59
1BE97E34C35A1CEFB8B8151221B54FC2B568CB0B64F93FF3504F21CF0ADD4523
432EF787A392FBB8BB1D591C0172A616AE49A21FC0D5B252E1F8977F0CAB94DD
9CA2E5E87277EF52DDF1DFDFAD7254AB59CC7D72C5F6DD1742EEE755AC84BEA1
A82E52FA78DB4C7FA3DBDA4C196B774355F29106BEDEC36AF14399CA4EE6D5BD
B092B92C7A61C78ED78B3757800B8E98E603BC0847425BBE04D9ACC6F44374D1
93199BBE284DAD0F6B922466C6CE75BD9CC88940BFEBEFFD3A9D4DECB472ECB0
B377DD3E8D3E8FEF2DC9889A784EF2277DDEFEB2C179F0A404BB24E630634496
6978764B73089183918B15417A43A2EF5213013431C9234431B6D7F5F28B6BBC
9FCC3D578154E992799A49DE605C482B6388A26F5DC5220D859AC096FE9AF903
FE0A11D99C37E9A5F47D284413C832DCFD70E1993AB680C28AEBC777F907798C
7DFB4227CC4950DE65F7B75AC214F1587626DFC5F8E60594DA7C613D8A1ECEFC
68318CCBB059ED0159EBC120CF65C37CE09C58B96EBB647C6595D72C6FF040E5
716F720A0B9559C76D8A6E1BF288EFD925D4F6E1C5C57D7207599FC612271D0D
655B001809F212C90F397829B19067DC8ADF141D4E648AB08A7849A58A145A26
043C4B01962991EA4000C67F10E96367F387C4D1B3C6D977B957B65613E7AA2B
36C878253F201BD9D273C60BD351AC4122A434EB82ECD37A53867F365269B40B
EF1F9A80373EB8BC38CEFDE5D1D16FB22077347225415C252EAAE6235F255F92
893486EA4A3595A78611E73B67FFDFA3EDF0F670937A4DEE232A7A1A9A1E6881
1C430511CEF15F1FFEF0C942C4BA8483B54658709BDF38FBC2F5E4F0A1B3D489
7937B7DBF68B3A702A8F134BFC3F52EC544BA5B328D332982627B8860E903FE4
9C63BA89DCA90FC224546EDFD17AC871BCB848EC4F90F94CE98118313DC9BE91
7CC118254503F15A611E2EA1070EAE3C2A57B8FB8A54781C44CF88D3C73E1AF9
857C91F28197E99F280332755FDEF7E31EA89526B673C8E688E83917EAFDFD49
7C7F748B8D412F29B99F7A5B44A8A60A7D9E75F50A10D8717D243F09B1A4EA39
D96EFE2F097886D7FFD6FD334E8561EFC275521FC6684319EEE0B1500C9E9083
16CC39A7F009D88CFBE037C11EE094935D9A456E10A71D5477DBAE2C6A44B90E
16CF1C02B36B21B488865D5C9085D0F236069C3EB543252B650EFD2787D9778D
AE8108DB9CEE9DE3087B3F828E7BC81B00A67A8130C79FA04FC05F08D9DDD9FC
24C02BA23B8C4CD347694155E7140770ED385EE3436E325E5B88CAFB6F311EFE
608A064DD3601FB391FFEAF00FA6F9E549DB07F19770905D689625F44B829011
D4055D90B955247830302519BB1C47E4D64FD7B3F0BB1F75C4749198789954C3
07EECFCA4EFE31FED6828C4B5128B2D1818BC935AE27350EA5E27A67C6AF7BE4
3947AE137ED3F41727EC4A2FE2678E8652D8D0C203FC3A77B942715DA02E0282
F2A76574FECA987A6C0DCB29524B92F7AE6417954E98AF98822B93F321839EFF
81A39B57A3F19F250904EF0BE839D286017C9DD432EEAA029FF10F26B0700F4E
FF07E84A1E807D650D5A9F18C3B106F5A093CE70D6FDBCBC9FE50A3EB10266AB
34BEE52CECF33B208C0709C979CEDDC4681AC3149B2A7A873E06B1A740E4AF78
D4150D7D4C184B6AAC71F71AB70AD1BA4C38C0912CFB3A85B1F6CF9657A634DE
9265C4539D17BB625AAEFA9C60ADF6C4E637F1612C3EF8C8A7AFF0B95EE60045
E6E0A6B734175BDB372EE6A08640D19D56E51F796388AC9B3D77D05393D1630A
B62BF58C5B519B6EA2BB99CA10654F0F63308FDA44FB231C7AB2D3D02E0B6567
1D133AAC6B4C5D5404918A9ED301261F3F62D9092CC45083875A1C8582331CCC
3C45C5E12DDFB354625CC7129120DA5ABD07B34E35142C4BE5EBD21107E2F7D5
CFB4FCCF17AB2E09489C8E3987CBD2B3B65E4588A7381CBC3FABFA0C94D22237
24D76E447CF4E70C9AC8F533E28F5379154C0F07163E77D6667746F71E5D1172
E8FBCE172D789FEF612443EA4CC8CA44E0F935283130BA6DE7810C231CFF9D8D
7A2D3DB8048B2425DEB01D5C72B3230E89FB4A2BBFDA21608687E0C610B754AF
8A796250655EBA2085382ADFE40F553B4FBF2D28260235AF7B45386A38DCF4D2
44171C81C19ADFDBCAA6834F1655E26CEA677A4CEBBC5221D90F49F101523F85
223353320813FAA5719A8701E4405318600A69264070CC8BC7EBC434B3FC9C62
1991BCA6BB1971A2E5D6AB155C46A99AC32E163F9590BBCA34032B3DB816DB0B
D0D4CA61A7D8DDE06B1C5E3E8CC2018A93E7CCC795D4F248C124C9B78400FB19
30F3A572A34337CF9FC32E6C00D3F18A73E7C824980A2B4A91C1DDD017716EA1
6107A37C3F511A3ED03CFD972F238557E2C6FE4529D0194F9283444B289C7A9E
92B263E17EB265C0CDD048F0E58F6A65A7D0B6EEC1F1020C10BA1052CFF2176E
ECEED1D7A858BC4369722E72FBB75283FF7CCD6C544E635C5ED19FD465B69506
DFEB83269D7088AB6698BE2D0C51074BEF7B58BE5BF3282D2DF51A952FB6BDF6
C4B263411FA6479D869DA9154AF9C7507E431A9D3A228ABDDF9188BE0AF3B73B
BAC261173FF6FD2B63DBD1C259EFB623D2D89DA314093E13CE2C9897F856D631
1746EF0E1CB066B0B3B699CDCFAF6335BDEE89EC4353CBCF4CFA59B752D52FFF
5125F36AD7D5A0D76E8E9D16507E79B7A03996DAEF794F9F5C29A5BA44FBB61C
0CB3A13D42CE6A5082876EE50CD11046692FAE543FF3A0D81BD0D8D6908648EC
83DCA852FF0E46A77D621F6F8B540D92472DB7EF26F8A3AEE668EB5A455CEB17
732D57A68F51A642FEB22748AEBCA5DFAABCE8D73274E6B052AC27D7D0CB406F
AFAF5AC6ADCF50AD783BB8BFA64C73AD5DEDD8DE0FB12824097FC699715E96A6
4BCE13CA2113201AA2AF8915BDDFB372A63E2A27D4FDFD878B9997E64D420671
C11F5A8891E6D60D4E5308FB700401590A499DA6D65BD8568258E4B14F6AF9C4
B5731FE485F3C580A73122A6627FDF6275CFBBFF8C71266B4EF89D6FD6D1FFB8
6E19D231FC20F7754C2F402477
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CharterBT-Italic
%!PS-AdobeFont-1.0
%%CreationDate: Fri Nov 2 19:03:54 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter Italic) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Normal) readonly def
/ItalicAngle 11.0000 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 61 def
end readonly def
/FontName /CharterBT-Italic def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-226 -236 1174 980} readonly def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0ED98728A951A81E
B1C7D2CBAB8C7F86ECD8D924EB874F38B66255B09538769EB3B1C8394C23C75E
481173C293B66A1E42531FD88308EA9500E243E1E7AD79E063B99BD96BB0AF09
2C915378C5332335BF018775FC8A6537DC543F23148D58F8A7FF8A5E0D1E31EF
FABC9C42AA33FC7F5BF9C429DF89D4555BE66793FCA565A6F6119DF64F4BC8C8
F6AB1C5016A0A9FB661E9B05E6511613092C14E4890A54F1DF43D6FAF3EDD3C5
483B09B34EB981D07287374EDCDCAAD34DB6547095CE3FDB4F57D71BD449C46E
16B71D7CC16E5B700074D481E22A5AF073D7BBD1BD05403BDA238869D7634EBE
2A8E54DD2394F6D978F81A4081672A17955F3D8A6CB581DF6E6A5FC7866670E2
E5C7EDCA8A4F48D2786E1A01D798A7A87AB90D82A4B4182EA6F4DD0BFA8DE219
2C10CB007109364FFDA416B47A7F0E89777EA967F9FEC9B1D9DBBE7BE941BA91
E63B65081EDC08FC19EB60E2B6FCC5F6AD75F4AA507D9B95C334761E40FFF26E
4A117309084A1EA50C367C4E33BFDCB2F4234FE1FC7A9E517251EA40E4DA0061
A10502C7EC161954C9793CEF8962C5806A663C96DA1F31BFBBAF74E99D9CB5CF
466080336351278DDC3D84453F75606BFDDE1CA0F52ACCAB754A76FF1ECFCAA9
60D1299D17BB0B86A35B6DC7B7B8423232DA3E5AB7AA6A9EB6527C419A6AADBA
984F105C5B20A9C99BF5A189292C4CBFD1D3E2939B88E2C366BE4842D6EDEB89
6383F3F12333245988F5EFCA1204C5E45B4242CE67BDF95F2DDAB0BDF99DBA40
15CDA3ED3699AC7415F4288E56438EC4C20F9B0C25BE3579663B70AED2B8E3B1
FA9FB92FEF1C8232FB6D3C67E6A4D8646298E209A80F67327B61A11CB5992CFF
78EC89C3C1757E31B68BCAB081F0DFD79AFF4AD3B48E44BEAD263C288FEF6C73
B6DAD42E41FA74008E7919F1710B912C7CF89AFAEB1497661AFD04584F1FFABF
AEF221277A52C894A2762C123397371F17ABE64AE0C8DC35CADF3943D11F303A
38D6DDCB1BE272B237572D275AE6EBC7B894F9D89E7F990539801393CE877640
C27032E69A65588CD6317C304924FE0A52BB7DCA2B76CB845EB46D2E8792796F
CCAC48D9528D6BA67C07ECE87F0A7DDF3176AB5C3E95182C70A345CB7DAB82C4
B4329E5CFF8AB0D21A5A66DC532F8F13E55C1C8FB285B72C0719066CBCBA4B3F
CF3BC8D6A34942FDC153EAC88F89BF147F6F1FB5B4F0460EA5195C3692763255
C54592F8A39E1829640B7EEC10A362B4988794666459CE0ED45EC3231BED6F01
4A7B7CE4F1C857B962849EC724C21956CFB83AE2AF66CFA54C2223533E349348
2391606E0F8EEC990E2D74851648B40BD7DF733F057BF710E020329843128DC6
A2F56BF3EBC3FBDED003834BA27989D4DB82200FD75919E8B6E8BCFD8FDBA810
B25A6585CC4C67E03950BC49C65F352A02E522C622C063F96B7AB7452F25A58D
20A55FF29A67E547FDF4A858182EA26A0CB667A2721453CD0C55B912B493F457
FA294D7DBBC4A65455198A667891327A4C80ED8F1CDA2D49D7672E39B7E135AC
66244D99A15819EDE7CB7E6223DDB3B3AD271CB5CA98A92163FDB0A2BE6A6B89
AFCCCB10131D57FE43600505D513B8AEDF306CCF2727CAC4A11B2360A23810CF
7720CFC866605DA8420AF13E29CA1598EF607BE11D603F92920C0F51159E75CB
E948648C27F84025A2A8A3D29FF4A19A399E957A057BFE50968D0EFF22B417F9
12E51F49C3C94D1FDA5F749C1EC8B0A623BD35418A3FDC0506844A9D4A7E4C72
E30FCD2B57ABD9E3E7D55D0D712E617802976F8F221C622867FE93CF5A5DB601
508E6778F8D57D97A287935F0E7AF6D49CB9DC5962973DB415E2C99FA3966DA9
40FD7B001C655019626AF346FBD5F50796B79DF4F9062B2A749F34331B97289B
3B76B029D56D5AB22364382116A593A43A254448BE1E839EA6502BFD6E698BD1
E10A52F14D4E6C96B9741D43C6631805B782031176DE23C2F918D22F9639567B
D0521B7A5658ED8E5B44889B553AB3023A114C2BE9E78D90A4245ABD3D816441
3D23DCE5BEDD97447886FE244EE436C740F6186B0CF05623B710BAA3698E3F71
63581320883188517EB0289AFCCC8BD368D40D3C3DAA849BD0AEE4A0ECF381E7
4E163B95E51AED9017F730445ACB3B116FA5242E553D1447737FA148945992E9
995458FC6EAE7BCBA2D6716840B57B00A5D2C784DB7F6F03B6BDB6C1C49B62E9
23B1E178D16C6D2C47975AE182388DA6D8D4E80CB93876C19C8D31C931310CD0
3A0ADA22C6863683473B33143F859E0920D3676BE23BFDDE2C4273FCE384DB55
8D875B609A4EE86A1232D80FCA3D390303E96E7AB2679E7E673E422427E36BB6
C87F39D0505579B2F0132967FD1055553066C63973D277C764E1A2EF412F39A8
13FC2F926AAE5A824CC93C0F03D6BB94C2A2CBBA88E2A2D6BF70E45463827BEA
193623D6653EC0703DBAC192A28097CBDB5EEDD36E0980749118DAF7021B5653
7C2303A6DB13D7A1A73087210F6DCB86A53E3314F89E5078FB8FA0222FE0783C
319F246FBA3F0D83C8AF41AA3E3FEFB43381D43716D4259E01F8EFAA8FD92FB4
CC3304CA544A26BF814FE850B60047A9AD2CFA1CC50865D50222C4B85FDC03D0
FE558CB82CDF587E5E26A5F8F702488791DD323935D01B3848E3B2431BF94DCA
1F6A10254698BE7BE357F72AAC11BBA2929CC8A9B74FEB462B8C46CCC25EC260
6F28C3998D7F565D5F55198265EDE584B0FAE6F620359F77230D85A05EAC90D6
9784ACA3FBD347E60C68CF1836F02CB9D40FF6EA938FDA43504CDD88768B31B8
0E81A8F5B0B96E0E0458337413814C919BE1FA4670BBD15046D572F29643467E
681CBCB5C6549181178D116D0230456865D8E32F73D7038B2EA89D0C478B7D82
C25D33B3C48C419F393DF937E1128CF87B4EE44DC75D8CD25735331ADEF09B7D
E2EE5EA7BE6F2680D3096F5ECC3C1B12F8E56F0115A4F1AF76A1F343F30FD78E
F1862F15B2027613ACF168C8C58F7C48132B938BD5AC2D1ADA1921F975BFF6BE
EE9D5AFD9E1D545C75894127E98766BDA04E6C833FDE9661D512ACAE1CB4B243
77FCBCAF7AE8C432CA29B5DDF26956ACB66738942859C42375684B4C7B2E014D
4FD863CA3DE34E6217A6216E4DB5EC85E5830B36D546A84F98B22CF84B68F0C5
896AEF0B685A1A3182736A22E3E81EA3366CF8B2396F60CDBA604602C59AAA42
80A9C1081AA26A1B900B75577BFA7BDD3551137A4BED2C82D834EE24B62FFAB0
707D077B56E00778A96E6C58BCA54539A8E2BB5C885968BA556285CDF549243B
2365327A58A260B6D27CE2A75E0D515AA32928A75A9B7EF59BA4BA42AC828F90
AA25076B925886BA13FA668F704DFCEEA95567A2C7F9F3E27CFFAE9454B16A05
3495F11480C302DDB5DB4FFFE7326416AB8FA3A2C34806EAF189D780759E6D45
A78E9FB3592682EFCF0103834714C40B1067F0DC0ED2BC22454505F39D0144B1
8E2DDE25635E119D5DC0A193F7DAEA17F0352857EE94A4FD983B792471513199
9685AD316FA1DB9CD2CC8897C60754F16BDA3B46F31CB7DBBBFD4CB36001DE97
028140FAB1EFBCAF290772CCDBAC7E0ACD211460C2E73316D3CDFF8645F0BE1E
25404BF8337FB71E50FB445B08AF117FBF875D7087C62CA9D802F42B3FE39D09
0D7893200D23B6C62DAB06C680897DA61E302D263586AEBE338CAC258726D240
36DB155AC5F7D9DCA52F5EE2BC41C418BE26E7AF8C0F114897EE2FFE02B6E510
7CE865A1D375A952EC8D65E617D6D7CD75C9026A96DB72BF7AB9471489042759
43A46E499F719764BA6BF861244977DCF3BF3F1459B603DD5762FD3FF5AABA68
1E1A56C83637A1913D5E8AA0A13122F70B7B8024504391F31039CFF52C8B4A3F
5B8AD99FF719D6C5FFC33F8C71027F695962918999138DB01F63F4F5F65B2E09
03AF6D630DC6F2532EDB475110DC670F5CEABEC0821A228310E4DBA1490CFA3B
4C7D0B8794E078FF35AE1D6EC0A4F5A4D2B5F39F2DC8F8D2F0BDBCABDD45FCFF
2C62A32ABECAD3B7FA4E94CAC8215F807BEF747C89DA14642ECA2B004B519857
EEF72F2BB8BD53C44658E35E0C03F0DD4DABD83F412D7FAAB615BA6B422EC791
CA7AFD9C94495CE921B2D3E06322D1454AE32C9BC594118DBD406C94E1B466E3
5D95A923816093086F0B604D25A0FE4F206418B686636490FC4B5E239486A227
8A1A9183BF2EE2BAACC9DB386A606922035BAADC4281AF0071E47BF81C60E737
A69A1F52BDDCE1A29E7928FCE040566D8413DFFD3D725F37888333E9BFA20A79
1F7DADCF4F336E369BF352F307368D6BF0C9AE8149C205EADFDBFCE64506D881
76FB098801B7A57C8B0F3C2F56A896267303CFFF4742AAA4279C5D2A13E76A62
95487E5C956C4DFB7B0A8B5DC542E195021BFF5301447CFC03BB3599595F2D8B
9B308042CF439CC9A900BA66429780AEC4DBDAFC6C5A510E77E1568A421C2CC8
C3190119709982D566148FFF7B1BE8F705993EEA5C87FBA2CA924B82BE557C76
065983795AC8FF69016FF09C511050BF6E2E073434FB1F91E29D6A6899C45A02
73499E76A3EBE7E6BA7A3ED4C9A9591443828BBB8F310877B489418820A4B455
D06F6E46BBE03DCF5C2E551823C2C47D14BE580E3DDD1D3F9313728D8FC754BF
CC08623BF2719BF731755E72C779863415FF25D971B60C8CFB72C6D739741952
54ADB2DAA888830C0969098BA496CD24527AAA17046F78302AB095EEE1574E87
2BE687EA7911EC057BAEA084D203E197CD707D0791BD36FFF66AC47987AD8DCA
DBE15B8106D584CA516A265A9132694BD1466CED511F336229DF3CC605C4B0C7
F6BFC514371B924E15E4BC0D773629CE184D1A29B8F5053346E9751EC40F3219
1183F6AA619E6898C4FEFFFC69B0F51A4F8FECE5470507EDAECDC64E0C97B9BA
9A58004FB124B7B56B4FE5528CDED695F456065B13E4755554B4F095DA482A44
AF195661FC059ED1C3E0328CE87CD0CF7A1276DE06A1A6E52F5CC6AE528860C1
F4C2C159BD811FB8DE8F23699C4965867C1198336E57CF6949D195FCA17F00F9
9AFB0BB5062D0577214D13B77CD33CB26FE6DB7F15D14AF8E5FE565DDBB5D235
2C175B26EE0BEAA72E986F9608856235DE0ED51D132A10AD5341E660D332CA0F
1BFCF3EB4303FFD7EA56498117E73AB436903CA2C90CB5BA3288AE1645F79D2C
DB7BA3714825264A9EA9AA4522C68513F335E35E3E72C36F3B05903DE3BC3BC1
D0FA6F82D8E629033EA194F1A1E2277BAEEDE6A3DF2F7D026244E7B4F6821E7C
8AB9E222022531C7FEF569AE75584572E14F39A7DA5E9A30D6C43D75DA03DEDB
CCB8CBAE6A2D84240FF60BA68C94EA8C57F21CDE57AD385CB046770ED7149E76
1EFC095C1CCBE908CE43D284AD3FF6DCD3DB8C5873C19FBB68D440AB5A5D7DD8
88A29F1E1BB0E9EF6CEF4A21E8A6404F90FA8FEDC090E2E69FBE0F93390415DC
BC3E5A2230B470E926B08548A816A0186525DF272BD13292EA0847F56460EA8F
385E577E06B6F6773A5636F16E783FDADA674B361F953DA146AC924AB226A8FE
6753BFF9ADFBA70B3B4BABC42CC5D5B34649F8EE22CF7D6BB28175B978032549
1971FCA092E6E1618293092E3FF965219C662ED1FD72007ECB8C165935B9A439
1295229421F8F3C76D3C8D22CCD71B1377FB066A296346957B84C21841747BD9
A29A3B6A9A3B47533A2C29A4BA079D0FC76832333683942169B1BDFEF4331BE0
AE5FFCEDED8B840CB511D42081E96A38DFB9BD9AF312F35E3F3E4FA6FACA08CB
15025FAFC7386427614D5F2B8370B3B5D0217C2A536AA27435C9A39B540C5C81
F10946DD5F0E293519B6827DB4C355535A1211EC1B0A85721F1792716215749E
3C57AECF77F0870C05A6ACF4CA62754D8174E2DF27792994A8ED84A69C5B589C
E09FC53DCF5A3529C6193CE33AD77C07BA870E2202A3C381186F39ABF5F90E52
82684FE5DDEA3F3C8E642F2B54AB4521EAB279B2A93BCFF3F2280D41335611E6
B4FDA4F3C72634B47A07962753143B4811F45F2BB3D39D2F92E34B5E7ED82F71
99039D85A66612F47C332CF54242F2EC694BCF3A2D00CF6ABCF7DEF742DA5086
A5D3917920766072E48BECB344AB01B45966A9F6C2FDA093CC6A8C987620B1BC
619C608FF5CD992A1AB06CDCB9FB7C41FA5ED0E97D14487C05DF58342F9B66C9
66CEB4CF459E2B15FEDB0F78CBAA7A47C5F3D0C745262B88DDD02F20FF850E76
76C5A6105E84E9A79FE1FF426CC4B6AA76761346D2464B67AE89FA613FB64976
3978DF2BA02AE45F669AB8D1B27787BFAFFD9A066C4CEAE0ED78761C62DFDE45
11C7F06DC95FAA6F7B426453138C4ECBA4CC50F8131D570FF2E9BD9F4CD8B883
556F188B4BFF7054156B2B6EC69BD8E6F48D8F4AEDC9673C8820507368018E7F
FA0DA870DA49765296D30D52A8F95A52459709268F2A54025552B05FA764F5AC
BA97A23F6B1DA852BBA7DD431478CE95F86EB0E0B34512888B47BE6FE0A8CDD3
78ECEEE86D1A9FC027B2B9CFFEFD087089E5CCD4368BEF556A08EF4561A5F09F
6D88B3430726CFE1BDF90351DEAF2C6AB5E2DB571739092A474FB9147C8230E8
166380F9F9B3F48F2ABD32689BCFF7F8EA237FD355ACA0F21ED5A219CCA0F7DF
9459EF867FE07E5CFC49BBE3972CE4DA12D854BF28B4CE8E7EDB517624ED5BB1
0ED4F97DE2A256FC5FB2E6B95F8F0D577DF22473C89EDB9F446EA82EEDFD22B5
EB39026B5A64C964559851F1DCD854121ECA94D1953CFB6C2C4B9704864ED03D
8D024C36829EF6B97655ABAD402B62CA26EA8970DCA4F35C13BCD7071D57F581
2A8101FF21CAA3AF558B20ADDB64A134CC099A59CC5126F95F8956CF459EBD91
216E11D63081910C9571052244FF9AB02AB229B8D20C7CCA133B2E91F35BC0CE
92ED279CB6CAF085D96D3937F9A47995230979D99132FDD9A2E53CFC4184A556
018EB9A2B424DADA58C9C8F78D8B767D8AA14EC60598548762E18EE13225ABFF
DC9407A35A5E5435E5A6F3FD14401DAD034F878B91C19C219D03C44383EB7CA2
6C4D08A2D8A69C377DDE8850BD7CBCD7D4B885AB7F5DD10679DC48D3B68C0805
F7E26AD098DE30D15CD9A8429B7EF1487F54EB23A1CE0AB8CB567EC3EC534BC3
C6351F3AB2D06B36932CDE7EB42F2C03FE2C63B1708B7866DDBEC36F7EA6B52D
54BBCC3F611191D88E3360EC93EFFA417DE903CEA643F8ECBE6CA0BF585B84DE
0F4A3A331DAC2CA46B3CDB5F9068B1D02976D700F1D4CAD5C111917E31C04E11
FA84A5AB62BC40CE5118E26A09E7EF2DF8E4523812293ACACFF634B9AEBE0B52
4E0DB1A0FAE5ACBDBB4335602F5BD1435E23F7395871AD1115AC15D32D04F4F2
4D3C21CA0815AB002038DEC460526A133B8800E5D9734B24E037D02F02E9EF06
79CCE4D063CC76393F4778C9305BE99A2F7451518F48211A04D4C5DBB4F841BC
5438FC299C78829E0C4DDA81CF8B9AA1A0B9AF369144E649057A2B6077115FB1
0C1F23DF94C9D6550784F876CA9DE18D9CD69BDDB4707F7B2CA29CBD08E1DA00
28588F1BC91350BEEDA285CDB84736F2B650DABB0E06F4650358BCD47004B64E
1041DF7E8A410EAD0B667DB2BE31947CB303C5E516F18F719D369CCC3145EFD0
A305BA18831827BC04AEB5A1DF7106B1EB2CCE2D70A82A8366F557ABCD69A6AF
7CD7D98E5A0D5C9B7C3D6C45C57F732FE2BA1F6ADB2A95D564919329BE28E969
BA546095C5DC8600DA605D4E00A37A998C561ABE01BCEA8D863E6377DB68C411
C55E16F9CFB5CEDEA451FF9E92737A7AB1D63393DB4A3AADCA1891DE476FCA2B
18B3DF696CC5DA4B9D780DB7FD4745740AED1FA5436E30669CFA6C1126658F69
49AF9272AB7E9C40B98C364421136570B4C3191D8A4E83102BA136FB793A89D7
97224F59CF96D7FFB0FE9DF336D54CEDD5F0628C95961A01AD2E0D3B40980FE2
886F763986F2D25C1BCBD861FA212EDE3106862F54A3D148BDA88FA06BB29D05
7A0014960EC81C1A18951AFAB0FEDB13BEEA0264D39E3DFB77453925F65AB6AE
4537BCE0751DA32596763BDD5ADAF4EB3BE9C2635C21AFA28694D5745B188192
0CD580B6CFC656854ADB48763975C377D3C5C7267BEFE151C50A0D6C2FF33B77
AF5B0846AB82D8EBA66BA6CA883431716A47083CEFAA1AB4AE4E715F1DB3C257
984146C84A67425303B8054D8DE903A6CD768A42943CFA8377CBCFB2A11A09B9
7406D5D5DED1401B54E1ED6E349F8D42C2A174C3E0F92D268D437769C8EAB31D
84FFA53B6C2652DDD3D3E345113FDE031EA1CAE763E41AF38051C8A7DD9F5E60
253A53957EC89D1266566FDEA4A87F8147A3419672873E34D837A3EB96E21DA2
E36D702F27E1341025B4F1C195055ED5CACBC8BF7AE410A2EC08379EE00CAC9C
DA3D4B02D716A935049BF87AE2DCF7A2359122F3E9F7099EF303DB2D1D4EF2E3
FC9D766C66D4F1646CD21FF23AED8CAA60D19C8AA1FEC0DC50A9F4EE7D0A955D
B42ECAFAF619559A5AFAF13A3E97B8926F0E4B4693B8DB4AA1CDD73447E82992
232307EBCF135141C89D8644A28DF6CC2BC0390A0C3394F1B3E3C4B9F67EFFE4
605C23137FBE1EE2033535BCFEC3A7C06483A7FE49E9118C94D793BE7896D389
453DCFB6DE85AB3502A38A8AF9EFE6E2B12759D876E93E78E16F3B829D8F6224
4F4EEA050F681C391F7CE0BE462DB98A466FE912EE340840EBD25D58001ED2E9
7B26DFEDD83431FA13B330435458688B82C0FCA8921B0BF49195EE40A72DA4B2
A644BC2A7F0C0C42BB0FF97A94ECE5E198A6C53257207EF1D6FF8E1E1A615B4C
43A0C065D104436BB8A8387783B012534B078982F2C051BFBCB27AA56572541C
9A5C80ECE34F1DDA7C8FF4DE4C500A28A6B2126EC9DB90BA60F402490682143A
283667BEE35F0C8A7B7BA4E02171A78D4463B995CF637964580598636172519F
DD867D6822047613EFC7DF2C83DB67E8ACBA7603ACDF0BB64DE7922DFBB50208
63DA8BFF5327CAB5EA16F7F51C8B24F9CED68BCE525CF01796723A0870332DAF
96AD96B1D5F131513EBA34E896975FD6E11FD00743FEDE965279AE73809510EF
7D2C216375FAE541F3A3F9261CE626374AF1B2BC118AA1D5CB40087597EB14A7
A222438C44ECCF0CBBBC55F407E4BF5F3F15F919B6826AB02AB8F289EFE1420E
12F06EC841D0EACD9C471935CF7A28A440118DB7613A4CC0BED8E3A5E38B4627
0B1ABD1009CD299EEB942F0FA7D342F765C725ADD7B0D3769C8551447540BBB4
3440FEDBECD5E2480661F71665D699B6E927E8494ED12C35F68E21ACD8D984A1
AD96B04ACC5F7A35F824600209EA1CFB78F69F2F4C1262A94FAE55A94B16B5E5
27D455C75E526CF6AA92641DFED179A2BF9BA6CB5818D72CDDB0EC78840388A2
78B09CC08F50243705F530D7B58AF397729222F3B7FE28FA1431A0627E04579F
8F952CCDA806F8F578B49B1D781A3B45F5314F648AAFD00DE63B1C7EAFA46355
29C28BF483632B8B4797AFFD2C1F0024B6DE423A4B799025D58E89E588BFCB67
E6CCB13E09E53439DC13D58F54BBD331B803E5B8A45C6D9831ABE46E0DA42528
C12AF90CEBC9F80A06CAE8A014AA196FBF2C5D569F8BB7F07BEA5A37E32D11C3
53A62DA261789B979BF49B5221210AA623A7285628EFD902A03E2C5984DAC831
68FB59DBA310A827300695A5C1830FFE95F2452462349C7AC259D544D7D1A9E5
F1065C4F8A214FD774FA3855DA7A4BACF1072BC983B4C543961184E1D1C12FC2
86BD7A58DE85F0F3277E1E430CAF641689F735DEBC39DCFB921CE34108E840E6
7BEEF548FD3BCFA2074A23D0639381C5F14540C7C452ADFCB316AA81CB523210
B2181ED2D905972079730E93DF4A98E558E79BE433E4423EC6C03F2A8B55FDAF
E48739DDDC43067F7568694B68BF2AC25C7D94B5C84E9475BC392447E1A20C59
4B0DCCA08F6B54FF1EA97D9063779A056B5CA574E2F964E0C9DE13D8937896D8
E9DBF3022FBA59E16641188EE9AFACFEE8F243AA4B08E91CA507B08E3BFD87AD
9589CA5A0C1829C40F2692FF2AE3CBD1AAD801438F6767E94F0F334FD6A93F6B
6F23D96B6B029ED776878063F70B5AADE099AB2DBE4E0E5BB6CE9B3A0FBC7160
59B427C00B3CCA55C8899F495F774EA7ECDDEBE71B0E4BBCCE69B6A411093396
22ABA4CC6C2634E52032A38AE6FCD8390E584D1C2FFA3EB067E9A3B48BB8CFB6
FBE6318DABA60E8D5EA53DCD052189D82C92513F0FEFD4DF18058FE44448E336
4CB732417D865E31C2CE8D2FC76E5DF6C5EF57A7CDD858AF5C52B2BD3CEBC9D6
65D5A0AAF69D31209F98CADEC0630C1C27A3B5B54DB0B47AC7019DE8EC1EF5C7
D63FF734E734248B8A359BFBB4337AD81799FEB85914729226FC133CA3C00AE0
B48FE17534746334EB55401B82D502D14F9748FADE465AD3A845262442A2DF0D
16654DBBF3F5A5E33D685568BDE0CD56761FADC33736857AB3FCB3A08248B745
1BAA4CCB31D257481E77AFDFF621F6092C6F3DE0468C851CE9F5CE0D85A09F51
38133A70848ACE8E9CD3AEA7B6410FD6F01B16E1B16C0D88F01602BCDA11BFB3
4D55E46E0BB21304B0B24069F4CEDAF7507706B9884AD691E64EED8502F789CA
9AC7C90B5273F46FF4BD6AFEE594BD1DCB031A8CC07DD34F0A4F1BD50807A992
B99C84D8F986664BC866DE4647CC57753614800E641114C5DE56859081E7A3E6
DCAADF54B00E900D7DC8141118FD601F7566D53A051752855107EB825030A075
2AAF92B090D145A72CE9CF2A7DE1B9784E92F1C23C5B14387BD7C9B55C38AE54
5865AA2E80D5EFD0981121026DF2312AC22E36E6E1828BA390F6364A02B52978
7A274ABC90DE9EF31BFD9380501204D360EDDE0551793F8C2E09192316233F31
F08E77EA66E496852EAE42C41298EFB20995F268C518E74C4F5AB12F5A9C742F
D543091B7C4AFFFB2E9400DB9C1E67ECDB757DC0BA18457BA66BD00C626217A7
54F78A3AA459740B84EC1DFE8C60ACE45B3E9594CF31D482F7E8A387F0D40BCD
E3C87780D08884130F1E8114F5423149F3F7D00A942F839A25E999299BF560C8
63DB4B4FD00DA3FB3974556663B9565CE2A629C44B06929426D8CBB7E9CA39A0
7AE1A6EB2D2A2F8212DAFFBE4753F6862415DF71DC73E2F86BB51989C0B59264
A091B0D384D1F3306F649B676342BDE915844A1FD39D9A9378BFED517620A454
2EA79B326278C9EAFB739806458AF355476E13E076455BB6FB8AB9892967D38F
DDB5C8F58AF2331C8A121E8AE48BF04767BBBF267DA1F73EDA8722D8300214BF
E92EBC0E480289158D2C9CDE9E6CDBF1307E8E5688172766AE4BB1A2FB7C69A9
7F7AA2A9D95D293BE69C79DAEF1BD389199437B18A44E3FDE363488C16B59EA8
BC22653330D8D10950FD2B647D4415F44E5CC637AEB881AB6D1FAD7A7F477AFF
404430460C536FD078AFA20DFD2D4DB58662A917A5E01C40FD77CB13983E8A47
D6EA2AD11C756CD5AF0DC3D1A0C03712D951665B0C55DDE69D97A98DC9D483A4
10289CD28577032EDD47D035E3324B11EF840A5901B0E405041BB0C9D49D8233
09D572F3B1A9F5D0CE42710BE6E2F523CB9E32B5B83ED6CC07CC75F615580D34
08DC9D3CA915AF65A7296C2E46A9318EABE2279EF23CB0DBFF442A62FF6F632D
5C25994482C65EB0C2A8A20B27A27796021F1FD2CAA2EECE7C7A49E79945882B
6FF8CA6E8B23881DBB7C3CA05F26C30F00D2D13AD67DF7F534B94D06F7604BB9
E6537CDE655C35CDD59B687D8A1577565FC6A4D3FCC83E41681A133B5A3F27AC
C5C8AB0EA5771EACB56D67BB6BEA8AA467D393CFF461113E2083F33D20391179
DF42217B9A5E03DAAFD898C90806CC0412EDCC0C2188C6FB2A59CF8702DC4C80
34B3BDB7DAC5AE9B509363839E95DAC1A9B77403AE1DCE01612CB384D518783D
36DAFC6B68DB458DCFB2179501FCCF2F6816623702F3432A3B940C35380F3F97
9957576D46C66C505E42C14F755D0C8F5C91A00B52A4C0B22DB522D108B5D1FD
53FB3798590E285EA3A5ABD6CBCC8143798548D52E90D28963080C447E460321
8EA53D39E5F1E0076049FF2DE40A079BA4622F6AAB10475A9F1AAD404C0078F0
0C91E531391347289A5DE22881E20E22394DEAB663FAAA8179A7C4BBF2D7B014
F43A1DA8D6A31BC07748C2037B16B52E2237D0744D22958A06A7C25139D7147F
13C0AE346D41A9BCD8BC8B7BF50C65287F4346230A56B374669D5114AD82CCDC
0FF5396901BC6C5BD484ACF1C59C42FCD0337C6DEF30675C911B618655B13D8A
4E4A5BE50F431B226690E01584F33E56830CF558AD58B3F4F33538504DF9F5E6
56063D963DD9C28A4A9F43BE6EDAC5E1DA145BE2399FC57F3AC72781BF2B500C
E977FE1ACB6FF1543BDE149E7373F97F0A5F0C2F27F3229E58EAF6FBCC52DB1C
2AD8A3B92583CB272ED664EECC60706FEB21C2F10792BD649578D32998C79C4E
89BF8BC29FCA69DC5C4C6040CDA0B946AD372D4C447B53D307F53E27F35F2A74
D6BC7A7504B1D5BA9ED3A354541079DD741620928D34148E8EB5C3C22383D8AD
90FD5E1ABEDBDC5FF0DDFD20254B37BD2FAEB05186512A513B9FE8A8D691409A
BC6FCBF530EE71547A53669883E1CE624EB5B1131720E289AFA4D5B1826D9A74
01055ED2C7AC678EB2DA3184C81FBD59C86AADF02C125EA7644470B915CE80F5
57DB6966EF23EC1C2848129EC1DBD649888B3F1AEF33739D53969AAA95722F7D
5A3069DB54140CE6AB4A036DFE802D19771D936EB619E7FAB75661E58D5E76B3
8BB38548133E4C1A897D5D76BCA54F119C92C89FA5D74310007471BE8B6556BB
CB6C5B3A86F998DE0C4243ABC87041CC9F26822441124549A34A77A5362A1288
2B4C9846D40310F3639C3CF93D1CACF97EBE253794735B18ED46B50F16C9A54C
9C29109C44EE642787A56EA7A8F63809F24A9281C2B2D8475248282AF03B398F
ED815197751681598A245B55D2A3BE6F5B4DAA31D1E360B09F046BB0C115E2A8
B3A937CEEDF6B0662F4435339989BC9E04F68280F24F3418C0584C232A541F86
4BFDBC007933074A8F8276FB862E9C6EE0E179FE7DD7BC34EEE76CCCFB83AAE0
4FC07D3FDD11D9C06278364037BE989C8D050DED7F726B9B7E8C1FFC69425639
70F95203C9DF7F065B0B42002678BC4B6591AEEF95F67C9A91F3459267A4FD86
29038A8C9DE617CB5B6236C86ABB3FD46942F33FB3389371E7D23C6C2C890DDA
DB503019BF969199ECE713ED7FE3086379B9A400319C4F7C720A533ED262EEA2
B1DEA7EBFC0958306C8D5308CE48C88926CF38240CB8BE182955028D21E09B01
69F2C6194A022617072E1452A3B40E4BEB4DA9593336F3B7AC4ED83A10430998
17659029A81498FD51A7F6C01D7DD2A071158702AFCFFF864BB0B29E795FD2F5
3D4F1310BCE41D4EB36948AF1731AE7C4C382143B0B8F152ECF1CE7B526441BB
BA4F7AC16EB414E11F090FF92D5FFEE4AB78EBE2DA35282BE69AFFCC19B8A2CF
13BC0E7177857F95BFC33E37E363E390B901A253A757EC4BB02B67F529EDC91E
CACC42A589AAC58FC8299399A0B2723EA6837A1C3AAB1E176910484C67146A51
EB9C62F41EA35DE0D2FB89A4769C65108895FEED30D37A8918B6152B23988F0A
582A2C217BB8A473C299809B00FEC913AD93CB07140D96EDFB0F2652F0B32CE1
0E94FA988B9E942CDE774959C79BF7415985B4F761ABBF0ACB21AD69363909CB
573BA0185F84A0B8C7CF57BCC78C1903E8481527794936EC6A06B915A6B3C308
F3301D3DB3E4BE4C74FD44282A8C536E05F854451FF3AB7303483EEC62524AE5
6868369C786B27CCF4F6D26F54E9E1636140F88B39FA0280EB4B5D1B63BF91A7
DC93992F864D4080BB0666A8CBAC3A073F35362F5002667F8DD200B112D2AA86
61B705E191B36E4693F9FF62F500D7548FC3A2AFEF54AB1F91B1B447D7D3CB2C
BF876E9F25F5C1742EB8EEF2A8FE46698AD6FAD06FD47C46CE75FCD0ABFC0BFA
5B25DAED8BEA76B1628D221F6FCCF4564ED8F029274F79BC3C78193A1E6F51C5
57D1CC62A27DBA9B795233F990DB4743226AC676214FBA7BC8D3E99FFCC49E5D
8664F0841CFDA9186366AF68500A24E4BCF7E353717936A1731B6BEBC815059C
FB0EB260DCF9B67A5DADEDF7C562F0876EB7A7D63A3E510793752955ABDC9C6D
795658482624149CE2C2A9B2734429AE3CE859CB9249B7016868FA4F651AF85B
5C809A18F38FBFAC671780BA8971DABEA3651416FCC35815ADCE8123A3AB9C5F
C00CF67BEEE611C229200FE7A67DACABD1A4B5DD46504D4D62DB967F310B12C9
C6EAC09B870D120B19496AA40413A67DCFD9D14B0A59B4A9ADC0D9684048C90A
4EA7A0B685F7326E4560ED43C17A0A2391ADBAA0901D15DB0EE6EA73687EAE4C
A32E298C8931E72F7C2E3C81352AC827E71AC02A11FA4B233BB518D5ADC0919D
616F14A526E512CF99F7A20F853CDE8AA4E4B59AC32A7D7AA8C4662665EA75A4
A8E88036087214C0054BADD630DA51DAE8D89C9ED243C0CD776E676999AD2D4C
EA64C1CF57864D9652C82537236B9794B0A67764F100B36877DD1016F1F7F54E
C52A1014B9A7ECCF0665BC631C69795D5F48E98B539FFDE7B76996E1A18C480A
C7673D0F4AEE25A86DF7583218D63E60AD39EF33EE2392994FABB6A608D07CBC
422A06F535821820401EF8F389C41F030E7535EABF07D7A0BD79DAF2883416CA
2117B5B45986A2997E43D4FD9D4068E2AEC28C7770A0F431931C1F251BC9BBD3
34EE2DF76CDBF9A26541514C83F9FD39A1876B4F8D56FA6DABE027F44C732864
D9EAC3418664A93E5249E4CC2DB969D2B55C76B83E51A01B5772ABA48DE302F7
4AACC5CE2B30DBF91ED94465A2A4861FE300A418B52EF8BD15FF9699147813CD
4DECD8A8F633270B40C66FA23C1F2C25EAF7B70B60440226E658014111D5ACFC
D0013E5A3C99C9AF4C930CB81FA841EC588A26531F414F317624B7C95A6248A8
F97E2250A06D9B9EFB5B3DB410872E034B32E43E35C6D10D4FC4056D80F59986
66704A6512AD0B5064CCB7908A68448FD2946B7757931B8A436A6AEA2B63BE15
54BCBE4B7E3B0DBB0C0C68BFBA9383EDE4BEA70C15D76CE01E0170C5A0772860
BF18F2C93004905724818DB5576F8E7611D5123329E3753B267DD4B4262E0ABE
22C3D01AA52DE422D3AE8F45F8A67BEEC2FE9A42F01E8F8AE39037CC64BB1594
4FBEB5ECF2F5A201070FA629ACEF97D9424B3413CB971982F45A7A73ED97C0D3
22117CB6790166A11F96D1F148985BD94435055221AA6375CE3390F6D0B29736
395C40B3DA3645A8950EF2B798AD67E648E9585CF59E91B2C174E93DB5E838F6
18BA9FACBD481B1FCDD1D2519D9E0300F20C3EC8C4656FEBF09CF42BCB815D79
FDCBE21724BFA0E1C183EADCABF27073CD29986FEEAA762BF47C7F642D8DFC10
0C3BB5917263E2349C7302EFF2AD8898FAF9949B34AA43EC70FAFE71F94A925A
52FA066219BD21392FDDFE0693328DA8910A924BCA586DDBE9FF10017DD706F1
9BF84CFBE4F7DC51D1A11997E6064D0D891F0BFAECF3E207000CC207C4404AFB
663596B20930C6F488C48ED145B09AED79C5ADBC3B60F4ADE6AFC97FFE71D048
D4FFD2A9C7373F411B4C5B7C386D23C767E9B058FBFF53C39CD249C9D216F6F1
9FA4D6743FFF2EAEEC648AA0A8D89ACF1514B3413869F17FB467ADEF00124339
8B0942875BB0FC7FDF78DA5EA858F9B683EB2147BDB0B2344245ABCA8B20D37C
619A99022462477F82A423A8E58C52BC0B1A93C0985F8D745355AA9CFE737DD4
5F777CC46A0AFAFB75980F8521880F4FFCFA7F541DE744C34B92B3D477FC1A7D
AF2F356AAF18CE26113B2F18C0D85024083964FE53702DED8108CF1E09100B4E
A81829DAF1DC500054B327E3D7F7F1A944815B53BE5ADA9A969C7966D494C310
486531271D180B2889B51032B6F6F95E5FB6D2FD03F6B47AE01075472EC03DE2
B1C24353FE81FEB0CE671836FC009DE9BB99613E1245546708B864364A5DD7BB
C9F4975920CD935388B56D86FD0F29EB66AA6389E72E7029288B5BA68FF7F1BC
ABD947B9FC18E69C2B2E9BD4AAFE410AA8FBB0744EDEA6590F8E38F870B58315
D6D43B0B54655846156403D27167093BED9B26A6D65989CC82BD62F47F25A70E
182D1C8AB1F3A8B14E9130EAE149958DF361F676B80BAE5F2F04FEB8DC72CFF6
55D5ADA5F44393E7A43B499185C4898E9107DA98EA671849E3A777D5254AE533
FECFA137D663F497C828D4336492F55E0E1EDC4FBD98E5087622A9FE81EC5DE4
CEBCC16BC28EDC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /macron put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 57 /nine put
dup 58 /colon put
dup 61 /equal put
dup 94 /circumflex put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED277A492B42D88D0E068D61F2BEAF96BFE7F399175DE7D08981736F7DA253EE
331F97DCBB941B1832E3FDBFA7650E0905E062516F27090476AD2FF0CA78B14E
13CD9482201FEA5AFD00A134F3C357412CEE5E264C20C39E157567538D94E69B
6B7F3EC896D42594593A016CB5FD306F440F6739C7EE88132663A1B1D635E362
5667C0843D4E8E1C205588BDD46FCA71692EDD0042913BDAED8DA7D7C8016D0F
B9B44B7EE36B8356A8740617776F18D167F6AD72D8B006DE3E4BD74C1CA8891A
8E08C09A601506D57B5EDC2FD998E405A987C4205CAD91AB441DD76337F8E54B
79142482B2FE7853B7960061A6C420A696A0C47538C692108055EAC99DA91CD3
B0A2B7AA4D3E1CE749165D28DA7E2AFEAD936AE066ABFFCEEAA68E1B41C74CAE
CABF8616AD95FD9ED3B11C918BB38D165644346F51053A08C551220E93385C29
C2E8B76655CB57458FB78C6ECB6460A281A80F502523BC02292E1B8125409C3F
A734449C3B34DADF947075BE99F21B31B00EE34F824317E8766999D17EAC8B28
132D2BCF954CD29EB760C8F0114D19D4BA0161537A4B2E556C0B64CE8AC122B1
6BF9132830C8F4EA9DED9CA2889A38D1393498ECCDCB076A6A7E850ECD3A062F
050B7B9907A9F37C84D143DEDCFB27AD763C746E1814DAF381905B63CF391ADA
2DF440658BC5CBC9F250F58B0661DD335E29F1931A004EB68BF10930ADD30B07
362F8C9C7F438CDF8944DD5A06583A75079194054F8C06AB22E36F01DF05AB58
428703B5F8FCF7156859F1497DE012A4ED81A8493B153CEC0FAFAAED622EF190
69ABECE38D053D6CBC34EC86D24A93624C7942CB3D9219D488F9FB992F7B7A7B
D6B0C8950170438A606B36244408FA18CCB93DDF370452380862FE3E7A56C8ED
2CCE3405EE642ABE81E3472653B118594A55413D85A2598C9422463D8B630AE0
02BCE4FC0163C20233B983D6A9B7902D0576B1AC15546F60329C64DA64F101A4
EA8A0FF3435977B74378CDA96CFDE41A5A9C4DDE601FD58BB5D3765E2387F197
12D109458CE00577D739A647E01CA61439570BD78FEDE4447480B542B229808B
A6F9636F8B94F996A9AA078DA71BCDC8C90AA36570A762470D545CE6B8DB9F8A
FB687987D1B6A10A4D671B25ACA342D6FBC1E488F81FBB6DD079B76D52CAA033
5D7A1972441590EB25F5FADD0126DD1FACDDFAD852DE686EFA03B2CE79CF2B15
6C144EAC81925E2ECAC5ED93F2D8249FEAAB72F6E1CDD8B7717DBB23BC73D4E4
E6B9BC5E023D2A3D947AC6CCE00E1D5247CA9F5CFDC5E6C4D9364A7B1630CA0B
D0282E9837ED5FDB244AA92EA8A2D8C1AA64FAAC7952CB5F424C6DA581B49C70
9E1E98149FEAAB15DFE7F942841B94ED28D7319ABCDFA4A265F41956A3090FF2
6B7DD2B00F00DB09C337EAC9C7F3B742B1E842D5A029714D9200A660E04852E7
DBC79C535106D8BCD1B730D1A04F9439CA0D334C30A777BCE968BDF1A82F018B
9599B701611E70ED5E18C5897CA59F354BD2ECF30C6D9B4D95E0ECC246A1A96A
67E7EDE8C1B81FA5A78EE728344AE44B7870D343DF102BE43CD5058C3BD0263C
6E16BF4DAA942280A326B0C4356B774DAE57D209909AD106C4D7F6CB65990B7D
718F6A16F933DDDC891E9BB107DF7219ABB9D6458C50E2075789F09D532FF5C3
49B5B8DD2441878F5507B340B656D9E499649DD7C0A71BC5F00137C6AF584002
6DA68D8DF87CD5567643F0AABAA935C0E086E03D6A47EDBE0DC8DB890D11DED4
203C86D3D32879A5F548ECF75B9807C8A60296C746E7764362A220AAA68E2CEE
E203C7902489D4F4C3F2EFB1E4CDE434EB44785C7CE8435E807DE8E1CEDBBEB5
D24ED5D673E26A25811D4BCA9D693EF8ABE7809D442E4D291FC422B5D269C60A
513AFBDEDFC1AE7593CDD5B85319EA3EABF03C0D21319F3267804C0E1F326253
6CD040168633408F8A2EBB7E183462F00AB9574A7752560FE97B8E99A12AFCCC
5044D989BCAECCB9718AC1E0ACEF9AEAE22E5FA653C2698E05E0E074066ECCF2
6590A7894CA6F91AC2CF4A1420693935946DC1A70FEF47DE1D954392B61E683B
B1437FDCD5363F55D24A4BD23C04CFE4EC3C5E8F62FB9F8B01DC9730F50648FF
E450E1CD2F0FE4EFD68797E34E14CAE4A25DD63DAB617CA8B941DA69A928EBE4
6A46B2BF93A318A88CF79B4B972AE6F7325F973370C589B66EEA47CDF942C8EC
AE8311822ACD70AE170C427D588B39D390F986977994BDC068A61B0DD5FF9CA5
82782EEFEF94BE83EB86DAF47CA940706D4B043040AA2E719AEDA244F95EA439
9C4CDCCF4875AE139D6B531996A54B32250C17C02A844CD9F42A31F6710DB8CE
763A3873419E006D51A92C2CF0046A5F542DBC264C611E8E60F418EFA673A641
E499437DD79826FA99B797CE52278F2AA004BA3954B288CD9232F88633A93383
0B46839A2F4556AA437BAD036E1931583807EE0A93E8487ED698359074FAAC55
DEE70CC560D6AC6457B5C52B15431FE391C16E60AE53C9151DA7B72ABD919C5B
E4534300DCB79BF86028FA508EA08521B0DEE85037F42AAB580509F4B91B6C2E
1D3D80994B414731F0AA4414CE166F39C68C8F259699950CF68B05604EFD0DBE
029198D8F05901C897288256E71AD9A18A5544EC35BF80521CA52FDCB634318C
ACBF994B414731F0AA4419D6AF912DC4ED243A0C650136B8EEC999DA93F9BE82
D7D667D4808E9FC8F28213E5C3BDE4B435014822136589A066E3C09DEF8C9466
69EF2C286DAB56E32A342BBCC25FED541C36130671C924761C3BAF25E1D56570
A01E13666A84DFEBC5A5DC04BFB1D49BF5BEB8E4B170469C3378D351024653D6
23663F0C3CE8A59DAF17D45DF9C35CDF69EF9B49CAA77040D3798224191F7899
9867C5F0970BAAFB320F87FC5D14039580B5C6459401AE3114CC83B1B24FE74C
351EABBC368E5F23F5EB9256410A727E47F14F7B9E530ED94405E88ABF1ED1D5
903D85F35CBF7640218CBB724E745DA7364DA743A9FE7D4393C65279014BDE76
C22106CA4365D8A6BDFA633EAD07643CB2C30CE907623303ADD60965F41A74BE
F5C8743351DC9550AC182A98736A2FA571D9DA98CD07113C4269F06F393AB1B9
A792961908B8620C0868AFD6C9916FF4F83185A2B9793C0F5FF8E8267BE5FCB0
B209B090009718A49C6D7256EBE0D4090D224CF4B0E5BADB6E56F717B808B25E
261C95ADD801AF7663A6B173FE4D0D4E123BD0D26225F3851F2B5398C060C127
9A52272E1072141217C1F4F1291D7960234A9C510441842C07E490CADD3B134B
A0B14FC014FEBB853D12888B1EEFA597E1E283AE4BBA4FF803C532620D56C6F1
915026DDB061E82530D793EE1812EC8AF570BDE83F03092BEF54AECC1B59435A
696B4DF1119B749CDB9E34254C97B0475F948AD57FB0C6E0A541677336CE9CB5
75095344F35D7631D743694619CE6E0DE7E3A99DD7EAD3A3072A6917D9EEE366
9CCE4ED020659CA4D09F81BC38BFBD5EA866E5EBE93AD7053A41F74E1CB2E419
84B37057B4305517E161153087DE55176405F5E3E5EB8FC39FD1960D057DBC64
D30219D37DC02FF46437C05C7088BE89DEB7746D745AF2936A645D52C01CE8C7
FFCC5A0E47B08DFC055E4CDEF647C5D421B8CB195EEB1DF1779E27868DF9053E
32C8D8290AA240EE40A8D92ADD77FBDA7DF851E5671690A1D4CA0954191FF9CD
17F474B42C7D1073E0648E4925C1941ADE6988B75A7B5DCE85DBCEF92FFFBF91
93C8B03D28ADBB61CD41DFA5C553E4B7F29D4DAEC9A3D28BD9805767BDFC4C9F
B5A78ACD5B5E32BEE84F8F276BF5CFBD84168F25D3F25E586A38068D2D6245C3
09C1319E289377EA51B42BCD6853FF836850B0A43E560090CBAE5C1DC9B62185
009266FB28AEB0DF77B5D946E484C034160303FEE14173A86A0628382F43ABB2
794D20E516EF6D8E062620B93495C22005DDE08267D435B5E96295B46D95C19B
2F6C79E81C340B14F6AFEE6B970C2A8E24C853AA81D4E97768B26C64DF45F703
812E800B21FCE7704B399C76F089636B4AF86218E4547350EEE13119ACD4F089
811571D4EC6AEAD29F686D494F9F07A6AD03DC2B37D9CAD9E7BB69A3CAB6F3D8
BC90ADA0DC211D546609D1E6543977051255AE8EC614F77B1D4E8C8F6380B316
6C2A3F6EEB26FD0ADA6A1E94A2742FD5D8552BF3FDD85AB36818D18EB3748989
F15BB414AE60F5EB7DA0B5CAAA5611F8139474B204FC16DD145FDD3174D87E12
D2BC50F4DE707E46B7F11533151C2FEB447AA0E4E8C5EF33A7DC0544DCCC1017
084221A70E85E30A5D812E96EB35CAC15BC9733DF25C79EBC8C3B7A64D50F40B
12A9C1969E2B026B0AEAD03AB485F48B716BB93FA4B49170810670076EE1BC9F
C4A46AC3F7BAAB0D63E3EB5B6EF31355732B851130DD56CD4AAB77C3202B23DC
DCC3A667A3221BC22E00682A803126F5D008416990B540ADAE81AA1F68AFA608
094B05A3A6E937F251ACC9BD016CE26FB59CA9280FE2C922DEE4DC28C800CE54
DD25CB12F8C8F596DF97D60A87539EC9892120BEA9927D9A7804C4AA2F577DF3
69AAEC0114CA5F67DECCB0C1CC9C739E7F80BFE1493344D35DD956064B57BE7F
0799154779C3AEAD24BB3500AE2274DC53936494CB6F1EF3B5C0824DB0C8F041
B3D14553A94C3DC57296F783CB2F883128476C4B210070D5510B2E9EC9A9B2FC
77DB203697ED39DFE4C5C779A76FD97AF1E8D60A2C844AEA6F4AC91736638015
3B0CAE6089DCB70450F740AAC6314010A870D3C2A0315B54B79F67FFB1A56F3B
BCB4231674EECEA496499AF03C8BFCB3BDD51446EA953356910098FCC19D1F02
66FBA60F7BC777B799AB2E8355C3951C414400D4FEB0A39A7F0386E1332951B8
7DF224B9A22D8A002FE9E5190F9833EFA57BC47F9995005EDB9C4CAA8B33137B
3C966A4333FE5A1AF17F3C44D39A03C9042F2DCE10B5F51344095CA550D6B043
3EC24B274C6D8156B986D0A8F33EDE8E7AD34465AF02DB0053DD75B0551B4A3D
646F2628A29B36F8BAD761DB4CA463040BE16676C317D416E34CAF6B77595BAD
BB7AFC7CEAB06A74010EE3696D1129A1C5B9A5F4E9D1EC0332617AD00CA1F79F
57409AB78AC03145E4AD20F10A57F3C8576A2DB35DCF152C1A1CD1E4551158BD
3D29BE34AF98350779C3A3E88FCCBB9026ADB7CE2C89B84E88DEA302CED20876
28D920A7AB4B65A99A720A28ADAAFC396CAE552BDB6CE74F36442FF2F3D6A4EC
32D7F026DF3ED45B968F7199725FC64330AFC6B854686B45A40D79C8DF1936A5
1E19590399E028B63FF6524F67CF1D783EC7B15B438E687505F38425A977B238
AAAF5CE30FE238719692CE18E50C0310C46800D5B005EDEEEE2C8333DEEDEE92
075D38168B07E0B0C54E93803BCBFA7A011C84CEC8BA37693D8564EE8D38C1AF
140F62FB4548AD51B25D992B9D0EF89C0C2115915525F0BB696B92CE65D5C1DE
D8E10164150277A660672AF0FED818EBEECE1557987067F4697C205CA43D2D49
C83EDCC74E41145440CDBE2D0962E21D8E572B68D3D11DBBE78A7E1B43265201
F15E8A2A8A9F58FF75F9199289E12A62E72336FE6C4C1017B283FB694BE02496
D83BF8E1E7D041858553FFCF7C0D7862338C8E2BCB99769E38F55C13FB88109C
F7B69F74C66E0AEFD63F536FF68D6A88E5ACF5FFF088340052D2FD678EB44317
7069F5CE87391872249E77BF8531FB5689C5B39144F9671F364C7C9F6C0C274B
8442525BAF9D79CCF6BC4CDDB33BCC0C763CDD36275FD184C3F9EE9DE56F5599
7A35B26EF4AFEA464C8B020A1BA4A603498B38B0A0B4182C0FDE1D7416046E1A
3BC40F973504134B0CCABA14F5F2623A0AB51871B126654436915322023C9720
B8C64A36B01E2243F3E3F774200CCA242490555A887AE02AC8861883A6B214C2
B04FB031EF9E6E8D6FB36A6E86D421C08598661126BBFEB9391642E197
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 14 /delta put
dup 25 /pi put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 78 /N put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A447766B9202C183568774A0E97DB51111A852F4E5E
EF7167920DCCB879A734F2E4721E7B00D2A27D02591B160A67ADE0C9BBBE2755
4C78819A6AFE696782CC5E7FE1610F5FE92402E98020446DD1EAC78C08AC997D
D641DC6CAC53BF253D4DEB001F1A740CCD98B27B6080514679A9E98299ED70A9
731D998053339B2B60A1F97B22042F249DD2E3F839E53C5612DE3A56C48E2BCB
35B1118B906F4380F3DA3762F6046FCE0814ED8128AE67F13F5680944DB71803
344F8767633D1E4F2060BB78D91D5F75659B7983B4520D99E08FA75EC555F8E1
4EC28485863E8D0DF46A50E2087E68E4D747D9AA7C4405B56167F92C7B6460A7
E85AA031DE6B4980AE7AB990A36CC60F250839E291CF58479DA1557924A5FB3B
F7FF0761808E5744943EFDB87D4DA7943A1629A163B5B1E7AB7BEEBB590D4B60
9FFE2603F08F8FE6E2091B4BC8EDF5798261FDE80C9D0FDC4212F30DF1DCE44D
55D264C71960FD83AE160F1B03E46A91748B27632B8A3FAEEEF6D5A265907BD8
69B81561D4C873AAD6FA86648AC9767CAB81AE1C5C4039357D32C629AB3A5432
C7F704A50D1887742A9F0D1F6BB0ED3A7F22DB384031BD8F79A374E0D7B4F7AF
7569D3786073C5E3804A70C9746449FF37C37FEAC9C510C81D9AC1ECFCD551FD
54BCB27706B2A4024EC0057F41786E54D7F21C89A9DD43399E6A6918A8870BCD
CA4DA816EE6A09607523DF55631ED8F0A6247ADB74EBF7B3F0C03FE573DDE36D
06A1226E102134EEA613F650538F2E3DFE1685E67162D5C226397F0B8F622CC9
D0183BDF8892945675DF2F8FCA42732D4BBC2E83DD4FAC4DA8529F88441BEC51
A6C0B24CD56898A8FC7676C3FB55242BA2C21F59192302DD50B8D0719D9E81EE
EFBEB9D5FA50257151B52D9C925958F3FFE3FC99C9CC09BA4D290C97AA385E95
FC596357A8261BC649A092A20C301A0DB7BCC31E28D870774CA6EBE891D4C674
52C3969D0B164FB785E6911B4F35D5A1602B7612BF1F2D413187EBC7F6B078B8
107984D94F90EDEAC8A3A836AAB16E98924D3208DA906DDBAB7AC6C13FF88CC9
7A086EBC324FFA1D8CF55D85DFA23D04FDF60ECDDAC2130E335C16CAF9E7101B
EE31EF4856F4A73C395C42741DD74EA7A94EEEA2F99038D796614FDDCE8C4219
00BE9453FD8CB03CEFEE5A5C18087FE5E3C6CF494C42C14A6060F2BB68780C31
76F22A1832E14B792B284474958B81C1DE607B993DD948BCB7DC5327CDACC0DF
6DDA579C967650EDF164CA5F09587305042595737748397E87B1E307AFC9A365
15572797A58445AB1A5485E66C44AFA64992A734A0B3AA16090D1339CA0224C3
B1BC0E9107386852BAC096454EBFDB471CC1B00AB8FD2AD54E80AA7D2F4976BC
7B823FE1AC83ABEA74B0DA059C6C722D85921C6B9EE27366D2AB122A65ABA6C8
819C19347C927F3B0383E33E859B3456DD70238147F6E841562C805512F7E1AF
AC4C1FE2D460A67F8225F9726159146B9A3DA44C66DE184DCA01B1BEE9CE2B86
16BC828CD8B860E47C15E3ED562B4837915760F8685892AD6622DDC9FAA873F6
78611A33007D2FFAEAD6507A9314B46CDAEFDCFC567FB2740EC108EDE52F5722
CDDDD70052F79E56BC004D9E01A1915C92E8104D55555F98CAED6F9AC2B6BCBA
13502CACBB3CB4489FBB715A7FACE4FDC78D185E452F213A339ACACA3266DA27
BE12056704CF573B8C2C2B6F65AE4CAC9E80B8B75E89879A96F7612640627688
7838F3C250EA29E093F6A907E49F51A3363A81045FD434C7B0AFE1B192DAEEE0
AF460DD86A2EE2DE14DA2F1A019249096D368FC8192500EA04BB5113ED417729
496A86D994B9333E89664AC1CA6679A9D5D88774A56E5FBD4142BE06750E68CF
A9549BB81C81889293D891D2498366DF3F6A22746F8BF512E56E97AFD4F85E17
1BFC51243AF39498C2D6DBCACA65F337D26ADDEF4F651F0583474D36C127FBFE
4849F46377FD5A291A0D4A6ECD971CE8FCF4E637EF1DF095D6436ED381AE393E
6CBD1059BCF27B9B7ACB92649D7FB366F46415753489F6D7D7C9912BBCD917A0
73D0BAF15CDA2383F31084DB40E45CC067432A00831265412D435B7ABC72B27D
B3483F4F5A138BBC6C2DF52DFCD25D6F355E37799EB7E5DAAD8B0FA2B6B55336
254B8505C8C0392A8498831CF7643A82CED3809A07695818048EF10C50E09ED0
49D6C4735BA57E76C26E1083083BEDAEA412A9EF72217377EEA79F4E98BFECFD
68F3B547B3929FD7AE4A9255941884D3B9FFAB7C21AD3ADDD472F964CACC6FBD
0E090909954F2EBC03756D16001EBE690C87557032F98FACDE677181EF92C47A
C89EB797C8B3B2C3AFBBE02F7D613898D952D9B17826D656D9A46CD4181870B1
FB425AC07E96D28D66C349D9B3273A440DC7D31A1DB4D883B9B6CBF5E43E6972
212E5536C8B76B6D58250B7701CAF95E04669E72A4CAA44BBB30F83425386A33
F16C96CBF1D373E14B76B85F4D01AA1F6B729665A670094C734B4B0324EE6AB7
7EB31942AE8A902EC9D5CB9247477F5D173146A686FF39BFFAABD6DD5893D017
F2E71E3B0F41263A59E80C7B7DBCFA39AACCCFD4E748C5E08D2CB7FB56905CEA
DE69F14FE6510C3AF693CA197D746DFC1C0CE7A56CBCC79689573CA9BB241D19
D368C7CF287C3FBBD781429EE4DAD158564DAB1C795B7D5631D9422DC510D3ED
970BA77EEA854069AA27E0DC5A3F1C7DDF9B8115A446047E9C3624420ED09B29
F5087809ABBC53E853FEA4F36778B96E30A6192C24609C97112DDE11DC808528
164354971C7C3060BC7BCEED0F1F5782D3C2E7D46C1822B85DCA2218CC8E6747
8E7EE7B7FFFF95B09B06BB23A87055F8DB7C0CA9200A40C35C31E3DF838577E5
37A31B532303D267EEE17D9A4EB33E87C6F37B1108785F040B3189CB410E89FC
FCE8E3448D23398F3D6A1B903492AB448668E236F3529146B0C86799860B0464
9421BB02EB88E5E98C553D4C1DAC776E4E33A9CDC327F6654EBFB5F5B46EE093
FB919D56BCD02466A1754280D76F5B8E8CBF0D9C012ECE9FC7F0260DA215542F
37B43441BCA5BAB9BE554648C8CE3136D366A6463B77996C3720130B3468BBAE
80C73BC823A78E1A91C03E00DEEEE2B80D97EA7AF977038D0AA1EEFE16522924
2F8B8599F6D34958165BD3626DE6691E09F057795E61113B6288428B7A4C80D8
E96720AB091F6C972C5BE33E8AE60CEE42C61AA2B6EB7412B228116D1C910DBC
2EEC82E36837361F048CE766381A6E06F79FAD375BAE6F0CF1042CDBD14317C0
FD2DD19C020BF5E1FB1B35C5FE2A486A055296157AB881C26903604CAE47261F
5739CCE9DC3BBC5E7D9F1FB7E4BE88398B12E0FD7DFC979C0FF3EED590FBFF0D
0FA38C3077AC547C9C42AC861328588974D64D45ECFA4A962E0FB4AD6DC8BA4C
26B84CA0D1BEA25C74AEE8886FBF9805ADA69EDD93BBBB35AA479CF1C9084390
ED3E566A66E06AB019C6EEDB6EF90ECCB8EB531837396EB5135A76B6E666973D
9C07F455A033A06A7E2E3613773DCD133347BE8B9E41934C4F077F4BB8103EDF
12DD338754749847C47EE41434E395253831DF6EE2D784BEA46B1154753E415A
A56821A08A0296A7CBD0A41602A28EF0A6D742B29C5C888AD0C754D6F7259E6F
BB4F8FBB7CFAA232CE013E3CDC880F7F0952BC50B0DD557F2EBCCC072F454A5E
73D17E3592D57BA890C17373575584807B366E34364064D9C586F2CBC30B57C7
6E512D8EA1303D2952AD11EC91A77DDDDD2500DE2BD053037E30CBFADDF3DB26
999F36C53247F7803EDE4B18201032AD615BF2610918947216D90E682CCE0A05
031FFB93F9982278025634DC055DA5AFC18BAC21D8D657F127616EB36FCA4B4D
A450FEC7E217F0AA2588D086FA9786AECBFA05CCBC9386757ED05357CB0AEC8D
924F24C24078CC48FBF7518BA4EA2B3A915C3E55942B02F53C2AB24C0F74E984
2C896D66F7C2F947FF180BE21143C0D5528B2F7FB70104DAC2D46E88B9018C72
78122CC43C385382546B7635DC51BF62280C93F0561A86BA5B3430FEA6D82137
9788257D18AA58B101E409872A06CF34DDFFE54CF44CEB9531DC459E15F71B34
54EED6734CFE4A82F0FA722A5D51EE4A7C6EAFB989FF698402A594C16AFD8D43
A505EBCB386B9F72D75335F716D772498FBB1DB22357B5633E7A7D68BA053286
C4A55BEEDC40D961E6BA056A55812FEC38E4CF21FAA0735DFB2904A8F1301848
2AFAAF71FF4743E32422EA3B46B2150DE67F61D78782C89F2B573BBF271E1FA5
64F0B71E7272316F6FD1420458B0D482587571C12D86DD20F11D229CD92E4978
1E4D58955FF9FA00A5AB6786ED9EA711EEDB3EFCD688CEB1EBA1FBBF6C522FFF
3A4D7CE58A2674CDACE4A64D946651EC3E41270CFAF1BE09884FCDE1C2185918
304ED91DDC39D045421A95478C9ACE69E7085896F26950540EB8DF53AE066003
4B51453DFF3E152A7105F942DC1C03B9E3549C06E88981FA98DD03546E1628AA
051783EDBD843506390D382AF94F389CD5A7BADBABCD7BB78009CF664487C6FB
A283C0F311EBE228B508B7C3BF54E8608FD4F238B7242A2422350D35E37B13A2
D8F9EECC414CC41DF032CA1EF8B9083E78F1C5ED12A4C0057180839A842709BD
E8A61BEFF7BBECF3124A41C047E32EC61806ED201D2F331DE6518D09479CE721
A8C09F79B177918C929BA6999DE4810494A9165727AAAEC64113D340A4EF600F
D4D517F4D1F9D3BA5F513E495EC568324CA317707790DD4A2BA1DF47822CB136
9A0661A063F9734096A6DE6F4232A5854ECB9065AB28534725622BD6D252F901
3966EAB81FD70A6ACC1D36CBB0AF50773D37BC067EDB83880FCDB7E20E9624F3
45325B527B87829DCCEC39677260A32F5EB769B56EA57B5AE02662E3B3C953EA
D28CE8828920C3776D8A6BA631B9C6367ACC4A711D88672C0E47B3C51928F8DF
5241469911041B879742DE2E16D68B6982AE032E5AF2A4681EE7419D9628E6C2
D729830E87C0A308B18C0063D1DB1D873FADE2BE406D52DC572D952FD9079B5F
E5813A2A553063B833A95FFDE5590952395CA04256D0680CCF85CFA24A421AB7
D747D07F629CC3C6C7973AA7D8EE0EFFEEE8F60B234A905E38CD61EB802FA442
E733ED59A43AB87815C695B5FBFCE30A8546450EC32C5583C37A25A798695D59
CBAC352D6E7C1A144044BE53D024CE11907982EEE8DD35CD486533E28CB1FED2
2A71709B09AC9B3634D9C439D08F542C5F1DA020C2ABB9FB50D933D5DDD5F8BC
DCBC22EC51DE9049D08B6EC7F8ED6C8D6224B0ADCC2E6074EC3F6CF38A871B8E
FC71F07ADADD4B5148A5A0D32D6B8730F542F14B01405EE6EA225263303A5BD8
3632E02064D70DC2D03ADE37073D67FEA4DA2658156DE4C694F308E091F5F080
C37F6E78BF051D34975962BE2D5A240B532A57C05E5F09BB277799517216F75B
0D3628973AAAB63A8AA5D9266105912B29043E3F6EC446D125363D336FE6B706
A9BFC7668DFC0EC630D685F201429B44A643BE7C0CFDC5143CE7BD9D6ADAEDB2
35DF39F2433012205E262B7457E60316ECB8BAB269D18F2D55011C466419C37B
BE8C3E3CFA7A3F7BB04FA6E05C9AC0602F0FE5C0EBB62272FFD1124BFA91C223
A13ABDDD08DDDE80D81E2DBB950D8336E058D5903B6AFAF512F89111C40624B8
FF87F2640F4B305B300D5D10A12D57044EA0D33E97B71ABE9D1E42F7420DE3C3
13AEC4BED10A12B42C5989251D3F3E5CB760774B81DD6195BDC60E961C23AC92
F2C1406A2C30DC83CADA96BBE022C4FE4A9658FF4AF6AB9A1367ADC25ACCC11C
477134D8C38F74B8692935EF7D70D73168875487FA9683A646AFC2B1FC909FD9
AE8508E8C66F9001C58A9BFD9AF611EAD060A40F9AC49F17879D0B5D94347642
BCC3B805A60E1DBF0B365BA25386C9F0A1963B2258FD2D80C072D793EC7ABEF7
2E87E2366473EC1ADB6EACB8B67FA52B27F27B61C4E477162F0CDDBDFE627960
A17552317909956992226851EF0593DE5F60D4551C3DC68858C20BE245FC744B
C9CD9D76005CD291119FD80BDE1F67584FA82E0060A23016E6B796B4F54A6EC3
E9BAE9C843FF436AD7587F4E2C95CF126897B435D1D5740273D442B2EBA6C316
439EC848A501A54688DEBAFA06AF044316C20B4FE48902099FA7FB9ACF11E3C5
B0BACD62CE48CF5A86800C07C8D5C8B64A114B4634845BE747FFF87BC43B7676
E731B0D34175CF774F9B6872185007C04AD127926809D78EA56F6C8633B9E7F2
A24D850302035CB3A29C5FEA7E55DF6608862A500A51709E9720E87F7E5B1441
C67D24B42BC972B81AE51E2DC1D8138985A0810FEE5AD7D9A84A8DBAABCCA6B8
12B8BF8BCBDACFD85C9205157D27C342AF245A87253035FC4157C9C474DEC0BB
A88BEC1C17CEF6CB6B1822D4643A39A3413B28531F78472E37228A8C12850913
4B3FA63EEF82B296415FAF46BF033BF5AAF5E1B97F1DF11447651F8A0E5834D5
DC240C5DA4A176B64E157368E3F89E4DC31C69262B8AE9529CB0AFE4230E8A87
31BF813C3AB93F8506ACF49D8EF2A356B10560A38F12888F8978CA538D577CF9
5581ED0C9F4081F3354DFC96E5EE3DF685F6D80F923D0135E1FC36E34B45DB9C
2A123C65FBB96680E3E89932B5DD69F028E33DBD8498DF5FACB7D9B6DDA14C27
C47A060E12DF8650806E028E976E5382ADA866F61345D046731ED19ECEDCF62D
63B6C758B3839D487779BA907B2F58FC0D821E4D97218B84004C136FC09EB0EC
2DD0BFC8FE12CEED452F012B5D3F0386AAB09CF49CAEFE53042AC460B7F686DD
88A859CDC7E143BAB22576A69EF08FB2C5785946F9464A8650325DE65A2DFD9A
ECBA33C015E17DE81FCA5FA52B4F28450945A7A55ACEB7CB1DC80EE2D09164A7
0B2C5BB24C5CB6BD66700A6E52714E3C8AA3FEE772F5827AAFCF94A4861E03F5
90C088CF8F8D2FEBCA70945CCAB1A4EBE2F76D5A166F1ABA0588FCCDB06A3D10
DC12E1436DACFF625B7EB31719F783CC079050D8D5B7309439946E6E9777812D
4B3D580157D7D4FF6B8E6A4698E864AA9C65E6F6555F7B9992269FCC369343B4
0057F673093B5F798849A871E4E7CDC5E2ADED330028746B4BDED036DDB088E3
C711C1AE895A4AE3CDEBCA32A608DB00FEBDF5ABD3BD9785F667A6810DA61E65
6D0D7560E5F8C72A12D3415C02FA45B81D39626CFDFAE1CB83576CE11AAF33B6
0C0B9C92998E18FE9B556B46C1F8D67D953BF1E11C2D771C3722BAD9A2A42DC2
2441C003E157EAD79E3827063728A46E9B9D5F8D9ED5C7ABF008DCFDA585AB0F
C5077F850FB2D37A45A80B6EA84FD33954A567207D3EE3306E00B457434800FA
7ACCAADDC7AA95BEDF79A59477AEC56B7B00F077A66E71A083C318B69D15F5CC
86DA939B211E0E99CE190DBCAB8B924CE426E90A413AA8A12E54A799F650BF65
A3E0DF794CBC3EC073397D0CF631F53DA9574B86E12519D7F726B8F54A7D495C
8C6116649B2C2663CD6819E49C3AE9B5AEF39B3E99D596881DF0CF8560E2D804
74A86357133F7D404ADC33CE92EFF10E932F53C9847FEBBCA302FFC55A0E70B9
D4A62BC9F7544FBEF3DCA0324A3A26734586CF6B3B5BC275E4D8A47FC2EDDFF5
7ECA32CC9957C0E351F9925FB9634947D71D9FE040035C7FAF08EEC984F8CB7D
ADC83C73EF509BB057032B9EBAD0D7D0C88C25DAC771ABCC632515C3573299BC
B7BA911748392A5B39698CFBCABC3E6093D6C8ED6D0051CEBCC3DF774BC5F852
343EF53B98FBD4F1C6F9315B1B5E709F12C91089D7B8C51E761E0E1FBADA15B8
71D8EECCFDE75AB0591A80C5A550A9DFE084548908CD214680799A7905A86747
68043D5A4197CEF680E3720069519C827C5181CBC39AEFF43AFBDC3D96B486B3
C1DA447DF73CC51BE6C255513D05A182FDE753A3DF8419C461723E86781A70CF
3AA64C1A0CD0BCF555DD03C30BBE80D861C5BD6CE5338DA36F26F7F6FFAFABB4
3BB8339EF6D70AB1449C1B750800DD82C891A5300E9BA8D5624718C9BBB50EB9
E15054C066362C24711FD746338B831CE12E585C223B0BF75B9F55CAEBB20027
8C97533FFBBCDF1BA15DE762542AB46834B9B190F9D4A0B94E28DA61DA08C982
9547FB2217CCE3B95126F464BAEF0878A04C874112C191112947AA5E01BDFFB5
EB6CF214E754523705056A56F1051BBC56178B8640B9872AA72E4EAF708BAEA2
D37B3FF162F8D54977C63878DABB3EFBB2F8E956C89D42046B446F75AD247580
7C7D5AB983A6247CC6CEFB56949B190DC99DD5B8A2825F002BDBA9396089FCB0
1AA66F2C1CD886F0B46A7CEE3EC3D9D70505FF7994F7494DC7E5ABA43408C1D2
9A1EB97163DA1E4BA21A3E85343B3EA9D7B963212920E70AB32955C32A69C536
44AC55D13D47CF17CFA08B7B29994198FB57134BD4E4BB1D02A2656D386549F0
1AC3B4997E4AAC6DAC9A1CB10B3FD1962A5B7619055143712688C5C015CF4EDC
3F9C8BF7C85EF1253DA1A712FC560B02EF73DC9C0A17BACAD3914A8F4C21F8F8
59C9D9EDFC8EE47EC3F6ECC69DDE8A2ADEEE58C74C21CA3EA0517E7838F5EF62
A2D9FD2DA28367911C490AE07C99926A4E654D775346F8A33482C6538B0C37FC
9CFA8AAF9AB7634D3F5D473E0B3E92A487A070B9E0C848E41EFDCB5AA147454F
815D31E3B99B61733637E5A3A59F5F98B1A67A96820795DC43281EC98DAFBD11
75A306C38635E8F24F11D20E400C3AE667702A1D82CAAF9C821EE1318EE99B77
005EB1063730BC90B0E541A7071DE483758A64AFE4614575AF1C9B26DE54A992
652E368D1185AF66CB5ACC6C5F066CE32FF2A792081C8096C6792207B0E5364A
C05FC2AE4140E7C44F304C141BD34328D4A6DE8FE024B40796DCF1887D48E2B5
F1309849C8A87988BBE30FB4A13116AF5C202305F860312C1B648C1E668BFF07
44D8B22876FA9B72C70FCE385AE09C3CE756BB8A0105A4661E040805999C20B6
AF6FEF0C42AEFC452225B08378562755FDCEDA2A1BFD4C110FB4D456D86E997E
1B6FD17229D72DFDA627E1C3049BEEC71AEFFEC2111A73F417AF3FFE4C13C564
43AF3D17D38E0E86FE1E795F2411712482DA4724606D5E81B8BC3BE29588550A
CFDBCB0681956D1116DFB21248FE1DCE48FDD1381BD1D9B2BFF8830D9B95319F
FA582F33B2E1989342370E54BE5BB4C711700712655DC906F62940BCAB20EBFA
999F69A2CDC5B5A304C6C73238DDA1DE080987EDB1F8DC780A25E370BBBE1F16
E3D5FFADFF9DDEEC3C79E6D883C69CFCA5A90358D4FC511C1FC553997707A334
9B1D55CE2A05DAC05A9DA741EF3C34C53ECA55BF6D1CA9D8F09CBB6B07506D6C
8B86C9A24A6849B7774D11F8A39AE0C69B77C737832ACB3650ECB92B7CFA3B41
A9452C092484FA6FAA166D8395BE0DF1CBECF94495C946E4190020F657540B1A
28E31B6E6BA1A95D37EB1E87EAF7ED1A8EE3CEE7F99D66C68C586C7368DD884C
4BE9D810B990BF75CF0A2A02950F5D309E23AAC3E3B79A0E0F0BD9E35D698229
FD7F671F1CAC6C1A2C3ABEEEFE226367E0815146CC5A3FF7DC502754CC5FD616
5F1A8EA443A4E854A0099434BB7FEE1A9CF364FC630F0ABC31E924633E485F83
029DD1AE0EF6DC9EC104C42390D94371C3EF03009D3826E4DB38E97B589F66BE
F5B084C388C7A8DB767B00F3D4ED54C736672B9F3B225140E217CACA1C8F53B9
EEC1DD319DF9A7051DF65D78320A38BBD426768856E6159F41EA997A2183DD78
23FC10CC77242E3825D1E3E06F75ECDB4B16E7F0A2D74BD6F1CFBF570168F3A3
026DC150E1E459717C6B65A8FB738AFCAFBDF88630BF2D9B02BB04716DA3E34E
8A8B46E022EE75849C38D786613B69A81EFCEEC296F1313599441E95130BC01D
A4F6B447E24C8DDDE93C05E183FAC4223F85D80A75C98ED51BDC4DC25E5C4202
4CD6EC8A2D932F3390116FBBD9A71978D73A3902D83ABAC9068344F02083CD22
2A756D0F95229D44AD1053FFD91F1F2B67227053D2C32FF5697B125471678F94
ACBD3E60D6D8EDBA2526C5ED9CBC5255F7FA97CBD3793C14664AAB33C2822B58
B74D749818C4EF464D511F1E3987D345B86BFF790A8486C118D9BD32EA7ABF33
A2824346A656D37FB5205AA6AE79F9B04F1A1F2BE4122A0F540D6842A9A443AF
402399B9E13DB18CF77F441B3959A8FC9C78A7066DCFA4339FAF27C149B07D6A
955E5DC2E866BEA9A5BC61774EA660F7834AA62E038463945527F4033945AEA3
AE7BF9BFD9D8684B44DDDB0020C594578AC59B1B8AC65FF969A0C2567650D075
E67993B2CB7B0BA3EDF40B1120D04CB6FF56E4458204F3C04061DB452CE0533E
2079D4F47BF3D7B7B8A76A36ADE35EFEF3624DF842C57E7C03A7FE16027403B2
EA77F6617C78FA729A8738748A6F3A6131F873E7636862EAB4B4DDC2A78744AD
04CBD8D20ADF88B724832E5E9644DEC26DDE7810F3C32BA8A0A1E9D8374692E2
D4FEB737D1E38EB9A4A4F889D333199BF09E782CF19118C6F7977F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 94 /circumflex put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1D9B057F51ACE6BBADF67DC4C0A0F1AE1F8606EE140FB1B2D8843522362
8762E804EDDD847E3201FE5EE8F0F34C37204F4DE795965835323E85D72C6A00
6B418B96DF758C100BEE554C2C53BF9861DCBD735247E87F40C2D96DCB3F97DC
78AB912C76BB1ABD750EAB84C7E590434595E235D4EF39D5872B805C1CEA7EB3
368369B2A98529FB880AEF644E86FBE499DDA7E80AA55CFEA7C6A502ED7E13FB
7D049A71620785E5AD72BC0AE82A34E8B0235367EE050E970A3427942DBF20ED
6CA129B742049747F6A1129B659D6D185D7564168997033FEB96B9F11BA70EFE
91344967B451D0993BACFA317E43570B74B1193F270CE537242023DA14E0869B
DA1A295320574295ACF03E3E3C78D9D6518A4AD6BE618098465A83AC02B3BC30
6B8713E7F719A11991C9E1BF0CEEB87F341617EDF0EC79A0BB8B3037D15F349F
AD7A12A478AD24CAEA5B99CB90969B4754BA0404579B991130440DBE02AEC0C2
17F0A9BF159D451996881D80CFD085EBBDEEC1D2C8463EC9F6DC2BBEB318FA3A
EFDA338B7F4DAE61C70CDF7C8B806241AE46838C9DD4A7605CF8C8666240FA5A
EA6EBCC9D94FEEE235A58C6BD5DA5E062C08D31FE4946227F7B44E98AA4C8E78
EE29334AE927D1B561AE6CF9BB22B7997390E8A44A2E49E3F8FB374B3CC6D46A
D3CD0C7BA783186F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF1BE5F191BAEAEC7FE400C9980E103D8776EC196E741AFE11D249E0C277263
80FBD329524C55943E25631F113FBD8331C0044A7A2138637206A7941CF02590
577043EB0F205392C34E18B1ADA47CE63CB8F01365A044CE570FA20446102210
F03C0647CD0CC29E28B149F84C2F39256EE1457CDC3862C4082A95B44A61E8E1
B4ABAD32DA3E2FB8D849B1C5CEE60F205007464DF38712737776BB6BB3223941
95169B5BE578BA13DAE40B19AC184CB6F260A1EFE13CC8438ECB56EEBD30ACDD
8E24F52934
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /delta put
dup 59 /comma put
dup 84 /T put
dup 105 /i put
dup 109 /m put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F082D6A8181BAD5366E237991C4E9A27C736234134B508BD6FC9AB982D
BE0D1BC7AC4FCF9C96F317EECE77BC4C5108CEEC56B1B7BB07E0059B6595005C
C1A33400EB9F5258A283BB9B1169EECCCAF447523E23EA9E0630F625DB5ED05C
C1D13B9940EB7F215B6B3D4FC3BE7C03DEC0B4D8E57BC91B6927A4DAF8E3D557
D1C0BDDAFA833E1E37F998D7106294C8A760DEEDB93F9EFC82C0D02B43DFE02D
E6506E1F5063E8DAFC7422BF2E52FB7CCC52C1B558CBE8F07E042F949BDBB059
D11C63FC193E51C53D08E4D0A8DBD514A738F7EE00CBDF2C806FAD15316FAE08
2BD9C3BEA1E7044636F73F399E6B2114D6EC2C45B5822C8159BD9567C18C23F6
E1CF6BEE9226FE5BEC40C17F823D6502575ED601850BFD5E353D530566F155AD
4281A3E38B94F1095EB0B4606794E9C7F2B4B67DDE81F452E37AA547868AA8A2
ADCBD82731F9B89E56D4FBD9AF9A069D8EAD65F19D5C01D35CB181DD13B0BBD6
C2A98BF8A9E6D04678B4CB2C91F09B43466A4A5EF369B0C0EFBC04150127CE51
47C40A17EFF382CC9721F4BD7CCE4206DE43315C4B4CC870F1C89E4F2BA23217
5506666D7D1DB43AFE74E1AA23D6659ADA880C694C4B2F64183AE4C494B982FF
3A606E0B9A93F39A41EB4450076702F26AF663C25C3FF338D244AE836D78F6D4
EBFFB3B20452461E18AFDF16F37CECD21CBDC89EF1702DCAAADC2C903BA2A4A0
A7FCA2B924FC14003DFAC638272F2135868B36BEACC8AA7DDFAC4E62B5DF6991
BBCA8C0589FE5E6CF7CC6E117FC3B96D6638C0DAB9F06A0809E2B56993AF0253
3EC9127A3CCD49872F96B131491856CE7E8B4444F14C80FC65D1809AFC804562
DED879AF256CD63401F4BCC2A4572FBB742CF6038BF25591973AB519822F0F59
22A92EE722962F9B230093AC0582F9BBD8F4BC473391C040EC76E0B8612B603E
AD08BCE0F1EA238215B92CE7F2427851E2FB06B2B2876CAEE3E92A457DADE135
F3A08BCCD55FE7940B277F1623A4170FD93DD8299A61BDA0E8DA07244EE6FF34
2E28AF37F5E3A99509D0F34B548A67259EB53D0B54302C905F563C7698585BDF
399F75B994D80F8C8187A9589AB1A580BF576837A57C475286B8A4ADB3F5D4C7
1100A4B119DBF21CA2361B8DC8758044EEE1B6741DEFA5B81E66787A5746F76E
20BAB656E8DC85109A3D2BCBAA9560712A656AE6F6F6AAD386C3D21F729DFACA
BFA119B014CBEB8BB7096166BB14CB80319BC5FAF29DC3F78B1966A197872F05
8E61636DFD5FA4E5954208524B60BC79D58754C08C74E4D1B8B17D34C090BEAD
2A70B2BCBCCA6744F183241AE787223B5781D3EBCD552A0E56EDCAA2D4893BD0
484C1CD5FAACC0F0A753892B0FAC97A967BF81942BB8A1F76043C8AA81D9D6C3
8662AC405A4A6A7F2725D29F342F1DD563F8AE18FB3F30A15BAEBCE2632FA2E7
328ED259D9B138E160D796CB51D213584C4BD7C01F6332EA261B5C07639FAE74
9420641DBADC003B02CF0BE996C71E196C71BE7592D6E6FDE4ACE1ABEDFF927C
B30DCC0EB7933AE7F0E422AFF5EACABAE0B71C3B2B434D209C34AB29AAFE8040
48228F09F3DCCFE5995BF7B1B05E8B331641840913C89FC67DD69749F8DDCB29
81DFE79A7B9E43022D812B1784D55940ACF60C108A50D2880EED3436049FB4E4
87AF867DE0722FD729872CA4B2FDFCB2F088363FD606847BF3DADE817F03F084
92B86A983355D467FED0A921AFD20B7CA6866D567B4F9CB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F20DF0D776F1361D25A06237063DD6B88E16DF
7BF2D7AA555ECE15F21A2610055B5D7714B14542D0D2BE8077C420241454891D
5C6CC07A211718D85CB454F55A192D587A28DAA956F76646108567A44A75ECC7
5BDBB450F0EEE952255E968135712ACC04A378FB0CADA0B2560E56DFDDE98997
1D80E05ED7F66AD67B93CFE86BE0320921ED220FE6729D4A5BC75B89CFEEA212
DF5A2750AFA9F064B3C6CD5CE44DB65FF8958D8F8A0CF1D71126E0108EFEA11C
1B27A33BD47E2E74886C5D7F7A9773FCA0211902ED023FA7FD022CA7C9CD80CA
B1325AAEA5EB91FC7EEA933A83799D7BC5D3E91C4422B9D9DD901175FD8462BE
7C4948838E441CC82E45B768E68C00B45679EF197C3A50F25E9D4E9BB1AF20D0
F3903F95DDE95625F7491ED6C11B08ED98E3B66017A705A6A4F2E13912DDAD3E
702C29B7299CB6F73C7CA160E30958C657D65F3C192337254625A3585ACC4A78
994F7F9AA0AFE6BEE59C164DCA74007E81C02760B44B8CFA689455B1E295C161
FEE86727686B6FE1921975CD2C0A290BC2EB4D5A9A74D471B6624DE7962BD15B
5D42CE02D45566197FC7F9FFC6188A6C4C5D99134CFE4DBAAA310306CB5E11A1
DF57517E63D232BCA2D20C3143823F84CA32CF3A0E2D1595AEB29A1999F4E2D8
F995B2F68E3E41DDA1A0B48278979810FD6CF3C8ED42E61348808C9E8122D581
B01D5C5F6EDFEF080A41AC48E57218C2B4F56754B420CE8B85F3AF52ED06AC15
07CA1EDC0C17781410756A94490CEB07D0485A6A9C3A15F711CFCB3979F269DD
CAD2CF4DB54454E5B631B38D1CD27289EC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 72 /H put
dup 88 /X put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158168EE7932A2C9B7D7F820F327E4E36BF77D9D52F6CB8D69F1DA4C1DD1B6
646102107E5A6A7A6376AF4D646B3FCEE2C56EA5C8F822C5119642D7007672A5
DAF6F2D7D9F0C07E34D5594796765CBD5ECA4B65710166ADE5F16BE5F1C87748
1778614D372B043761D928D66FE1E2E484B8F621CA13423041FEE0B2198B6448
7D69075828AD9B1E2C58230E5667C46D042163DDA225A921BD4F234CA2BACB5F
16EA9E34A9EA03A649F1EBD885B9814AF10D2159F6401FC6F5DEEE483B14BAFA
194C2769572A18D280A3FEE9583055834C14C2FCB47A991B019395F42BA7C435
39C3210E73B16667684DB787592274EB45936641AD9DEC522B18C68CC31C56E8
9495652215BCBF3367EECFBF7ACBA8C161F40E8B3DF8A8D9347CEDE84CFE5688
BC2923F1B2F14CEC1C2AF602D0D085DD8CA5C75D6E56F3A099446503CE08DDA0
536DF9991B16C62835F735A932D2990C69695992BE315359B1EB2FD868EDB141
F1D1A3E1832700A3C800BA11358449DC1DF2905D50E8E6493165A31055E6CAD8
3ADB1B088368373C0A8761EAFB3307B91148BA8FF356454821D6F9359E24CBEB
CF8D60941A9229897F235E4A95DFFEC0BC8948CE61979B86F75658E301C0550C
99C6E972C48CD385420BAB8E49C82DBD82A03727A00E8FC468A283D25D468936
57F0483B9E04DDFB42198AA7009BB7629184F48C7D4CD09BFEC6D1189E29E3D4
46CF4AD40DEA9398F805832A0A4428819B32F38DFC31F70455BBFF8E603497E5
6EF5C20CF6BAFF74E10A94CDF558554DE697BCF27478CFA416B0B1D16A70E6D5
45EC8D78F7FE668EDD426C49248D6270AF2AD2110E8A59179B2A4B5F14735D2C
AAF7B60BA141D22321A25C86667A3230C02221035458A9D58AE0E38C1B1AEA89
09061FF5AEF6CFB016B65A3FFA9A46942BA7009A094ACF0FCA9B572949F5F0A1
98F5515A582E994A288A264DB31EBDA973CDD6822BF86795E00DD212490C028E
F4D55910B927ADCB15CD7D2C1F0CE8B363F2ACB7C98E7CC2BAFDECCE930097C6
BF63111327FFCDC44D6185DD255D4EC7246846EAEE5F658A91365CC6AC6C55A4
1322A1CF2EEE647BF8DF38F3B4EB9F3E93221E90B57461F24D77EDA82F77FE3B
375FD2F1D25A84CC6DE6359EF4CC2B737C0219CCBA5F11893B5F5ABBBECD3BE3
2A7EE14D3C5738A9926FDF54DD07557B9DFE6E9D5C42DBCA999ED5DDDD384F1F
ED43C6AB8201EE69ADF0083AB39BB29DBCD4C6BEED8FB54FD6956D6BCB49C728
17293E2A79B513FC7841CCF321EA5F8279D8F726C4F62587200E661807ECEF10
80966769DBEF604FE669F246F0A3EDA6435A194F6BD31A1EB4F4F622E879C8EE
EF501548EBDFCDEB58F8E2FEAB3E76545A8998FF2CAEEBB0C34283A13A084D1E
0DC2302BCEAC5CFAEDD90BBD8A88E0A7015C5C427FA77839BB56E457F1E1A9E6
E398231E7C64E531906C5AA950F1D1F480EBFEA08E5F056A5F99749FDF088C98
E61D58ADAED6718A76BA080B22EE4B1F8BE1C67AF9BDF59B9F15E45017236188
334B5BF6E6A7B9BE3DC44F38665C27D526DA0D1721BB5C217FEA3023E7D7E855
2B198EE3C043FBC615E9DBEF9A4F4DFF7B02D7D9E99329DCD9AFEF8E4351DA07
A2316ABA50A919A234BA6426A0D5195CF13F227334993E1C842E768F3FD3978A
91025FA29C72068BFF547EA2E1BA85EBB0F7B6593F161DEC195296EB517F3C49
4AB228FC8496CBFE0B7BBD0A8C4A26A09BE6BB000BB7358978992D521CB33169
F1EF3C6A5AB836DC76146D45CA220518CFEE7971A7FC6852D462F17D0B820B5A
6DD7B62200B3713335CD890D457EC399FCF2B4B8D400EC777DBA5799615AF597
B87447BE8CF6E358E2B148CE1639E834E6C0438C67C9B9F801982458F4F746C5
B9DDC294409CC099151836F250C81CE8FBCE799A65FE62862207F811FE920238
9EF7FAFDDE7CCDEF8C22FA599DF98783037FEB59F911E06ADD0986397647C485
5C94FCC02CC2B2B6279D3563B3ECD325B0D1443872FE275F1174E6E8F0AD4F6C
9415DFF9BEB87621F4593A576BF3A2CC283A174CE14E512636DB08D2A44FB0EF
EE8F2966FCC9E1EB21E36EF935FB67029B316804CF2F5FC6E70299109828B93B
9C416C659AFA8A5F76CD6B812F19346CD381089823B2620ED2F6233CC6DCBF86
90A1F3EC5B3B2D02D30166D5D96C68C13CF150DFBC701DA2406B3DE0D0AF3228
2AFE2E68DCC0DC61BD2976D1CE134B38583E1B4AF0C7FAAD5BC95C76848BD5A8
D5E396091A2FE11D963E2E7349E5572615D28413C53E72C0C201CE06FB99B484
513C29DB59409A8073C9F17E8BBF54F917ACAD46E43130204E4E55DD3542CEA4
94CCDE4B67248CB4427A25CE85F6D8D1371476A7BB290AAADB2DF40227EA126A
D8DE09ABB01EA67F2579B1F7E6E98D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CharterBT-Roman
%!PS-AdobeFont-1.0
%%CreationDate: Fri Nov 2 19:00:13 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Normal) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 61 def
end readonly def
/FontName /CharterBT-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-161 -236 1193 963} readonly def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0ED986197F6B0529
45CF2090B780A57004AF4BD3FA2F5CCCEDB90A3CC06EB295C5E09E3A63BBD650
8D1CBF80F7CF38C95540896C7A3D301BF53DADCEDF4544FDCD52CB35FFDFF986
CCF2284A09F69C67006AC7FAAFC626BB2B4F177B7927638476BDE81C92082A30
5782B405335048291A27F9E7564A1A32ED4820E20EEBD649CF9445FB4AFE77AF
FFF1E30AFCAA76CBE1E9E1D347ECD26157FACC5814014AF522D2DD6A0EAC8A99
489464E48740185286F9FECAE74869679FD2432A04E2A13652D99845DE08AAC0
88E24B10664925F9349B4F2B110FD6C35C0A12D90F4E9EEF53D5F4F56149995C
4EB35DAE4FF2839382D05A26DC703935C4EC80D0500C60752113D0701777B14A
AA05AF6428926F8A8E990317A0B8FB0CEAF8F5AF8AE7CBA11EBDC6F7C13FED0B
558A27CBCDE4FB7AB119532DD43C9C2C9C5CFE8F648A67E9E289A69C9DFDDD6C
1FACC26DAB3697A170AE59F5D4EA3141667901E70307B00C067B81CE96FB3A4D
C9021D8814424EE6A26D04BF42D16363ADD70D9B119FEE817042865FBE7094F8
4CD918C631D78A2B0FF5C2D014582C29A11E838017E95F881BA04345C99FA410
82AF78A21844CB2A7D8C90AFE67E1848833EBBDE47E23A07B64835A44D973FCB
2BC1154B87DA52E0833B754AAA8F11A311F8D5F66553237346756F92B0373A12
29C67D5BB8546FC95E7893BF30B8233B62CA814955F7F5D1AE192C787A70BC73
7D0699BC2902CF8B94E3C88E4DD0317EB1EA73069ECBF2A4583CA7DD9842E01A
A4D3FD73403987B58B42A5A3217EE0F7C6E789AD5DD008299AB1AB624DBE1506
C9C211226EB3AC1D118AA458EAD2F07C2FC32BF80B7A0B17140FDD09F27C6DD4
F4D92F7DA480F2F719812D43D7807770C9071994EF4FA429B1165A371E1B4F88
68FE142A1047B5E8CEB7F54E8E4D20C467232B80D39E218CFEB0DE840261F7A8
AA319FF9987350C3D9BCA7F58494D4F52A44CCACA2415F5A6277D5EEDE8D2387
C33D002B9869CBC177BD7DB911656C161E59E3309410F31FFBF5C98320882177
D42806D5DC56CAFD7B88051734C2B9C4008D2F2873D254633BBD96D7A3DC9FAD
FEF45E209717A1578BE0C1E357EB3BE0B1AB0D2A4DDD73C0C61C521E4F17251C
3C2E84229A675FC158CD006CD74F16979B4CAD86AA297EE0420E679515088D1D
03C05564AF7B04E87777C8B8DE2B295549D362A880B305F433DBBA4B2ECECBBD
0488994EA5FEA2BAAD29C4EEE24F96DF41CF0757DD30639113DA11A98FB9236D
E89E9ADC1D8206EB0432F5F94B47510DBF669D367C6FF13C336537B67F0355D4
869713D00B23FD1B87C3356C5A1D6601F2733DC0FD27491A90DC54171657C93C
732003CA91750928F17155DAD9F91CDB9F4BE0BF2F9D3143EDD9E0554B0E643A
15745E40C5E4004983F858ADECC1D5345ED9087E23B1A9B30B56156903B461ED
02E4BB76AFDF850F578EE07389FD2ED31107EEE18C50548BE796E7D0B769A86D
F2580D5E50634A4BFF80E49D942A18FB77401881B519E2BE45505970D775826E
89CFA7B611B5BF25249CCC64ADDCC52575DE17941A89D3EAE88FA6979F45A7B7
A0EFF345DDB0232155F8C3D732C3F5C3AFC55B8B96B81F1C356399B49BEFA720
C06EFD21EAD75CFD40E053F30173E27FB776F0D150A44BFF3246313251D53A48
74BAA097B28DFC7828AFB9CE9598DABB64BD66F73A25BCBC9036D12468F7472A
52487FA05BCE69A152C00254DFF5BBC6A27EB826367A4FE93DCB18B1BE394DF2
268515A20F030BCE10C0C0B76E073EA9F3066D6C6FB4D572BE512D4DA0F63E27
2829C4A1436D1DB3C035238BBF82B8C74CD78D03BB7BAF42F0464CD9EE6E88F4
3E2C8F070D538DD4A1D16EE7AC2485E88993F6B35948A09B9DF28F1D6B02F8ED
42F7EBBC90FB2039F35A39AE540242E87C8438228D04C69A1C3DDFB79D13F004
D1D2BD17DF3D305C5E89DDD2F9A94A76A085110A470C355EDA133C7B7E6DC4D0
E0613A3413CCA6BD2CB56136D6430EF913A15D9F03CFAED33565C7E5627E0D7C
0FAC8BC8BA144825766BC44E3C3DABB8B5F8FD8A79C18EF0544C47B3E7190736
5E672E4A33B18B2A8E86B9FE3B79344C186CDB90B0366EB2CF13F0603A4EAEB2
B9041121406AFA85E797AAF4430440B9E15CDC8209BA6611979832A9A3126899
6A80438FFB1C6FD9BDE9DF0319D440AB84C8F2F760C45C0B3A783D202258721D
50FC366C3605349F1BB922F1FC0A05A3277EFC270E096FD8BC8568D2BC5D0CC3
DC98785FFA127B8D49EA1FEB94A878933726ECC3302185E4751B74A447262200
2C3D9721583729AD18DE7BE9236CEBE9305608FB3D0ACFF8D9A7FDEC06092E1D
8F21295A28D90C1825A95E97D0A3F0CBC9EDB0949C21BEDB140FC9871622D402
1CC2B1488741E4369C502D8A63A42632427A9126A9C586B5792FFE4B43314A58
021F368708CA2A1D196848E00D017F1AFAC1155DB0A13BCCE2C44B2C415BEA7B
5EAC6105B8962AFD079B8CCEA9FD3367809F569FA1C4C1E57CA32C8DF3043911
7C5D6362E7941BC6D9CF42FAF452A810485DED2650ABE46771E90D60AF90C8F0
E40DC3429AAEE0A11AE6828E0195154B1E54EB1696634BD74CDB773D7DD10879
FD8B9AE73DA2EBF73B70481C50894B3D6961D460C9AAC283971BD5ECE7D8EA37
9C60B1B84DB9BCF64D51ED183A1B00257245246A61081A89256D0C1A26D67B70
1BB32D7C64C867CA2359B08F71FAE33BF24CD77631FBDDFA965D15188ACE2B30
11799E081E2E61F192C75821368063952FBA3B7B6FACC6A6C1B13D894D47D6EE
4EF47A38B353A1EAD0F43283BCD5C335F9B1344531A27BF4EEA1ECA1A650A13B
C5A697924E71700762EA66E226379B2BECB9CBB4AEEE3B98AB415E40D76F39FF
B1BB52C5BF6927D013CF1D951FC79A502A4EA38C70B3BDA8C843B331D8F27AE6
98840C2CCFFFD54B90D850C476876D9221CEC364055B213262540D258193E41C
0CD8C90673DA196DBBC2D00F6B5148E9BCE2D51F2FD2AED6503CCD45CC25F80D
42863F9CAFFB5F18A56C0A4A021AE247CE9C4243904549858AAD1D85482B2F18
D5B8F984E174CEEBDC3DF51F653AAAA586F0442182A0921FB42A4ECC231C0487
1CF1D60613B8151D9BA8F7A701E1A1E916647BB0F21670A6E0C0B036AA7924A5
2D285870564C30BBA79A7E97931B0C56DC6A072706330570D687D709BA70E70E
AE078BA0811111763AA895506EDD31F125CAE52817C38720DAB105073CDE4315
CDA4783CA330FF8EB3DD6FCB9A90EA298CDE2CA45227CBA95D01077828336FA8
DB4D0F46BEE946B2E6C96C8CA5B91824D935EAD0F27DB7F545D93A51BD85F26F
19ED7432E506BA0F7CD996E8485F24AA9542D5A2E35C5BDFE27CDC418C990C81
F56BA325066685DA732E68C9B178ABCCBB83188D680E435B6CB1CD75FD3D866D
E6339349BAACC5292CADC92B3616CEF8BA80547619012B822E655D849A34EF79
8E7D2AB602D3858803864FD2B359B8A35D92F33F1B685044467019470184DDDC
1EA9AE917FFCC9A51937FA1C74977EAD5A523DD8BD817542D78026F577437E17
C032BEE881C7C54411BEA1185C8DDE321B1D152DF36FDE4D8AAC47412E9AA5E7
639F5B14FBE412268D563408464CB7B8B817580C364CFEA44670DFA2BD6A74A0
DD96588E4D08EACFF86212D4EC6DEFF0A083C6564D39F9A96D482343D00F5691
1C52CFE65DE4AC290A12F526494870E1A307246A7DC74F481C2E6F8D693B4A90
F7D57E40767A558401FD24D7817897529ACEDDA5268CED63036596F8144176A2
DBBD11D9B339028CFA1B7D6B44B72EBCCEA602258110CCA74171D3208FA2BCB2
F588ADCF00E9FEF02DE9C6B61496A34E3B547EDB2806235D9D92031DFFDFE84E
240FEE1BEC90886834AAB075BC7F99027232F3B24CAE7D920B38794BBEE523A6
4AE9444C9B3BACBC1555F22E4F1009715A29E529D09FE6BC4E89DCD27226866E
F41FF4FB5979EF36D71321E0138052FA8539E243A5347C11745A49C566EB9BC0
43DED7FA271B5345C44ACB8B304B0C40D761CBBF26EFB725BBE6FA515A902D6F
7E008ADF5124F482EE243EAEE9734F9C51ABD883186A702405B663A8442BDA00
9324672B34E557D6F5CC0ED15B0A8C6028EE58C9C9BE5793E122B3ACFA85E6D5
E02E07486E91F8D615F10D14217ED750E5AE398A240121EBD394530EE14AB927
AB16933A043B5A001645CC867C978D9A7BE19A5319184EC70444E5894B5A09B1
26BBB85333722207713BF46CE70D146C64C96E681CC0F1F3F425098B4CAEF382
E85E32B38C1B6DE75BDB140D4B32A492410DAFE6CD570F97B79FDDA74D1BAB44
C672B566636D325E79F2B3CAB06AE63215E74A377BF30F585F064AB148F654DF
AC15664CE13529BC0310E8DFC0AA090E9550C701B762134C3C08CA3AF8837F39
0A0384C13AA3B532CE2993DD2C3848D655AAE8601E5157C494E5D409DACF6234
2808A5B355BFF0DA2E2AD1967EA896C09692E90558EB3A357F04640B5E88B446
57BE1B7BFB134AAB022334256EEFA022443CD489A9D76FA715E12106F63C965A
D5B55737096450E440E8EE02A6E5FE2C4129A5E4052ED21E50BBC80F93F97F23
812E98A94F45A8A68164F9F5A61B558D019F2BED171CCD22C0030E2C6E42A266
A05996C38D7B2B1755A18FCA396B61A5580BF746421AA5C09FE173C542754690
AD1AC793BD28FCA5B844C95C2F8CFCBFAB202D994F595CCD064AABBF7097EF73
BFFD5E41E8AB6BF125199131F2BCE1368169F25BADC20659B5FFC705055A705C
C4D79163209A2125E81D2CBB69B35223670404438FF0E862A1C923513D45F531
4F6F67A7CD6B4284F34282E28BF2CB3568294D5C3DD4AA24CF534A8CF84D7E92
4C9E2B892ADA07278DA5408FECE67FC8C79B308293911DE9BBEA8111C4606332
64C68D1E5069F5526D4E35D9A7E65F28EAEB55B3A6B2809010BAA0109C368CC0
19712A2CBB458EDD343FC6155AAF3F25A38D7500403DADC27A49AD0DAE54862D
EE42682A289E10273831F622A6C37781D476CC04960E60567C3DB221EAB1C95F
3FFAEF50DB623DE787F782E2090422939A47A83CB2AFBE309743418AE143E084
E7F634234BB737072F5FD9204850BAEFEAECA6901F2FBA1B05C4D52C9AE2101D
FBA3B572ADFF9059D3EA7EC8C450DD7A2668C2888CD65B6BBFE141213170D004
B14D284A42F56047120210F0B8979129E5282393EDC9492C1FD426919AF58208
2B46857CD661C6794725B1C4792C6F383FBAAAD7170EBC2363039AF28CA55EC5
8040116E957AB463666E080B07FD3A05D9A6DEB8E72AA5AB8B75687B519F2297
14E8F03F2E289E7669A3A58EA46CEF33E61D7491E0D111D9EAC03393E741A165
FB6586C310B726ECF8739B887DECB82FE14E6EEF4BC9D814DD0617BB8CE566BD
308CD5B94A11C3AA968BA1323A96126531C25A10AE79640C538C1B0431A7F4D6
4EA65960B69EA14FE9F686DA25956127487B3752AA8680F234AC514A07C1A09A
B61518B3A60F8CEF53091D83F35075E6022B977A8472483334F8FE53E4EA0500
A1E37664F5A861237782E3FD419279E43E98FE2B1013C303F58C7F1F7F377BE4
8903C54B3587AC8BF628E42726CEB32B1C3A61C16068D8B276B8C28C23A19123
9D94317A6D9BFF43E827D17E1D467A5849ACD9C466E8433ACFD235657E6CFCBC
313209EED7A38955FBC695142E4CF33E758109A9DD29212E77728B3326C2C420
EA28A655F8ADBAF634A3B1C39D7B7239734DBE12D3AB8647B7DFAE756C8CECD2
B63DAC7264F59626A73D7E50DFAFD64147A2A2C43A1F09158C340DF71184DFF4
8DAA04AF4C6B62C57230C1C2D95EF6185E787030AE75822A91511CD70EB9DAB0
EA8F405D6BAB9535BCE484832E14B4FCA7DAE4107D00387F2F1A9139752DB259
D9F6B95D33DB37424428031993B5B8386409E9BA32B5C3255FD92C081AD84F81
B6348134B03E84D62A9CDBA2F3434B1F464251B53DDDC23F2201BF7A9B91DF7A
0DC2BA794D9697419EC75693C7809FA22A0D88FD6CEE743BDAC6B15099C8A371
BA25E3471F008449615CDBBEB3A4A2959D02E0B311F9C6DF517AA2722B3458AC
2232EE6AA687189CEA1EE6DF4B4D6342B74401D90CECC4DDB88118281D5FE90A
0016D1C60A354D93546A3E563960BFAC5D30A630A609B298A0A024FCB737242F
C0F68F802E0322FBAC787686917F030CB9B346B612E760CDFA60DE9BBF7EACF3
4F5882C1265F91C9672608D5718D33AE24B8F51D69E35AA9F2B805F448185460
CFA0715BF80111123D07F4D1E42FA06D5FC6B3E9FCFEAACDE2A68DF0BF4A28C1
EB17E74CBB60DC67A646197F602A020BA0084305F63C153D8AD86CA3AE588944
BC04F24C90AB65F23A74D4DD9AC800FCE9D75C48DD0004F7E201350A33E361AF
E2BCDC9421CAFF453BD6D6F5B1A9A0CA72D2960169F14CF8E9A95C89D117BE69
C384AB17C1A7351FDB24F1E1B15679BFA99A8D07F4E6A687781CA1664F57650A
2D0E11B9E2DC3B6588F80749E8A048A1AEA30DA8BEF2588B4B8377F6F80D4C22
28484B44DB23B84EC05813A6A554C496EB1526B29AB4DEA86BDC84ABC8F79CDE
081128E654498028EA69820FF320E22FDA163654B7DBA4EACD09C8CF6CE6E6EB
788C6FB092D34EBD7B42F9BED8BAE41F987685CEE2BBB5CE96E9BA4749710A63
312015B4952B00BB72487C48350577E359398F2D2172C5BABE5236ED01D8E59E
CEEBCB4C11DB3BDBD0BD98010D3FE05AFD3F976CF1CB252172EBF79C6B7F460E
A23FCBD3D4948EE94F3803D47CAD66113E9A7A3D583B599B14098D41825B19C6
3EC0A6AA1EBD5D221536C68C64766B86407502CDF96CD8F5F49D243216B714C9
070C81C3D4206848F047C8501A3890593738D8EC7B87BEC00925B3777411CC0E
DE7F361A734299D29D0ADFB3457287C7EAC163A9E891BBFDCBCC6AC9C9B3BA91
6EAEEB4C95ED4C53275AF8B718A4B31B29DCA85DBECEC203BCD0885513A07E70
0D43C14DADE29052463911228295B76C1B659FCFAA51BBD5294B643A36A447F5
7E9F43F1893A987DF0D4B1CCDCE81E62A5927512140F5A1FAD61063A2C139FF8
A2BB363B90931214021932080DE95365DCB9DC9412D202607A5891E09E146DEA
6EC5FBBB6BDA44A7513363B829BB9006C88CBFEE7C64ED56B858761E5F80E1D3
4675FF9A1FD93B7456F80B333420DFD835413DBDC524DCAAC7247780C3654F3C
4049FE094A5F949BE0BEA94F688252065A8F1DC01E68C0E16BE211D205F2DD72
65445B813564777C4916CA130F17185E4672E442C543C1DCEA0E4B26653F3CBE
BD253455018DDDEB0F7EBC356F85134C504912E1DF953E18E8C8355D6693DF59
DC9B1AE5FE4E63F1BE1D63FD3E991DB517BB39702F57A0E7B290025C06ED2047
153379A8ACC118448BC6F867A0A6B1ED96F2F43AA3B9AF63A2DDD3A44E6C1E6E
BCB42B43AFFD3A00BC3D8258B56322890D786698928404163ED36491F26D95CC
62E3C1D5B4A87AB3F85680292E5A05F0347C3606A752F86D5A8B2FFEBEC8F2B6
1C1ED8FEA146754F7A384FC1EC7D7DBB22AA60AD3772159ACAF8967883634645
EEDEDA42AB00D0B9C4685C1474012CCEF159DDB4A16140C85D55AF2AA50C9BB9
983215E59785C28EFAA896207FFB130F50E8922F80E756F2D702DE6919D5BF6E
2C3B4AE04F0BFB38336DEA4E100EA38D37DDDA9649EF7521D2F58EE4894291C7
5DD61AAD8305F0F3BA54FEF7FD67F32686209F1234B69484C237E2D1E2C6216F
CF49DF445C40F56E04D9B2CCA344FCA6DC155AC5F7D9DCA52F5EE2BC41C418BE
26E7AF8C0F114897EE2FFE02B6E517DC5DECF6832A4659B60CE2F2BDA779A37E
22E0E82BC6800B4CA42EE8ECB4D53DCC03B510CBD2D376519707417A6069AD57
F7738D31A864F5146EB6D0402E35C8E81DCCA2818D6019FC1622A804C1037ED1
24139AD3F2C746E7355B8D8EEB7C00FEB00DE80898EAF5066F1C709210AF3B66
76DFDF1A4DDBA0B430D6D811134522DE6A9F7ECBAA75E7051663B0F5B2AE879E
7BED0E107ED44811C6686EF4CE4C29D8A9C3C6BCF593BB830E955F0F6541AA7D
50F9106F2BA1E174E269C40120B9967CD02CF6AC1ACE2D6E63C832C01354B866
B0F0A09231352599DE69B9C2D18E061AA09E06F2B90F91C15750500D43364C2B
89E30AAB7CAE12CEE65F2E43B0EA32B4186F4E40DBF1C74A8BDAD3C517035EBE
97F26B0B58973E89780C02228A225FCC39761C2AD6E699337683109DB201F51D
E0923D0D96041E31146EE821E796BF83559E432E3939C506EF80287EA5F3D1B1
B84960F0FB847A98351F458F0EC75EABB905AEEA1FB37AA157C025E1B6F5F8A4
8A9C98B34D79C83DB1A961300CEF10A5E753492BDDD5735354EC375FAC5F9BD1
CB5BB79186C655C855126A597EFF0BD9C0FC7DE9975FE2FC242D88C7C6E030FD
FA52A4A0DD1FA6E48876E01B560BF6D28E08AE340C8365AF4D8298B32CDAFA0C
2270679A62DD34BCDB7FD9D6CDE5D05BC981231E413DDEC8546A8110BEEC97AB
3161CEF742D92E41579D745D5674307E843AEF515C103CEEBE1F87E3C1BF3A74
4667964722B69DF4F9062B2A749F34331B97289B3B76B029D61027ACEEEF8DC0
18E388F3C9F683E13E2E02E959A8E614E2FDA7878CE9C3969A9EDA4EB182BC80
EC26012417DC2A4DC0306AB1139E95394CE0B9946E568004268AE4206B172167
56AC75CB0A6B8FF456F7CB21E28A2BA4A07649674334C47FBC1D08EE005D2066
88D0DC863AE9D65171C94E992FEE58E4AD79220B8735BBAF525453716CDDE73E
441BAC714E8769851BAEC6A7BDA549040DE0987321DEC56AF7FA53F0FBB4B98C
DD23C4D7A4185702482BA7072787716EE9EB56DF1A3287C67961C6780E971D39
52648BE3ACB42BCC1F7EAC20DD7B78BD4A40933B808F50AA358CC925D2CC7FA2
6EF0C059090FB91A5502792EDC4000F61B505064650A7F1E88FA32F2D5B1F79D
BE83B6B7836E42E2100B1F8451FAE2916F57084BD3D9B4215F705F8B48DD4957
7EF2E015E8D9C0D62DF17610DD69594E8206354723F4B3A4AF8331D82E71133E
C8B444B7E7DC4821810D522572C91DD1FC8D517C3A5B86E2A64DED62353B9A1D
56DABD05371F94594D1454CE692D97B96A37B63F8948E5A8CB3A456814AB3ED7
96B8189A3F739C52965B3FBC8BC33BB6EA5499132223FD13F84E90F9287E10FE
60D71DAA0ED01543F0CBE9354B6618075F058EDC98EA7FD3DC8AF4E18E43FB70
3A7EF38F9CEC2C904DD7F60BFB8A12DAB2946D71C0AE4C07FE25F577F5528CB3
6333C946980B89A5CDE531A04598C2E9FA7AE0D80AD24605AA63A93A09AE97C6
3F4B86A143828E4609FB1B5F3C82BDB9B2CBBC5AC6C0E4C53ADF7B04BFD02532
5A2DEC8E697513A4357DA1F0C79D0B3B849006401AB64F51DB040354B8675D83
F5D851D392340ACD2DE4CDC237EC506BDFC1B4707725C13B839D082986275483
553D8A07FE60B2C850E6575F8B50606E83AD3B691B46FD11A38BB1168B89E9F8
5BD1D47602C83BB69AE57B666EFC9453DCB0167B197E9F5FBCE97986DB542475
0CEA579D039411E1E8F817ADEC548F52EBFC8B4BB80CACF9BC97C216BF6A36F4
664A3DE9436CB7A3FCCFF9214E333A6A8875E95D70E4A43CB3A743393BDCD349
EA093EDF3861D825B541D8503CE2D322A576991E310F7D2A2BC5369C5D025EBF
F341CDBF4A20255ABF5B9A16158FFFE1DCAE9DBE768420D36B3C8037C63F8B02
3CEFDA1360E320A623A7285628EFD902B409E98ADBE47F6AB61D10495E7F2698
9BF6328610AED7AD486CEDE3BF82D50C05BE7D45E1D5849AE5DFC605079299E6
8D61EEB26E5F39A1D90AD9AE4364C94E038A1D81CC10BA0763945B8E2AEE7C54
377780B0FDBE166EDB1F84518A86C999DC5BCBE9BE36A4736C480A0CCC4A2052
2124F8B7DEACA9C6B26C16AA64572C4BDE3A47F79E35A482870E71D14CF0881B
BD1006BC9B62A97FEB95D587116338A3798E2548E052135618EA3ED8F0E828F6
F4B08C859857BCC3225E734744A9B17CE6D2EE62106CAECCB1CD79B505D8299B
2AAA7A05FCEF748AD1353713CC8A7E921416E9210E57E5A1DA3C05AF07ED3EBA
0348F6096E7794AFD07F7B85F1015F825C3D7BFD2989718F28F0511808E50151
C166892AA24153233F0702F0E507E10735700831C01B3AD728D620C143DEDBC0
54B6BBFAD0FE774680E7C30CAA1D3A89FEB2960A28FB47181B1081A64276D900
EE843BD07D22098A328C39699B72081D1B31EE9E08C0A5CB89BE31462119C3AF
991B3613B485BA0B0969A1EB049665F0C8E85494B45EDA06B18E2802A3C38118
6F39ABF5F90E5282684FE5DDEA3F3C8E642F2B54AB4521EAB27EB0D0420507ED
AE822C094868AB84AB1A661AB2E134BF5EBB1E9C3C1072C81AE61171C5FA50EF
20ECB3E3080FC6F8DF07B3FD00F714175033CD673448C6C6EDFADBD8248221B5
D57C11305FF53A6453BEE4171136EE5B7A1C6F8CC52F9267B797500C6C6AF3F1
381F095C03F9187326A3F234CD561AA611DA775F5279BBEE58F8046241C94302
FBF237C39454C65EEC4C95B876D0D7EA3975C7C9FBCDE4B5A7A19D56A47A1D4F
89C3686AA1450F0347A97FBE52930A1D1D0E963CE1ED3A79FA5C4F24C0AAF32B
A00DCE31316E0B90B65DBD0F162072D42FB03F05AB6F7A67DBF7993949DD3BF9
F14F61C0D2C71112C2A992E32C1F5A96A9D2CC2CE581E82E6AA8B93C2CEE2DC1
118746EEA119D9A08C59ADAE5476343B93DDE4B325BA32CFC5D5228B86C23DF9
5F6CEA4642F240BEA160846A6667FAFA4081A52E5A530C0BC95DCF7FCD8E02E1
8FE3DCF62463ADA079F8944BE2825E67EF969D68204D34D67FC925656A3FF51D
2DC26313FA7D4D25399BF47E2EA3C3B1E3636AE76448D1CD1C28DA60ED9488E2
70BAB33AEC2A3A25B2FD4B0240E2E1FEE96A657B0C7399B006B834045A1E8EAE
967B6738797AFCD70FE6897FF71DFE9D257C72FD37163201BA0E765C802A8B57
36949CB47092F834835002140EA777935A13A74BF536945FA9A3AAF084CA7480
9A2AE36708430F5FC8F6C40E40D52AE03B6290EA0AD0CDB8D7F09D7B0B02C4DD
093B718F41E71C66E85F0752FBD4F15CA338023AC46C84EA48E0E66FA933EECD
E17D21D98A7987EB43746742FC0D155C53382D4E397D733F2250A8B07F32C653
935B17754E2D0DB8AFD6B95D1B72B8B21484989ED72B0CD6A1747CCBAB8A066A
BF646D7AF82AC44115372B24951696913D54AB3F27F8B63E5FCAA5589B16383F
F019BC62D354EEEAA480F411A989359BC2D4AD8C286AE8F24B4C1AE781BDD875
36EA6FC4B4786EFDCFA603F1A5E883B3F156C524E15C7E5DD01D84F90E309031
EA0DC3EA8374198FE2BCAFD3BCC55449ED45CA1FC919DB6157A5E61C20AD5FB3
5EC12E83D69691ECF7DB3731D586B68CA97B4424C9A8689014F0CCFB11F8AB55
C3B64E9A9E3A9921E4FD09D99D32575F8F5AF589D7E094DA3786557D4641B2D7
83A465067167D740EAF1D60DA343327C314B681131808C68CFCBCBB2443C0543
4F7F376D98A99FE11BCF65003C495E4D728F1BF6BD5DA9F65296AE26B89CDB45
CAD1C5835807AF5DEC2A9796E3F289ADE96618055DF5D3A7ECF49D9A14D180EE
FAA50DC64C2AF35A3F9936994B132466A3E6F6A23B13A358B1683FBE3C69B200
2E68A7EC2AC67823AFEE801828B001BA7204A23F5357CFEAD8AF1AAC02163FD9
48C3B94CB7CD358CABBC570BC8779F9A50C86AB2DD53EF784B2FFEB8D1EFFF2B
32BE0179DEBACAC5A6DFF572FA493C6427B0255A9175D5C727C72CE9902D83B9
FA7CFF6F898BB56E5C4091DA9F158F56872A7344AECA0B65C4CD9D5475F03076
5D9FDBB769014EB777D01AC007E750291F54D7C2B4BD61893ED52540F5CA6921
D10D19780099B1AC26BF08CE5B92C27F1E834D9683668420B61EDE417CE998EC
37340A4AD8BC77A65FE2D50AE81CE5EAFF89465E5AD63FA7D01905BBD5CDFFD0
E716EEE0971FC0CD4A885284B9DE94652E8164CF610776B5A0D96D2E3981BD75
1C87C6BC688C47AE87584EF544B1BA84DFFC7BABB565347778BAFA9CA129A0C9
4A4BB1135273EC2A9E9646092360DDC481206D5967AA060E8E06F19120CD364C
CC26871400C6D6B4C5917BDBABCD3BC578A9016CE5A2DAE0388852D73F381C79
557375BC27A645B7BCEBC3A5C9CB02C140C63EAEB6E0E557F3C3BA10C3D7005C
879A888317606412A8787E7975783EC91F2FD4CD4CEBECE7987C963EBCCF909A
371D43D19290B65FB715C258BA1259271E86664269730EFA16F865E2D8047231
C9BF985A9EAFB5ABB28FFDCC8A7F374FA7C88938F2C2F487D4F0FA246F0452C0
BC5594F0DBB40FE025AA693F38781DBC231B53D5F8C864160AC66B570D81F2FB
25B9356E78134B918C5EED198A2948EA2D0300D52C6DBCFFFEE01AE577072ED0
263C082F030B29EFED916C9D06DB6184D27FF6FAC6DE380EBA8DCCD3A8C3D257
8CD31ABBEECA1E37188944C23DF4631EC199B49611C4F52F030A9ADC5654A7CF
5584C275BAC1128006721E124A6993AFDB2DB6DC6FBEBADB9AE6B698898B9EBB
45430721000422F344EE5B544DA8B8DAC0092FE84F0691D1DDA1701696A52CCB
B2962709DA88FB192430633C23B1F8ECA1D1C4F5057A4F2B5B14168218FEE556
F6C16BB2573DD8612C8C3279EA711BBFEC01B7A9FAE1AFE994408D8A2E157AEC
6C1E704ED6CDC71A472910C27CE61EFC89F2426241882F11463E20B5F88842BE
683B94C82A964323E5EBFB1DB591C757E2DAE9075836CC9ECFA813F8FB8C8382
48B77CE0BDD751AB4EB289218309ED58EE6FFB0E6BB5B1C69F9D57EC179E149B
9B6318C784E856D052116A28D56B471C6D55A6920FC5E4C93AC7964476E5CB4D
A1FA00316DBB87C4B4540ADD5F8758B7380BCAABE28A003C920E151B1516BFF4
C5417541A8940CE2B73A67F2D9AC197134FEF8B4BD043764B073F286809A85A7
8665A1746D9C69591933FA416AA4A32A977B8395CAA3C7A344C8CEA0E818B937
D1158385BF89F83B3CC8F9F18A6FE52ECDC3CA1993DE11E6765C083C1020B654
795010E4E4C07EDE38DB02F1782FA064BFD42D986F16E174B42FB130C84BD0A3
B447840E53E66C03A5E214A502D5323C31CBB097E34A8B931B3748203EF93AEE
F5B492291D47F8231C32EF30BD2381642DD24D9275CD491661D091439D47FBCD
DD809149B089DE4FB6B67349EE6098F872B815056E33A834239EB9C5889DF7A2
E3AF188CC6A02C0D7348486F3ADF70AA3A6C14A6267A2158CB6810E7FD90A1E3
4AF2D0FEDB00257FD84E2462FE7EE0586362EFA0849875318C2D9D0608D49479
581722C7125F338AC02900C52054E34516C96BCF0B19FB7B94C32B69060612AF
3C4AAB518CAEF9614DE348E83D2B1C5F504F0C9C8B0527A8DDD92B7338015331
25695DBE079C7067D02AC24E230D4CCFDE3027D3EBAE54ECE418C11C2BEBEAFF
6F153CDE5C7BCE3956842EEDECB14005CB767FFB39C07E36582146F047A27182
4932612945F28F64EE17145D86CE9D378A5F1E1208A37B7FAE8A1A66CBBBB484
0DA42E6EC558F206E3B3623F039998D857F3E9573529C8B998935AC38BD8F6CD
2DFE88BD6155485E29E0C792BD310D86E49B02F1BEE282FEA8F788394E28E2A0
A7DE186E7882003EB1DD328BFAEA3C59601E2BA225A99958D760894DD30D0174
6B97F6664A85D83D3909167EAF292681B35603C94F95862FA3059CA76D28D83D
27A4258F4920287CA7ABD993C1098DA2F0D101FF2807EE2D79AF8B4C3FE96BDF
4F063D3E31474DA433AE40C8FC30CDFC5AB760F5FFE89D82AE3F463E8EE1C900
584CE6BE5A58A9C3A056C484501EF7D188D18932EF82D51F2C97BDE94AEED3DD
92B17D2885CB402324EF999AE81BB964645681DD9DA7DECFECC814BF34DC68C7
ED02DC654816EFC7FF0394032AD05077BBBC055E5B47621DAF42CE6665AA59AE
38192031AFD6063F3BC8A6DA526A998840977953B2C208AC6A0E3F267692261B
C9A1B48DCFC0D8C4BF8D41D535C35612AE217781387964D56DF637E0F1267B25
9B3377CB1C5F8A7512AD2CEB3725881DBF9C215057D3811872AE5B53AC2BE017
A3BE25059525A744D56F1DDFB509815F25513F3C333B406BD97E10A8D2A1D3A7
1D971709BBBDB665077ED1E3634E22204F00B32509352F611DA907D82139A119
77AB07CB3B63F8CA422041C83FF44E57187D625B4BC073F43D71DAA841E80F09
04A573FF99F21DA7DAA21738B78B6496DC5EE933508CFFFC8392F73C0DE5C157
917492C565C9DCDB1EDC3C73361162963F3BEFC318B31918FD9107F9684AE156
D5C4369AB7CF2966B06E7C76B4508E50B2E8D9302D0758F778D21DA4E8A7E827
603303A1B227F5C58C87AD413CAAFF4095320BA3C83E359F67CB1D55E4C3DF19
38B7D06C56CBB89F11532AB620F815955F16B00DD0A124527B3A0D7FF4BC5FE7
FA3F1591B601271BCD6B83371EEDCB8A9A64D5FD92D73DBA5DB50F327FA38D7D
CD8A9753894538691C5C3F3F8A28E2AA4C768FD070B2160632498AF54D6BBB00
0EAC3E685206DB9906D453B6E8F386B395C8FCF840E03BFBB27F52141CCDB1D4
F81A32CA6C2629FD094F98943272F3B23734A612122F6DA36C6B92B7646A13B0
F52A4A7760AFE8DCCEC67753C54F87BE3DF41544DB801302318ECF90B6C67B80
7E00A6F08121D79B4B27F4A5C96A8499CECDA16DC86E1CF108B6E2514999F59C
D75608FA607C74C7B141B3E2E55AC0339146B0A99A28DC574F52F947C8138434
4421BC70304FF20D0CBB849775A87E88CFB1070E09F8FA2415A1F59C0C37E41E
6F89691C2C5C7D1C4B222B957B3A70FFE8E0061C06BA5C5C238D8133E65F64EB
2A81B9FA66264C96092525561716A85F4E0503DB23865A99C3C62D614DB3D56C
46B1E182AB51F8B335AF9DB98EEBB333B3EED7C990820D40763B16FD8CC31507
A3C19278B1E52C6FF08E2C1B7E866BD0839C0A9BB9F51D15F94C984DF93723FD
E0F6D1FFDCE6000D936A870A7C7F81B54BD087E916BA1171EF6C10D2F7413C39
B6FD01BD0BB3CE9BC1AB2C7AD8274DD19447018B043C90A3BDF5EC696501D699
F24B3DF424D956F120F279B9EC39A1F594D1426C1C8ABA50EF7D9E29015A3FCD
7036EAB362052D70E6132CE8B7EF5E1CFE9D0D3F4112BADEF87236A2BCB2318D
C8B177BDD5C9FD3534D53D02A7453D79C383EDC526D02754C02E45A0162D16F3
95415AD02A35000209E8F2AA7DB20C223378D255CDB57CD6C9DFDEB6DB1968FA
81B056D533A6FA024FC6796CD084227AA993D41C518118592A5C5088F6B183DD
E8CB988C63C30E1B1B48230824CE0A0E29303024321CC3EE48C1CFB864472CEA
2DA55CF6AB6C80665CC471149C5F526593085D61B92E0EF40F6D0927ABC6E2F0
22C097CC77C1DA2ADB189566760D8D087D01C2A3DF1FE7B417B97A058E1D1148
B5CE2E432349C724969ACB3F644C33D04FFE08E65A63CEA2F9637B9135FE5854
31F050749AE8A78C60A93A1B74826B9E7E503C35669C2665865587C2E14E2496
D0D987553E9CE4F3390BAC97452D5AFB47AB57FA8307CCCDE54F13D1E1BEDAA1
126640833FC276B742EDE0947C244EAC51CC93611F4EA955BAB750F4149EEC47
C4D2BC794F5D998964114D92BED4BCE9CBB66D15DB0FAC735D93538B68C876D7
C60BD83F2560A6ED9CBBF585C25AD6D7134EB707772AB95D8B8C6F35DE360329
414136B8BF89432B560FAC2B9CC76858872256414A99B01E8B2F7682FDC65133
6E7EBA9A204178E5404EC2B50ED1EF9DB65DFD85FEA09E2BBB562D7FBDD8766E
6D21AB2C49CE1C5FDEF3186817CB6E681E9D1BB808F04A00B7F7F82CF47F9A08
C160341F2B4B585E34C01D00DC0F0D65A118CD0AF13E01AA09D7150ED8A41BF2
AC9BC377ABE40860433FB847CA00D64A8749F6B8DDD8AFFE7C9D8FE57630C953
343EA83C4EEFA9C5554070DA0EB8C71AED623EEE2C5896B85AA699F554D0A748
796098D4EE31D3A235677DAAE50D5AB6F8732510B708AFC4B1C5FA674DA2D076
C7D89A5820F7F5851445F05059AA358A25AA3F63AE84F838AFB2704DE7A030B8
01D4580D5A2BD36457C8EB4AC71E87D21B492FFBC1A70219C0A1FB9C315957ED
D26C65BD9637C1FA62BD383F48855668BC883C5510C8CF4C5CB7753C1F7930DC
09B38F51F985F88B0CBFD7F978E8571ED49715E0A5D76F81C7473FC1328E4D83
A47C5303BFFC38BB761CEF3B8B313A0C3D51B2DFD2118F2F0ABA6DF302812962
F0CD11B354F0888CB06280308DF89CAC8D4CD65F468A674781A15A4B75E6639B
D6F8E13B02537AC5D512B06E7A58B18534ADE4276CE8B4EBECF167AABFAD2B64
B0C39DE92D41C74FE41C5C6589213BA475DBED74893999305423843D3BD3C770
60A1AC43C70BEBFB9A80D2CCAA9D70794D4C520B888016237D74A43A62553082
F7F31239EDE049D72B23B4F172E2FF25C6789B5DF969D31992117D6AD40B238D
18AF2774A757646ACE79F2683AE0641ADB7E80DCD37AFE8CBC3C65E7E51297AD
619E761021113B8C4EACC770BE61C8488A16DA95C74AF1C29E182FE28AA95614
0027742B24E9CB94F34B6DE3DFFC05F5D584194DC83C2A880F13533A4BE7EC90
62CD7BEED3F9272C7025EB3D30321F8E453ABC9A28F360E829042E53FAAD6F06
F795765BDF31F27681A6273FE2B3BB7C1A1783B6D46F0A2C6D5335913C81EC82
E79132EB98D1D0C35E2F7600D6818833AEB7451B392BEC550886B75B4C6C9444
54301E787A8993DDE35B27611E5F3040DD3C1FA776A93B6979486B3294ACB0D8
8B0355656C141FF761D04F2CE4CA43DDA9DCE40E902818A28ACC1B1D254AAE8B
40327CA60021992344D112971B03366F85DA2ADEC633E0FE1B8DA2A25E535071
498DF613E0121A18F2BF8EEFF05F596C40218798720C5FF2AFB871AB05581BD4
06FD3D42196669FE884CFA0A48F5E2435AF1B0AD8E6D6D562E4C4FB5C1DDA4B2
9CF26EBD294311AE706A72BCB591E3B303DEE221793ADF37ABDB7B0D45F3CD35
6F88035F729AE59AB0C455F21B3909922DAE698309046874065BE315821F45D5
87CC506583BC36AC0988B0E6DBBB07E99636D6C01385926C96C2CC508976BC34
E06801BB8EBC2BE406108443485AB769B5AD56008DC345F7F80E7E7125980E21
C777C1228F745BDFE3CF96641B7CD73B4AFD3F212416017DFB96D324B6CF6F52
D669E32E8AC6DDC7A7107CC783CC3DC7D71322872827D97DB6F0D9127CF95A04
54FE076B0E348DF4D10249EEA59553D3894A89E38FB602AE6412BD530E2E8867
238224BF0B5CDF866DCB847ED2293B26A449D837A8648FF2B1C2D64C1048E836
EA297D52805560EA95BAA5CF6A6B82444765F1EDA3AA8C83507B7920E595F119
1BAEC4A625B6F6760D67DC733608F8034E87881C59353F9413D0F9F7C9854F85
5655CF4CF9593B67039B7928C2938FFC925DEFDAF29505701C4F04AD52E5417D
BE90A6283C327753B7FD066A24884C08612C6184DCF4CFE782E5162DFF8921BA
E7E3F8A28C11C090387DB00BB1F83EBC1DF71DB15709AA364B4B392965CC1CCD
1C1FB48317AA0E89DFDA540E819413B04AEF57BE2322C9F7BDC6B66837D73CF7
2628A54AC7915EDD1AF9212DFFC8C5B373DB37FA875EC1D72C04562DA4853294
7D04B465CD269C1F498D13A4BC71ED46C028800CAABB2A32A9018480B6483347
710B874433B93766963333DC5FCCCEB1F4C767779B8156818C61EF262136E074
7104393046E2C0F3CA7C3D621C0118B54227622864B719800C811BB53559BFF3
F604090A4428CA7DBB609B799360469BA71754EF07807D6A7978B00157C964B2
385664DE80CA35C5C06821194CA7C8F5DBDA8617E2642099BA974B16FEED5139
9802EAD653EF8811975CDF8977AE2307272C2F5AF710E53E1A346E7528709301
C2E1509785DE2CB08624701C1041B8E4C6FDED498DDF67A63F9221D7F9AF3D2A
240E154DFBD42B625E17211520D0CA725973219ECBADE6111D45CBAD23D85987
E8A94286A6BF9B809968AA88692C985A0581D4DE0374A285BE9DD4B70F53F119
86AB24199C84593E58A78A0FE0FA876C62DECCF86CA6A81AD20EBBC5887E31B1
D8EE96C00A2732C9D23DD80F5991A9B85A181D82AE4851E887E56E08D25E680E
E1D3043952102659FDCCB04AAB47298E5D89B97021BE2787BF5A8294A231FE2B
E55FA0E052C0125CB89C585E5FA8064D1B9B07970A5ACEDBA6AFBE5E04045B94
91C62161D0B74769DBBC52F2D40B94F01AC1728D45D5F634F243C75470BAE0E5
82899AB2131E25378ED94F90EDCAEF919179F79E7D9889674C5FB1D1A0B011E3
F08B6EF267BA3D3B7C2A494473B1B3FF54722AAB6BFBE6A29BAD00926F5643CB
B1C3CB792230BE11D8EAC712796B4FD2F13673DDFD1313BF7FBAFC34E9536859
D8BF3AA90295546E768925EE96C125503DB75CDA24BD0A8DCC55FDFE87273C35
3FA98D91628657D1B17D1BB2E4B525D65CD9A6D3979E98A0B44A7D6814C935C7
679671C60B755959A9E7EECAC13D86218DD2B8A7FB2F6BCA42FCF53EB7E5F91B
4BBE7358C1A379A22848A24FAC6652777F94088DC57107177DC942FF51C82FBA
EB7B30D18E4AC9D9B3774D02E5D02CF73FFCB9FEC4815F9BA18D25A16D584BCF
14AABFBE2229854D945C686EF561AE8BA4E8724C64514C4060D36186BDE15F08
A8FB6922CE4476A4DAFF2886D83AA1AFA94BE7455D16D0E00D8502DCB43E5CF3
4E68D51C6463554A99F5C564E25547659B07DFA85C11A7E232172BA9DEB206EB
035EA28E829EB84562D294C6D88A3A68260994377D65337E48A01CA682489210
7B713C68C927440EF437AF3EB5C98201920B42E3B74485A0EBA1FC87E85D62C8
E9CB930CAED467C7AF0A2F11126E62D461A32E39F73F7D292DB91B74F6AAC162
2D3748C33907BA1F68E87568EE3A3DB222008D404C0CCA404670899A839DC783
95EEB3FE275FD8F6A2079FAAC232C626E1AD043FB81C1CFEA0822234971EFFA6
5E05E4C112121D048CB40459E7B8E544D97C81188A0A6CE4B1B0DC79DDD82517
B576DEFDE65ADD93C27BCC0554C013CC9F083178590A77FE72EED8E25061B0A5
5306B983F8DBE93B1299EB24988F315DBC11A16EE29BA08356E827EFBFE00BBF
B521E257F597B76D0481AE47A173691A96A750A101468636CB0C7841C3CAFD01
8728875CA3E6BA36E33D1A820F230357BB084C89EFA8066DBE088FD175E4A9AC
E5A208BC782AA60A78DC391276303A1439E280E39EB1B8EC970BC6118557CD12
F83D2336D811F102CDB14CE1469F2F7EB20F3CF6D1E20A0FB24BD35091F579F8
EEA6D183F4C14D10E742B3319F1DB71D2489309444864A84D888904E2386D338
E791DC7B82B60C22FFB94CA0B7570D1D5B9CACC388A8715A639BDB3A769CFA63
91E81AD15506F95665F6845147215E454579B09FEC8F5E168F4938ED09023B27
EC4F3563F4853440F2434A77EA43C4E643DF41E881D46AF59AA85306EF3FCDED
AD5AAC2B8DD13102DDDAF08681502E19AFDD40811F170B7AD5552DB4B27F423E
9BE96A400772CD24131A9306DB57C21016C072AA53D25E01F6BDE017D17E8E91
07001356A6D15C787A5CB55502C4D06901F54F65212AD51EB4319F49D6A55838
93DF44435045E8F22A1F67181099D951EBE5EBD0C71B104BD94EC6C6B4B4F99B
AABD3D8BC1210E5892D8EDBBF7173A73B6BB140BD00B1870EE1A840849850D6A
0AEE9AF4BC677AEDC3DFBCBEC1FF3DB45AE04E08C421CF3E73349E5D673076FB
452914C4A1C7C9052DD6643C66B2D0C34509592BE661C719BF88AD2CE7F8C45A
A370C4E6838ABFA59243F8D513603DE8E58C243ED6D9F3FF4B522914BFDC6852
CDD00102650029D5FADAABF76CD070E916C5FFF820E12808DFA3883A9E3AABE0
D6110B9B251A651212B2E9C9C44D6E51C528A878BAFEA83CC2841A1125FF0431
3158010CCF93B79DD41344241080A98129DB6AFDE107100F430DAE02709884C2
0768EB0B34551FEBC95E52721282D2FB1D86A99FAD8E46AFBF0A94C9BA0BCCCF
0A27281EF5549A99D2FA3EF1340931D1FD95D2E3F548B6B9746ED451E4BD5381
28AAB4FBAF9A170122BD17CFEF126203311CB6D34923A1FBCA70E11EE1D1B6B2
2EDCA69796EBC755BE7D801F797FEB7418635BB2DAE42AA140ABBAE08F7FD011
3949FAB334457AFD8FEF280E885F230EA8FFF0ACC7D30471C3D569347C56CC5A
98C6349F40673CAB9085A952747AB2DEF672EB47D3819FB7699947D99660B98A
80F06F8603D71DDDFA04FFE3E492C9858E8071E8EBE91F4D2A65FE9D3B68CF9D
EC7BEF13AA6DCF607CD17D1C50C8ACAF82F8ABF485F0C3E421CE06713429F42E
61400B54CA3E0F7CDE0E68213939F3E07B17F602C2F9731F89A094F07E7A8960
61FBC0D2C0CC81A0FF9451D24667F3F443951DCF29F9C1F8166B251F1449D220
D3455A99506501A9B00AA23ED8794311FD4049E64B978030A93F4EDB74708606
DEDE84A6BE3DD3C1538FA1BB1EDC4AC9166E24A83BA87407D9B89245244E6E3E
70A216713F8451B19FDF2B1C9E1F6A478B8028F108428E92155FB0B368709EE3
04172C4EE791BF0F53286E1BC72BDFC10F1199F5194596D73769DAF7C3E29FF1
51EEDB249DA8B69EF207151132F51A32048489166213F45D51C56FFF264D76FF
9154D47FD0D07879DD3809CEE69281DAC083BCB172058958CFF750B1F993B552
91F80734243E4148E62BA1838F998621DAC12111B41AE0BDFEF5BA99DF327F14
D51525504436AA0DC5887EDFA9EA76A75AD36087F02CAC7F18D148584DF74AA7
F987CA9C2771A21C19002D6EF36017849DDBFD3411720BACE4F43FA10F3B90D9
38BA16C573A44DA38215F6CC9777171393F06EA28AAB4B7667676B3521DEFFD6
661B2BF0A8849C9FBB7F72E6010BA149EBDB9C6F0F9C5616578A4F68A633AB6E
4E2DD3A4D69B3592BF974772CB58F68EBA2F1369E1EEB17672162E112E2F2640
4BF81BCC215A0B5EA1C04D4EEA56CC7A846D149565CCE35DA321E180BC67DB04
03935C64032B024F4AFE140C70A5B1EC88F6563A547183AC530BB77702E4CE37
1D13055C6D5E14DC9A5DD658615749CF92E4EFE56F76B6EE3EA4B4999B16B9D6
CE8A02B3F979D417DBC71596757B462DA7D021932BBB602F6D5B31E28F70ABF9
769DBEBC1D32FDB258CEA6F06FDA2FC83380C35DD77E8EBD7BB7711B7C3FBFD3
B2604ACA12F205A08772082FCEF596AE330299F222ADED2164023DA26049F962
AF76F3D956D65E36C1D3EDED92EB98C9F07DC5DA4405E7CDE1ECBCA328D01891
1AF05D77EB0037DFFEBA83AE07C4E3063ED81348593A698BCE09F4B2BE0A8A91
6687DC0283D2337B538F91A9C46E3B356C1BFBC9487247C207AB9256F733B40E
581871BB95B3D253B0D8F3DCDBC8451C7EF8BB9C3A60904F52AFFE25A7D78E02
089F7085D710E0AF58FCF2A65212F741597FEA848024E7A1425BF21117F51598
11003BCC998625BF6F66353E2F716FEDEB64E97C452D9A181B9CA7578345E61F
61B0A11336D100A3B2F38B85475696067E0973FD5069610079F69F70CC72E658
151F9B6A06C12C735A4E283E637309BD4F7C077C133055815C7DB54B14F204C9
6E77B4644ABCF2BF7D23C3298D662A2BFF946463BA6508A1FD90978ECA83023F
FE90863AE8C850748CBAFE228D636FA416739537CD7FE3A473F04091C5A2A069
22A91718BBC08AB11EC6571E715D5369539D5DBFFE5FBD9044987460DE4648CF
A1476714B33F3240517C0848239CD74AAAD5D6E2E363C6F6940D04A1A7515949
27815B7E753842A8F784516F8DEBA049FD0A35890E7D7CD767848A44A54F0D43
6C3F65FD71EE2EDB8CCC55EF69AB92836CC77A21609643828FB6A7BAFD604AA4
AF4FDDDA456C88B5DCF95285DE4278AD9E48EA4A4DA7CB5F1EFE4460ED01431B
AA32AC447B1CD82C202CFA5E5DB740D252E2204E4EF446CBB942B29B70964B68
138846C0F678D55FFC9D5901A251DEADED3DC697AA216B3C7BD88E9102C9CEE5
7777FEDD137315AC0755251C327AB2E803000852A6964ECFC40B99D26A69A333
9A1C8814B49E60E9B7EDC007102A9356F1DC74F03AF958191B0BA7855B183BD3
1D698B9909BF08D284A80D8A7D5B8C9F71422F68838E86628CB6583129FB9B0F
25B06E1D009D306ACB7C37FEFDDDACDAF1C68CA0603B418C8A98C5771A61714C
9ACDB20036030FD87336E541B26190973A3DAEBA34F63001BCFF2702A4EE855B
DE50E76F2DB61D10E71DCAECDFA0CC50C053F634759197A2815C1C3C2D3778B1
881C1AB1FBB524536838F21970BAEC8EBA3E01FAD473ACF30B5B58B9C9061190
0048F1BE05850928D9D2F4BB96AE35F1A0DB1CECE53545B13FC094D42ADDC061
409A5BBB99D94CB93640D86EF9875C900A242C0183B28BCE6B0ADE4C7E7358FC
330597227EC1D8195403B67968E876178D0056B877DA177CCFBEF4240A075F39
62BB7EC35C72BFB320DF87D1DDF1D58CFF4D4549A86190E7AC9261FB37B71912
6BF44581E56AC28E724B4E78D705AFEF514F77D3BE17B8D1E69EE1BCB871AFF9
500E484B3EFC27A0A453CBF4F58F98C22588326AD153308CF6F4B4AADCF0CFC2
E03A2685B063C6EBE1773EF8CA1AA0319952649F2A95DF7B8457D2D7AB9A25C2
3FA81BB7CEACD28B769477F29F8C53F284203A91A075DAA035B8A5F6BA74834C
BEE47CB9B40536F2C0B19CB70CFCD1AFF8EB6EBFD3CF8F483C6CEB6E87ADF397
74E22032E22A19A4F3900BCDEF69460C7544D64B07A35C5B1DFCBC7CB6B9BE70
F50A47D55140B25890A518D049479F4209A4A5FC0AC45D2244243FBA837821B0
01EF3B26B104BF62554CDAE8F78FE242A057BF1B6DC81A81FE26418D8DDCE07B
1723A1468C41C2F94DB22EB75A791D24CBCE84C8C53A9BF9EB29F1CC9874BB7E
317926B356FC491EB942B8554081660E09D25966B7808E01699D924DFB50F999
B4E33CFB208696AB1ED4E637D497857C41F56B6FD5D2CF4AC8A72D886A7A45AA
DA264C74B306D9D5DFDC00FA248E568F7E850671AFDAE3FA7FCA742F64304666
B310FFC718020A061D0EBC77B5C387F0BAB588E13E393F56868126772E07C856
F3C91FEBEAF6A9611A176B759428419432C0E942B3AA36B9C23A2ECAF4529D52
EF2D6B5D01249A46DCD9812D263FB848E6146453AEDE8BD82F0C778D7B647943
4A26B523490E888BF0BBC427FFD4D6D143CBDACB19AE5BFA84D6FA2622CB2BC0
E1963CF6299389BBE1580B2646B0B08FE37B31E209FB838445EE863C84B85812
B33BC27642F56CD75093624D1A8DE3A80F49DD55F1BF1A9A7F696CFD25CA0E04
A2F2C6DE6DD2F7D8A966F27C1D738CA3D5DB2FE4AE069EDEFE9319324104307D
54ECD988BD9548DEFAA347A1D95105DD76CA1796098D269B8B20897D7A831BD2
94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 41 /arrowdblright put
dup 76 /L put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6C5B367635D8F3EDD0C81B37D0D5C1
85EF82D2206BA76018DBD8C44955402CE2D267B676DEECFED0F918A438388768
7DDB1DB399F422D8207FD68296B47EA6DF29F65C0D2C348CB8F01E1EA2D816B5
1589AA62C940029578FBC01B948EAB0D5ED52C99284933E99D1A992A024B0E66
9BDD24A94FEA069871320CAE8424E76D01937F9CFEFBB21FFEB9C9E0E9F4ECD0
31DD0107D4C902C2DDD07F6B2241C79A431EBD39B3DE15EB75E781DBD97F9FAE
AB18F4600E0AB73FFA7DD5BBB303E09533A31E0AA5788B3B858A939DE7354063
0DCE2B215A5114C6A022FF02EB7F041DBF57DC2618C088204E633C53B7A39F45
AC9995C2E9716F6DD44B873D39960E866B9A95A96232A8DF8A6B1D1CD7287921
1377F8D102FCB4C8AA1AA053A64A31BBD009DE5A483BE5CC8D0F9F5DB8EEAE65
D7A73A645AA2FCDDD5CB670A3EEC2C13567B53E2CD41F577505D084871747314
E80BD6FA2480A070A95C1E7344CCCD80BA8B4D5C15FF65EC26AD25C8D473ACC4
6B9B0CFE840959AEF3E3424E018405798CA22BCF0E084337148223845438E42C
EF7F5AB6298EEB4FE107C903286976DE2BB2D0CB66FE9373FAACA005D8D9A8CF
442E80502DE615E3873C99112047F88AB552F2F58E58436231E2C342A9470F3F
BAB5D9B9C0DF2E1E096699EA2F4C41F13CF7C5B4EFC223B3FCEAFBF793202E55
CCE5A387189BE11F9B9B568433DBE6E9F70D55E8DD2878DABFFFE91FC3E2F7F3
9F344E240004E7E50F8D03DBFC5BE69DF2B4F2D2CB252F995CDE79C303027D6F
E84C27F98B29DBAE8C2A6FAD909521A8BBD2B0142630CD2DF24A13482F660575
3E0C5B7C83774C62AC5A45AC2C60286F649ED63A0A66401AFA2120C49E41D406
6918EFBB83BE10F5246ABF682BE3BD18258D8F40962CF3906EAA74A5A7F97B2D
FB62749BA7FAB56128487CD0C17857158F84074B438D70674FE6536DE78F1870
17D67D3ACCDEFAAB978D502EE11214B69701044CEAC0DE3A7E971852A8F2FAA1
C8C52001A494ECACF83A551C95398CA43D6A2D3B2EBD7D4B2E29BFD781BEA9C5
D0F844805DE8DFFAEEE1D0A01CE4354A9D82F6716D64B3E15AF625D586BC1561
4C89DB9EB3AE8520F3EBCFEEA741039D6026CEFE314F7A8913248651BE5CBB21
F0A20BF1A69B7037454C59AFAE4BE63D92650434092EBCE98F340CA0A67C7452
37596D03DFEB581A24C67CD763BFCEBB73A7B5E16212C165BF74F2FC94A0518B
C521006E66B7481C4C7962A38C1408A529F47A0484A9B4FF0602CE5E67360FB8
4D9D56A5E36DE0A677C8B962
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (Frontpage.dvi)
@start /Fa 134[43 121[{}1 66.4176 /CMBX8 rf /Fb 134[51
53 1[51 60 36 45 42 1[59 57 60 89 30 55 30 30 59 55 34
52 1[47 57 54 9[94 6[58 75 2[54 3[76 71 2[71 2[65 6[34
58 58 58 58 58 58 58 58 58 58 49 29 32 3[43 43 40[{
TeXBase1Encoding ReEncodeFont}46 99.6264 /CharterBT-Bold
rf /Fc 134[43 43 1[41 50 30 34 36 1[47 46 51 74 25 47
1[26 50 44 27 39 48 36 46 48 7[51 1[82 54 2[49 2[49 2[76
45 2[28 65 3[61 1[53 55 18[25 29 25 44[{TeXBase1Encoding ReEncodeFont}
37 90.9091 /CharterBT-Italic rf /Fd 194[65 11[42 42 48[{}3
83.022 /CMR10 rf /Fe 155[43 21[67 78[{}2 83.022 /CMMI10
rf /Ff 161[35 43[35 35 49[{}3 66.4176 /CMR8 rf /Fg 255[55{}1
66.4176 /CMSY8 rf /Fh 145[43 62 3[24 20[41 24[20 44[31
14[{}6 66.4176 /CMMI8 rf /Fi 234[48 48 18[42 42{}4 90.9091
/CMEX10 rf /Fj 161[45 32[71 2[25 45 2[45 45 1[45 45 45
45 4[71 1[35 35 17[45 22[{}14 90.9091 /CMR10 rf /Fk 134[55
55 76 30[79 15[82 72[{}5 90.9091 /CMBX10 rf /Fl 134[45
52 65 44 52 33 43 41 1[46 44 55 80 27 47 1[31 52 43 45
42 47 39 39 48 12[53 5[73 1[62 3[76 71 1[67 75 2[68 3[45
1[25 25 32[52 10[40 1[51 12[{}37 90.9091 /CMMI10 rf /Fm
133[39 41 2[41 47 28 33 32 44 46 45 47 70 23 2[23 47
43 27 41 47 37 45 42 12[50 16[52 20[23 26 23 44[{
TeXBase1Encoding ReEncodeFont}27 83.022 /CharterBT-Roman
rf /Fn 138[50 2[35 5[25 2[25 1[46 1[44 49 1[48 27[46
11[28 5[48 48 48 48 7[36 36 40[{TeXBase1Encoding ReEncodeFont}16
83.022 /CharterBT-Bold rf /Fo 138[55 33 41 38 1[54 52
55 81 28 1[27 28 1[50 1[48 54 43 52 49 11[64 2[61 68
53 6[32 1[65 2[65 4[44 4[31 16[39 39 40[{TeXBase1Encoding ReEncodeFont}
28 90.9091 /CharterBT-Bold rf /Fp 149[25 29[63 34[91
25[45 11[45 2[71{}6 90.9091 /CMSY10 rf /Fq 25[66 81[37
25[43 45 46 70 45 52 30 36 35 48 50 49 52 77 26 47 24
25 51 48 29 45 51 41 49 46 3[38 1[38 3[84 56 63 54 51
59 1[51 66 65 79 47 56 1[29 67 63 49 52 63 57 55 58 1[44
4[29 51 51 51 51 51 51 51 51 51 51 44 25 29 25 2[38 38
36[53 52 2[{TeXBase1Encoding ReEncodeFont}71 90.9091
/CharterBT-Roman rf /Fr 134[62 1[96 61 72 43 53 50 69
71 69 72 1[36 66 1[36 71 66 41 63 71 57 69 65 10[76 1[72
68 80 90 3[106 65 5[66 1[86 76 75 78 7[69 69 69 69 69
69 69 69 69 69 1[35 39 42[74 2[{TeXBase1Encoding ReEncodeFont}47
119.552 /CharterBT-Bold rf /Fs 146[84 2[27 8[51 39[55
4[55 1[55 55 55 1[28 46[{TeXBase1Encoding ReEncodeFont}9
99.6264 /CharterBT-Roman rf /Ft 139[48 1[55 11[46 4[73
28[99 68[{TeXBase1Encoding ReEncodeFont}5 143.462 /CharterBT-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374 141
a
SDict begin H.S end
 374 141 a 0 TeXcolorgray Black 374 141 a
SDict begin H.R end
 374 141 a
374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray Black 0 TeXcolorgray
382 457 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (Abstract) /OUT
pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (Motivation) /OUT
pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (Concept) /OUT pdfmark
end
 382
457 a 382 457 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (Research Questions)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (section*.1) cvn/Title (Datasets) /OUT
pdfmark end
 382 457 a 382 457
a
SDict begin [/Count -0/Dest (figure.caption.2) cvn/Title (Leveraging for least-squares regression)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.2) cvn/Title (Validation of the results Ma et al.)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.4) cvn/Title (LS-based Distribution for Classification)
/OUT pdfmark end
 382 457 a 382
457 a
SDict begin [/Count -0/Dest (figure.caption.4) cvn/Title (Test Results)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.5) cvn/Title (Sensitivity Based Distribution)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.5) cvn/Title (Test results)
/OUT pdfmark end
 382 457
a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.6) cvn/Title (Future work)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.6) cvn/Title (Conclusion)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.6) cvn/Title (References)
/OUT pdfmark end
 382
457 a 382 457 a
SDict begin [/Count -0/Dest (figure.caption.6) cvn/Title (Logbook)
/OUT pdfmark end
 382 457 a 382 457 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 382 457 a 382 457
a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 382 457 a 382 457 a
SDict begin H.S end
 382 457 a 382 457 a
SDict begin 13.6 H.A end
 382 457 a 382
457 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 382 457 a 0 TeXcolorgray 0 TeXcolorgray 1716 912
a Ft(Draft)1588 1369 y Fs(29.)28 b(maj)f(2014)382 1771
y Fr(1)120 b(Abstract)382 1772 y
SDict begin H.S end
 382 1772 a 382 1772
a
SDict begin 13.6 H.A end
 382 1772 a 382 1772 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 382 1772 a 213 x Fq(Ma)25 b(et)f(al.)h([1])g
(has)h(shown)f(leverage)e(sampling)h(to)h(outperform)f(uniform)g
(sampling)382 2098 y(for)34 b(Least-Squares)g(regression.)f(W)-8
b(e)34 b(explore)e(the)i(possibility)i(of)e(using)g(the)g(same)382
2211 y(sampling)21 b(distribution)j(on)e(2-class)g(classi\002cation,)h
(and)f(introduce)f(a)h(new)g(leverage)382 2324 y(distribution)27
b(based)f(on)f(a)g(generalization)f(of)h(the)h(idea.)382
2626 y Fr(2)120 b(Motivation)382 2840 y Fq(F)-6 b(or)28
b(video)g(the)h(importance)e(of)h(sampling)g(methods)g(is)h
(exempli\002ed)f(by)g(very)f(large)382 2953 y(and)e(high-dimensional)h
(datasets)h(where)p 0 TeXcolorgray 518 3166 a Fp(\017)p
0 TeXcolorgray 46 w Fq(It)f(is)g(not)g(feasible)f(to)h(use)f(all)f(of)i
(the)f(available)g(data)h(at)g(once.)p 0 TeXcolorgray
518 3353 a Fp(\017)p 0 TeXcolorgray 46 w Fq(There)f(is)h(a)f(high)h
(redundancy)e(between)h(datapoints)i(\(25)d(fps\).)p
0 TeXcolorgray 518 3541 a Fp(\017)p 0 TeXcolorgray 46
w Fq(Computational)i(cost)g(is)g(rarely)e(linear)g(to)i(the)f(input)h
(size.)382 3753 y(W)-8 b(e)22 b(therefore)g(want)g(to)g(explore)f
(alternative)g(sampling)h(methods,)h(and)f(try)g(to)h(iden-)382
3866 y(tify)j(datapoints)h(which)f(are)f(important)h(when)e(\002tting)i
(a)g(model.)382 4169 y Fr(3)120 b(Concept)p 0 TeXcolorgray
0 TeXcolorgray 457 5051 a @beginspecial 0 @llx 0 @lly
665 @urx 175 @ury 3407 @rwi @setspecial
%%BeginDocument: ./02460_poster_template/images/ThoughtModel.eps
%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 664.999878 174.000244
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F45) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 665 175
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 665 175
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000

14 dict begin/FontName /Helvetica def

/PaintType 0 def

/Encoding 256 array 0 1 255{1 index exch/.notdef put}for

dup 33 /L put

dup 34 /e put

dup 35 /v put

dup 36 /r put

dup 37 /a put

dup 38 /g put

dup 39 /space put

dup 40 /b put

dup 41 /s put

dup 42 /d put

dup 43 /U put

dup 44 /n put

dup 45 /i put

dup 46 /f put

dup 47 /o put

dup 48 /m put

dup 49 /t put

dup 50 /c put

dup 51 /R put

dup 52 /asterisk put

dup 53 /H put

dup 54 /h put

dup 55 /u put

dup 56 /y put

dup 57 /E put

dup 58 /S put

dup 59 /p put

dup 60 /l put

dup 61 /z put

readonly def

42/FontType resourcestatus{pop pop false}{true}ifelse

%APLsfntBegin

{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if

/FontType 42 def

/FontMatrix matrix def

/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def

/sfnts [<











010F033900030052FFDC04470449000F003B003C00DD40382A30010A100B1B0C1C2733481069096A10073908120C09031B320724091D100C1D3B2B022E293BB73B023B322A2512100705081C2722171CB8018A4023171D1F07271D2E0B021D350B3C073C3C1C1407292AA8241A3E1B291C4A0F2738193D3EBC0197002100B9019600182B2B4EF44DEDF4ED4E10F64DE4FDC412392F003F3FED3FED3FEDED1239111217395D1112392EED2EED01111239111739313043794028363715220001192501360F2100181E1B21001620142101212200370221001A1D1721011521172101002B2B2B01103C2B2B2B2B818181005D015D2416333237363D010E010F0106070615013637363534262322070607233E01333217161511141633323637150E0123222726270E012322263534363713010E724E5F59962168326D62315301B43E150C837A8D3B210AA805F7A3BD767517250C1E112A2C265D2A160937CE7C95BDBA978ACF5A2C49A691151C060E0D1C2F67016C082C182D5C534C2A53C69B484898FD971C220303850C06422340486AB58895A41301E40000020076FFDE042505C20011001E0070402EA607A71CD71C0322080F1E02050000171D0507110A1E1D0B0B1427081A201A2E102E01290011191F208721BD5D182B2B4EF43C4DFDE4E44E10F64DED003FED3F3FED3F113911393130437940181216060A1606142601120A142601150717260113091E26002B2B012B2B8181005D1333113E01333212111402232227262715232436353426232206151417163376AF3BA460C8F9F6DA7A543239A6026691918D7BB92647C205C2FDEB4D51FEEDFEF4FEFEB03B234D897DE8BEA9DEB6D1975EB100000002003BFFE103D0044E001A001B00A7402FA719019818A808AA18034A08119B14030314061D1A070D1D140B1B071B1B1710271201032702111A1D0A2717191C1DB80107B321727D182B2B4EF44DED4E10F63C4DED3939ED12392F003F3FED3FED12392F10ED313043794034001908250C150A26000E1310260112110F1007190A26000500032101010204030B160D26000F120D2600091806260104010621012B2B2B2B01103C103C2B2B103C103C2B2B2B81005D015D001617232E012322070615141633323637330E01232202351000330702D6E317AF10727EAC4A308892708319AF1EF0BBD2FA0112D41C044EB0D76383A86DA0A1DC8977D5C50133E6011A013A0500020038FFDA03ED05C2000B001D00774032370E470E570EA704A91B05250814020F1D1000081D1D07130A021D170B052E132E102911121A1F0B271A191E1F87217242182B2B4EF44DED4E10F63C4DFDE4E4003FED3F3FED3F1139113931304379401A181C090A000101180B2600091C0B260000190226000A1B0826012B2B012B2B818181005D121633323635342623





1C161B00051A260426001B022601051602260101190E260003170626012B2B012B2B2B2B8181005D243635342726232207061514171633013315363736333212111007062322272627112302C6A72546BABB45252546BAFE2EAF36405B7BB6FEB7749A7952303BB479D3D2805CB1BB649A7C57A603B18E49283CFEE9FEFDFEA2965F351E49FDDD00000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000020042FFD703B6044B002E002F012E408F38099805961299149815982A062824252736214621472447275624572766246726790C790D790E7623742474257426A61EA82C1303000B15052D042E13001A151B171C18152D142E280F0B6908262536250225220D0A042B1318C61C1D1307041D2E9A2B0B2F07090E100207002F212F1A1F18161827173E28260727281A310E1F27103E00272E193031B221A65D182B2B4EF44DEDF4FD394E10F64DFD3910F4FD3911123939392F111239113939003F3FEDED3FEDED111217397131304379404C012D022615251A26210E1F21000926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083





B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500

00>] def

/CharStrings 31 dict dup begin

/.notdef 0 def
/space 1 def
/asterisk 2 def
/E 3 def
/H 4 def
/L 5 def
/R 6 def
/S 7 def
/U 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/h 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/v 27 def
/y 28 def
/z 29 def
/u10FB 30 def
 end readonly def

currentdict dup/FontName get exch definefont pop end

%APLsfntEnd

42/FontType resourcestatus{pop pop true}{false}ifelse

{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if

/FontType 1 def

/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def

/FontBBox{-1947 -985 2961 2297}def

/UniqueID 4208844 def

currentdict currentfile eexec

54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE14721EF6515215AC8431E22FEABF643B44607F71DA34D50107B608613AF7DA0DA6C0C7300CD8258F529CE85373203862EB8929BE05DF043187A066E93650263737642E71EF83539424E5308FED2BAF758B92A3762687B2C1062B57436DC1BFC3E3092EF8A7AEE3DC207C0B251972B16A6EE46B281E0DDCF421923188DF3033F79A8D4220C4A60E49E069682192C3C4D7D9E4825EFA81CBAA0064F3892BAC315AE73B480A79B9697EC6C6E5DA9A2B592E14F75003809007E647B508CEB0947E91F6CE2E4706211D2B7461AC02168611B6FF65F758014D2D23DD0C11583A0F5E74A591EE62AEE9810707CAECECE3F76B9B370E68465869864CCE4E1E3919E3902D96EB012A18110E2210E651BE5B50A1595CA3925D90190FD6D7FC43492DBF50C1BD873C3A0F2E575CC2CA9BC5EC609AE2A5E90E0B4FFB3045065D04BD6F69D5934CDF36A8190C3B59B529FF4DBD6366A1AF6C09074898792E17B28FD6C8398D9792C70B59E6EE877842B2EDE4CC2D45E4C84544F24BB41400B1B34A69F066A54FAFC36F34F0D1A627DB8C37F6D7D9A0FE3939BC5F4AE479FAC3D16FF2E2113AD22C3A3EDF33189202199379651A9DCC227D5725F8B90074638272AFD86ADBBCD8443BC2A077A7941B84C0D631694C0C025330679783BAD36DB2BD0548167372F4CD2A9F17BC9E42CBEA2FF131342F13CA4F36B26B60A932FA884611556FC08EE640F246A69689



3054A1012F981BA8AED2AA7808A34DF5764FBBE659CD560E2D4DEDCA7CCFDB223404D899A326562F7C17AE4FB6808B1DDC901B21B558B0B76F7093A9EC2ACA8E43C590BD0E5D867CFD918A0951D80E96E1C2B89FA120948C95A84D3C93EAEECE8FD3D19A414B4C1194C0F07B2B4280BDEB7E8B1A94A547D30B47336953C91973AF2BC87CF17CD56EF7245E215D8E410BDFD55F10C26A13C8521E23E43EB7FD7BF673A965A3664AD853489B2DAD20F2C4A284579B345060C11D8A269F089A4936D44D93B0664DBE9E61E420C628F1D7B9A3F107E467471368B85FF0DA57C69F452BE200674038C905296BFBA1D84612068207F6AA65FAC6ECEBB5BDF9D8BAB6146757EBC1F0B5338C6C0F53064B74EC1AFF5B01BEB083089877C711003658216AEF2C0591B5132C31A8400B29DBBE65DA61635D423A05B52441C166CF9B92BBCAB7899A55925F0175B885D87A8F0EDD009DA5D483EA8A79A5D7DFBE38881B8D163A8B602C93EF51ED8B340B4563068780194D7B7F27CEF68323A6950C805EE71D47E2760DEDBCC9816A996FAF609FC39F12C728D22E0A02222678BE15A686B236FC5AE4773E76B844A25C222F188C83BAF575D63BF32BBB2E9875B3585279876EEB0260E737604B13CD0E2E09363AB690B197B79EDC8682C5F3CEFF00892FF81853907499F69B81A7C04B33ACD6743E015845FACB1DD984CA36B0D9C62B9952EA079F503ED03A9EFD6DB79360D9AF5A70F9FE564C3A58D2CB36601080F3C96085214A17C2CB4F265283E57670B0041B94F105F5E7C82DB4824A31F8F77E89ACF6486B92E42AD8977162056CDAEF577D63F008EC64098F1EC8602D71913E19CB0BE64EC2386280BD1FAA59F424D0C22F1EA12CF204CD081C30A6F04D7CCE59B335329E81E1D67A0F8D64EEDF4BCE7AFA7BEE6A74E09F19E0484B6C7653B84C7DE9A57CB84159E58FDFEDBADA2D2352472BDBD2623C1B3C55AD3CA2A2FCC97C31489F206563D3B678F7988F98189BAD7F4F21489D76A0CAC8F71C3932EE8AE7984BAC47AEADA5AFAF38C5CDAFEA6AF6B327162F20FDE6D9BF6BD53E7AE52B6D443316877392C18615C6D7358B9937AF57996297DA37F8F475D0F75F3C0CA01B26CCD40E86CAD7FC618DD82ED6A9D4602F80E76E1437E367BDEFB191FF7947ADF2E61E27ADF0C157CFF8AC016E20D0C38FB2859727384B920A750CC61B7F27B1EADAAC17A782DE484154642C0A91034EFA0EEEB8A31BB20C390B2BB6E01BF9297FAB0A11285B6EA46F4ECCA4953DA1FBC16CC4D07AD0E036F09369CA6F75C4BC432531B5BA984C3F181B0FFDC97B771439C1C4DAD6F2304A87339F2BB549A9F58926CDBE8F3561EDB9A8EF477DD399C9AA57DDEFB97F947AE1F0943F01B2E3DAB8878D7E8C1518EFE5ECA268B27F1EEAC3CBEBD4AD3484F0D45D3C541D3264FD3ED8





0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark end

%APLT1End

%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Helvetica-BoldOblique
%!FontType1-1.0: Helvetica-BoldOblique 1.0000.1.0000

14 dict begin/FontName /Helvetica-BoldOblique def

/PaintType 0 def

/Encoding 256 array 0 1 255{1 index exch/.notdef put}for

dup 33 /D put

dup 34 /a put

dup 35 /t put

dup 36 /space put

dup 37 /S put

dup 38 /m put

dup 39 /p put

dup 40 /l put

dup 41 /i put

dup 42 /n put

dup 43 /g put

dup 44 /s put

dup 45 /c put

dup 46 /h put

dup 47 /e put

dup 48 /M put

dup 49 /o put

dup 50 /d put

dup 51 /R put

dup 52 /u put

readonly def

42/FontType resourcestatus{pop pop false}{true}ifelse

%APLsfntBegin

{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if

/FontType 42 def

/FontMatrix matrix def

/FontBBox[2048 -2050 1 index div -985 2 index div 3255 3 index div 2407 5 -1 roll div]cvx def

/sfnts [<















243F1FF524311FD1371D1FD037471FCD41B80801B21FCB2AB80201B21FCA24B80401400F1FC824811FB537291FB4373B1FB227B80401B21FB141B80401B61FA437811FA384B80401B21FA22AB80401B21FA124B8019AB21FA024B8019AB61F9F243F1F9683B80401B21F9527B80401B21F8227B80401B21F7084B80801B21F6FB3B80801B21F6EB3B802ABB61F6D24261F6224B80101400B1F5D246C1F5C24391F5441B80125B21F4D27B80401B61F4C27CD1F4B41B80401B21F4024B8019AB21F3683B80401B21F3524B80201B21F3224B8019AB61F2C24BB1F2884B80801B21F2241B8040140131F20244C1F1D24261F2CA0961F2C245E1F412AB801A8B748282A2448279636B801F4B21F4D27B801F4B21F9527B801F4B21F6E27B801F4B21F6327BD01A700470029015A00250199B348296FB3B80190B21F83B3B8019AB348283725B803E840121FB327482784274827362748272527482755B80154402C0797076407550733072B072907260721071E071B071408120810080E080C080A080808060804080208000814B8FFE0402B00000100140610000001000604000001000410000001001002000001000200000001000002010802004A00B806008516763F183F123E113946443E113946443E113946443E113946443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B65422B2B2B4B5279B35279EB56456523456023456560234560B08B766818B080622020B1EB794565234520B003266062636820B003266165B079236544B0EB234420B152564565234520B003266062636820B003266165B056236544B0522344B10056455458B156406544B25240524523614459B35045484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200

00>] def

/CharStrings 22 dict dup begin

/.notdef 0 def
/space 1 def
/D 2 def
/M 3 def
/R 4 def
/S 5 def
/a 6 def
/c 7 def
/d 8 def
/e 9 def
/g 10 def
/h 11 def
/i 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/s 18 def
/t 19 def
/u 20 def
/u10FB 21 def
 end readonly def

currentdict dup/FontName get exch definefont pop end

%APLsfntEnd

42/FontType resourcestatus{pop pop true}{false}ifelse

{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if

/FontType 1 def

/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def

/FontBBox{-2050 -985 3255 2407}def

/UniqueID 4082616 def

currentdict currentfile eexec

54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92608F4984E4A5769B1336AE461E05CD208550769783E471D7C20DE95AF973E3C7100591D725B8E15D66A614511E8AACFF5535B67E10FF7D067CC703C2D0FD780666B0A4C0CEC075D41A44CD54A17FD1117ED8ACD6633E577C949A7C71F8816E66CE41F0479350B2659DAD70A8FC6FBBF6CDDBEBCD5037887992F2586B9BC24695A7DD501F4738545F471604C16718A97BE9A4DA10146D55E55D01B338311B68CB6861CA7EBDEF93E68DEA747D745D314D3C97FF39FBA3A45D23C61E9460338BEA50AA59D3B7E3C5661A2453BD95466CEB587D2B55FAD8F41F26C24C9DFB8903751C49875F089941ED4FF518A28F9CC0EA634AB572A3F4446065C120462037D12AC8AA3D690DB85059DE094C1CE9FB3C3A58CB45072B7680EA4E61A4C4ACBF6FD2F22D0BB7B70FD751474408307C0C12EA6B8A73E4B403749884D4F52E028A1194E39E53F43BF9DF3C40502762693E16F7CFB301B2F4F96FA7EA1AAC197CB8C09CAA9FD733589821224E81995DC2E35F78A1FFD0270764E4D126F1DF75C2BB48A5DF8B86FE1F6C6A2D92D054548D00E7BD11526FA72D04A6DEC2DEBB222DD668A9EEB5B0C2E33DCF1617403828AF2A45F20A5B3BD50D48326BD94E1BCC2F76537E2A69BBDB1F50E8670E14B4572AFDD191EACB2927B1BA108FAA7B0FA28BA0F47A8784696552075BF0688D5C6C4F8C73B07058F7A51EC833AB3A90EF4E14C2CF85E60AC446B9ABDD1A8E1C3B06D83D07A6D53E0FBEE4A66A9FF9D575CCAA132D00

6D359641EA1FE6902D371A6772915D25486261A4449B486791AB81A36D0BCC285B9EDFDF9F4ED93E24DC31DBF177A446D9984AC9BFC4F6F82B25A2629F1CD2DB9CEA2FB0E4964B9545FE561F3DC549C6B9C8624581525F232941E0CC3425B2EBDB5B073F9342254CC329C5A3A0F8C84683348E899FB31DE1C82A6E347321AF36F449C7BD2670DBA60744687EA9FCB134F10E376A8898D9A7EEFB503925BC1D5997CE75D37AA4041A2CC6A7B25249459BE801635B206D24EAA6E6854BD1F7104963375BB490D356D7164C02EBB1009B5D3BAF8284DBD5DE5BDA103FA448426EFE4EA113C41FFA3A420D104FC1F528E9F7ECD49407B3908AFC3677F8E1B4056B38CB8ED0390767FB1C4DBD64B01046CEE5A7EB5875893DB595B75B31C21AB47B15C5F44E51BAA4C8E60EE43B8DDC1E01EC3452D87E64CE6BF56D086FDBB14497D2E7D5671A29206E5F824B9C4404E2D90123C2DFFB2818F9B8C739F5D6535E94E20F64E2FD6367756E2F144C30712BEB492DFF81F391BC06DA22AF9CCA256AD5FFC07B8B4A2E5F2DEE8840440888BD8FE40904C9E35D0178D4107BD02BE0CDC1C604B23EC9EECE4F47C33DB3B355EF831713519EFA6ABE3DE974C2FDEA4D7E6A5AB1DAF6131CF8072AD67C53005FED0F61454E3F5E32E408ED406000011AB6092B02766DE30DE86141DD8449C8166033A53E3F1B58A678DC7136076D3A4208BC0445BC1471A76D67F6EA86C4366204435155B134C81AB5E8541446D3DCFF95D1CB39B612CCCD08B4889C90FDC251ED90599529C22BB97A0DD71F7CEDAD5836D65F12FBD451BC2661B81EC671E089CC0550DD2A21FF3C66E1F99CF635221539F2AD75F76D129304E72841F57D940D808A7AA1C6CCDD551BD05564B07DBE0741ECE707B8715B1D3D5F98C6B9680EF0F89CDFD3C0EA278CF64233733B48340591362EB7A7EC35BFBC38DA7A9E31268CE115BBAC864110FBAC652C66D25151ED4801FFC9BA3B1FFCB1685E92CAA3F144A5A5B1DA65FEFEBD219212907D7717A11CAA7A912F35270B7AFD105FC25F9FD28FC4DA1E13CCEBF7E5B5D1EE06B6276A66F8DDB18E184C21F94E341B76733A742A83EC629A360577D5137314955C389F3ACB4ECF42C7DCBB66B893DBDA765618B6C04482B66D78DFFC897D6E71C43471817CA7FA3C95AB62D52AF1472E5D5799A52F31EA042FCC035DE7C226B7587B0DB8567FE86EA209EB9140F01894C816AB3AEB91834262424DE14BE5B3F3C4F3E59E9E99F29A6D56ECB114FA9AF1A82360B48A4FDD4CE28AB0CB58C57B22A450ABDC85B25139B889057C67946169DC29035DA15B9EBEC35E073044650552579EF85350A6AA7CE3D295EBD3AC44231FCE5ADF1755BE24D0824599CD1B2A825048E7A6857303EC7D93AEAD31D7ACDC8FF955DBF12AA620C6EAF5FCC195E99E180532EBFB4A

D9D757A415F722E68CF6897FCE249D90DBE1DF717F0CF06E7E3F52853F05548D01A902225C8C812F44E7BE8F74A1ADAE1635434DCF500F9B93B2EF7EA0BD176AFBE67E27816D458458CC5631C2CC40FB09917D68280F48E573F0EF3EB74479B9C6C3FCBBA71F56CD8AE77867E30C7CB71D5465009D0CB9E9742E4DD2F748F7922A29816AE81207E117BDD756C26FDB8ECB34725528F9D5AEECB847D196D1EFE0201D320F4154FA5719E88D28B2E0AB18DCF64695BF5B12BCCED19AEFF24CE09BFB5484AAB6528EDAAF70132984989FAB6809F519C8F648FDA5CE988F6187EEA4C074E9C2E680843B4A47B131CF1F01C76E146E96695F6C18EE533638B3BAA34408116483084926B568EDD26731FC2BBFE3B4C691C4B6BED78099BC71D3E95F254B013A91A76324E47ECF1C0881110C29D25D3483E5BDFB9DCDDDA7649EF1037D26BD449372AAE442F059259FA1BA7169C10AD8965EABA56EB635F81E15109515BBE39966841D547F76DCF2382888A02EAE7DD536216DF6F2D587463E5DEA5B6F185CD7A2C0E49544A84FBF326334E3AB7AB2A424AAC9D21FE66D29260CD4921842926CA418C914F8582CB3527E2A8DED7D46ADE38BFF25798DA340902E31542A23F8A77DAC397C03B590EF377F4CFEF51A4BABB802D30E0E0D4BE127BC1170DEC59D962B47FC740F47527747D3AF844668AAED3021626CAB4432CE74CC4DA11589B96A36F46622AF10F3D5F3A0A65DDF468047E6F60979DD453F4D85CF6B2412B186901B73D027EBE33E62013768888A1B749C829BA091A9D87D00791C98EEE1F6A16A29D8C654228593152B3D7E322591F68743D1527F12023EC78C37CE606289D8328C95A33E57D45E6366ADF0F9CF6583BBC4493F8134F5C52A118F57F5E159B56E284971E1A8D7E8BC38722B090CC3DD77B0BCD996009691D0AC26A59422E5FF39F882CB1A86EE0F2EE4A7E882D3D795F5C51C8C95C21DBEFE4E4C23C1D2692AA887339221506529966B432CA8D2F2AE6BF6604B3788ED857869DF5E1AB7203AE163F937BCFECA4CDD50F669296D2AA4EAD20759F9DD4D051037249F4714F4517225A16C24C94105564165F249603C7AE1029520CFC0F985452BA594E3751F064E215DE182E91E227B5C4DEF7A9C2903DA711D88A8E67638CC1A3BAE99E9433517F430F3B8F89DC5AE0B498F7983426041E5FA0FCACE0AAA8ECEB6C0AA4601C8EF1DCB0E371BF63C8CAB61A25B71F8C7CAA45AA7EFECC4391D4251DD9F3435B62D3D1B90E1A6EAE277E4ECC85CCBAB7103C35C5E9C2CE0BC69CD9991E0970DF7B33050ECBB3DADA5E07EABABB32752F338226C8DBF5AB2D0831C234ABF27C158D1122983BD495E0B908AA0C74118E803BCC2EB20632DBC50976233065C4B9A1A8D005F983D3246E8E8987B08E344F9A309F6655E709A47652D90163280D2

D75D3438060BEEE7272576C40DC878BF79A21D3D5D5FD044E050FAED8D17B0C94A1874CB732C2A93DABC035959278227811622B3960CD5B69AC63E8AF1D4418983961E3F9A3AD4043759A4CCAB66CC944350B4ADF5FE0AF32F7E8DBD218979E4F88A0B6CF0A7C0FB85B40CA89C9086A15A1E4118ADBE490C0A55095F86C99511A2FBBF2A56A3F9A8026DEE2F4F4AE714C7075529C34B9C38AAE965A4015750D8BBEF7F774805203346E563389823299FA501F37898597D68EB53BE98D16FCE051926EC3E94ACF9A2CBD861B012B68C78F6B9FD4F65D481D639AEDD90D311D465BD7BB906D2E010748199B44D255D1F434175107F785BC0D558C701FE32C341A147F73108ADEEC7B47510645D0BCF1286235612E58ABB0AF0A41A84220F0DE76C9CD28A8FA06A6C28124C9372B7CF44E979EAAECD3C3D5F5729F6B40A75C4017E5BC98A6D867CB393AD9EBF9F772517F74434DF153607285D444C5E300F6A9F46ABD4789DEA8F777C895DACBF24D69DB957AE9A31E035D6080A6AF165564D67C015B6AD84A8C870CC4AA986E38366D27543D22714E9DAF5B1AF615295E6C7152F1265C3E1C99E85375EBAA84E36423347EA1FA807FE8CE766545235415C154A2FE0B1D63205DFE13EDF73DBE2AD63F6CFD076BE3D3C7F734193E938193DD464B3556041894A613C1FA1E236ED8011D0BBE486D4B1B188ABAC9D515468B921B76037EC89F9D069BBD5C5AE3F6F3A964BDB6AF1CFF14A2748E48262E565070ED231A1687CFC65D825B67E4B03BA65AA748555BCED87E36B3A11EEA2A34FEE5FE5672930F1534F8DFA75124A55438D4475427D1E82F093F7940A3001D420929A2EF6B5641F730AF9214E0A7B16F6A440F106A0283BD29A08927365C3EF72C0759F43B8C0EC3E6F4320EF14F4D1991A52A9CA20ACEDBE1E383CC6D9F19F0BBBCA47C0EA3E84CAC180C87119EF484B1074D780193723CF1268B65C8B0873B5B7EA0AE962C5059975EEB7AFC2FD6D629A44FC1FC1C0FC57EDB069B95E6B4838A041E4D102DB198DC83AA85362573258CDFFEE5B2B4401F5BBDAB7D69378C66F8AB62D7DF6D71178C1F61EF649B6E61BCBB071488A3FD670E23C56C51F70E518CD26FFAEEEB3EECF627A1DCA5D4769828492B33AECCDA750A98D0D32930B0A72A1B01451FE5767C3717BB427457933D01E2291045917BE78E69CE86F58B57C209F11AF819481C94C38BA5D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark end

%APLT1End

%RBIEndFontSubset
/Helvetica-BoldOblique cguidfix
/F2.1/Helvetica-BoldOblique renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 664.99988 174.00024 rc
181.45093 126.25531 m
283.42456 126.25531 l
283.42456 77.288895 l
181.45093 77.288895 l
h
181.45093 126.25531 m
f
3 w
1 J
1 j
0 0.039653402 0.942298 sc
1 0 0 -1 4.00032 219.00024 cm
177.45061 92.744934 m
279.42426 92.744934 l
279.42426 141.71135 l
177.45061 141.71135 l
h
177.45061 92.744934 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 232.43774 101.7721 cm
/F1.1[ 12 0 0 -12 0 0]sf
-43.03418 4 m
(!"#"$%&"'\(%\)"*)[ 6.673828 6.673828 6.000000 6.673828 3.996094 6.673828 6.673828 6.673828 3.333984 6.673828 6.673828 6.000000 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
180.73134 60.966644 m
282.70496 60.966644 l
282.70496 12.000214 l
180.73134 12.000214 l
h
180.73134 60.966644 m
f
1 0 0.058871701 sc
1 0 0 -1 4.00032 219.00024 cm
176.73102 158.0336 m
278.70465 158.0336 l
278.70465 207.00003 l
176.73102 207.00003 l
h
176.73102 158.0336 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 231.71815 36.483429 cm
-21.00293 4 m
(+,-./$0)[ 8.666016 6.673828 2.666016 3.333984 6.673828 3.996094 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
435.28162 116.32526 m
455.19327 107.55788 455.19327 93.343178 435.28162 84.575806 c
415.37003 75.80838 383.08701 75.80838 363.17542 84.575806 c
343.26376 93.343178 343.26376 107.55788 363.17542 116.32526 c
383.08701 125.09268 415.37003 125.09268 435.28162 116.32526 c
f
1 w
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
431.28131 102.67498 m
451.19296 111.44236 451.19296 125.65707 431.28131 134.42444 c
411.36972 143.19186 379.0867 143.19186 359.17511 134.42444 c
339.26346 125.65707 339.26346 111.44236 359.17511 102.67498 c
379.0867 93.907562 411.36972 93.907562 431.28131 102.67498 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 399.22852 100.45053 cm
-20.34375 -3.0000076 m
(!/&-\)1-2')[ 6.673828 6.673828 6.673828 2.666016 6.000000 3.333984 2.666016 6.000000 0.000000 ] xS
-30.348633 10.999992 m
(3"&$"\)\)-/,)[ 8.666016 6.673828 6.673828 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
11.000504 23.425751 m
11.000504 114.82977 l
11.000504 121.13665 33.842598 126.25528 61.98732 126.25528 c
90.132042 126.25528 112.97414 121.13665 112.97414 114.82977 c
112.97414 23.425751 l
112.97414 17.118866 90.132042 12.000244 61.98732 12.000244 c
33.842598 12.000244 11.000504 17.118866 11.000504 23.425751 c
f
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
7.0001836 195.57449 m
7.0001836 104.17047 l
7.0001836 97.863594 29.842278 92.744965 57.987 92.744965 c
86.131721 92.744965 108.97382 97.863594 108.97382 104.17047 c
108.97382 195.57449 l
108.97382 201.88138 86.131721 207 57.987 207 c
29.842278 207 7.0001836 201.88138 7.0001836 195.57449 c
7.0001836 104.17047 m
7.0001836 110.47735 29.842278 115.59598 57.987 115.59598 c
86.131721 115.59598 108.97382 110.47735 108.97382 104.17047 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 61.98732 69.127762 cm
/F1.1[ 10 0 0 -10 0 0]sf
-45.986816 3.7127533 m
(4'!/1\)'/.'*%1%)[ 3.891602 2.778320 5.561523 5.561523 2.778320 5.000000 2.778320 5.561523 2.778320 2.778320 5.561523 5.561523 2.778320 0.000000 ] xS
-45.986816 15.712753 m
(4'5-&6'$"*7,*%,28)[ 3.891602 2.778320 7.221680 2.221680 5.561523 5.561523 2.778320 3.330078 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 5.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
510.67151 126.25528 m
614.23853 126.25528 l
627.4314 126.25528 638.13861 100.66215 638.13861 69.127762 c
638.13861 37.593369 627.4314 12.000244 614.23853 12.000244 c
510.67151 12.000244 l
478.80472 69.127762 l
h
510.67151 126.25528 m
f
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
506.6712 92.744965 m
610.23822 92.744965 l
623.43109 92.744965 634.13831 118.3381 634.13831 149.87248 c
634.13831 181.40688 623.43109 207 610.23822 207 c
506.6712 207 l
474.80441 149.87248 l
h
506.6712 92.744965 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 348.38495 151.75865 cm
/F2.1[ 20 0 0 -20 0 0]sf
-307.61523 7 m
(!"#"$$$$$$$$$$$$%"&'\(\)*+$,-./&/$$$$$$$$012/\($$$$$$$$$$$$$$$$$$$$3/,4\(#,)[ 14.443359 11.123047 6.660156 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 13.339844 11.123047 17.783203 12.216797 5.556641 5.556641 12.216797 12.216797 5.556641 11.123047 11.123047 12.216797 11.123047 17.783203 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 16.660156 12.216797 12.216797 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 14.443359 11.123047 11.123047 12.216797 5.556641 6.660156 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
108.97382 149.87248 m
120.87383 149.87248 l
127.06923 149.87248 l
127.06923 125.38921 l
127.06923 116.20802 l
164.05069 116.69994 l
166.05069 116.69994 l
S
CM
178.05101 102.3003 m
170.05101 105.3003 l
170.05101 99.300301 l
h
178.05101 102.3003 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
174.05069 116.69994 m
166.05069 113.69994 l
166.05069 119.69994 l
h
174.05069 116.69994 m
S
1 J
1 j
108.97382 149.87248 m
120.87383 149.87248 l
127.06923 149.87248 l
127.06923 182.51682 l
160.80768 182.51682 l
163.33101 182.51682 l
165.33101 182.51682 l
S
CM
177.33133 36.483429 m
169.33133 39.483429 l
169.33133 33.483429 l
h
177.33133 36.483429 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
173.33101 182.51682 m
165.33101 179.51682 l
165.33101 185.51682 l
h
173.33101 182.51682 m
S
1 J
1 j
280.9241 116.44739 m
292.8241 116.44739 l
311 116 l
337 116 l
337 117 l
331.93387 117.18188 l
333.93387 117.18188 l
S
CM
345.93417 101.81837 m
337.93417 104.81837 l
337.93417 98.818367 l
h
345.93417 101.81837 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
341.93387 117.18188 m
333.93387 114.18188 l
333.93387 120.18188 l
h
341.93387 117.18188 m
S
5 w
1 J
1 j
528.47797 100.4426 m
528.47797 182.36784 l
603.37634 184.77734 l
S
3 w
0 0.133312 1 sc
528.47797 121.93633 m
536.46143 126.79716 l
542.29211 134.25179 l
548.12274 142.53465 l
553.95355 150.81746 l
561.24188 160.75694 l
572.17432 166.55499 l
580.92047 169.86813 l
587.48035 172.35301 l
601.00708 174.00957 l
S
1 0.0353516 0 sc
530.44714 109.40304 m
540.61688 112.6032 l
550.09186 118.40123 l
559.784 121.82741 l
558.83801 126.68414 l
566.34375 132.59515 l
572.90326 137.56482 l
582.37793 142.53459 l
589.66638 148.33263 l
593.31055 152.47404 l
601.00677 154.95892 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 515.35083 76.390244 cm
/F1.1[ 12 0 0 -12 0 0]sf
-13.333008 4 m
(9$$/$)[ 8.003906 3.996094 3.996094 6.673828 0.000000 ] xS
1 0 0 -1 569.72736 23.455246 cm
-31.7323 4 m
(:%0;<"'\)-=")[ 8.003906 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 6.000000 2.666016 6.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
435.28162 50.325241 m
455.19327 41.557877 455.19327 27.343155 435.28162 18.57579 c
415.37003 9.8083649 383.08701 9.8083649 363.17542 18.57579 c
343.26376 27.343155 343.26376 41.557877 363.17542 50.325241 c
383.08701 59.092667 415.37003 59.092667 435.28162 50.325241 c
f
1 w
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
431.28131 168.675 m
451.19296 177.44237 451.19296 191.65709 431.28131 200.42445 c
411.36972 209.19188 379.0867 209.19188 359.17511 200.42445 c
339.26346 191.65709 339.26346 177.44237 359.17511 168.675 c
379.0867 159.90758 411.36972 159.90758 431.28131 168.675 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 399.22852 34.450516 cm
-20.34375 -3 m
(!/&-\)1-2')[ 6.673828 6.673828 6.673828 2.666016 6.000000 3.333984 2.666016 6.000000 0.000000 ] xS
-30.348633 11 m
(3"&$"\)\)-/,)[ 8.666016 6.673828 6.673828 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
280.01813 184.40617 m
310.09406 183.95879 l
333.09918 183.95879 l
S
CM
345.04181 34.086411 m
337.45718 38.02005 l
336.74088 32.062973 l
h
345.04181 34.086411 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
341.0415 184.91383 m
333.45688 180.98019 l
332.74057 186.93727 l
h
341.0415 184.91383 m
S
1 J
1 j
447 183.44739 m
477.0759 183 l
488.1694 183 l
S
CM
500.11389 35.045151 m
492.52917 38.978622 l
491.81299 33.02153 l
h
500.11389 35.045151 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
496.11359 183.95509 m
488.52887 180.02162 l
487.81268 185.97871 l
h
496.11359 183.95509 m
S
1 J
1 j
447.21503 118.64777 m
477.29092 118.20038 l
488.38602 118.20038 l
S
CM
500.32892 99.84481 m
492.74429 103.77843 l
492.02798 97.821342 l
h
500.32892 99.84481 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
496.32861 119.15543 m
488.74399 115.22181 l
488.02768 121.1789 l
h
496.32861 119.15543 m
S
ep
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 1851 5652 a Fq(1)p 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fr(4)120 b(R)l(esearch)35 b(Questions)p 0 TeXcolorgray
518 762 a Fp(\017)p 0 TeXcolorgray 46 w Fq(Can)29 b(we)f(validate)h
(the)g(results)f(for)h(least-squares)g(regression)e(shown)i(by)g(Ma)609
875 y(et)c(al.)h(?)p 0 TeXcolorgray 518 1062 a Fp(\017)p
0 TeXcolorgray 46 w Fq(W)n(ill)j(a)f(linear)g(regression)g(based)g
(sampling)g(distribution)j(improve)c(our)h(per-)609 1175
y(formance)c(in)h(classi\002cation?)p 0 TeXcolorgray
518 1363 a Fp(\017)p 0 TeXcolorgray 46 w Fq(Can)35 b(leverage)d(based)j
(sampling)f(be)g(generalized)e(and)j(used)f(for)g(classi\002ca-)609
1476 y(tion?)382 1778 y Fr(5)120 b(Datasets)382 1992
y Fq(These)36 b(datasets)h(are)f(drawn)f(from)h(distributions)i
(de\002ned)e(in)g(Ma)f(et)h(al.)g([)p Fo(?)p Fq(])h(and)382
2105 y(characterised)25 b(by)p 0 TeXcolorgray 518 2342
a Fp(\017)p 0 TeXcolorgray 46 w Fq(GA:)h(Nearly)e(uniform)g
(leverage-scores)p 0 TeXcolorgray 518 2530 a Fp(\017)p
0 TeXcolorgray 46 w Fq(T3:)h(Mildly)g(non-uniform)f(leverage-scores)p
0 TeXcolorgray 518 2718 a Fp(\017)p 0 TeXcolorgray 46
w Fq(T1:)h(V)-8 b(ery)26 b(non-uniform)d(leverage-scores)p
0 TeXcolorgray 382 2914 a
SDict begin H.S end
 382 2914 a 382 2914 a
SDict begin 13.6 H.A end
 382 2914
a 382 2914 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.2) cvn /DEST pdfmark
end
 382 2914 a 984 x @beginspecial -236 @llx
227 @lly 849 @urx 564 @ury 3586 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/Data_distributions.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/Tex/02460_poster_template/images/Data_distributions.eps
%%CreationDate: 05/19/2014  14:29:35
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -236   227   849   564
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -236   227   849   564
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2832 6768 csm

    0     0 13020  4044 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
1693 3599 mt 4471 3599 L
1693  541 mt 4471  541 L
1693 3599 mt 1693  541 L
4471 3599 mt 4471  541 L
1693 3599 mt 4471 3599 L
1693 3599 mt 1693  541 L
1693 3599 mt 1693 3568 L
1693  541 mt 1693  571 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1503 3794 mt 
(-10) s
2387 3599 mt 2387 3568 L
2387  541 mt 2387  571 L
2242 3794 mt 
(-5) s
3082 3599 mt 3082 3568 L
3082  541 mt 3082  571 L
3037 3794 mt 
(0) s
3776 3599 mt 3776 3568 L
3776  541 mt 3776  571 L
3731 3794 mt 
(5) s
4471 3599 mt 4471 3568 L
4471  541 mt 4471  571 L
4381 3794 mt 
(10) s
1693 3599 mt 1723 3599 L
4471 3599 mt 4440 3599 L
1377 3663 mt 
(-10) s
1693 2834 mt 1723 2834 L
4471 2834 mt 4440 2834 L
1467 2898 mt 
(-5) s
1693 2070 mt 1723 2070 L
4471 2070 mt 4440 2070 L
1568 2134 mt 
(0) s
1693 1305 mt 1723 1305 L
4471 1305 mt 4440 1305 L
1568 1369 mt 
(5) s
1693  541 mt 1723  541 L
4471  541 mt 4440  541 L
1478  605 mt 
(10) s
1693 3599 mt 4471 3599 L
1693  541 mt 4471  541 L
1693 3599 mt 1693  541 L
4471 3599 mt 4471  541 L
gs 1693 541 2779 3059 rc
gs 2486 1500 1124 1100 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
  36   36 3017 1997 FO
  36   36 3093 1942 FO
  36   36 2873 2104 FO
  36   36 3204 2057 FO
  36   36 3130 2088 FO
  36   36 2943 2056 FO
  36   36 3099 2111 FO
  36   36 2957 2249 FO
  36   36 3343 2160 FO
  36   36 3216 1806 FO
  36   36 3167 1986 FO
  36   36 3196 2031 FO
  36   36 3248 1817 FO
  36   36 3214 2005 FO
  36   36 3148 1870 FO
  36   36 3206 2267 FO
  36   36 3204 1800 FO
  36   36 3047 1997 FO
  36   36 3087 2035 FO
  36   36 3059 2168 FO
  36   36 3161 2197 FO
  36   36 2989 2310 FO
  36   36 2922 2213 FO
  36   36 3018 2233 FO
  36   36 2943 2353 FO
  36   36 2788 2165 FO
  36   36 3240 1918 FO
  36   36 3483 2084 FO
  36   36 3117 2088 FO
  36   36 3090 1841 FO
  36   36 3045 2318 FO
  36   36 3110 2152 FO
  36   36 3199 2080 FO
  36   36 2940 2220 FO
  36   36 3290 1932 FO
  36   36 3072 2174 FO
  36   36 3148 1843 FO
  36   36 3087 2247 FO
  36   36 3041 2276 FO
  36   36 3071 2010 FO
  36   36 3149 2056 FO
  36   36 3152 1880 FO
  36   36 3311 2046 FO
  36   36 2892 2245 FO
  36   36 2919 2117 FO
  36   36 3097 2000 FO
  36   36 2852 1855 FO
  36   36 3046 2097 FO
  36   36 2904 2149 FO
  36   36 3191 2035 FO
  36   36 3251 2264 FO
  36   36 2990 2360 FO
  36   36 3186 1914 FO
  36   36 2990 2144 FO
  36   36 3152 2077 FO
  36   36 3021 2158 FO
  36   36 2802 2303 FO
  36   36 3066 1815 FO
  36   36 3027 2231 FO
  36   36 3139 1732 FO
  36   36 3195 1898 FO
  36   36 3123 2275 FO
  36   36 3417 2031 FO
  36   36 2975 1966 FO
  36   36 3096 2047 FO
  36   36 3053 2271 FO
  36   36 3107 2254 FO
  36   36 2905 2258 FO
  36   36 3044 2085 FO
  36   36 3005 2132 FO
  36   36 3179 1946 FO
  36   36 3158 1892 FO
  36   36 2942 2226 FO
  36   36 2926 2102 FO
  36   36 2982 2465 FO
  36   36 2875 2342 FO
  36   36 3171 1971 FO
  36   36 3041 2227 FO
  36   36 3188 1842 FO
  36   36 3204 1977 FO
  36   36 2963 2344 FO
  36   36 3207 2016 FO
  36   36 3035 2215 FO
  36   36 3053 2128 FO
  36   36 3097 2243 FO
  36   36 2774 2355 FO
  36   36 3293 1802 FO
  36   36 3134 2171 FO
  36   36 2958 2125 FO
  36   36 3124 2160 FO
  36   36 3287 2035 FO
  36   36 3276 1979 FO
  36   36 3203 1896 FO
  36   36 3187 1984 FO
  36   36 3043 2073 FO
  36   36 2986 2013 FO
  36   36 3168 1857 FO
  36   36 3322 1758 FO
  36   36 3044 2340 FO
  36   36 3301 1884 FO
  36   36 3037 1731 FO
  36   36 3248 1620 FO
  36   36 3119 2140 FO
  36   36 3269 2059 FO
  36   36 3029 1921 FO
  36   36 3254 2028 FO
  36   36 3371 1938 FO
  36   36 3092 2040 FO
  36   36 3083 2222 FO
  36   36 3147 2127 FO
  36   36 3039 2203 FO
  36   36 3142 1988 FO
  36   36 3126 2299 FO
  36   36 3063 1998 FO
  36   36 3012 2015 FO
  36   36 3145 2004 FO
  36   36 2922 2206 FO
  36   36 2950 2221 FO
  36   36 3135 2090 FO
  36   36 2983 2063 FO
  36   36 2943 2267 FO
  36   36 3026 2164 FO
  36   36 3074 2105 FO
  36   36 2902 2224 FO
  36   36 3308 1873 FO
  36   36 3069 2076 FO
  36   36 3101 2063 FO
  36   36 3154 2015 FO
  36   36 3129 1891 FO
  36   36 2959 2133 FO
  36   36 3143 1820 FO
  36   36 3237 1965 FO
  36   36 2958 2131 FO
  36   36 3005 2260 FO
  36   36 3185 1897 FO
  36   36 3034 1972 FO
  36   36 3244 1802 FO
  36   36 3135 2290 FO
  36   36 2926 2193 FO
  36   36 2739 2140 FO
  36   36 2979 2119 FO
  36   36 2877 2142 FO
  36   36 3010 2034 FO
  36   36 2911 2200 FO
  36   36 3023 2279 FO
  36   36 3138 2052 FO
  36   36 2912 2086 FO
  36   36 3009 1993 FO
  36   36 3139 2098 FO
  36   36 2815 2268 FO
  36   36 3119 2086 FO
  36   36 3080 2133 FO
  36   36 2906 1847 FO
  36   36 3094 2146 FO
  36   36 3214 2113 FO
  36   36 2983 1964 FO
  36   36 3023 1902 FO
  36   36 3274 1942 FO
  36   36 3087 2211 FO
  36   36 3297 2082 FO
  36   36 3090 2197 FO
  36   36 3270 2066 FO
  36   36 3216 1816 FO
  36   36 3462 1979 FO
  36   36 2986 2156 FO
  36   36 2964 2264 FO
  36   36 3201 1981 FO
  36   36 3207 1989 FO
  36   36 3154 1772 FO
  36   36 2952 2177 FO
  36   36 3055 2051 FO
  36   36 2943 2269 FO
  36   36 2989 1915 FO
  36   36 3243 1815 FO
  36   36 3089 2131 FO
  36   36 3010 1913 FO
  36   36 2781 2470 FO
  36   36 2917 2302 FO
  36   36 3075 2106 FO
  36   36 3076 2251 FO
  36   36 3061 2007 FO
  36   36 2795 2217 FO
  36   36 3151 1961 FO
  36   36 3049 2155 FO
  36   36 3104 2232 FO
  36   36 3039 1949 FO
  36   36 2972 2129 FO
  36   36 2849 2310 FO
  36   36 2883 2210 FO
  36   36 3234 1788 FO
  36   36 2879 2055 FO
  36   36 3065 1995 FO
  36   36 3297 2016 FO
  36   36 3301 1956 FO
  36   36 2921 2277 FO
  36   36 3269 1824 FO
  36   36 3121 2060 FO
  36   36 3185 1945 FO
  36   36 2861 2073 FO
  36   36 2963 2045 FO
  36   36 3089 1929 FO
  36   36 3118 2087 FO
  36   36 3111 1906 FO
  36   36 3294 2061 FO
  36   36 3270 1905 FO
  36   36 2867 2200 FO
  36   36 3123 2048 FO
  36   36 3162 2209 FO
  36   36 2885 2241 FO
  36   36 3163 1937 FO
  36   36 2998 2173 FO
  36   36 3306 1929 FO
  36   36 2853 2192 FO
  36   36 3187 1945 FO
  36   36 3177 1896 FO
  36   36 3038 2091 FO
  36   36 3092 2054 FO
  36   36 3202 2006 FO
  36   36 2976 2259 FO
  36   36 2913 2191 FO
  36   36 3138 2105 FO
  36   36 3316 1889 FO
  36   36 3110 2176 FO
  36   36 3134 1966 FO
  36   36 3076 2131 FO
  36   36 3165 1907 FO
  36   36 3288 1833 FO
  36   36 3067 2310 FO
  36   36 3124 1985 FO
  36   36 2802 2272 FO
  36   36 3202 2262 FO
  36   36 3087 2280 FO
  36   36 3288 1972 FO
  36   36 3007 2198 FO
  36   36 3132 2101 FO
  36   36 3161 1746 FO
  36   36 3523 1885 FO
  36   36 3030 1946 FO
  36   36 2766 2219 FO
  36   36 2977 2026 FO
  36   36 2974 2129 FO
  36   36 2996 2087 FO
  36   36 2955 2300 FO
  36   36 3044 2287 FO
  36   36 3071 2078 FO
  36   36 3395 1854 FO
  36   36 3082 2183 FO
  36   36 3036 2060 FO
  36   36 3157 2007 FO
  36   36 3316 1756 FO
  36   36 3103 2011 FO
  36   36 2796 2405 FO
  36   36 2837 2164 FO
  36   36 3269 2055 FO
  36   36 3011 2053 FO
  36   36 3181 2300 FO
  36   36 3140 2065 FO
  36   36 3302 1904 FO
  36   36 3076 2114 FO
  36   36 2999 2186 FO
  36   36 3007 2018 FO
  36   36 2994 2154 FO
  36   36 2993 2124 FO
  36   36 2864 1994 FO
  36   36 3204 2092 FO
  36   36 3092 1992 FO
  36   36 2860 2526 FO
  36   36 3176 2176 FO
  36   36 3010 2099 FO
  36   36 3198 2073 FO
  36   36 2949 2067 FO
  36   36 3296 2114 FO
  36   36 3111 2207 FO
  36   36 3224 1803 FO
  36   36 3078 2048 FO
  36   36 3187 2009 FO
  36   36 2639 2090 FO
  36   36 3117 2232 FO
  36   36 2721 2410 FO
  36   36 3202 2052 FO
  36   36 3169 2311 FO
  36   36 3085 2166 FO
  36   36 3096 1911 FO
  36   36 3013 2146 FO
  36   36 2999 2319 FO
  36   36 2997 2411 FO
  36   36 3024 2150 FO
  36   36 3077 2156 FO
  36   36 3027 1983 FO
  36   36 3075 2043 FO
  36   36 3247 1997 FO
  36   36 2986 2160 FO
  36   36 3080 2185 FO
  36   36 3225 2229 FO
  36   36 2979 2187 FO
  36   36 3083 2122 FO
  36   36 3030 1982 FO
  36   36 3214 1895 FO
  36   36 3130 2024 FO
  36   36 3169 2023 FO
  36   36 3141 2071 FO
  36   36 3226 1844 FO
  36   36 3174 2087 FO
  36   36 2972 2379 FO
  36   36 3183 2238 FO
  36   36 2989 1920 FO
  36   36 3138 1986 FO
  36   36 3334 1911 FO
  36   36 3021 2036 FO
  36   36 3230 1771 FO
  36   36 3131 1975 FO
  36   36 2894 2312 FO
  36   36 3108 2129 FO
  36   36 2948 2181 FO
  36   36 3111 2111 FO
  36   36 3126 1979 FO
  36   36 3195 2073 FO
  36   36 3076 2170 FO
  36   36 2977 2074 FO
  36   36 3179 2066 FO
  36   36 3425 1610 FO
  36   36 3126 2072 FO
  36   36 3454 1678 FO
  36   36 3160 1889 FO
  36   36 3179 2096 FO
  36   36 3246 1964 FO
  36   36 3072 1914 FO
  36   36 3299 1821 FO
  36   36 2901 2046 FO
  36   36 3056 2022 FO
  36   36 3124 2115 FO
  36   36 3110 2259 FO
  36   36 3059 2091 FO
  36   36 2951 2035 FO
  36   36 3256 1951 FO
  36   36 2862 2338 FO
  36   36 3240 2068 FO
  36   36 3052 2133 FO
  36   36 3302 1996 FO
  36   36 2996 2337 FO
  36   36 3369 1818 FO
  36   36 3074 1971 FO
  36   36 3023 2069 FO
  36   36 2873 2231 FO
  36   36 3081 2125 FO
  36   36 2847 2108 FO
  36   36 3240 1725 FO
  36   36 3157 2069 FO
  36   36 3333 1977 FO
  36   36 2993 2235 FO
  36   36 3186 2292 FO
  36   36 3142 2055 FO
  36   36 2961 1929 FO
  36   36 3150 2171 FO
  36   36 3082 1944 FO
  36   36 3020 1995 FO
  36   36 3120 2142 FO
  36   36 3017 1983 FO
  36   36 3078 2029 FO
  36   36 3128 2114 FO
  36   36 3055 2364 FO
  36   36 3020 2138 FO
  36   36 3155 1834 FO
  36   36 3010 1975 FO
  36   36 2971 2067 FO
  36   36 2886 2292 FO
  36   36 2943 1957 FO
  36   36 3536 1937 FO
  36   36 2994 2305 FO
  36   36 3111 2091 FO
  36   36 3155 1948 FO
  36   36 3227 1974 FO
  36   36 3285 1846 FO
  36   36 3153 2074 FO
  36   36 3137 2249 FO
  36   36 2997 2108 FO
  36   36 3087 1995 FO
  36   36 3266 2068 FO
  36   36 3057 2293 FO
  36   36 3185 1971 FO
  36   36 2915 2196 FO
  36   36 3120 2086 FO
  36   36 3161 2083 FO
  36   36 3206 2227 FO
  36   36 3090 1991 FO
  36   36 2978 2225 FO
  36   36 3130 1931 FO
  36   36 3133 2121 FO
  36   36 3262 1958 FO
  36   36 2989 2186 FO
  36   36 3251 2206 FO
  36   36 3004 2455 FO
  36   36 3096 2068 FO
  36   36 2937 2031 FO
  36   36 3133 2048 FO
  36   36 2928 2075 FO
  36   36 3114 2179 FO
  36   36 3155 2262 FO
  36   36 2933 1916 FO
  36   36 3160 2051 FO
  36   36 3147 1970 FO
  36   36 3035 2301 FO
  36   36 3010 2148 FO
  36   36 3039 1939 FO
  36   36 2933 2033 FO
  36   36 3065 2108 FO
  36   36 2899 2191 FO
  36   36 3044 2187 FO
  36   36 3444 1874 FO
  36   36 2897 1918 FO
  36   36 3220 1989 FO
  36   36 3321 1952 FO
  36   36 3236 1945 FO
  36   36 3074 2091 FO
  36   36 2838 2131 FO
  36   36 3208 1917 FO
  36   36 3122 1849 FO
  36   36 2940 2330 FO
  36   36 2860 2224 FO
  36   36 3056 1991 FO
  36   36 3347 2088 FO
  36   36 2983 2106 FO
  36   36 2979 2260 FO
  36   36 2932 2007 FO
  36   36 3159 2064 FO
  36   36 3303 1715 FO
  36   36 3413 1855 FO
  36   36 2827 1988 FO
  36   36 2866 2301 FO
  36   36 3176 2006 FO
  36   36 2559 2391 FO
  36   36 3065 2141 FO
  36   36 3026 1839 FO
  36   36 3287 2055 FO
  36   36 3358 1875 FO
  36   36 3089 2167 FO
  36   36 3191 1937 FO
  36   36 3033 2058 FO
  36   36 2952 2059 FO
  36   36 3229 1865 FO
  36   36 2734 2372 FO
  36   36 3124 2366 FO
  36   36 3159 2200 FO
  36   36 3082 1985 FO
  36   36 3015 2264 FO
  36   36 3022 2307 FO
  36   36 2934 2082 FO
  36   36 2916 2152 FO
  36   36 3186 2104 FO
  36   36 3259 1982 FO
  36   36 3109 2201 FO
  36   36 3384 1885 FO
  36   36 2797 2222 FO
  36   36 3169 1979 FO
  36   36 3052 1981 FO
  36   36 3037 2021 FO
  36   36 2946 2050 FO
  36   36 3099 2198 FO
  36   36 3066 2158 FO
  36   36 3104 2095 FO
  36   36 2899 2235 FO
  36   36 2948 2045 FO
  36   36 2916 2314 FO
  36   36 2854 2206 FO
  36   36 3063 1844 FO
  36   36 3013 2248 FO
  36   36 2907 2276 FO
  36   36 2858 2091 FO
  36   36 2833 2240 FO
  36   36 3163 2105 FO
  36   36 3055 2071 FO
  36   36 2995 2076 FO
  36   36 3029 2346 FO
  36   36 3060 2011 FO
  36   36 2988 2036 FO
  36   36 2902 2170 FO
  36   36 3171 1992 FO
  36   36 3044 2233 FO
  36   36 2967 2054 FO
  36   36 2960 2024 FO
  36   36 3298 1913 FO
  36   36 3167 1894 FO
  36   36 3284 1885 FO
  36   36 3235 2137 FO
  36   36 3299 2074 FO
  36   36 2910 2294 FO
  36   36 3002 2117 FO
  36   36 3040 2057 FO
  36   36 3019 2216 FO
  36   36 3027 1879 FO
  36   36 2965 2022 FO
  36   36 3039 2139 FO
  36   36 3047 2164 FO
  36   36 3055 2317 FO
  36   36 3320 1871 FO
  36   36 3166 1821 FO
  36   36 3058 2120 FO
  36   36 3073 1978 FO
  36   36 3236 2057 FO
  36   36 2832 2232 FO
  36   36 3171 2216 FO
  36   36 3150 2012 FO
  36   36 3160 2026 FO
  36   36 3415 1909 FO
  36   36 3008 2132 FO
  36   36 3062 2187 FO
  36   36 3099 2145 FO
  36   36 3086 1937 FO
  36   36 3120 2034 FO
  36   36 3065 2291 FO
  36   36 3080 2020 FO
  36   36 3166 1914 FO
  36   36 3069 2105 FO
  36   36 3039 2097 FO
  36   36 3123 2204 FO
  36   36 3224 2103 FO
  36   36 3067 2149 FO
  36   36 3116 2189 FO
  36   36 2990 2065 FO
  36   36 3029 2003 FO
  36   36 3174 2212 FO
  36   36 2899 2230 FO
  36   36 3394 1881 FO
  36   36 2863 2246 FO
  36   36 3246 2125 FO
  36   36 3346 2127 FO
  36   36 3217 2093 FO
  36   36 2933 1993 FO
  36   36 2768 2226 FO
  36   36 3219 2101 FO
  36   36 3201 1916 FO
  36   36 3133 1870 FO
  36   36 2955 2186 FO
  36   36 3250 1880 FO
  36   36 3189 2000 FO
  36   36 3084 2040 FO
  36   36 3024 2079 FO
  36   36 3099 2122 FO
  36   36 3057 2114 FO
  36   36 2874 2145 FO
  36   36 2957 2020 FO
  36   36 3070 2120 FO
  36   36 3196 1984 FO
  36   36 3203 1800 FO
  36   36 3131 2080 FO
  36   36 3062 2110 FO
  36   36 3240 1947 FO
  36   36 3047 2081 FO
  36   36 2689 2402 FO
  36   36 3029 1975 FO
  36   36 3110 1867 FO
  36   36 2961 2137 FO
  36   36 2997 2057 FO
  36   36 3224 2058 FO
  36   36 3136 2189 FO
  36   36 2964 1883 FO
  36   36 3158 2196 FO
  36   36 3044 2068 FO
  36   36 3073 2095 FO
  36   36 3072 2130 FO
  36   36 3039 1919 FO
  36   36 3041 1903 FO
  36   36 2839 2220 FO
  36   36 2952 2136 FO
  36   36 3166 2120 FO
  36   36 3346 1860 FO
  36   36 3044 2050 FO
  36   36 2924 2051 FO
  36   36 3363 1809 FO
  36   36 3064 2074 FO
  36   36 3075 2041 FO
  36   36 3154 2146 FO
  36   36 3185 1907 FO
  36   36 3232 1956 FO
  36   36 3166 2001 FO
  36   36 3237 2024 FO
  36   36 3053 1988 FO
  36   36 2970 2059 FO
  36   36 2970 2024 FO
  36   36 3205 1973 FO
  36   36 2903 2334 FO
  36   36 3108 2025 FO
  36   36 2986 2033 FO
  36   36 3246 2034 FO
  36   36 3160 2098 FO
  36   36 2990 2136 FO
  36   36 2983 1982 FO
  36   36 2850 2306 FO
  36   36 3178 2013 FO
  36   36 3155 2051 FO
  36   36 3180 2289 FO
  36   36 2908 2120 FO
  36   36 3025 1987 FO
  36   36 3138 2142 FO
  36   36 3074 1968 FO
  36   36 3078 2001 FO
  36   36 3123 1914 FO
  36   36 3122 2093 FO
  36   36 2773 2252 FO
  36   36 3095 1999 FO
  36   36 3057 1833 FO
  36   36 3005 2253 FO
  36   36 3089 1809 FO
  36   36 3102 2168 FO
  36   36 2846 2087 FO
  36   36 3337 2045 FO
  36   36 3096 2101 FO
  36   36 3058 1956 FO
  36   36 2864 2053 FO
  36   36 2944 2202 FO
  36   36 2978 1949 FO
  36   36 3125 2180 FO
  36   36 3370 2088 FO
  36   36 2905 2238 FO
  36   36 3190 1935 FO
  36   36 3209 1842 FO
  36   36 2927 1965 FO
  36   36 2914 2228 FO
  36   36 3111 2105 FO
  36   36 3248 1961 FO
  36   36 3072 2150 FO
  36   36 3152 1982 FO
  36   36 3348 2079 FO
  36   36 2935 1978 FO
  36   36 2982 2180 FO
  36   36 3289 2117 FO
  36   36 3219 1788 FO
  36   36 3316 1833 FO
  36   36 2862 2170 FO
  36   36 3076 1891 FO
  36   36 3057 1977 FO
  36   36 3087 2101 FO
  36   36 3344 1890 FO
  36   36 2996 2058 FO
  36   36 3037 2149 FO
  36   36 2863 2091 FO
  36   36 3111 2354 FO
  36   36 3201 1858 FO
  36   36 3096 2235 FO
  36   36 3255 1896 FO
  36   36 3076 1926 FO
  36   36 3140 1846 FO
  36   36 3323 2096 FO
  36   36 3032 2141 FO
  36   36 3091 2142 FO
  36   36 3266 2194 FO
  36   36 3095 2063 FO
  36   36 3085 2205 FO
  36   36 3158 1996 FO
  36   36 2928 2183 FO
  36   36 3016 2369 FO
  36   36 3021 2140 FO
  36   36 3055 1987 FO
  36   36 3157 2154 FO
  36   36 3135 2142 FO
  36   36 3123 2261 FO
  36   36 3228 1901 FO
  36   36 3117 2270 FO
  36   36 2912 2138 FO
  36   36 3111 1960 FO
  36   36 2916 2151 FO
  36   36 3187 1784 FO
  36   36 3043 2086 FO
  36   36 3440 1949 FO
  36   36 3187 2163 FO
  36   36 3156 2093 FO
  36   36 3213 2143 FO
  36   36 3125 2013 FO
  36   36 3074 1918 FO
  36   36 3177 1887 FO
  36   36 2987 2168 FO
  36   36 3151 1896 FO
  36   36 2982 2243 FO
  36   36 3189 1596 FO
  36   36 3008 2032 FO
  36   36 3119 2236 FO
  36   36 2948 2039 FO
  36   36 3066 2193 FO
  36   36 3082 1906 FO
  36   36 3134 2097 FO
  36   36 3142 2375 FO
  36   36 3087 2094 FO
  36   36 2964 2447 FO
  36   36 3226 2113 FO
  36   36 2988 2150 FO
  36   36 2998 2171 FO
  36   36 3087 2039 FO
  36   36 2895 2202 FO
  36   36 3195 1896 FO
  36   36 2986 2131 FO
  36   36 2993 2309 FO
  36   36 3100 2031 FO
  36   36 3113 2192 FO
  36   36 3014 2148 FO
  36   36 2937 2385 FO
  36   36 3237 2004 FO
  36   36 3051 2234 FO
  36   36 2733 2319 FO
  36   36 2826 2288 FO
  36   36 2853 2096 FO
  36   36 3259 1936 FO
  36   36 3120 1697 FO
  36   36 3064 2018 FO
  36   36 3097 2081 FO
  36   36 2997 2181 FO
  36   36 3055 2282 FO
  36   36 3104 1973 FO
  36   36 3191 1908 FO
  36   36 2881 2216 FO
  36   36 2921 2110 FO
  36   36 3037 2332 FO
  36   36 3020 2031 FO
  36   36 3229 1839 FO
  36   36 2869 2073 FO
  36   36 2837 2057 FO
  36   36 3054 2054 FO
  36   36 3002 2056 FO
  36   36 2928 2213 FO
  36   36 3009 2125 FO
  36   36 2977 2071 FO
  36   36 3011 1978 FO
  36   36 3043 1903 FO
  36   36 3104 2126 FO
  36   36 2836 2019 FO
  36   36 3026 1968 FO
  36   36 3043 2097 FO
  36   36 2939 2484 FO
  36   36 2743 1932 FO
  36   36 2763 2222 FO
  36   36 3032 2078 FO
  36   36 2976 2151 FO
  36   36 3035 2081 FO
  36   36 2854 2153 FO
  36   36 3118 2058 FO
  36   36 3044 2161 FO
  36   36 3331 1995 FO
  36   36 3010 2150 FO
  36   36 3148 1943 FO
  36   36 2729 2274 FO
  36   36 3186 2145 FO
  36   36 3136 1939 FO
  36   36 3311 1928 FO
  36   36 3150 1833 FO
  36   36 3174 1818 FO
  36   36 2974 1974 FO
  36   36 3122 2237 FO
  36   36 3122 2011 FO
  36   36 3168 1827 FO
  36   36 3092 1763 FO
  36   36 2823 2243 FO
  36   36 3231 1799 FO
  36   36 3133 2094 FO
  36   36 3167 2063 FO
  36   36 3111 2117 FO
  36   36 3088 2060 FO
  36   36 3046 2225 FO
  36   36 2985 2375 FO
  36   36 3137 2051 FO
  36   36 2976 2224 FO
  36   36 2938 1969 FO
  36   36 3168 1979 FO
  36   36 3043 2152 FO
  36   36 3046 2209 FO
  36   36 2962 1908 FO
  36   36 2937 2327 FO
  36   36 3131 2069 FO
  36   36 3301 2186 FO
  36   36 3159 1784 FO
  36   36 3047 1954 FO
  36   36 3283 1846 FO
  36   36 3125 2108 FO
  36   36 3031 1815 FO
  36   36 3345 1573 FO
  36   36 3163 2036 FO
  36   36 3192 2109 FO
  36   36 2952 1962 FO
  36   36 2940 2107 FO
  36   36 3056 1842 FO
  36   36 3027 1953 FO
  36   36 2972 2002 FO
  36   36 3006 2061 FO
  36   36 3012 2139 FO
  36   36 2923 2110 FO
  36   36 3482 1684 FO
  36   36 3191 1902 FO
  36   36 2991 1865 FO
  36   36 3094 2167 FO
  36   36 3215 2388 FO
  36   36 2929 2001 FO
  36   36 3185 2201 FO
  36   36 3187 2053 FO
  36   36 3097 1806 FO
  36   36 2981 2359 FO
  36   36 3297 1716 FO
  36   36 2952 1838 FO
  36   36 3076 2143 FO
  36   36 3139 2147 FO
  36   36 3016 2067 FO
  36   36 2949 1989 FO
  36   36 3106 2101 FO
  36   36 3264 1778 FO
  36   36 3228 2092 FO
  36   36 2835 2280 FO
  36   36 3048 2069 FO
  36   36 2958 1824 FO
  36   36 3364 1656 FO
  36   36 3169 1857 FO
  36   36 3369 1939 FO
  36   36 2999 2031 FO
  36   36 3163 2061 FO
  36   36 2970 2258 FO
  36   36 2912 2119 FO
  36   36 3011 2100 FO
  36   36 3029 2113 FO
  36   36 3061 1920 FO
  36   36 3020 2135 FO
  36   36 3152 2027 FO
  36   36 3080 2037 FO
  36   36 3218 1895 FO
  36   36 3233 1937 FO
  36   36 3022 2262 FO
  36   36 2900 2231 FO
  36   36 3047 1976 FO
  36   36 3016 2149 FO
  36   36 3205 2201 FO
  36   36 3131 2153 FO
  36   36 3116 2083 FO
  36   36 2964 2168 FO
  36   36 3501 1789 FO
  36   36 3325 2059 FO
  36   36 3058 2193 FO
  36   36 3116 2029 FO
  36   36 2966 2010 FO
  36   36 3100 1914 FO
  36   36 3173 2016 FO
  36   36 3193 1840 FO
  36   36 3063 2351 FO
  36   36 3027 2393 FO
  36   36 2869 2336 FO
  36   36 3305 1919 FO
  36   36 3365 1918 FO
  36   36 3086 2095 FO
  36   36 3133 1714 FO
  36   36 3046 2198 FO
  36   36 3177 2148 FO
  36   36 3224 1839 FO
  36   36 3134 2370 FO
  36   36 3231 2203 FO
  36   36 2859 1992 FO
  36   36 3094 2235 FO
  36   36 3081 2103 FO
  36   36 3018 2253 FO
  36   36 2946 2210 FO
  36   36 3318 1621 FO
  36   36 3098 2074 FO
  36   36 2882 2089 FO
  36   36 2956 2197 FO
  36   36 3161 2128 FO
  36   36 2990 2141 FO
  36   36 3255 1980 FO
  36   36 3059 2164 FO
  36   36 2979 2039 FO
  36   36 2987 1743 FO
  36   36 3012 2362 FO
  36   36 3211 1944 FO
  36   36 3226 2072 FO
  36   36 3046 2023 FO
  36   36 3158 2046 FO
  36   36 3149 1794 FO
  36   36 3174 2056 FO
  36   36 3151 1973 FO
  36   36 2869 2138 FO
  36   36 2936 2439 FO
  36   36 2967 2144 FO
  36   36 3192 1899 FO
  36   36 3133 1979 FO
  36   36 3322 1985 FO
  36   36 3175 2101 FO
  36   36 2857 2138 FO
  36   36 2976 2322 FO
  36   36 3104 1953 FO
  36   36 3209 1857 FO
  36   36 3075 1954 FO
  36   36 3041 2059 FO
  36   36 3017 2102 FO
  36   36 3535 1926 FO
  36   36 2969 2241 FO
  36   36 3085 1814 FO
  36   36 2945 2073 FO
  36   36 3257 2037 FO
  36   36 3032 1874 FO
  36   36 2797 2319 FO
  36   36 3246 1961 FO
  36   36 3035 2141 FO
  36   36 3071 1857 FO
  36   36 2935 2047 FO
  36   36 3335 1805 FO
  36   36 2953 2156 FO
  36   36 3244 1869 FO
  36   36 2901 2261 FO
  36   36 2961 2249 FO
  36   36 2838 2050 FO
  36   36 2972 2188 FO
  36   36 3250 2012 FO
  36   36 3046 2317 FO
  36   36 2997 2156 FO
  36   36 3315 1837 FO
  36   36 2983 2247 FO
  36   36 2874 2419 FO
  36   36 2972 2033 FO
  36   36 3156 1969 FO
  36   36 3009 2063 FO
  36   36 2912 2179 FO
  36   36 3151 1959 FO
  36   36 3099 2131 FO
  36   36 3335 2020 FO
  36   36 3006 1933 FO
  36   36 3182 1799 FO
  36   36 3289 1760 FO
  36   36 3033 2235 FO
  36   36 3182 1756 FO
  36   36 2977 2134 FO
  36   36 2868 2054 FO
  36   36 3004 2256 FO
  36   36 3118 1896 FO
  36   36 3379 1876 FO
  36   36 3036 1945 FO
  36   36 3216 2177 FO
  36   36 3013 2115 FO
  36   36 2943 1965 FO
  36   36 3040 2240 FO
  36   36 3133 2246 FO
  36   36 3187 2143 FO
  36   36 3126 2036 FO
  36   36 3031 1997 FO
  36   36 3171 2168 FO
  36   36 3144 2192 FO
  36   36 2663 2374 FO
  36   36 3098 2130 FO
  36   36 3305 1871 FO
  36   36 2998 2063 FO
  36   36 2994 2077 FO
  36   36 2979 2075 FO
  36   36 3145 1855 FO
  36   36 3279 1974 FO
  36   36 3018 1943 FO
  36   36 3159 1887 FO
  36   36 3137 1912 FO
  36   36 3029 1923 FO
  36   36 3096 1893 FO
  36   36 3148 1902 FO
  36   36 3306 1787 FO
  36   36 3354 1921 FO
  36   36 3152 1895 FO
  36   36 3061 2219 FO
  36   36 2960 2183 FO
  36   36 2847 2063 FO
  36   36 3000 2135 FO
  36   36 2943 2131 FO
  36   36 3213 2058 FO
  36   36 3028 1931 FO
  36   36 2951 2250 FO
  36   36 3164 2015 FO
  36   36 2813 2344 FO
  36   36 3103 1970 FO
  36   36 2953 2189 FO
  36   36 3030 2228 FO
  36   36 3027 2256 FO
  36   36 2979 2118 FO
  36   36 3134 2038 FO
  36   36 3023 2276 FO
  36   36 3074 2098 FO
  36   36 2992 2013 FO
  36   36 3047 2278 FO
  36   36 3044 2091 FO
  36   36 2968 2145 FO
  36   36 3200 1869 FO
  36   36 3146 1988 FO
  36   36 3145 2087 FO
  36   36 3123 2031 FO
  36   36 2920 2180 FO
  36   36 3262 1753 FO
  36   36 3002 2006 FO
  36   36 3036 2128 FO
  36   36 3165 2034 FO
  36   36 3159 1888 FO
  36   36 3096 2056 FO
  36   36 2994 1962 FO
  36   36 2981 2146 FO
  36   36 3154 1993 FO
  36   36 2899 2048 FO
  36   36 3089 2252 FO
  36   36 3079 1829 FO
  36   36 3066 1825 FO
  36   36 2766 2172 FO
  36   36 2927 2221 FO
  36   36 2881 2346 FO
  36   36 3179 2031 FO
  36   36 3206 2212 FO
  36   36 3213 1848 FO
gr

c8
gr

c8
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 384 FMSR

2793  359 mt 
(GA) s
4 w
DO
SO
6 w
5349 3599 mt 8127 3599 L
5349  541 mt 8127  541 L
5349 3599 mt 5349  541 L
8127 3599 mt 8127  541 L
5349 3599 mt 8127 3599 L
5349 3599 mt 5349  541 L
5349 3599 mt 5349 3568 L
5349  541 mt 5349  571 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

5159 3794 mt 
(-10) s
6043 3599 mt 6043 3568 L
6043  541 mt 6043  571 L
5898 3794 mt 
(-5) s
6738 3599 mt 6738 3568 L
6738  541 mt 6738  571 L
6693 3794 mt 
(0) s
7432 3599 mt 7432 3568 L
7432  541 mt 7432  571 L
7387 3794 mt 
(5) s
8127 3599 mt 8127 3568 L
8127  541 mt 8127  571 L
8037 3794 mt 
(10) s
5349 3599 mt 5379 3599 L
8127 3599 mt 8096 3599 L
5033 3663 mt 
(-10) s
5349 2834 mt 5379 2834 L
8127 2834 mt 8096 2834 L
5123 2898 mt 
(-5) s
5349 2070 mt 5379 2070 L
8127 2070 mt 8096 2070 L
5224 2134 mt 
(0) s
5349 1305 mt 5379 1305 L
8127 1305 mt 8096 1305 L
5224 1369 mt 
(5) s
5349  541 mt 5379  541 L
8127  541 mt 8096  541 L
5134  605 mt 
(10) s
5349 3599 mt 8127 3599 L
5349  541 mt 8127  541 L
5349 3599 mt 5349  541 L
8127 3599 mt 8127  541 L
gs 5349 541 2779 3059 rc
gr

gs 5790 814 1991 2860 rc
c8
  36   36 6741 2060 FO
  36   36 6692 2072 FO
  36   36 6787 1955 FO
  36   36 6644 2064 FO
  36   36 6814 2115 FO
  36   36 6769 2081 FO
  36   36 6774 1937 FO
  36   36 6892 2029 FO
  36   36 6848 1874 FO
  36   36 6496 2272 FO
  36   36 6704 2140 FO
  36   36 6910 2037 FO
  36   36 6824 2095 FO
  36   36 6697 2131 FO
  36   36 6853 2026 FO
  36   36 6632 2083 FO
  36   36 6658 2115 FO
  36   36 6810 1915 FO
  36   36 6907 1836 FO
  36   36 6783 2101 FO
  36   36 6794 2008 FO
  36   36 6787 1996 FO
  36   36 6811 2079 FO
  36   36 6750 2133 FO
  36   36 6916 2029 FO
  36   36 6783 1985 FO
  36   36 6782 2006 FO
  36   36 6802 2023 FO
  36   36 6649 2081 FO
  36   36 6597 2083 FO
  36   36 6714 2091 FO
  36   36 6629 2111 FO
  36   36 6794 2009 FO
  36   36 6781 2012 FO
  36   36 6815 1957 FO
  36   36 6831 1989 FO
  36   36 6695 2121 FO
  36   36 6572 2293 FO
  36   36 6755 2119 FO
  36   36 6718 2112 FO
  36   36 6548 1936 FO
  36   36 6729 2092 FO
  36   36 6828 1951 FO
  36   36 6716 2113 FO
  36   36 6794 1940 FO
  36   36 6722 1870 FO
  36   36 6722 2112 FO
  36   36 6692 2047 FO
  36   36 6860 2110 FO
  36   36 6743 2126 FO
  36   36 6696 2249 FO
  36   36 6763 1906 FO
  36   36 6737 2414 FO
  36   36 6700 2068 FO
  36   36 6699 2166 FO
  36   36 6775 2162 FO
  36   36 6763 1946 FO
  36   36 6696 1974 FO
  36   36 6680 2141 FO
  36   36 6638 2137 FO
  36   36 6706 2127 FO
  36   36 6787 2163 FO
  36   36 6698 2228 FO
  36   36 6736 2069 FO
  36   36 6693 2017 FO
  36   36 6820 2032 FO
  36   36 6130 2242 FO
  36   36 6729 2108 FO
  36   36 6776 2090 FO
  36   36 6624 2146 FO
  36   36 6728 2045 FO
  36   36 6679 2161 FO
  36   36 6855 2132 FO
  36   36 6777 2012 FO
  36   36 6728 2099 FO
  36   36 6605 2088 FO
  36   36 6885 1830 FO
  36   36 6802 1988 FO
  36   36 6645 2053 FO
  36   36 6594 2201 FO
  36   36 6500 2145 FO
  36   36 6818 1987 FO
  36   36 6672 2122 FO
  36   36 6751 1985 FO
  36   36 6792 2048 FO
  36   36 6691 2140 FO
  36   36 6720 2069 FO
  36   36 6823 1931 FO
  36   36 6680 2136 FO
  36   36 6869 1897 FO
  36   36 6820 2124 FO
  36   36 6681 2147 FO
  36   36 6687 1984 FO
  36   36 6725 2137 FO
  36   36 6794 2154 FO
  36   36 6838 1980 FO
  36   36 6737 2145 FO
  36   36 6791 1990 FO
  36   36 6821 2081 FO
  36   36 6806 1998 FO
  36   36 6683 1900 FO
  36   36 6555 2268 FO
  36   36 6747 2094 FO
  36   36 6784 1998 FO
  36   36 6706 2191 FO
  36   36 6686 2018 FO
  36   36 6670 2016 FO
  36   36 6690 1816 FO
  36   36 6748 2018 FO
  36   36 6808 2082 FO
  36   36 6740 2035 FO
  36   36 6674 2129 FO
  36   36 6777 2075 FO
  36   36 6655 2113 FO
  36   36 6813 2080 FO
  36   36 6811 1970 FO
  36   36 6693 2060 FO
  36   36 6681 2088 FO
  36   36 6782 2019 FO
  36   36 6699 2212 FO
  36   36 6864 1973 FO
  36   36 6833 1899 FO
  36   36 6719 2191 FO
  36   36 6773 2083 FO
  36   36 6747 1828 FO
  36   36 6695 2092 FO
  36   36 6785 2130 FO
  36   36 6718 2204 FO
  36   36 6750 2044 FO
  36   36 6769 2164 FO
  36   36 6757 1968 FO
  36   36 6705 2333 FO
  36   36 6838 1935 FO
  36   36 6746 1975 FO
  36   36 6741 1825 FO
  36   36 6487 1890 FO
  36   36 6790 2003 FO
  36   36 6696 2112 FO
  36   36 6657 2101 FO
  36   36 6685 2167 FO
  36   36 6775 2025 FO
  36   36 6722 2164 FO
  36   36 6872 2038 FO
  36   36 6715 2315 FO
  36   36 6792 1963 FO
  36   36 6739 2062 FO
  36   36 6811 1992 FO
  36   36 6984 1959 FO
  36   36 6671 2176 FO
  36   36 6820 2076 FO
  36   36 6282 2580 FO
  36   36 6738 1936 FO
  36   36 6762 2014 FO
  36   36 6716 2028 FO
  36   36 6738 2070 FO
  36   36 6784 2213 FO
  36   36 6720 2211 FO
  36   36 6668 2001 FO
  36   36 6617 2109 FO
  36   36 6721 2131 FO
  36   36 6749 2171 FO
  36   36 6798 2021 FO
  36   36 7229 1615 FO
  36   36 6677 2128 FO
  36   36 6803 2009 FO
  36   36 6673 1984 FO
  36   36 6670 2168 FO
  36   36 6734 1963 FO
  36   36 6687 2208 FO
  36   36 6709 2110 FO
  36   36 6678 2099 FO
  36   36 6794 1958 FO
  36   36 6734 2273 FO
  36   36 6823 2036 FO
  36   36 6717 2035 FO
  36   36 6757 2135 FO
  36   36 6751 2036 FO
  36   36 6745 2078 FO
  36   36 6733 1853 FO
  36   36 6825 1442 FO
  36   36 6756 2036 FO
  36   36 6822 1899 FO
  36   36 6758 1994 FO
  36   36 6749 2047 FO
  36   36 6758 2092 FO
  36   36 6788 2042 FO
  36   36 6812 2281 FO
  36   36 6744 2022 FO
  36   36 7707 2018 FO
  36   36 6773 2005 FO
  36   36 6592 2177 FO
  36   36 6675 2104 FO
  36   36 6587 2020 FO
  36   36 6739 2109 FO
  36   36 6767 2013 FO
  36   36 6755 1690 FO
  36   36 6758 2123 FO
  36   36 6836 1919 FO
  36   36 6614 2169 FO
  36   36 6808 2140 FO
  36   36 7082 1849 FO
  36   36 6760 2047 FO
  36   36 6828 2096 FO
  36   36 6827 2043 FO
  36   36 6605 2134 FO
  36   36 6734 2127 FO
  36   36 6634 1874 FO
  36   36 6763 2083 FO
  36   36 6568 2188 FO
  36   36 6692 2083 FO
  36   36 6807 2045 FO
  36   36 6573 2156 FO
  36   36 6900 2112 FO
  36   36 6741 2024 FO
  36   36 6745 2003 FO
  36   36 6774 2108 FO
  36   36 6746 1975 FO
  36   36 6691 2095 FO
  36   36 6765 1848 FO
  36   36 6665 2160 FO
  36   36 6795 2092 FO
  36   36 6789 2073 FO
  36   36 6667 2139 FO
  36   36 6721 1795 FO
  36   36 6752 2080 FO
  36   36 6718 1945 FO
  36   36 6693 2152 FO
  36   36 6826 1975 FO
  36   36 6738 2094 FO
  36   36 6767 2053 FO
  36   36 6714 2141 FO
  36   36 6727 2138 FO
  36   36 6620 2011 FO
  36   36 6637 1976 FO
  36   36 6869 2147 FO
  36   36 6708 2118 FO
  36   36 6700 2111 FO
  36   36 6639 2252 FO
  36   36 6764 2132 FO
  36   36 6716 2231 FO
  36   36 6628 2103 FO
  36   36 6705 2089 FO
  36   36 6706 2067 FO
  36   36 6728 2125 FO
  36   36 6735 2100 FO
  36   36 6852 1958 FO
  36   36 6516 2278 FO
  36   36 6841 2077 FO
  36   36 6873 1794 FO
  36   36 6615 2171 FO
  36   36 6747 2075 FO
  36   36 6678 2131 FO
  36   36 6663 2018 FO
  36   36 6706 1970 FO
  36   36 6800 2156 FO
  36   36 6847 1873 FO
  36   36 6764 2128 FO
  36   36 6638 2363 FO
  36   36 6810 2065 FO
  36   36 6251 2258 FO
  36   36 6654 2030 FO
  36   36 6757 2243 FO
  36   36 6882 2104 FO
  36   36 6923 2078 FO
  36   36 6817 2034 FO
  36   36 6638 2077 FO
  36   36 6550 2277 FO
  36   36 6857 1986 FO
  36   36 7030 1166 FO
  36   36 6844 2006 FO
  36   36 6676 2248 FO
  36   36 6781 2043 FO
  36   36 6641 2152 FO
  36   36 6674 2084 FO
  36   36 6665 2073 FO
  36   36 6593 2271 FO
  36   36 6578 2141 FO
  36   36 6729 2178 FO
  36   36 6636 2098 FO
  36   36 6735 2090 FO
  36   36 6728 2124 FO
  36   36 6739 1891 FO
  36   36 6660 2210 FO
  36   36 6815 2039 FO
  36   36 6505 2310 FO
  36   36 6794 2196 FO
  36   36 6681 2050 FO
  36   36 6829 2032 FO
  36   36 6827 1915 FO
  36   36 6714 2025 FO
  36   36 6930 1884 FO
  36   36 6721 2088 FO
  36   36 6813 2080 FO
  36   36 6467 2134 FO
  36   36 6719 2093 FO
  36   36 6906 2042 FO
  36   36 6657 2114 FO
  36   36 6778 1941 FO
  36   36 6680 2090 FO
  36   36 6901 1844 FO
  36   36 6746 1913 FO
  36   36 6706 2181 FO
  36   36 6626 2275 FO
  36   36 6615 2127 FO
  36   36 6743 2098 FO
  36   36 6732 1986 FO
  36   36 6637 2044 FO
  36   36 6715 2069 FO
  36   36 6708 2080 FO
  36   36 6710 2165 FO
  36   36 6605 2351 FO
  36   36 6744 2022 FO
  36   36 6731 2020 FO
  36   36 6590 2289 FO
  36   36 6666 2165 FO
  36   36 6836 2044 FO
  36   36 6692 2121 FO
  36   36 6855 2015 FO
  36   36 6805 1885 FO
  36   36 6715 2037 FO
  36   36 6643 2301 FO
  36   36 6646 2245 FO
  36   36 6819 2005 FO
  36   36 6589 2043 FO
  36   36 6771 1937 FO
  36   36 6400 2314 FO
  36   36 6981 1651 FO
  36   36 5960 2523 FO
  36   36 6734 2171 FO
  36   36 6789 2038 FO
  36   36 6949 2002 FO
  36   36 6715 2175 FO
  36   36 6801 2134 FO
  36   36 6797 1699 FO
  36   36 6780 2068 FO
  36   36 6734 2036 FO
  36   36 6854 1916 FO
  36   36 6733 1940 FO
  36   36 6807 2236 FO
  36   36 6696 2136 FO
  36   36 6818 2077 FO
  36   36 7319 1509 FO
  36   36 6647 2195 FO
  36   36 6929 2136 FO
  36   36 6770 2031 FO
  36   36 7406  887 FO
  36   36 6756 2052 FO
  36   36 6748 1963 FO
  36   36 6726 1940 FO
  36   36 6655 2113 FO
  36   36 6704 2100 FO
  36   36 6792 2019 FO
  36   36 6708 2020 FO
  36   36 6691 2114 FO
  36   36 6746 2115 FO
  36   36 6738 2128 FO
  36   36 6708 2001 FO
  36   36 6259 2285 FO
  36   36 6814 1979 FO
  36   36 6701 2044 FO
  36   36 6784 1979 FO
  36   36 6848 2031 FO
  36   36 6665 2169 FO
  36   36 6878 2047 FO
  36   36 6749 1976 FO
  36   36 6789 2145 FO
  36   36 6801 2030 FO
  36   36 6688 1982 FO
  36   36 6798 2187 FO
  36   36 6601 2079 FO
  36   36 6782 2056 FO
  36   36 6641 2095 FO
  36   36 6807 2092 FO
  36   36 6835 1761 FO
  36   36 6822 2032 FO
  36   36 6773 2080 FO
  36   36 6543 2232 FO
  36   36 6911 1965 FO
  36   36 6813 2218 FO
  36   36 6666 2140 FO
  36   36 6757 2056 FO
  36   36 6748 2069 FO
  36   36 6627 1995 FO
  36   36 6730 2075 FO
  36   36 6892 2014 FO
  36   36 6699 2088 FO
  36   36 6709 2026 FO
  36   36 7040 1721 FO
  36   36 6551 2148 FO
  36   36 6774 2016 FO
  36   36 6938 1920 FO
  36   36 6842 2003 FO
  36   36 6726 2193 FO
  36   36 6832 2141 FO
  36   36 6706 2138 FO
  36   36 6424 2449 FO
  36   36 6697 1957 FO
  36   36 6775 2153 FO
  36   36 6610 2101 FO
  36   36 6654 2033 FO
  36   36 6450 2272 FO
  36   36 6848 1976 FO
  36   36 6820 1723 FO
  36   36 6819 1936 FO
  36   36 6697 2255 FO
  36   36 6722 2126 FO
  36   36 6748 2015 FO
  36   36 6691 2031 FO
  36   36 6548 2313 FO
  36   36 6804 2128 FO
  36   36 6752 2115 FO
  36   36 6429 2239 FO
  36   36 6717 2140 FO
  36   36 6807 1991 FO
  36   36 6703 2169 FO
  36   36 6546 2185 FO
  36   36 6732 1823 FO
  36   36 6744 2006 FO
  36   36 6752 2121 FO
  36   36 6470 2792 FO
  36   36 6749 2037 FO
  36   36 6711 1961 FO
  36   36 6806 1964 FO
  36   36 6630 1944 FO
  36   36 6821 1903 FO
  36   36 6322 2355 FO
  36   36 7161 1841 FO
  36   36 6643 2276 FO
  36   36 6177 2447 FO
  36   36 6839 1989 FO
  36   36 6670 1841 FO
  36   36 6766 1957 FO
  36   36 6631 2146 FO
  36   36 6695 2167 FO
  36   36 6893 2035 FO
  36   36 6934 1925 FO
  36   36 6738 2042 FO
  36   36 7156 1682 FO
  36   36 6463 2383 FO
  36   36 6810 2080 FO
  36   36 6783 2173 FO
  36   36 6586 2079 FO
  36   36 6682 2169 FO
  36   36 6437 2066 FO
  36   36 6674 2164 FO
  36   36 6795 2080 FO
  36   36 6654 2059 FO
  36   36 6796 1941 FO
  36   36 6633 2215 FO
  36   36 6694 2174 FO
  36   36 6685 2059 FO
  36   36 6774 2038 FO
  36   36 6832 1956 FO
gr

c8
gs 5349 541 2779 3059 rc
gr

gs 5790 814 1991 2860 rc
  36   36 6798 2000 FO
  36   36 6593 2177 FO
  36   36 6812 2068 FO
  36   36 6882 2040 FO
  36   36 6709 2100 FO
  36   36 7021 1714 FO
  36   36 6940 1955 FO
  36   36 6698 2164 FO
  36   36 6680 2159 FO
  36   36 6700 2102 FO
  36   36 6763 2165 FO
  36   36 6782 1981 FO
  36   36 6642 2001 FO
  36   36 6694 2149 FO
  36   36 6744 2057 FO
  36   36 6965 2011 FO
  36   36 6638 2178 FO
  36   36 6719 2021 FO
  36   36 6596 2171 FO
  36   36 6811 1973 FO
  36   36 6946 1869 FO
  36   36 6819 2042 FO
  36   36 6711 2107 FO
  36   36 6727 2236 FO
  36   36 6452 2290 FO
  36   36 6880 2086 FO
  36   36 6660 2089 FO
  36   36 6787 2040 FO
  36   36 6820 1990 FO
  36   36 6776 2093 FO
  36   36 6714 2133 FO
  36   36 6732 2070 FO
  36   36 6779 2060 FO
  36   36 6706 2243 FO
  36   36 6672 2053 FO
  36   36 6676 2186 FO
  36   36 6760 2195 FO
  36   36 6822 1871 FO
  36   36 6513 2122 FO
  36   36 6736 2126 FO
  36   36 6750 2069 FO
  36   36 6692 2167 FO
  36   36 6707 2023 FO
  36   36 6818 1773 FO
  36   36 6550 2385 FO
  36   36 6726 2068 FO
  36   36 6657 2170 FO
  36   36 6660 2049 FO
  36   36 6834 1846 FO
  36   36 6749 2079 FO
  36   36 6555 2159 FO
  36   36 6803 1973 FO
  36   36 6732 2104 FO
  36   36 6789 1990 FO
  36   36 6764 2092 FO
  36   36 6826 1992 FO
  36   36 6728 2007 FO
  36   36 6721 2044 FO
  36   36 6869 2031 FO
  36   36 6744 2092 FO
  36   36 6710 2080 FO
  36   36 6776 2100 FO
  36   36 6688 2080 FO
  36   36 6658 1893 FO
  36   36 6713 2128 FO
  36   36 6654 2215 FO
  36   36 6779 2062 FO
  36   36 6575 2361 FO
  36   36 6771 2042 FO
  36   36 6809 2096 FO
  36   36 6786 2164 FO
  36   36 6527 2189 FO
  36   36 6793 2231 FO
  36   36 6714 2056 FO
  36   36 6650 2216 FO
  36   36 6780 2056 FO
  36   36 6671 2207 FO
  36   36 6630 2137 FO
  36   36 6724 2102 FO
  36   36 6773 2005 FO
  36   36 6686 2052 FO
  36   36 6810 1851 FO
  36   36 6886 2115 FO
  36   36 6723 2086 FO
  36   36 6758 1996 FO
  36   36 6796 2003 FO
  36   36 6755 2130 FO
  36   36 6805 2085 FO
  36   36 6678 2105 FO
  36   36 6668 2133 FO
  36   36 6721 2151 FO
  36   36 6883 1924 FO
  36   36 6969 1993 FO
  36   36 6762 2115 FO
  36   36 6747 2078 FO
  36   36 6555 2051 FO
  36   36 6649 2107 FO
  36   36 6682 2077 FO
  36   36 6861 1883 FO
  36   36 6286 3003 FO
  36   36 6669 2273 FO
  36   36 6815 1877 FO
  36   36 6702 1884 FO
  36   36 6578 2077 FO
  36   36 6773 2044 FO
  36   36 6848 2105 FO
  36   36 6670 2053 FO
  36   36 6693 2077 FO
  36   36 6762 2073 FO
  36   36 6824 2126 FO
  36   36 6870 1963 FO
  36   36 6635 2140 FO
  36   36 6867 2216 FO
  36   36 6791 2195 FO
  36   36 6795 1624 FO
  36   36 6837 2224 FO
  36   36 5909 2120 FO
  36   36 6669 1990 FO
  36   36 6794 2325 FO
  36   36 6870 2031 FO
  36   36 6769 2082 FO
  36   36 7036 1822 FO
  36   36 6854 2076 FO
  36   36 6661 2109 FO
  36   36 6649 2166 FO
  36   36 6727 2039 FO
  36   36 6735 2098 FO
  36   36 6813 1958 FO
  36   36 6763 2044 FO
  36   36 6709 2051 FO
  36   36 6682 2120 FO
  36   36 6789 1984 FO
  36   36 6805 1970 FO
  36   36 7027 2024 FO
  36   36 6716 1950 FO
  36   36 6754 1918 FO
  36   36 6769 1904 FO
  36   36 6764 2141 FO
  36   36 6751 2063 FO
  36   36 6386 1964 FO
  36   36 6716 2060 FO
  36   36 6773 2065 FO
  36   36 6703 2154 FO
  36   36 6668 2208 FO
  36   36 6660 2188 FO
  36   36 7063 2174 FO
  36   36 6611 2155 FO
  36   36 6852 2011 FO
  36   36 6865 1908 FO
  36   36 6859 1910 FO
  36   36 6721 2122 FO
  36   36 6643 2142 FO
  36   36 6761 1914 FO
  36   36 6958 1848 FO
  36   36 6633 2241 FO
  36   36 6734 2033 FO
  36   36 6756 1999 FO
  36   36 6790 2046 FO
  36   36 6873 1888 FO
  36   36 6748 2084 FO
  36   36 6608 2094 FO
  36   36 6676 2149 FO
  36   36 6915 1913 FO
  36   36 6589 2148 FO
  36   36 6564 2237 FO
  36   36 6707 2080 FO
  36   36 6652 2111 FO
  36   36 6499 2200 FO
  36   36 6761 2162 FO
  36   36 6747 2021 FO
  36   36 6748 1873 FO
  36   36 6698 2080 FO
  36   36 6896 2073 FO
  36   36 6802 1971 FO
  36   36 6734 2094 FO
  36   36 6578 2177 FO
  36   36 6867 2053 FO
  36   36 6733 1981 FO
  36   36 6650 2157 FO
  36   36 6761 2042 FO
  36   36 6782 1950 FO
  36   36 6951 1844 FO
  36   36 6863 2036 FO
  36   36 6591 2102 FO
  36   36 6744 2037 FO
  36   36 6755 2050 FO
  36   36 6688 2198 FO
  36   36 6768 2000 FO
  36   36 6819 2058 FO
  36   36 6588 2047 FO
  36   36 6756 1975 FO
  36   36 6788 1945 FO
  36   36 6949 1862 FO
  36   36 6629 2125 FO
  36   36 6349 2144 FO
  36   36 6686 2020 FO
  36   36 6866 1957 FO
  36   36 6576 1969 FO
  36   36 6835 1984 FO
  36   36 6874 2001 FO
  36   36 6703 2001 FO
  36   36 6647 2190 FO
  36   36 7199 1462 FO
  36   36 6841 1993 FO
  36   36 6769 2027 FO
  36   36 6921 1715 FO
  36   36 6547 2093 FO
  36   36 6648 2119 FO
  36   36 6807 2072 FO
  36   36 6763 1975 FO
  36   36 6634 2107 FO
  36   36 6404 2231 FO
  36   36 6805 1942 FO
  36   36 6766 2010 FO
  36   36 6733 1990 FO
  36   36 6862 1993 FO
  36   36 6714 2107 FO
  36   36 6700 2031 FO
  36   36 6948 1801 FO
  36   36 6886 2296 FO
  36   36 6885 1983 FO
  36   36 6698 2144 FO
  36   36 6763 2022 FO
  36   36 6731 1952 FO
  36   36 6780 1981 FO
  36   36 6906 2003 FO
  36   36 6621 2084 FO
  36   36 6819 2038 FO
  36   36 6757 2026 FO
  36   36 6672 2207 FO
  36   36 6832 1861 FO
  36   36 6797 2190 FO
  36   36 6738 1954 FO
  36   36 6725 2087 FO
  36   36 6656 2026 FO
  36   36 6750 2053 FO
  36   36 6733 2104 FO
  36   36 6744 1990 FO
  36   36 6636 2131 FO
  36   36 6814 2001 FO
  36   36 7068 1940 FO
  36   36 6632 2223 FO
  36   36 6697 2146 FO
  36   36 6727 2246 FO
  36   36 6853 2064 FO
  36   36 6917 2013 FO
  36   36 6716 1988 FO
  36   36 6719 2213 FO
  36   36 7010 2168 FO
  36   36 6542 2189 FO
  36   36 6715 2064 FO
  36   36 6651 2137 FO
  36   36 6675 2292 FO
  36   36 6855 2026 FO
  36   36 6801 1938 FO
  36   36 6760 2117 FO
  36   36 6743 2255 FO
  36   36 6695 2020 FO
  36   36 6897 1954 FO
  36   36 6731 1992 FO
  36   36 6751 2000 FO
  36   36 6713 2154 FO
  36   36 6689 2157 FO
  36   36 6691 1964 FO
  36   36 6658 2216 FO
  36   36 6867 1979 FO
  36   36 6811 2007 FO
  36   36 6552 2008 FO
  36   36 6656 2025 FO
  36   36 6753 2063 FO
  36   36 6602 2122 FO
  36   36 6731 2058 FO
  36   36 6847 2090 FO
  36   36 6644 2248 FO
  36   36 6701 2111 FO
  36   36 6751 2019 FO
  36   36 6652 2163 FO
  36   36 6711 2208 FO
  36   36 6760 2036 FO
  36   36 6714 2059 FO
  36   36 6775 2071 FO
  36   36 6725 2034 FO
  36   36 6646 2046 FO
  36   36 6791 2014 FO
  36   36 6791 2037 FO
  36   36 6226 2596 FO
  36   36 6801 2254 FO
  36   36 6451 2135 FO
  36   36 6768 2249 FO
  36   36 6807 2011 FO
  36   36 6746 1993 FO
  36   36 6543 2115 FO
  36   36 6785 2051 FO
  36   36 6604 2090 FO
  36   36 6855 2028 FO
  36   36 6761 2037 FO
  36   36 6752 1948 FO
  36   36 5935 2276 FO
  36   36 6590 1999 FO
  36   36 6766 2170 FO
  36   36 6676 2192 FO
  36   36 6893 1781 FO
  36   36 6775 1982 FO
  36   36 6833 2064 FO
  36   36 6846 2003 FO
  36   36 6653 1953 FO
  36   36 6697 2226 FO
  36   36 6770 2006 FO
  36   36 6887 1899 FO
  36   36 6688 2045 FO
  36   36 6544 2266 FO
  36   36 6757 1996 FO
  36   36 6710 2136 FO
  36   36 6670 2118 FO
  36   36 6700 2041 FO
  36   36 6748 2036 FO
  36   36 6861 1909 FO
  36   36 6772 2021 FO
  36   36 6510 2007 FO
  36   36 6597 2177 FO
  36   36 6720 2129 FO
  36   36 6641 2165 FO
  36   36 6802 2053 FO
  36   36 6787 2029 FO
  36   36 6752 2034 FO
  36   36 6698 2076 FO
  36   36 6744 1952 FO
  36   36 6697 2159 FO
  36   36 6674 2204 FO
  36   36 6760 2013 FO
  36   36 6802 2248 FO
  36   36 6455 2338 FO
  36   36 6966 1846 FO
  36   36 6754 1968 FO
  36   36 6765 2028 FO
  36   36 6524 2383 FO
  36   36 6708 2126 FO
  36   36 6908 2134 FO
  36   36 6934 2040 FO
  36   36 6736 2217 FO
  36   36 6533 2219 FO
  36   36 6793 1901 FO
  36   36 6883 2010 FO
  36   36 6711 1995 FO
  36   36 6715 2112 FO
  36   36 6722 1962 FO
  36   36 6868 2060 FO
  36   36 6757 2117 FO
  36   36 6712 2123 FO
  36   36 6610 2142 FO
  36   36 6621 1971 FO
  36   36 6741 2085 FO
  36   36 6725 2092 FO
  36   36 6783 2334 FO
  36   36 6674 2473 FO
  36   36 7602 1568 FO
  36   36 6500 1915 FO
  36   36 6867 2055 FO
  36   36 6787 2082 FO
  36   36 6719 2008 FO
  36   36 7009 2026 FO
  36   36 6787 2067 FO
  36   36 6799 1895 FO
  36   36 6739 2022 FO
  36   36 6722 2016 FO
  36   36 6591 2271 FO
  36   36 6713 2207 FO
  36   36 6746 2102 FO
  36   36 6796 2104 FO
  36   36 6762 2053 FO
  36   36 6689 2055 FO
  36   36 6762 2002 FO
  36   36 6825 1982 FO
  36   36 6691 2162 FO
  36   36 6732 2013 FO
  36   36 6709 1984 FO
  36   36 6740 2128 FO
  36   36 6792 2019 FO
  36   36 6857 1891 FO
  36   36 6785 2120 FO
  36   36 6747 2128 FO
  36   36 6400 2433 FO
  36   36 6924 2331 FO
  36   36 6780 1995 FO
  36   36 6813 1975 FO
  36   36 6709 2006 FO
  36   36 6831 2005 FO
  36   36 6815 2315 FO
  36   36 6759 2317 FO
  36   36 6755 2007 FO
  36   36 6816 1688 FO
  36   36 6746 2006 FO
  36   36 6729 2078 FO
  36   36 6765 1966 FO
  36   36 6631 2199 FO
  36   36 6992 1904 FO
  36   36 6676 2033 FO
  36   36 6644 2127 FO
  36   36 6816 1931 FO
  36   36 6842 1941 FO
  36   36 6709 2093 FO
  36   36 6747 2079 FO
  36   36 6731 2069 FO
  36   36 6786 2010 FO
  36   36 6612 2228 FO
  36   36 6876 1993 FO
  36   36 6866 1956 FO
  36   36 6665 2007 FO
  36   36 6743 2104 FO
  36   36 6618 1981 FO
  36   36 6711 2240 FO
  36   36 6641 1886 FO
  36   36 6304 2357 FO
  36   36 6854 1968 FO
  36   36 7187 1818 FO
  36   36 6521 2131 FO
  36   36 6665 2107 FO
  36   36 6906 2097 FO
  36   36 6766 2089 FO
  36   36 6552 2290 FO
  36   36 6944 2054 FO
  36   36 6420 2656 FO
  36   36 6799 2134 FO
  36   36 6631 2002 FO
  36   36 6756 2078 FO
  36   36 6829 2155 FO
  36   36 6711 2080 FO
  36   36 6617 2172 FO
  36   36 6828 2006 FO
  36   36 6719 2084 FO
  36   36 6650 2341 FO
  36   36 7045 1995 FO
  36   36 6582 2341 FO
  36   36 6816 2034 FO
  36   36 6833 1947 FO
  36   36 6707 2100 FO
  36   36 6889 2057 FO
  36   36 6781 2064 FO
  36   36 6700 2186 FO
  36   36 6783 2162 FO
  36   36 6761 2068 FO
  36   36 6750 1970 FO
  36   36 6696 2144 FO
  36   36 6783 1999 FO
  36   36 6732 2151 FO
  36   36 6655 2225 FO
  36   36 6841 2018 FO
  36   36 6578 2197 FO
  36   36 6729 1905 FO
  36   36 6745 1977 FO
  36   36 6620 2335 FO
  36   36 6805 2057 FO
  36   36 6770 2039 FO
  36   36 6868 2053 FO
  36   36 6708 2081 FO
  36   36 6731 2024 FO
  36   36 6817 2004 FO
  36   36 6807 1776 FO
  36   36 6777 2028 FO
  36   36 6766 2024 FO
  36   36 6712 2159 FO
  36   36 6919 2026 FO
  36   36 6875 2003 FO
  36   36 6747 2119 FO
  36   36 6823 1962 FO
  36   36 6747 2090 FO
  36   36 6697 2137 FO
  36   36 6782 2005 FO
  36   36 6719 2069 FO
  36   36 5863 2786 FO
  36   36 7369 1321 FO
  36   36 6735 1872 FO
  36   36 6682 1985 FO
  36   36 7062 1963 FO
  36   36 6603 2073 FO
  36   36 6798 2058 FO
  36   36 6707 2362 FO
  36   36 6840 2052 FO
  36   36 6797 2028 FO
  36   36 6833 2042 FO
  36   36 6798 1941 FO
  36   36 7022 1893 FO
  36   36 6998 2015 FO
  36   36 6710 1966 FO
  36   36 6651 2120 FO
  36   36 6730 2094 FO
  36   36 6780 2097 FO
  36   36 6604 2044 FO
  36   36 6539 2296 FO
  36   36 6760 2046 FO
  36   36 6680 2193 FO
  36   36 6653 2086 FO
  36   36 6692 2133 FO
  36   36 6744 1908 FO
  36   36 6808 1957 FO
  36   36 6736 2100 FO
  36   36 6763 1930 FO
  36   36 6725 2173 FO
  36   36 6456 2664 FO
  36   36 6779 2224 FO
  36   36 6692 2136 FO
  36   36 6746 2080 FO
  36   36 6859 2052 FO
  36   36 6688 2081 FO
  36   36 6716 2126 FO
  36   36 6670 2175 FO
  36   36 6694 2040 FO
  36   36 6623 2122 FO
  36   36 6711 2010 FO
  36   36 6775 2172 FO
  36   36 6696 1969 FO
  36   36 6695 1930 FO
  36   36 6753 2173 FO
  36   36 6658 2217 FO
  36   36 6752 2083 FO
  36   36 6780 2057 FO
  36   36 6728 2133 FO
  36   36 6797 2037 FO
  36   36 6796 2112 FO
  36   36 6758 2033 FO
  36   36 6753 1852 FO
  36   36 6870 2047 FO
  36   36 6828 1986 FO
  36   36 6873 1961 FO
  36   36 6708 2076 FO
  36   36 6893 1939 FO
  36   36 6786 2065 FO
  36   36 6993 2036 FO
  36   36 6700 2078 FO
  36   36 6646 2009 FO
  36   36 6858 1817 FO
  36   36 6758 2158 FO
  36   36 6748 2075 FO
  36   36 6734 1974 FO
  36   36 6769 2046 FO
  36   36 6679 2053 FO
  36   36 6512 2465 FO
  36   36 6783 2142 FO
  36   36 6809 2110 FO
  36   36 6719 2070 FO
  36   36 6600 2175 FO
  36   36 6837 1950 FO
  36   36 6729 2038 FO
  36   36 6746 2068 FO
  36   36 6707 2102 FO
  36   36 6575 2209 FO
gr

gs 5349 541 2779 3059 rc
gr

0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 384 FMSR

6513  359 mt 
(T3) s
4 w
DO
SO
6 w
9005 3599 mt 11783 3599 L
9005  541 mt 11783  541 L
9005 3599 mt 9005  541 L
11783 3599 mt 11783  541 L
9005 3599 mt 11783 3599 L
9005 3599 mt 9005  541 L
9005 3599 mt 9005 3568 L
9005  541 mt 9005  571 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

8815 3794 mt 
(-10) s
9699 3599 mt 9699 3568 L
9699  541 mt 9699  571 L
9554 3794 mt 
(-5) s
10394 3599 mt 10394 3568 L
10394  541 mt 10394  571 L
10349 3794 mt 
(0) s
11088 3599 mt 11088 3568 L
11088  541 mt 11088  571 L
11043 3794 mt 
(5) s
11783 3599 mt 11783 3568 L
11783  541 mt 11783  571 L
11693 3794 mt 
(10) s
9005 3599 mt 9035 3599 L
11783 3599 mt 11752 3599 L
8689 3663 mt 
(-10) s
9005 2834 mt 9035 2834 L
11783 2834 mt 11752 2834 L
8779 2898 mt 
(-5) s
9005 2070 mt 9035 2070 L
11783 2070 mt 11752 2070 L
8880 2134 mt 
(0) s
9005 1305 mt 9035 1305 L
11783 1305 mt 11752 1305 L
8880 1369 mt 
(5) s
9005  541 mt 9035  541 L
11783  541 mt 11752  541 L
8790  605 mt 
(10) s
9005 3599 mt 11783 3599 L
9005  541 mt 11783  541 L
9005 3599 mt 9005  541 L
11783 3599 mt 11783  541 L
gs 9005 541 2779 3059 rc
gr

gs 9190 587 2668 3087 rc
c8
  36   36 10395 2067 FO
  36   36 10402 2043 FO
  36   36 10391 2061 FO
  36   36 10388 2074 FO
  36   36 10396 2065 FO
  36   36 10373 2107 FO
  36   36 10395 2067 FO
  36   36 10349 1895 FO
  36   36 10412 2015 FO
  36   36 10392 2066 FO
  36   36 10390 2082 FO
  36   36 10395 2067 FO
  36   36 10369 2079 FO
  36   36 10398 2047 FO
  36   36 10392 2067 FO
  36   36 10398 2055 FO
  36   36 10438 1936 FO
  36   36 10397 2065 FO
  36   36 10400 2045 FO
  36   36 10418 2033 FO
  36   36 10390 2072 FO
  36   36 10391 2072 FO
  36   36 10339 1967 FO
  36   36 10393 2067 FO
  36   36 10444 1992 FO
  36   36 10391 2054 FO
  36   36 10381 2083 FO
  36   36 10372 2056 FO
  36   36 10400 2047 FO
  36   36 10410 2033 FO
  36   36 10395 2074 FO
  36   36 10400 2040 FO
  36   36 10389 2067 FO
  36   36 10394 2060 FO
  36   36 10392 2056 FO
  36   36 10433 2270 FO
  36   36 10389 2075 FO
  36   36 10397 2057 FO
  36   36 10395 2068 FO
  36   36 10387 2059 FO
  36   36 10403 2057 FO
  36   36 10394 2072 FO
  36   36 10453 2033 FO
  36   36 10401 2074 FO
  36   36 10386 2077 FO
  36   36 10400 2075 FO
  36   36 10401 2064 FO
  36   36 10403 2050 FO
  36   36 10400 2052 FO
  36   36 10388 2068 FO
  36   36 10395 2069 FO
  36   36 10405 2064 FO
  36   36 10394 2064 FO
  36   36 10399 2056 FO
  36   36 10385 2069 FO
  36   36 10404 2071 FO
  36   36 10389 2070 FO
  36   36 10391 2067 FO
  36   36 10390 2083 FO
  36   36 10381 2045 FO
  36   36 10393 2065 FO
  36   36 10398 2076 FO
  36   36 10396 2058 FO
  36   36 10388 2064 FO
  36   36 10398 2062 FO
  36   36 10414 2038 FO
  36   36 10411 2021 FO
  36   36 10392 2068 FO
  36   36 10389 2076 FO
  36   36 10401 2064 FO
  36   36 10413 2022 FO
  36   36 10394 2062 FO
  36   36 10363 2111 FO
  36   36 10389 2074 FO
  36   36 10402 2051 FO
  36   36 10394 2067 FO
  36   36 10399 2066 FO
  36   36 10393 2066 FO
  36   36 10400 2062 FO
  36   36 10387 2069 FO
  36   36 10391 2067 FO
  36   36 10389 2063 FO
  36   36 10275 2332 FO
  36   36 10389 2073 FO
  36   36 10391 2060 FO
  36   36 10394 2061 FO
  36   36 10395 1892 FO
  36   36 10403 2060 FO
  36   36 10374 2114 FO
  36   36 10388 2070 FO
  36   36 10398 2062 FO
  36   36 10387 2073 FO
  36   36 10396 2048 FO
  36   36 10389 2058 FO
  36   36 10398 2074 FO
  36   36 10397 2055 FO
  36   36 10419 2074 FO
  36   36 10396 2059 FO
  36   36 10397 2070 FO
  36   36 10396 2063 FO
  36   36 10393 2057 FO
  36   36 10405 2009 FO
  36   36 10392 2071 FO
  36   36 10281 2092 FO
  36   36 10393 2063 FO
  36   36 10395 2105 FO
  36   36 10401 2063 FO
  36   36 10395 2060 FO
  36   36 10396 2057 FO
  36   36 10396 2047 FO
  36   36 10395 2055 FO
  36   36 10409 2104 FO
  36   36 10393 2061 FO
  36   36 10396 2059 FO
  36   36 10395 2061 FO
  36   36 10393 2069 FO
  36   36 10355 2069 FO
  36   36 10396 2060 FO
  36   36 10403 2075 FO
  36   36 10400 2075 FO
  36   36 10374 1937 FO
  36   36 10390 2074 FO
  36   36 10368 2136 FO
  36   36 10391 2071 FO
  36   36 10391 2066 FO
  36   36 10389 2067 FO
  36   36 10386 2083 FO
  36   36 10385 2063 FO
  36   36 10382 2082 FO
  36   36 10394 2067 FO
  36   36 10385 2122 FO
  36   36 10391 2070 FO
  36   36 10391 2064 FO
  36   36 10386 2071 FO
  36   36 10398 2060 FO
  36   36 10396 2063 FO
  36   36 10412 2053 FO
  36   36 10390 2045 FO
  36   36 10393 2071 FO
  36   36 10380 2068 FO
  36   36 10398 2062 FO
  36   36 10387 2071 FO
  36   36 10391 2066 FO
  36   36 10393 2067 FO
  36   36 10403 2056 FO
  36   36 10398 2050 FO
  36   36 10381 2104 FO
  36   36 10392 2060 FO
  36   36 10396 2074 FO
  36   36 10380 2074 FO
  36   36 10381 2129 FO
  36   36 10397 2059 FO
  36   36 10395 2048 FO
  36   36 10392 2072 FO
  36   36 10408 2050 FO
  36   36 10398 2057 FO
  36   36 10398 2058 FO
  36   36 10397 2069 FO
  36   36 10405 2046 FO
  36   36 10397 2065 FO
  36   36 10382 2112 FO
  36   36 10388 2076 FO
  36   36 10395 2054 FO
  36   36 10392 2068 FO
  36   36 10396 2074 FO
  36   36 10389 2062 FO
  36   36 10368 2032 FO
  36   36 10405 2068 FO
  36   36 10392 2070 FO
  36   36 10390 2067 FO
  36   36 10391 2048 FO
  36   36 10379 2070 FO
  36   36 10397 2060 FO
  36   36 10394 2057 FO
  36   36 10357 2108 FO
  36   36 10389 2072 FO
  36   36 10379 2089 FO
  36   36 10385 2098 FO
  36   36 10390 2066 FO
  36   36 10392 2062 FO
  36   36 10431 1976 FO
  36   36 10440 2065 FO
  36   36 10379 1981 FO
  36   36 10401 2042 FO
  36   36 10395 2059 FO
  36   36 10398 2064 FO
  36   36 10398 2059 FO
  36   36 10393 2072 FO
  36   36 10389 2073 FO
  36   36 10387 2069 FO
  36   36 10395 2057 FO
  36   36 10392 2063 FO
  36   36 10369 2062 FO
  36   36 10389 2057 FO
  36   36 10392 2062 FO
  36   36 10409 2063 FO
  36   36 10413 2021 FO
  36   36 10381 2097 FO
  36   36 10398 2057 FO
  36   36 10405 2044 FO
  36   36 10293 1972 FO
  36   36 10363 2125 FO
  36   36 10390 2071 FO
  36   36 10414 2052 FO
  36   36 10389 2070 FO
  36   36 10385 2074 FO
  36   36 10402 2062 FO
  36   36 10404 2074 FO
  36   36 10395 2059 FO
  36   36 10396 2053 FO
  36   36 10399 2054 FO
  36   36 10412 2035 FO
  36   36 10391 2056 FO
  36   36 10315 2197 FO
  36   36 10394 2082 FO
  36   36 10397 2055 FO
  36   36 10387 2081 FO
  36   36 10410 2108 FO
  36   36 10393 2063 FO
  36   36 10393 2071 FO
  36   36 10409 2053 FO
  36   36 10400 2059 FO
  36   36 10395 2064 FO
  36   36 10393 2067 FO
  36   36 10391 2070 FO
  36   36 10392 2065 FO
  36   36 10398 2057 FO
  36   36 10393 2077 FO
  36   36 10396 2071 FO
  36   36 10341 2167 FO
  36   36 10373 2121 FO
  36   36 10397 2056 FO
  36   36 10388 2068 FO
  36   36 10392 2067 FO
  36   36 10413 2063 FO
  36   36 10396 2069 FO
  36   36 10392 2071 FO
  36   36 10389 2067 FO
  36   36 10383 2047 FO
  36   36 10394 2068 FO
  36   36 10401 2053 FO
  36   36 10395 2063 FO
  36   36 10384 2060 FO
  36   36 10394 2069 FO
  36   36 10382 2071 FO
  36   36 10402 2059 FO
  36   36 10551 1763 FO
  36   36 10398 2110 FO
  36   36 10361 2106 FO
  36   36 10397 2059 FO
  36   36 10410 2041 FO
  36   36 10382 2049 FO
  36   36 10408 2062 FO
  36   36 10395 2091 FO
  36   36 10434 2091 FO
  36   36 10432 2012 FO
  36   36 10384 2086 FO
  36   36 10391 2071 FO
  36   36 10421 2041 FO
  36   36 10394 2091 FO
  36   36 10393 2054 FO
  36   36 10393 2070 FO
  36   36 10400 2058 FO
  36   36 10392 2067 FO
  36   36 10388 2091 FO
  36   36 10422 2044 FO
  36   36 10397 2063 FO
  36   36 10380 2045 FO
  36   36 10394 2047 FO
  36   36 10394 2068 FO
  36   36 10387 2063 FO
  36   36 10394 2064 FO
  36   36 10392 2061 FO
  36   36 10388 2065 FO
  36   36 10389 2075 FO
  36   36 10396 2058 FO
  36   36 10427 2148 FO
  36   36 10397 2078 FO
  36   36 10399 2069 FO
  36   36 10402 2066 FO
  36   36 10398 2073 FO
  36   36 10392 2059 FO
  36   36 10402 2053 FO
  36   36 10388 2087 FO
  36   36 10393 2063 FO
  36   36 10392 2071 FO
  36   36 10417 2055 FO
  36   36 10392 2067 FO
  36   36 10230 2382 FO
  36   36 10394 2063 FO
  36   36 10397 2127 FO
  36   36 10394 2062 FO
  36   36 10384 2074 FO
  36   36 10391 2042 FO
  36   36 10394 2062 FO
  36   36 10397 2055 FO
  36   36 10396 2074 FO
  36   36 10390 2087 FO
  36   36 10393 2070 FO
  36   36 10390 2046 FO
  36   36 10369 2058 FO
  36   36 10389 2063 FO
  36   36 10394 2061 FO
  36   36 10294 2201 FO
  36   36 10392 2063 FO
  36   36 10399 2088 FO
  36   36 10422 1968 FO
  36   36 10390 2071 FO
  36   36 10404 2060 FO
  36   36 10395 2065 FO
  36   36 10397 2056 FO
  36   36 10391 2065 FO
  36   36 10261 2640 FO
  36   36 10402 2059 FO
  36   36 10401 2045 FO
  36   36 10395 2069 FO
  36   36 10391 2069 FO
  36   36 10401 2053 FO
  36   36 10390 2072 FO
  36   36 10398 2077 FO
  36   36 10395 2062 FO
  36   36 10343 2338 FO
  36   36 10396 2060 FO
  36   36 10386 2088 FO
  36   36 10374 2085 FO
  36   36 10447 2182 FO
  36   36 10385 2095 FO
  36   36 10310 2101 FO
  36   36 10403 2063 FO
  36   36 10349 2278 FO
  36   36 10401 2052 FO
  36   36 10396 2051 FO
  36   36 10391 2053 FO
  36   36 10386 2083 FO
  36   36 10372 2121 FO
  36   36 10305 2153 FO
  36   36 10404 2015 FO
  36   36 10396 2066 FO
  36   36 10391 2058 FO
  36   36 10413 2019 FO
  36   36 10415 2022 FO
  36   36 10386 2070 FO
  36   36 10394 2065 FO
  36   36 10036 3066 FO
  36   36 10394 2050 FO
  36   36 10393 2056 FO
  36   36 10388 2069 FO
  36   36 10399 2050 FO
  36   36 10413 2024 FO
  36   36 10389 2079 FO
  36   36 10398 2069 FO
  36   36 10399 2053 FO
  36   36 10414 2056 FO
  36   36 10393 2074 FO
  36   36 10438 2144 FO
  36   36 10398 2056 FO
  36   36 10413 2055 FO
  36   36 10390 2069 FO
  36   36 10339 2166 FO
  36   36 10396 2065 FO
  36   36 10393 2061 FO
  36   36 10317 2107 FO
  36   36 10393 2070 FO
  36   36 10397 2070 FO
  36   36 10427 1968 FO
  36   36 10390 2066 FO
  36   36 10400 2074 FO
  36   36 10392 2060 FO
  36   36 10392 2080 FO
  36   36 10394 2069 FO
  36   36 10420 2040 FO
  36   36 10409 2052 FO
  36   36 10396 2069 FO
  36   36 10012 2086 FO
  36   36 10459 1949 FO
  36   36 10427 2091 FO
  36   36 10394 2064 FO
  36   36 10293 2129 FO
  36   36 10394 2065 FO
  36   36 10402 2043 FO
  36   36 10394 2054 FO
  36   36 10392 2061 FO
  36   36 10392 2066 FO
  36   36 10388 2084 FO
  36   36 10396 2051 FO
  36   36 10391 2076 FO
  36   36 10325 2253 FO
  36   36 10406 2059 FO
  36   36 10400 2054 FO
  36   36 10400 2017 FO
  36   36 10394 2082 FO
  36   36 10392 2072 FO
  36   36 10370 2105 FO
  36   36 10400 2072 FO
  36   36 10394 2061 FO
  36   36 10469 2047 FO
  36   36 10392 2057 FO
  36   36 10425 2066 FO
  36   36 10394 2061 FO
  36   36 10397 2059 FO
  36   36 10392 2065 FO
  36   36 10410 2095 FO
  36   36 10397 2054 FO
  36   36 10420 2022 FO
  36   36 10401 2067 FO
  36   36 10392 2055 FO
  36   36 10394 2060 FO
  36   36 10342 2142 FO
  36   36 10374 2095 FO
  36   36 10401 2061 FO
  36   36 10394 2059 FO
  36   36 10445 1925 FO
  36   36 10381 2090 FO
  36   36 10393 2065 FO
  36   36 10391 2078 FO
  36   36 10408 1673 FO
  36   36 10392 2066 FO
  36   36 10404 2051 FO
  36   36 10460 2067 FO
  36   36 10404 2044 FO
  36   36 10393 2052 FO
  36   36 10383 2080 FO
  36   36 10395 2058 FO
  36   36 10359 2114 FO
  36   36 10386 2080 FO
  36   36 10390 2056 FO
  36   36 10351 2203 FO
  36   36 10389 2059 FO
  36   36 10388 2040 FO
  36   36 10391 2066 FO
  36   36 10389 2071 FO
  36   36 10388 2069 FO
  36   36 10390 2055 FO
  36   36 10457 2022 FO
  36   36 10395 2066 FO
  36   36 10413 2017 FO
  36   36 10394 2062 FO
  36   36 10396 2064 FO
  36   36 10385 2092 FO
  36   36 10400 2058 FO
  36   36 10400 2048 FO
  36   36 10388 2043 FO
  36   36 10407 2090 FO
  36   36 10402 2077 FO
  36   36 10365 2071 FO
  36   36 10381 2109 FO
  36   36 10384 2050 FO
  36   36 10416 2056 FO
  36   36 10396 2059 FO
  36   36 10394 2071 FO
  36   36 10394 2068 FO
  36   36 10395 2043 FO
  36   36 10397 2064 FO
  36   36 10394 2068 FO
  36   36 10389 2067 FO
  36   36 10393 2068 FO
  36   36 10391 2074 FO
  36   36 10399 2070 FO
  36   36 10393 2054 FO
  36   36 10396 2058 FO
  36   36 10385 2091 FO
  36   36 10394 2065 FO
  36   36 10397 2056 FO
  36   36 10406 2024 FO
  36   36 10398 2054 FO
  36   36 10391 2048 FO
  36   36 10397 2064 FO
  36   36 10391 2060 FO
  36   36 10383 2083 FO
  36   36 10400 2056 FO
  36   36 10393 2067 FO
  36   36 10396 2066 FO
  36   36 10391 2036 FO
  36   36 10387 2064 FO
  36   36 10390 2074 FO
  36   36 10396 2063 FO
  36   36 10390 2078 FO
  36   36 10403 2050 FO
  36   36 10395 2038 FO
  36   36 10387 2066 FO
  36   36 10397 2020 FO
  36   36 10395 2065 FO
  36   36 10393 2078 FO
  36   36 10401 2052 FO
  36   36 10392 2063 FO
  36   36 10396 2064 FO
  36   36 10425 2064 FO
  36   36 10390 2055 FO
  36   36 10401 2075 FO
  36   36 10403 2061 FO
  36   36 10369 2073 FO
  36   36 10394 2060 FO
  36   36 10394 2066 FO
  36   36 10391 2069 FO
  36   36 10392 2065 FO
  36   36 10395 2069 FO
  36   36 10394 2063 FO
  36   36 10386 2076 FO
  36   36 10389 2197 FO
  36   36 10398 2060 FO
  36   36 10392 2074 FO
  36   36 10390 2071 FO
  36   36 10390 2061 FO
  36   36 10399 2069 FO
  36   36 10392 2070 FO
  36   36 10395 2070 FO
  36   36 10263 2133 FO
  36   36 10396 2064 FO
  36   36 10397 2071 FO
  36   36 10396 2066 FO
  36   36 10380 2080 FO
  36   36 10393 2075 FO
  36   36 10395 2065 FO
  36   36 10412 2033 FO
  36   36 10395 2061 FO
  36   36 10401 2067 FO
  36   36 10396 2039 FO
  36   36 10394 2065 FO
  36   36 10395 2066 FO
  36   36 10396 2062 FO
  36   36 10391 2070 FO
  36   36 10396 2074 FO
  36   36 10391 2074 FO
  36   36 10392 2062 FO
  36   36 10389 2058 FO
  36   36 10392 2074 FO
  36   36 10399 2063 FO
  36   36 10393 2073 FO
  36   36 10393 2044 FO
  36   36 10398 2048 FO
  36   36 10386 2082 FO
  36   36 10410 2058 FO
  36   36 10398 2066 FO
  36   36 10384 2058 FO
  36   36 10386 2066 FO
  36   36 10393 2052 FO
  36   36 10385 2125 FO
  36   36 10320 2155 FO
  36   36 10301 2222 FO
  36   36 10392 2070 FO
  36   36 10393 2037 FO
  36   36 10396 2063 FO
  36   36 10391 2055 FO
  36   36 10394 2066 FO
  36   36 10394 2065 FO
  36   36 10392 2063 FO
  36   36 10398 2070 FO
  36   36 10339 2171 FO
  36   36 10392 2067 FO
  36   36 10392 2063 FO
  36   36 10394 2081 FO
  36   36 10396 2070 FO
  36   36 10397 2035 FO
  36   36 10404 2058 FO
  36   36 10397 2058 FO
  36   36 10395 2072 FO
  36   36 10322 2120 FO
  36   36 10996  952 FO
  36   36 10382 2080 FO
  36   36 10396 2070 FO
  36   36 10391 2069 FO
  36   36 10402 2053 FO
  36   36 10394 2065 FO
  36   36 10389 2062 FO
  36   36 10402 2037 FO
  36   36 10391 2066 FO
  36   36 10424 1877 FO
  36   36 10406 2044 FO
  36   36 10394 2064 FO
  36   36 10394 2063 FO
  36   36 10390 2057 FO
  36   36 10392 2069 FO
  36   36 10391 2062 FO
  36   36 10392 2072 FO
  36   36 10394 2064 FO
  36   36 10381 2078 FO
  36   36 10393 2071 FO
  36   36 10394 2063 FO
  36   36 10393 2065 FO
  36   36 10391 2083 FO
  36   36 10392 2066 FO
  36   36 10407 2091 FO
  36   36 10391 1991 FO
  36   36 10709 2535 FO
  36   36 10395 2063 FO
  36   36 10398 2065 FO
  36   36 10417 2136 FO
  36   36 10393 2071 FO
  36   36 10448 2096 FO
  36   36 10392 2069 FO
  36   36 10384 2082 FO
  36   36 10406 2046 FO
  36   36 10395 2062 FO
  36   36 10392 2062 FO
  36   36 10397 2053 FO
  36   36 10395 2085 FO
  36   36 10394 2091 FO
  36   36 10397 2071 FO
  36   36 10393 2082 FO
  36   36 10392 2077 FO
  36   36 10394 2060 FO
  36   36 10394 2063 FO
  36   36 10393 2078 FO
  36   36 10399 2079 FO
  36   36 10397 2065 FO
  36   36 10394 2067 FO
  36   36 10402 2056 FO
  36   36 10392 2074 FO
  36   36 10395 2067 FO
  36   36 10388 1956 FO
  36   36 10383 2096 FO
  36   36 10393 2067 FO
  36   36 10395 2063 FO
  36   36 10396 2051 FO
  36   36 10395 2064 FO
  36   36 10392 2076 FO
  36   36 10393 2074 FO
  36   36 10395 2076 FO
  36   36 10396 2057 FO
  36   36 10390 2069 FO
  36   36 10395 2062 FO
  36   36 10400 2063 FO
  36   36 10395 2061 FO
  36   36 10398 2061 FO
  36   36 10395 2061 FO
  36   36 10400 2018 FO
  36   36 10395 2059 FO
  36   36 10390 2073 FO
  36   36 10393 2060 FO
  36   36 10398 2061 FO
  36   36 10391 2072 FO
  36   36 10395 2040 FO
  36   36 10404 2061 FO
  36   36 10394 2076 FO
  36   36 10395 2068 FO
  36   36 10397 2039 FO
  36   36 10392 2075 FO
  36   36 10395 2054 FO
  36   36 10381 2073 FO
  36   36 10401 2057 FO
  36   36 10395 2059 FO
  36   36 10398 2060 FO
  36   36 10432 1908 FO
  36   36 10399 2072 FO
  36   36 10394 2055 FO
  36   36 10396 2056 FO
  36   36 10394 2067 FO
  36   36 10396 2068 FO
  36   36 10387 2071 FO
  36   36 10391 2076 FO
  36   36 10393 2064 FO
  36   36 10405 2061 FO
  36   36 10391 2066 FO
  36   36 10398 2056 FO
  36   36 10406 2060 FO
  36   36 10486 1950 FO
  36   36 10573  660 FO
  36   36 10400 2185 FO
  36   36 10388 2129 FO
  36   36 10399 2064 FO
  36   36 10390 2070 FO
  36   36 10395 2052 FO
  36   36 10391 2072 FO
  36   36 10378 2091 FO
  36   36 10396 2061 FO
  36   36 10425 2097 FO
  36   36 10392 2085 FO
  36   36 10396 2043 FO
  36   36 10391 2064 FO
  36   36 10391 2019 FO
  36   36 10384 2097 FO
  36   36 10397 2065 FO
  36   36 10405 2124 FO
  36   36 10413 2039 FO
  36   36 10397 2042 FO
  36   36 10402 2066 FO
  36   36 10391 2071 FO
  36   36 10394 2080 FO
  36   36 10393 2068 FO
  36   36 10395 2071 FO
gr

c8
gs 9005 541 2779 3059 rc
gr

gs 9190 587 2668 3087 rc
  36   36 10393 2064 FO
  36   36 10398 2056 FO
  36   36 10395 2068 FO
  36   36 10391 2065 FO
  36   36 10396 2068 FO
  36   36 10363 1990 FO
  36   36 10391 2071 FO
  36   36 10367 2089 FO
  36   36 10394 2067 FO
  36   36 10400 2054 FO
  36   36 10394 2072 FO
  36   36 10393 2063 FO
  36   36 10385 1979 FO
  36   36 10427 2015 FO
  36   36 10394 2068 FO
  36   36 10529 2054 FO
  36   36 10270 2127 FO
  36   36 10398 2066 FO
  36   36 10400 2061 FO
  36   36 10393 2054 FO
  36   36 10379 2105 FO
  36   36 10393 2068 FO
  36   36 10392 2061 FO
  36   36 10401 2068 FO
  36   36 10392 2067 FO
  36   36 10392 2086 FO
  36   36 10385 2093 FO
  36   36 10397 2066 FO
  36   36 10399 2059 FO
  36   36 10393 2067 FO
  36   36 10393 2052 FO
  36   36 10398 2061 FO
  36   36 10413 2053 FO
  36   36 10391 2068 FO
  36   36 10394 2070 FO
  36   36 10394 2063 FO
  36   36 10401 2084 FO
  36   36 10366 2098 FO
  36   36 10399 2075 FO
  36   36 10384 2082 FO
  36   36 10391 2070 FO
  36   36 10394 2065 FO
  36   36 10410 2067 FO
  36   36 10386 2046 FO
  36   36 10386 2076 FO
  36   36 10394 2066 FO
  36   36 10398 2093 FO
  36   36 10387 2086 FO
  36   36 10392 2068 FO
  36   36 10122 2368 FO
  36   36 10393 2065 FO
  36   36 10392 2070 FO
  36   36 10491 2060 FO
  36   36 10389 2062 FO
  36   36 10417 2052 FO
  36   36 10390 2082 FO
  36   36 10432 1947 FO
  36   36 10390 2071 FO
  36   36 10401 2072 FO
  36   36 10389 2073 FO
  36   36 10422 1942 FO
  36   36 10390 2070 FO
  36   36 10393 2068 FO
  36   36 10387 2091 FO
  36   36 10396 2065 FO
  36   36 10400 2055 FO
  36   36 10389 2048 FO
  36   36 10350 2067 FO
  36   36 10399 2058 FO
  36   36 10398 2070 FO
  36   36 10389 2067 FO
  36   36 10571 1760 FO
  36   36 10013 2499 FO
  36   36 10398 2065 FO
  36   36 10384 2062 FO
  36   36 10358 2025 FO
  36   36 10400 2052 FO
  36   36 10390 2065 FO
  36   36 10390 2055 FO
  36   36 10396 2051 FO
  36   36 10398 2061 FO
  36   36 10347 2167 FO
  36   36 10393 2077 FO
  36   36 10388 2071 FO
  36   36 10395 2065 FO
  36   36 10400 2058 FO
  36   36 10391 2055 FO
  36   36 10882 1188 FO
  36   36 10398 2083 FO
  36   36 10395 2058 FO
  36   36 10394 2061 FO
  36   36 10401 2056 FO
  36   36 10394 2069 FO
  36   36 10393 2076 FO
  36   36 10389 2062 FO
  36   36 10363 2119 FO
  36   36 10396 2057 FO
  36   36 10412 2097 FO
  36   36 10395 2062 FO
  36   36 10392 2064 FO
  36   36 10397 2050 FO
  36   36 10396 2070 FO
gr

gs 9005 541 2779 3059 rc
gr

gs 9190 587 2668 3087 rc
  36   36 10344 2364 FO
  36   36 10388 2056 FO
  36   36 10372 2113 FO
  36   36 10387 2074 FO
  36   36 10395 2097 FO
  36   36 10376 2068 FO
  36   36 10402 2062 FO
  36   36 10381 2077 FO
  36   36 10407 1995 FO
  36   36 10370 2088 FO
  36   36 10391 2074 FO
  36   36 10392 2072 FO
  36   36 10400 2041 FO
  36   36 10394 2067 FO
  36   36 10390 2070 FO
  36   36 10400 2120 FO
  36   36 10396 2063 FO
  36   36 10426 2066 FO
  36   36 10391 2060 FO
  36   36 10400 2064 FO
  36   36 10392 2065 FO
  36   36 10399 2062 FO
  36   36 10390 2065 FO
  36   36 10394 2064 FO
  36   36 10388 2069 FO
  36   36 10393 2065 FO
  36   36 10394 2066 FO
  36   36 10394 2068 FO
  36   36 10393 2055 FO
  36   36 10390 2100 FO
  36   36 10390 2074 FO
  36   36 10314 2222 FO
  36   36 10392 2069 FO
  36   36 10399 2091 FO
  36   36 10397 2066 FO
  36   36 10408 2093 FO
  36   36 10389 2070 FO
  36   36 10395 2091 FO
  36   36 10383 2059 FO
  36   36 10419 2033 FO
  36   36 10383 2077 FO
  36   36 10393 2061 FO
  36   36 10392 2066 FO
  36   36 10384 2077 FO
  36   36 10392 2062 FO
  36   36 10392 2065 FO
  36   36 10388 2095 FO
  36   36 10322 2186 FO
  36   36 10395 2062 FO
  36   36 10397 2078 FO
  36   36 10391 2064 FO
  36   36 10393 2072 FO
  36   36 10368 2088 FO
  36   36 10389 2075 FO
  36   36 10393 2067 FO
  36   36 10388 2073 FO
  36   36 10393 2063 FO
  36   36 10241 2177 FO
  36   36 10395 2061 FO
  36   36 10388 2109 FO
  36   36 10406 2098 FO
  36   36 10390 2075 FO
  36   36 10391 2100 FO
  36   36 10385 2076 FO
  36   36 10392 2073 FO
  36   36 10385 2058 FO
  36   36 10203 2046 FO
  36   36 10390 2086 FO
  36   36 10395 2053 FO
  36   36 10387 2071 FO
  36   36 10386 2070 FO
  36   36 10410 2098 FO
  36   36 10397 2063 FO
  36   36 10397 2071 FO
  36   36 10400 2054 FO
  36   36 10398 2066 FO
  36   36 10388 2072 FO
  36   36 10400 2066 FO
  36   36 10393 2062 FO
  36   36 10399 2057 FO
  36   36 10395 2068 FO
  36   36 10395 2064 FO
  36   36 10391 2064 FO
  36   36 10382 2111 FO
  36   36 10396 2045 FO
  36   36 10390 2041 FO
  36   36 10394 2060 FO
  36   36 10377 2073 FO
  36   36 10395 2066 FO
  36   36 10392 2061 FO
  36   36 10384 2028 FO
  36   36 10396 2060 FO
  36   36 10387 2066 FO
  36   36 10323 2115 FO
  36   36 10392 2064 FO
  36   36 10416 2027 FO
  36   36 10334 1965 FO
  36   36 10393 2066 FO
  36   36 10396 2063 FO
  36   36 10394 2054 FO
  36   36 11054 2005 FO
  36   36 10407 2096 FO
  36   36 10394 2061 FO
  36   36 10392 2071 FO
  36   36 10397 2064 FO
  36   36 10475 1773 FO
  36   36 10393 2062 FO
  36   36 10423 1947 FO
  36   36 10404 2135 FO
  36   36 10394 2066 FO
  36   36 10393 2060 FO
  36   36 10404 2063 FO
  36   36 10394 2067 FO
  36   36 10393 2074 FO
  36   36 10390 2083 FO
  36   36 10415 2056 FO
  36   36 10033 2373 FO
  36   36 10393 2071 FO
  36   36 10411 2052 FO
  36   36 10407 2073 FO
  36   36 10397 2023 FO
  36   36 10394 2041 FO
  36   36 10394 2075 FO
  36   36 10388 2068 FO
  36   36 10397 2074 FO
  36   36 10397 2061 FO
  36   36 10386 2072 FO
  36   36 10378 2094 FO
  36   36 10397 2064 FO
  36   36 10414 2054 FO
  36   36 10393 2041 FO
  36   36 10400 2037 FO
  36   36 10395 2059 FO
  36   36 10390 2074 FO
  36   36 10401 2078 FO
  36   36 10395 2049 FO
  36   36 10401 2058 FO
  36   36 10393 2066 FO
  36   36 10395 2064 FO
  36   36 10398 2057 FO
  36   36 10394 2064 FO
  36   36 10395 2059 FO
  36   36 10396 2051 FO
  36   36 10394 2063 FO
  36   36 10455 2003 FO
  36   36 10381 2107 FO
  36   36 10452 1996 FO
  36   36 10394 2072 FO
  36   36 10478 2002 FO
  36   36 10387 2080 FO
  36   36 10395 2067 FO
  36   36 10371 1901 FO
  36   36 10384 2113 FO
  36   36 10271 2251 FO
  36   36 10388 2056 FO
  36   36 10371 2043 FO
  36   36 10391 2072 FO
  36   36 10395 2127 FO
  36   36 10387 2070 FO
  36   36 10396 2062 FO
  36   36 10412 2058 FO
  36   36 10377 2100 FO
  36   36 10395 2061 FO
  36   36 10384 2077 FO
  36   36 10409 2049 FO
  36   36 10391 2060 FO
  36   36 10396 2023 FO
  36   36 10396 2060 FO
  36   36 10414 2033 FO
  36   36 10394 2074 FO
  36   36 10376 2082 FO
  36   36 10401 2029 FO
  36   36 10387 2062 FO
  36   36 10344 2094 FO
  36   36 10391 2072 FO
  36   36 10397 2061 FO
  36   36 10388 2072 FO
  36   36 10389 2072 FO
  36   36 10393 2066 FO
  36   36 10396 2063 FO
  36   36 10601 1822 FO
  36   36 10445 2044 FO
  36   36 10382 2086 FO
  36   36 10393 2074 FO
  36   36 10389 2089 FO
  36   36 10397 2063 FO
  36   36 10380 2143 FO
  36   36 10390 2063 FO
  36   36 10374 2068 FO
  36   36 10412 2034 FO
  36   36 10395 2070 FO
  36   36 10397 2088 FO
  36   36 10388 2076 FO
  36   36 10397 2063 FO
  36   36 10388 2060 FO
  36   36 10415 2057 FO
  36   36 10392 2062 FO
  36   36 10396 2067 FO
  36   36 10394 2064 FO
  36   36 10400 2053 FO
  36   36 10390 2066 FO
  36   36 10425 2039 FO
  36   36 10387 2077 FO
  36   36 10397 2072 FO
  36   36 10331 2219 FO
  36   36 10394 2044 FO
  36   36 10386 2124 FO
  36   36 10393 2058 FO
  36   36 10390 2073 FO
  36   36 10399 2060 FO
  36   36 10393 2070 FO
  36   36 10396 2058 FO
  36   36 10395 2049 FO
  36   36 10392 2065 FO
  36   36 10378 2064 FO
  36   36 10399 2061 FO
gr

gs 9005 541 2779 3059 rc
gr

0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 384 FMSR

10169  359 mt 
(T1) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 564 4051 a Fn(F)n(igur)h(1:)h
Fm(The)d(three)g(distributions)h(considered)f(standardized)h(for)f
(comparison)p 0 TeXcolorgray 0 TeXcolorgray 382 4384
a Fr(6)120 b(L)r(everaging)35 b(for)g(least-squares)h(regression)382
4597 y Fq(When)d(\002tting)g(a)g(model,)g(we)f(know)h(that)h(some)e
(datapoints)j(are)d(more)g(important)382 4710 y(that)f(others,)g
(leveraging)c(is)k(based)g(on)e(the)i(idea)f(that)h(we)f(can)f
(determine)g(the)i(im-)382 4823 y(portance)24 b(of)i(these)f(point)h
(beforehand.)p 0 TeXcolorgray 488 5061 a(1.)p 0 TeXcolorgray
45 w(A)g(leverage-score)c(is)k(calculated)e(for)h(each)g(datapoint)i
(\(its)f(importance\).)p 0 TeXcolorgray 488 5248 a(2.)p
0 TeXcolorgray 45 w(These)g(scores)f(are)f(normalized)g(into)i(a)f
(distribution)j Fl(\031)g Fq(to)e(sample)e(from.)p 0
TeXcolorgray 1851 5652 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fq(Ma.)28 b(et)h(al.)f([)p Fo(?)q Fq(])h(use)f(the)h
(leverage-scores)d(for)i(least-square)g(regression)g(de\002ned)g(as)382
661 y(the)d(diagonal)h(elements)d(of)1458 880 y Fk(H)i
Fj(=)g Fk(X)1755 806 y Fi(\000)1797 880 y Fk(X)1876 842
y Fh(T)1931 880 y Fk(X)2010 806 y Fi(\001)2051 823 y
Fg(\000)p Ff(1)2161 880 y Fk(X)2240 842 y Fh(T)3169 880
y Fq(\(6.1\))382 1084 y(This)30 b(comes)f(from)g(the)g(closed)g(form)g
(expression)g(for)g(predictions)h(which)f(is)i(linear)382
1197 y(in)25 b Fl(y)1036 1321 y Fj(^)1030 1322 y Fk(y)1085
1336 y Fh(n)1157 1322 y Fj(=)g Fk(X)1332 1336 y Fh(n)1400
1322 y Fp(\003)1478 1298 y Fj(^)1465 1322 y Fl(\014)96
b Fq(where)1962 1298 y Fj(^)1949 1322 y Fl(\014)30 b
Fj(=)2126 1249 y Fi(\000)2168 1322 y Fk(X)2247 1285 y
Fh(T)2302 1322 y Fk(X)2381 1249 y Fi(\001)2422 1266 y
Fg(\000)p Ff(1)2532 1322 y Fk(X)2611 1285 y Fh(T)2666
1322 y Fk(y)382 1485 y Fr(7)120 b(V)-10 b(alidation)36
b(of)f(the)g(results)g(Ma)f(et)h(al.)382 1699 y Fq(W)-8
b(e)24 b(have)f(empirically)g(tested)h(and)g(validated)g(the)g(results)
g(shown)f(by)h(Ma)f(et)h(al.)g([)p Fo(?)p Fq(].)p 0 TeXcolorgray
382 1770 a
SDict begin H.S end
 382 1770 a 382 1770 a
SDict begin 13.6 H.A end
 382 1770 a 382 1770
a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.3) cvn /DEST pdfmark
end
 382 1770 a 416 2544 a @beginspecial 25 @llx 185 @lly
585 @urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/GALS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GALS.eps
%%CreationDate: 05/16/2014  15:47:15
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 614 4549 mt 
(4.5) s
 874 3609 mt  926 3609 L
 749 3673 mt 
(5) s
 874 2734 mt  926 2734 L
 614 2798 mt 
(5.5) s
 874 1859 mt  926 1859 L
 749 1923 mt 
(6) s
 874  984 mt  926  984 L
 614 1048 mt 
(6.5) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -5 106 22 106 1 107 -16 106 17 106 12 107 -23 106 17 
106 26 107 -20 106 7 106 10 106 -23 107 40 106 -19 106 52 
107 -9 106 5 106 -35 107 36 106 -37 106 73 107 -18 106 -3 
106 9 106 24 107 -3 106 56 106 -87 107 66 106 6 106 7 
107 -1 106 15 106 99 107 -54 106 80 106 -13 106 92 107 -62 
106 9 106 101 107 150 106 -92 106 80 107 265 106 -23 106 621 
106 131 874 2648 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -16 106 -1 106 34 107 -6 106 -6 106 -6 107 12 106 -8 
106 47 107 -47 106 52 106 0 106 14 107 -3 106 6 106 -16 
107 3 106 -15 106 28 107 30 106 -31 106 -10 107 34 106 55 
106 17 106 -79 107 62 106 -16 106 -55 107 96 106 42 106 3 
107 77 106 -13 106 -6 107 -13 106 102 106 47 106 -63 107 -40 
106 268 106 -13 107 -52 106 229 106 -41 107 399 106 -326 106 383 
106 459 874 2594 50 MP stroke
DA
6 w
c8
106 -13 106 -3 106 10 107 -5 106 23 106 1 107 -18 106 40 
106 -12 107 -15 106 10 106 -22 106 8 107 38 106 -28 106 63 
107 -27 106 -3 106 7 107 -3 106 -10 106 77 107 -53 106 7 
106 8 106 17 107 -32 106 90 106 -59 107 -38 106 74 106 2 
107 -24 106 66 106 57 107 -62 106 -8 106 106 106 9 107 -63 
106 24 106 110 107 94 106 -3 106 -95 107 293 106 -4 106 493 
106 132 874 3006 50 MP stroke
106 6 106 -2 106 56 107 -59 106 29 106 1 107 -21 106 38 
106 2 107 15 106 -39 106 50 106 -38 107 43 106 36 106 20 
107 -3 106 -14 106 -20 107 46 106 -2 106 -4 107 5 106 -40 
106 39 106 79 107 19 106 -3 106 -30 107 0 106 31 106 -1 
107 -35 106 128 106 39 107 -9 106 108 106 26 106 -11 107 -2 
106 75 106 -25 107 194 106 -89 106 245 107 336 106 64 106 639 
106 171 874 2102 50 MP stroke
c9
106 8 106 -2 106 28 107 -18 106 -16 106 15 107 -6 106 28 
106 -5 107 3 106 20 106 -41 106 30 107 1 106 26 106 -26 
107 2 106 15 106 14 107 8 106 -19 106 1 107 54 106 -3 
106 17 106 -23 107 -24 106 -22 106 30 107 47 106 -23 106 86 
107 -33 106 13 106 -36 107 81 106 56 106 12 106 -61 107 -22 
106 137 106 99 107 -45 106 115 106 -13 107 211 106 -138 106 92 
106 507 874 3088 50 MP stroke
106 39 106 -66 106 39 107 29 106 -34 106 22 107 -10 106 38 
106 -24 107 -38 106 109 106 -63 106 68 107 -21 106 39 106 -35 
107 -1 106 -29 106 109 107 -15 106 -67 106 9 107 23 106 94 
106 -58 106 36 107 38 106 -21 106 -70 107 93 106 48 106 14 
107 11 106 104 106 -84 107 6 106 213 106 91 106 -105 107 -27 
106 335 106 -187 107 50 106 419 106 -221 107 333 106 -170 106 659 
106 1048 874 1399 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 512 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T3LS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3LS.eps
%%CreationDate: 05/16/2014  15:45:37
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 614 4549 mt 
(4.5) s
 874 3609 mt  926 3609 L
 749 3673 mt 
(5) s
 874 2734 mt  926 2734 L
 614 2798 mt 
(5.5) s
 874 1859 mt  926 1859 L
 749 1923 mt 
(6) s
 874  984 mt  926  984 L
 614 1048 mt 
(6.5) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 25 106 -26 106 33 107 -16 106 -16 106 27 107 -14 106 -15 
106 47 107 4 106 13 106 -1 106 -14 107 -8 106 58 106 -53 
107 48 106 -34 106 12 107 -18 106 37 106 -78 107 93 106 -16 
106 19 106 16 107 28 106 -8 106 -15 107 7 106 45 106 -38 
107 29 106 36 106 41 107 -60 106 -10 106 142 106 -61 107 72 
106 141 106 -54 107 106 106 63 106 19 107 199 106 -143 106 276 
106 855 874 2471 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -11 106 1 106 37 107 23 106 -52 106 49 107 -16 106 -12 
106 33 107 -11 106 17 106 60 106 -33 107 -26 106 32 106 -6 
107 43 106 -47 106 132 107 -104 106 45 106 -15 107 49 106 2 
106 3 106 66 107 -80 106 142 106 -46 107 11 106 -16 106 -28 
107 135 106 -55 106 92 107 120 106 -180 106 264 106 -67 107 39 
106 184 106 184 107 7 106 28 106 52 107 38 106 347 106 86 
106 362 874 2335 50 MP stroke
DA
6 w
c8
106 4 106 -15 106 18 107 -10 106 -5 106 29 107 16 106 -32 
106 0 107 12 106 5 106 7 106 -10 107 -9 106 11 106 -19 
107 39 106 -25 106 25 107 -17 106 18 106 -25 107 87 106 -54 
106 -22 106 51 107 33 106 -63 106 36 107 -20 106 33 106 -26 
107 22 106 87 106 -14 107 -23 106 -17 106 77 106 -39 107 70 
106 65 106 -26 107 3 106 124 106 -47 107 8 106 215 106 106 
106 661 874 2958 50 MP stroke
106 29 106 3 106 13 107 -26 106 -40 106 75 107 -42 106 -4 
106 58 107 28 106 -28 106 29 106 -47 107 41 106 45 106 -27 
107 33 106 -2 106 -23 107 -44 106 84 106 -71 107 68 106 -1 
106 118 106 -34 107 -44 106 -20 106 43 107 -65 106 68 106 46 
107 14 106 50 106 26 107 10 106 -89 106 177 106 100 107 -61 
106 198 106 -140 107 43 106 241 106 -61 107 372 106 -174 106 321 
106 1007 874 1925 50 MP stroke
c9
106 -20 106 1 106 8 107 24 106 -27 106 52 107 -43 106 5 
106 0 107 7 106 27 106 22 106 -11 107 -11 106 48 106 -47 
107 17 106 -5 106 32 107 -37 106 66 106 -40 107 39 106 58 
106 -31 106 -11 107 -1 106 71 106 27 107 34 106 -76 106 25 
107 47 106 -52 106 97 107 -75 106 50 106 108 106 -59 107 175 
106 23 106 179 107 -11 106 52 106 47 107 -30 106 348 106 42 
106 280 874 2824 50 MP stroke
106 19 106 19 106 0 107 17 106 -34 106 39 107 8 106 -8 
106 -15 107 78 106 63 106 9 106 -49 107 -9 106 35 106 -30 
107 112 106 -128 106 165 107 -78 106 -9 106 55 107 38 106 -28 
106 17 106 98 107 -13 106 2 106 -12 107 95 106 -5 106 -27 
107 60 106 -16 106 129 107 170 106 -272 106 311 106 -175 107 201 
106 28 106 315 107 57 106 38 106 29 107 525 106 54 106 82 
106 859 874 1345 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 512 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T1LS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1LS.eps
%%CreationDate: 05/16/2014  15:51:23
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(4) s
 874 3901 mt  926 3901 L
 749 3965 mt 
(5) s
 874 3318 mt  926 3318 L
 749 3382 mt 
(6) s
 874 2734 mt  926 2734 L
 749 2798 mt 
(7) s
 874 2151 mt  926 2151 L
 749 2215 mt 
(8) s
 874 1567 mt  926 1567 L
 749 1631 mt 
(9) s
 874  984 mt  926  984 L
 659 1048 mt 
(10) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -19 106 5 106 -1 107 8 106 7 106 -19 107 5 106 1 
106 -4 107 4 106 -4 106 5 106 19 107 -23 106 4 106 3 
107 10 106 -10 106 -7 107 11 106 6 106 -19 107 12 106 5 
106 11 106 -12 107 -11 106 10 106 16 107 11 106 24 106 -22 
107 -31 106 7 106 22 107 63 106 -33 106 -2 106 -28 107 86 
106 -27 106 13 107 27 106 275 106 -56 107 736 106 -23 106 276 
106 23 874 2774 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 12 106 -38 106 42 107 21 106 72 106 -145 107 113 106 78 
106 70 107 -48 106 -7 106 27 106 -43 107 -19 106 68 106 -8 
107 20 106 77 106 -210 107 144 106 104 106 -12 107 -81 106 104 
106 107 106 -100 107 5 106 135 106 65 107 -187 106 158 106 122 
107 -108 106 -16 106 187 107 -134 106 113 106 103 106 -84 107 38 
106 62 106 136 107 10 106 78 106 68 107 166 106 59 106 130 
106 134 874 1675 50 MP stroke
DA
6 w
c8
106 -11 106 -1 106 4 107 -5 106 7 106 -6 107 5 106 0 
106 -5 107 1 106 2 106 0 106 9 107 -9 106 -2 106 6 
107 1 106 0 106 -7 107 5 106 1 106 -5 107 -2 106 6 
106 0 106 0 107 -4 106 3 106 3 107 -2 106 19 106 -12 
107 -2 106 1 106 1 107 0 106 11 106 9 106 -21 107 26 
106 -7 106 33 107 -31 106 69 106 -24 107 428 106 -95 106 452 
106 269 874 3021 50 MP stroke
106 -14 106 30 106 -25 107 4 106 60 106 -72 107 47 106 -24 
106 -16 107 22 106 -9 106 -7 106 44 107 -58 106 12 106 48 
107 -16 106 -37 106 -8 107 66 106 -13 106 -52 107 72 106 -41 
106 34 106 -15 107 13 106 6 106 1 107 68 106 -11 106 20 
107 -119 106 60 106 77 107 141 106 -195 106 0 106 124 107 23 
106 82 106 195 107 -63 106 376 106 172 107 400 106 -84 106 344 
106 20 874 2429 50 MP stroke
c9
106 34 106 -52 106 19 107 -21 106 43 106 -29 107 128 106 -12 
106 -32 107 76 106 -70 106 26 106 28 107 -22 106 89 106 -1 
107 36 106 -32 106 -128 107 169 106 -160 106 148 107 -130 106 109 
106 135 106 -113 107 153 106 48 106 101 107 -167 106 49 106 237 
107 -173 106 58 106 233 107 -190 106 84 106 80 106 24 107 29 
106 -36 106 126 107 56 106 24 106 -168 107 335 106 -89 106 216 
106 209 874 1948 50 MP stroke
106 7 106 85 106 -33 107 -50 106 96 106 -64 107 48 106 133 
106 -61 107 52 106 76 106 10 106 -90 107 9 106 -64 106 63 
107 224 106 -192 106 53 107 30 106 72 106 -50 107 27 106 28 
106 46 106 82 107 -173 106 206 106 37 107 -160 106 98 106 86 
107 105 106 -166 106 152 107 -54 106 147 106 39 106 -52 107 -36 
106 44 106 125 107 141 106 20 106 9 107 182 106 66 106 316 
106 14 874 1448 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 557 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 382 2696 a Fn(F)n(igur)g(2:)h
Fm(Comparison)c(of)g(uniform)p 1 0 0 TeXcolorrgb 21 w
Fn(\(red\))p 0 TeXcolorgray 20 w Fm(vs.)h(leverage)p
0 0 1 TeXcolorrgb 21 w Fn(\(blue\))p 0 TeXcolorgray 19
w Fm(based)f(sampling)i(schemes)707 2796 y(for)f(least-squares)i
(regression.)f Fe(N)32 b Fd(=)23 b(1000)p Fm(,)e Fe(d)i
Fd(=)g(10)p Fm(.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
659 3001 a Fp(\017)p 0 TeXcolorgray 46 w Fq(GA:)i(The)g(leverage)d
(score)i(are)g(approxi-)750 3114 y(mately)19 b(uniform,)h(and)f(thus)i
(there)e(is)h(no)750 3227 y(signi\002cant)51 b(difference)f(between)g
(the)750 3340 y(two)26 b(sampling)f(schemes.)p 0 TeXcolorgray
659 3528 a Fp(\017)p 0 TeXcolorgray 46 w Fq(T3:)50 b(Leveraging)d
(consistently)j(provi-)750 3640 y(des)28 b(slightly)g(better)f(results)
h(compared)750 3753 y(to)e(uniform)f(sampling.)p 0 TeXcolorgray
659 3941 a Fp(\017)p 0 TeXcolorgray 46 w Fq(T1:)d(W)n(ith)h
Fc(very)f(non-uniform)e Fq(leverage-)750 4054 y(scores,)62
b(leveraging)d(clearly)h(outper-)750 4167 y(forms)25
b(uniform)g(sampling.)p 0 TeXcolorgray 2385 3059 a
SDict begin H.S end
 2385
3059 a 2385 3059 a
SDict begin 13.6 H.A end
 2385 3059 a 2385 3059 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.4) cvn /DEST pdfmark
end
 2385 3059
a 0 TeXcolorgray 127 x Fn(F)n(igur)f(3:)g Fm(Comparison)e(of)f(sam-)
2709 3285 y(pling)j(methods)p 0 TeXcolorgray 2385 4104
a @beginspecial 25 @llx 185 @lly 585 @urx 605 @ury 1129
@rwi @setspecial
%%BeginDocument: 02460_poster_template/images/selection.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/Tex/02460_poster_template/images/selection.eps
%%CreationDate: 05/19/2014  13:03:51
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1136 4485 mt 1136 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 946 4680 mt 
(-10) s
1724 4485 mt 1724 4432 L
1579 4680 mt 
(-8) s
2313 4485 mt 2313 4432 L
2168 4680 mt 
(-6) s
2902 4485 mt 2902 4432 L
2757 4680 mt 
(-4) s
3490 4485 mt 3490 4432 L
3345 4680 mt 
(-2) s
4079 4485 mt 4079 4432 L
4034 4680 mt 
(0) s
4667 4485 mt 4667 4432 L
4622 4680 mt 
(2) s
5256 4485 mt 5256 4432 L
5211 4680 mt 
(4) s
5845 4485 mt 5845 4432 L
5800 4680 mt 
(6) s
 874 4270 mt  926 4270 L
 558 4334 mt 
(-10) s
 874 3879 mt  926 3879 L
 648 3943 mt 
(-8) s
 874 3488 mt  926 3488 L
 648 3552 mt 
(-6) s
 874 3096 mt  926 3096 L
 648 3160 mt 
(-4) s
 874 2705 mt  926 2705 L
 648 2769 mt 
(-2) s
 874 2314 mt  926 2314 L
 749 2378 mt 
(0) s
 874 1923 mt  926 1923 L
 749 1987 mt 
(2) s
 874 1532 mt  926 1532 L
 749 1596 mt 
(4) s
 874 1141 mt  926 1141 L
 749 1205 mt 
(6) s
gs 874 984 5210 3502 rc
36 w
gr

36 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
  96   96 1795 3898 FO
  96   96 4680 1570 FO
  96   96 5200 2285 FO
  96   96 2373 2267 FO
  96   96 4132 1718 FO
  96   96 1756 2198 FO
  96   96 4376 2050 FO
  96   96 3832 2043 FO
  96   96 4646 2466 FO
  96   96 4065 2204 FO
gs 874 984 5210 3502 rc
gr

0 sg
4556 1980 mt 4690 2114 L
4690 1980 mt 4556 2114 L
4402 2202 mt 4536 2336 L
4536 2202 mt 4402 2336 L
3998 2137 mt 4132 2271 L
4132 2137 mt 3998 2271 L
4284 1950 mt 4418 2084 L
4418 1950 mt 4284 2084 L
3896 2324 mt 4030 2458 L
4030 2324 mt 3896 2458 L
3970 2060 mt 4104 2194 L
4104 2060 mt 3970 2194 L
4102 2411 mt 4236 2545 L
4236 2411 mt 4102 2545 L
3708 2381 mt 3842 2515 L
3842 2381 mt 3708 2515 L
4095 2173 mt 4229 2307 L
4229 2173 mt 4095 2307 L
3689 2238 mt 3823 2372 L
3823 2238 mt 3689 2372 L
gs 874 984 5210 3502 rc
gr

64 W
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
3834 3017 PD
64 W
3224 1829 PD
64 W
3878 2502 PD
64 W
3985 2723 PD
64 W
4717 2047 PD
64 W
4623 2047 PD
64 W
4317 2514 PD
64 W
3940 2422 PD
64 W
4432 2047 PD
64 W
4077 2376 PD
64 W
4253 1944 PD
64 W
3621 2643 PD
64 W
3556 2201 PD
64 W
4917 1939 PD
64 W
4359 2230 PD
64 W
3626 2824 PD
64 W
4469 2269 PD
64 W
4680 1570 PD
64 W
4191 2181 PD
64 W
4202 2337 PD
64 W
4169 2478 PD
64 W
3865 2121 PD
64 W
3850 2299 PD
64 W
1756 2198 PD
64 W
3756 2305 PD
64 W
3918 2476 PD
64 W
4319 2376 PD
64 W
4412 2417 PD
64 W
3932 2274 PD
64 W
4130 2298 PD
64 W
3311 2828 PD
64 W
5200 2285 PD
64 W
4162 2240 PD
64 W
3911 2355 PD
64 W
3775 2448 PD
64 W
3894 2360 PD
64 W
4387 1851 PD
64 W
4067 2264 PD
64 W
4137 2222 PD
64 W
4274 2175 PD
64 W
3634 2707 PD
64 W
3986 2775 PD
64 W
3997 2503 PD
64 W
4100 2394 PD
64 W
4042 1980 PD
64 W
4108 2329 PD
64 W
4050 2256 PD
64 W
3809 3124 PD
64 W
3645 2461 PD
64 W
3963 2391 PD
64 W
3915 2332 PD
64 W
4259 2266 PD
64 W
3818 2283 PD
64 W
3832 2043 PD
64 W
3521 2553 PD
64 W
5017 1978 PD
64 W
4207 2335 PD
64 W
3504 2455 PD
64 W
4409 2458 PD
64 W
4202 2300 PD
64 W
4037 2127 PD
64 W
5064 2427 PD
64 W
4284 2253 PD
64 W
3914 2063 PD
64 W
3977 2116 PD
64 W
4375 2292 PD
64 W
4057 2099 PD
64 W
3875 2901 PD
64 W
2373 2267 PD
64 W
3625 2762 PD
64 W
4065 2204 PD
64 W
4331 2278 PD
64 W
4351 2017 PD
64 W
4325 2382 PD
64 W
4005 2168 PD
64 W
4060 2373 PD
64 W
4096 2404 PD
64 W
3035 2505 PD
64 W
3503 2473 PD
64 W
4514 2023 PD
64 W
4227 2224 PD
64 W
3723 2273 PD
64 W
4862 2172 PD
64 W
4457 2107 PD
64 W
4069 2227 PD
64 W
4214 2523 PD
64 W
4137 2145 PD
64 W
4646 2466 PD
64 W
3976 2430 PD
64 W
3731 2736 PD
64 W
3721 2426 PD
64 W
4132 1718 PD
64 W
3135 2565 PD
64 W
3763 2685 PD
64 W
4376 2050 PD
64 W
3979 2319 PD
64 W
1795 3898 PD
64 W
4957 2106 PD
64 W
4650 2155 PD
64 W
3906 2435 PD
gs 874 984 5210 3502 rc
gr

0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

2912 4881 mt 
(2-dimension) s
 456 3300 mt  -90 rotate
(1-dimension) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 827 4572 mt 
( ) s
6037 1070 mt 
( ) s
6 w
1 sg
0 1067 1691 0 0 -1067 3934 4168 4 MP
PP
-1691 0 0 1067 1691 0 0 -1067 3934 4168 5 MP stroke
4 w
DO
SO
6 w
0 sg
3934 4168 mt 5625 4168 L
3934 3101 mt 5625 3101 L
3934 4168 mt 3934 3101 L
5625 4168 mt 5625 3101 L
3934 4168 mt 5625 4168 L
3934 4168 mt 3934 3101 L
3934 4168 mt 5625 4168 L
3934 3101 mt 5625 3101 L
3934 4168 mt 3934 3101 L
5625 4168 mt 5625 3101 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

4402 3375 mt 
(Lev-sample) s
gs 3934 3101 1692 1068 rc
36 w
gr

36 w
gs 3955 3062 461 461 rc
c8
  96   96 4185 3292 FO
gr

c8
gs 3934 3101 1692 1068 rc
gr

0 sg
4402 3717 mt 
(Uni-sample) s
gs 3934 3101 1692 1068 rc
gs 3955 3404 461 461 rc
4118 3567 mt 4252 3701 L
4252 3567 mt 4118 3701 L
gr

gr

4402 4059 mt 
(Data) s
gs 3934 3101 1692 1068 rc
gr

gs 3955 3746 461 461 rc
64 W
c9
4185 3976 PD
gr

c9
gs 3934 3101 1692 1068 rc
6 w
gr

6 w

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 523 4262 a Fq(There)f(results)f(are)h
(consistent)g(when)g(varying)f Fl(N)33 b Fq(and)23 b
Fl(d)p Fq(,)h(although)f(the)g(level)f(of)382 4375 y(improvement)i
(varies.)382 4678 y Fr(8)120 b(LS-based)35 b(Distribution)h(for)f
(Classi\002cation)382 4892 y Fq(W)-8 b(e)27 b(sample)g(from)f(the)h
(same)g(distribution)i(\()1963 4893 y
SDict begin H.S end
 1963 4893 a 0 TeXcolorgray
-1 x Fq(6.1)p 0 TeXcolorgray 2089 4827 a
SDict begin H.R end
 2089 4827 a
2089 4892 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.caption.2) cvn H.B /ANN pdfmark end
 2089 4892 a Fq(\))e(as)g(for)g(least-squares)g(regression.)
382 5005 y(W)-8 b(e)25 b(use)g(these)g(samples)g(to)h(train)f(a)g
(logistic)g(regression)f(model)h(for)g(2)f(class)h(classi\002-)382
5117 y(cation,)h(with)g(equal)f(class)g(size.)p 0 TeXcolorgray
1851 5652 a(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fr(9)120 b(T)-12 b(est)35 b(R)l(esults)382
762 y Fq(W)-8 b(e)31 b(compared)e(the)h(LS-distribution)p
0 0 1 TeXcolorrgb 32 w Fo(\(blue\))p 0 TeXcolorgray 29
w Fq(to)h(a)f(uniform-distribution)p 1 0 0 TeXcolorrgb
32 w Fo(\(red\))p 0 TeXcolorgray 30 w Fq(in)382 875 y(sampling)36
b(for)g(a)h(logistic)g(regression.)f(The)g(mean,)g(25th)g(and)h(75th)f
(quantile)g(are)382 987 y(plotted.)p 0 TeXcolorgray 382
1043 a
SDict begin H.S end
 382 1043 a 382 1043 a
SDict begin 13.6 H.A end
 382 1043 a 382 1043 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.5) cvn /DEST pdfmark
end
 382
1043 a 416 1817 a @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/GA.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GA.eps
%%CreationDate: 05/16/2014  16:04:19
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -14 106 0 106 -42 107 49 106 28 106 -35 107 14 106 -35 
106 63 107 -49 106 119 106 -63 106 56 107 -119 106 7 106 49 
107 -28 106 35 106 56 107 -35 106 -14 106 -14 107 56 106 -126 
106 70 106 84 107 -77 106 77 106 28 107 -63 106 84 106 77 
107 -147 106 63 106 49 107 -49 106 -14 106 84 106 -28 107 133 
106 -35 106 56 107 238 106 119 106 -14 107 301 106 294 106 -175 
106 1008 874 1866 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 42 106 -49 106 21 107 -63 106 70 106 70 107 -63 106 14 
106 0 107 -28 106 28 106 21 106 -7 107 14 106 -28 106 42 
107 -28 106 -14 106 42 107 28 106 -28 106 35 107 -70 106 77 
106 -14 106 0 107 -7 106 63 106 -28 107 28 106 -7 106 21 
107 -14 106 35 106 -70 107 77 106 98 106 -98 106 7 107 21 
106 182 106 -7 107 105 106 0 106 252 107 35 106 539 106 -49 
106 350 874 2377 50 MP stroke
DA
6 w
c8
106 -7 106 8 106 -7 107 7 106 56 106 -42 107 42 106 -42 
106 14 107 9 106 33 106 -63 106 62 107 -35 106 -18 106 16 
107 2 106 17 106 -2 107 -10 106 28 106 -2 107 9 106 -65 
106 53 106 66 107 -89 106 89 106 -30 107 -14 106 16 106 103 
107 -110 106 33 106 0 107 -12 106 18 106 8 106 41 107 96 
106 9 106 -62 107 111 106 85 106 -21 107 58 106 452 106 0 
106 378 874 2811 50 MP stroke
106 -35 106 -7 106 -61 107 89 106 25 106 -39 107 -7 106 49 
106 -30 107 88 106 16 106 -44 106 47 107 -91 106 -54 106 26 
107 7 106 46 106 66 107 -37 106 -26 106 25 107 38 106 -72 
106 62 106 89 107 -102 106 119 106 18 107 -75 106 145 106 5 
107 -138 106 26 106 186 107 -114 106 -135 106 240 106 161 107 -30 
106 -92 106 246 107 207 106 58 106 -119 107 644 106 606 106 -118 
106 574 874 1383 50 MP stroke
c9
106 23 106 -61 106 3 107 7 106 28 106 41 107 -55 106 7 
106 49 107 -56 106 -8 106 59 106 -23 107 9 106 -2 106 -3 
107 51 106 -69 106 25 107 38 106 14 106 -12 107 -37 106 23 
106 -12 106 24 107 49 106 -66 106 80 107 -28 106 -22 106 22 
107 28 106 -8 106 -69 107 133 106 -14 106 -22 106 0 107 31 
106 144 106 -58 107 44 106 52 106 33 107 42 106 499 106 -35 
106 137 874 3049 50 MP stroke
106 -63 106 -65 106 100 107 -91 106 80 106 19 107 -3 106 38 
106 -63 107 100 106 -129 106 61 106 24 107 -54 106 23 106 0 
107 24 106 -12 106 135 107 -28 106 -65 106 -24 107 77 106 17 
106 -75 106 73 107 -52 106 2 106 52 107 -40 106 149 106 -35 
107 -91 106 98 106 -76 107 30 106 102 106 33 106 12 107 49 
106 205 106 25 107 131 106 152 106 138 107 -84 106 634 106 131 
106 625 874 1530 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3.eps
%%CreationDate: 05/16/2014  16:06:02
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -7 106 -14 106 -42 107 35 106 28 106 -7 107 0 106 -42 
106 35 107 7 106 14 106 -7 106 -42 107 0 106 14 106 35 
107 -7 106 21 106 -35 107 0 106 84 106 -56 107 -35 106 84 
106 -77 106 14 107 21 106 14 106 28 107 14 106 7 106 0 
107 -35 106 56 106 42 107 -56 106 77 106 -21 106 35 107 84 
106 -42 106 28 107 -49 106 203 106 35 107 161 106 140 106 126 
106 756 874 2391 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -7 106 -21 106 28 107 -14 106 7 106 7 107 -14 106 0 
106 14 107 -14 106 14 106 0 106 63 107 -56 106 42 106 -56 
107 49 106 -28 106 7 107 -42 106 91 106 -49 107 42 106 -7 
106 0 106 -7 107 0 106 -28 106 70 107 -21 106 -28 106 35 
107 21 106 -49 106 70 107 14 106 70 106 -98 106 35 107 63 
106 49 106 77 107 147 106 28 106 -21 107 77 106 280 106 322 
106 378 874 2475 50 MP stroke
DA
6 w
c8
106 23 106 -3 106 -55 107 41 106 -11 106 25 107 -6 106 -28 
106 13 107 7 106 15 106 16 106 -38 107 15 106 -15 106 35 
107 -6 106 20 106 -42 107 1 106 51 106 -17 107 -39 106 75 
106 -91 106 34 107 1 106 14 106 13 107 -13 106 21 106 6 
107 -20 106 30 106 28 107 19 106 -7 106 23 106 42 107 -38 
106 52 106 -56 107 12 106 88 106 17 107 140 106 125 106 54 
106 541 874 2986 50 MP stroke
106 -2 106 -29 106 -25 107 30 106 2 106 -16 107 -5 106 -7 
106 22 107 14 106 13 106 5 106 10 107 -59 106 91 106 3 
107 -36 106 5 106 -25 107 35 106 53 106 -51 107 -45 106 105 
106 -100 106 16 107 87 106 21 106 -3 107 57 106 -52 106 -26 
107 -35 106 131 106 -23 107 -3 106 33 106 9 106 182 107 -23 
106 -86 106 119 107 -133 106 394 106 156 107 219 106 171 106 165 
106 942 874 1636 50 MP stroke
c9
106 0 106 6 106 -13 107 14 106 2 106 -3 107 -7 106 -11 
106 25 107 -6 106 20 106 -7 106 29 107 -21 106 7 106 -14 
107 14 106 -29 106 -7 107 8 106 51 106 -10 107 8 106 -28 
106 4 106 -32 107 48 106 -7 106 31 107 4 106 -21 106 28 
107 -21 106 3 106 60 107 -37 106 21 106 -21 106 16 107 50 
106 14 106 69 107 -20 106 -73 106 159 107 -24 106 154 106 325 
106 -133 874 3459 50 MP stroke
106 -19 106 0 106 0 107 -5 106 31 106 -21 107 -17 106 57 
106 44 107 -59 106 -53 106 74 106 43 107 -38 106 -5 106 -49 
107 33 106 -26 106 31 107 -70 106 149 106 -75 107 43 106 13 
106 22 106 -94 107 126 106 -77 106 59 107 -66 106 49 106 9 
107 -30 106 49 106 33 107 145 106 -87 106 -28 106 222 107 -117 
106 72 106 121 107 194 106 -23 106 100 107 -23 106 429 106 604 
106 411 874 1747 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1.eps
%%CreationDate: 05/16/2014  16:07:16
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 569 4549 mt 
(100) s
 874 4047 mt  926 4047 L
 569 4111 mt 
(150) s
 874 3609 mt  926 3609 L
 569 3673 mt 
(200) s
 874 3172 mt  926 3172 L
 569 3236 mt 
(250) s
 874 2734 mt  926 2734 L
 569 2798 mt 
(300) s
 874 2296 mt  926 2296 L
 569 2360 mt 
(350) s
 874 1859 mt  926 1859 L
 569 1923 mt 
(400) s
 874 1421 mt  926 1421 L
 569 1485 mt 
(450) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -88 106 0 106 88 107 -88 106 0 106 53 107 -105 106 52 
106 9 107 -9 106 123 106 -123 106 9 107 -18 106 44 106 0 
107 -17 106 26 106 -9 107 -35 106 18 106 52 107 0 106 -131 
106 96 106 44 107 -88 106 -17 106 52 107 18 106 -53 106 0 
107 18 106 0 106 17 107 -43 106 -18 106 18 106 157 107 -61 
106 87 106 -78 107 -53 106 271 106 -157 107 332 106 -166 106 350 
106 648 874 2804 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -96 106 0 106 123 107 61 106 26 106 -61 107 -70 106 -35 
106 87 107 44 106 -131 106 9 106 70 107 105 106 -237 106 193 
107 9 106 -44 106 -61 107 52 106 18 106 87 107 18 106 -114 
106 52 106 -26 107 -79 106 62 106 -70 107 166 106 -114 106 61 
107 -96 106 105 106 79 107 -88 106 44 106 61 106 -140 107 167 
106 -79 106 114 107 122 106 193 106 -105 107 35 106 175 106 254 
106 901 874 2104 50 MP stroke
DA
6 w
c8
106 -62 106 0 106 0 107 -43 106 15 106 39 107 -92 106 35 
106 24 107 -24 106 44 106 -50 106 -9 107 0 106 11 106 20 
107 32 106 -39 106 44 107 -15 106 15 106 -13 107 22 106 -75 
106 59 106 -52 107 -11 106 -15 106 67 107 20 106 -33 106 -4 
107 -35 106 33 106 30 107 -52 106 22 106 -9 106 66 107 -38 
106 31 106 0 107 -35 106 149 106 -184 107 258 106 20 106 105 
106 551 874 3301 50 MP stroke
106 -68 106 51 106 124 107 -129 106 -37 106 2 107 46 106 -55 
106 38 107 -40 106 114 106 -155 106 65 107 0 106 -15 106 26 
107 29 106 41 106 -105 107 70 106 26 106 -17 107 133 106 -282 
106 123 106 96 107 -101 106 -13 106 90 107 -46 106 -4 106 -92 
107 85 106 -42 106 18 107 -59 106 41 106 77 106 105 107 -68 
106 107 106 -126 107 2 106 179 106 68 107 258 106 81 106 630 
106 626 874 2023 50 MP stroke
c9
106 -49 106 -10 106 15 107 125 106 26 106 -101 107 -2 106 -90 
106 88 107 103 106 -156 106 29 106 33 107 -20 106 -112 106 195 
107 57 106 -175 106 41 107 -8 106 -44 106 175 107 -7 106 -78 
106 17 106 -57 107 5 106 46 106 -14 107 60 106 -88 106 120 
107 -129 106 81 106 -26 107 9 106 116 106 -73 106 -13 107 -65 
106 159 106 99 107 -44 106 206 106 -31 107 -94 106 83 106 99 
106 693 874 2905 50 MP stroke
106 -48 106 -107 106 96 107 238 106 -164 106 -39 107 26 106 -37 
106 142 107 33 106 -206 106 -59 106 169 107 13 106 -180 106 182 
107 9 106 129 106 -214 107 -51 106 103 106 228 107 -189 106 -26 
106 24 106 -37 107 -26 106 13 106 -50 107 249 106 -116 106 -11 
107 -76 106 61 106 125 107 -114 106 286 106 -87 106 -123 107 70 
106 -30 106 74 107 282 106 88 106 -29 107 0 106 440 106 370 
106 1053 874 1250 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 0 TeXcolorgray 518 2014 a
Fp(\017)p 0 TeXcolorgray 46 w Fq(Sampling)30 b(from)g(the)h
(LS-distribution)i(is)e(no)g(better)f(that)i(uniform)e(on)h(data-)609
2127 y(sets)26 b(of)g(type)f(GA)g(and)h(T3.)p 0 TeXcolorgray
518 2299 a Fp(\017)p 0 TeXcolorgray 46 w Fq(W)n(ith)d(very)e
(non-uniform)f(leverage)g(scores,)h(T1,)g(the)h(LS-distribution)h
(slightly)609 2412 y(outperforms)i(uniform)g(sampling.)382
2578 y(The)j(results)h(shown)f(are)g(for)g(dimension)h
Fl(p)h Fj(=)g(10)f Fq(and)g Fl(N)40 b Fj(=)30 b(1000)g
Fq(datapoints,)h(but)382 2691 y(it)26 b(is)g(consistent)g(when)f
(varying)f Fl(p)h Fq(and)h Fl(N)10 b Fq(.)382 3099 y
Fr(10)120 b(Sensitivity)36 b(Based)g(Distribution)382
3312 y Fq(W)-8 b(e)32 b(generalize)c(the)k(leverage)d(scores)i(to)g
(other)g(models)g(by)g(seeing)g(that)h(they)f(can)382
3425 y(be)25 b(described)g(as:)1556 3499 y Fl(\016)1605
3498 y Fj(^)1599 3499 y Fk(y)1654 3513 y Fh(n)p 1556
3539 146 4 v 1556 3622 a Fl(\016)s Fk(y)1654 3636 y Fh(n)1738
3560 y Fj(=)g Fl(D)s(iag)18 b Fj(\()q Fl(H)7 b Fj(\))912
b Fq(\(10.1\))523 3746 y(Which)30 b(we)e(call)g(the)h(sensitivity)i(of)
e(the)g(model)f(to)h(a)g(speci\002c)g(datapoint.)h(F)-6
b(or)29 b(a)382 3859 y(general)23 b(probabilistic)k(discriminative)f
(model)e(this)j(requires)e(the)h(following:)1244 4056
y Fj(^)1239 4057 y Fk(y)1294 4071 y Fh(n)1366 4057 y
Fj(=)f Fl(p)p Fj(\()p Fl(y)s Fp(j)1644 4056 y Fj(\026)1616
4057 y Fk(x)1671 4071 y Fh(n)1718 4057 y Fl(;)1774 4056
y Fj(\026)1758 4057 y Fk(w)r Fj(\))1978 4056 y(\026)1962
4057 y Fk(w)h Fq(s.t.)2224 3996 y Fl(\016)s(L)p 2217
4036 121 4 v 2217 4119 a(\016)2276 4118 y Fj(\026)2260
4119 y Fk(w)2373 4057 y Fj(=)f(0)604 b Fq(\(10.2\))382
4240 y(Since)620 4241 y
SDict begin H.S end
 620 4241 a 0 TeXcolorgray -1
x Fq(10.2)p 0 TeXcolorgray 797 4178 a
SDict begin H.R end
 797 4178 a 797
4240 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.caption.5) cvn H.B /ANN pdfmark end
 797 4240 a 25 w Fq(depends)26 b(both)f(directly)g(and)h
(indirectly)f(on)g Fl(y)j Fq(we)d(see)g(that)1142 4389
y Fl(\016)p 1114 4429 101 4 v 1114 4512 a(\016)s Fk(y)1241
4389 y Fl(\016)s Fp(L)p 1234 4429 121 4 v 1234 4512 a
Fl(\016)s Fk(w)1390 4450 y Fj(=)g(0)h Fp(\))1720 4389
y Fl(\016)1763 4356 y Ff(2)1804 4389 y Fp(L)p 1683 4429
222 4 v 1683 4512 a Fl(\016)s Fk(y)q Fl(\016)1843 4511
y Fj(\026)1825 4512 y Fk(w)1934 4450 y Fj(+)2110 4389
y Fl(\016)2153 4356 y Ff(2)2194 4389 y Fp(L)p 2035 4429
297 4 v 2035 4512 a Fl(\016)2095 4511 y Fj(\026)2078
4512 y Fk(w)r Fl(\016)2215 4511 y Fj(\026)2199 4512 y
Fk(w)2276 4486 y Fh(T)2352 4389 y Fl(\016)2411 4388 y
Fj(\026)2395 4389 y Fk(w)p 2352 4429 121 4 v 2362 4512
a Fl(\016)s Fk(y)2508 4450 y Fj(=)f(0)469 b Fq(\(10.3\))523
4651 y(and)25 b(from)g(this)i(we)e(can)f(get)h(our)g(leverage-score)d
(\()2323 4652 y
SDict begin H.S end
 2323 4652 a 0 TeXcolorgray -1 x Fq(10.1)p
0 TeXcolorgray 2500 4588 a
SDict begin H.R end
 2500 4588 a 2500 4651 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.caption.5) cvn H.B /ANN pdfmark end
 2500
4651 a Fq(\))714 4909 y Fl(\016)763 4908 y Fj(^)757 4909
y Fk(y)812 4923 y Fh(n)p 714 4950 146 4 v 714 5033 a
Fl(\016)s Fk(y)812 5047 y Fh(n)896 4970 y Fj(=)1002 4909
y Fl(\016)s(p)p Fj(\()p Fl(y)s Fp(j)1204 4908 y Fj(\026)1199
4909 y Fk(x)1254 4923 y Fh(n)1302 4909 y Fl(;)1358 4908
y Fj(\026)1342 4909 y Fk(w)q Fj(\))p 1002 4950 453 4
v 1140 5033 a Fl(\016)1200 5032 y Fj(\026)1183 5033 y
Fk(w)1260 5007 y Fh(T)1474 4909 y Fl(\016)1534 4908 y
Fj(\026)1517 4909 y Fk(w)p 1474 4950 121 4 v 1484 5033
a Fl(\016)s Fk(y)1630 4970 y Fj(=)j Fp(\000)1807 4909
y Fl(\016)s(p)p Fj(\()p Fl(y)s Fp(j)2009 4908 y Fj(\026)2004
4909 y Fk(x)2059 4923 y Fh(n)2107 4909 y Fl(;)2163 4908
y Fj(\026)2147 4909 y Fk(w)q Fj(\))p 1807 4950 453 4
v 1945 5033 a Fl(\016)2005 5032 y Fj(\026)1988 5033 y
Fk(w)2065 5007 y Fh(T)2285 4842 y Fi(\024)2418 4909 y
Fl(\016)2461 4876 y Ff(2)2502 4909 y Fp(L)p 2343 4950
297 4 v 2343 5033 a Fl(\016)2403 5032 y Fj(\026)2386
5033 y Fk(w)r Fl(\016)2523 5032 y Fj(\026)2507 5033 y
Fk(w)2584 5007 y Fh(T)2650 4842 y Fi(\025)2697 4859 y
Fg(\000)p Ff(1)2855 4909 y Fl(\016)2898 4876 y Ff(2)2938
4909 y Fp(L)p 2817 4950 222 4 v 2817 5033 a Fl(\016)s
Fk(y)q Fl(\016)2977 5032 y Fj(\026)2959 5033 y Fk(w)523
5177 y Fq(When)k(using)g(this)h(model,)e(initial)i(weights)g(are)e
(found)h(by)g(\002tting)h(a)f(small)f(uni-)382 5290 y(form)f(sample.)g
(This)i(is)f(expected)f(outperform)f(LS-based)i(sampling)f(since)g(it)i
(intro-)382 5403 y(duces)c(dependence)e(on)i(class)g(information.)p
0 TeXcolorgray 1851 5652 a(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fr(11)120 b(T)-12 b(est)36 b(results)p 0 TeXcolorgray
382 452 a
SDict begin H.S end
 382 452 a 382 452 a
SDict begin 13.6 H.A end
 382 452 a 382 452 a
SDict begin [/View [/XYZ H.V]/Dest (figure.caption.6) cvn /DEST pdfmark
end
 382
452 a 416 1226 a @beginspecial 25 @llx 185 @lly 585 @urx
605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/GAsen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GAsen.eps
%%CreationDate: 05/16/2014  16:27:36
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 7 237 -28 237 21 237 -32 236 11 237 42 237 24 237 -42 
236 60 237 -4 237 -66 237 80 237 49 236 7 237 -10 237 87 
237 109 236 -11 237 53 237 276 237 462 236 778 874 2331 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 25 237 -21 237 38 237 -38 236 -4 237 42 237 -10 237 35 
236 -7 237 -28 237 31 237 39 237 -18 236 39 237 0 237 87 
237 116 236 49 237 182 237 -21 237 812 236 798 874 2076 23 MP stroke
DA
6 w
c8
237 -14 237 0 237 -28 237 7 236 -14 237 63 237 -7 237 0 
236 35 237 -7 237 -63 237 14 237 91 236 -35 237 63 237 28 
237 21 236 77 237 14 237 35 237 434 236 476 874 3063 23 MP stroke
237 35 237 -28 237 21 237 -14 236 -21 237 133 237 -35 237 -63 
236 91 237 -49 237 -77 237 189 237 0 236 14 237 14 237 231 
237 42 236 133 237 301 237 7 237 812 236 847 874 1579 23 MP stroke
c9
237 0 237 7 237 7 237 35 236 -21 237 0 237 21 237 35 
236 -42 237 0 237 21 237 42 237 -35 236 21 237 42 237 35 
237 70 236 -98 237 203 237 105 237 406 236 182 874 3252 23 MP stroke
237 -21 237 105 237 -98 237 28 236 -63 237 84 237 42 237 -49 
236 91 237 -70 237 77 237 35 237 -35 236 7 237 -7 237 161 
237 315 236 -49 237 224 237 406 237 371 236 1127 874 1446 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T3sen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3sen.eps
%%CreationDate: 05/16/2014  16:28:45
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 7 237 -42 237 31 237 14 236 -7 237 14 237 -14 237 46 
236 -74 237 70 237 4 237 87 237 -94 236 108 237 -21 237 11 
237 45 236 81 237 119 237 189 237 154 236 1183 874 1957 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 84 237 -101 237 45 237 4 236 0 237 -7 237 0 237 35 
236 14 237 -21 237 17 237 70 237 25 236 -7 237 -14 237 136 
237 -98 236 56 237 270 237 -231 237 623 236 861 874 2132 23 MP stroke
DA
6 w
c8
237 91 237 -42 237 -42 237 35 236 -14 237 -7 237 -7 237 56 
236 -21 237 98 237 -35 237 14 237 -35 236 14 237 49 237 -28 
237 28 236 154 237 0 237 133 237 14 236 973 874 2580 23 MP stroke
237 -21 237 0 237 -28 237 49 236 -28 237 49 237 56 237 0 
236 -119 237 119 237 35 237 14 237 -63 236 140 237 -14 237 35 
237 49 236 133 237 126 237 329 237 140 236 1400 874 1355 23 MP stroke
c9
237 63 237 -56 237 35 237 0 236 -28 237 14 237 -7 237 77 
236 -21 237 -35 237 0 237 28 237 63 236 21 237 -7 237 -14 
237 7 236 35 237 203 237 -210 237 441 236 616 874 2762 23 MP stroke
237 28 237 -49 237 -21 237 7 236 42 237 -21 237 42 237 -28 
236 140 237 -140 237 133 237 14 237 -14 236 147 237 -77 237 28 
237 14 236 -35 237 588 237 -105 237 595 236 1029 874 1432 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 982 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 1147 @rwi @setspecial
%%BeginDocument: 02460_poster_template/images/T1sen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1sen.eps
%%CreationDate: 05/16/2014  16:31:01
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 569 4549 mt 
(100) s
 874 4047 mt  926 4047 L
 569 4111 mt 
(150) s
 874 3609 mt  926 3609 L
 569 3673 mt 
(200) s
 874 3172 mt  926 3172 L
 569 3236 mt 
(250) s
 874 2734 mt  926 2734 L
 569 2798 mt 
(300) s
 874 2296 mt  926 2296 L
 569 2360 mt 
(350) s
 874 1859 mt  926 1859 L
 569 1923 mt 
(400) s
 874 1421 mt  926 1421 L
 569 1485 mt 
(450) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 -74 237 166 237 -13 237 18 236 35 237 21 237 14 237 -88 
236 22 237 26 237 -127 237 70 237 210 236 -183 237 179 237 -48 
237 -31 236 167 237 122 237 341 237 -78 236 660 874 2415 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 131 237 -166 237 44 237 -9 236 -31 237 97 237 -79 237 149 
236 -153 237 83 237 -35 237 113 237 -65 236 -35 237 -18 237 390 
237 -311 236 -17 237 407 237 -119 237 75 236 1558 874 1806 23 MP stroke
DA
6 w
c8
237 0 237 105 237 -157 237 52 236 114 237 -96 237 61 237 44 
236 -53 237 -9 237 -78 237 96 237 114 236 -114 237 -18 237 219 
237 -262 236 253 237 97 237 271 237 -219 236 683 874 2909 23 MP stroke
237 -70 237 140 237 -35 237 -17 236 148 237 -70 237 70 237 -105 
236 184 237 -79 237 0 237 -26 237 315 236 -341 237 262 237 307 
237 -132 236 202 237 -315 237 560 237 245 236 980 874 1360 23 MP stroke
c9
237 97 237 -53 237 105 237 -122 236 -18 237 88 237 -62 237 79 
236 -79 237 114 237 -26 237 61 237 35 236 -140 237 -26 237 157 
237 -87 236 79 237 192 237 79 237 -158 236 692 874 3049 23 MP stroke
237 280 237 -333 237 79 237 -35 236 -79 237 228 237 -140 237 175 
236 -88 237 -52 237 0 237 227 237 -122 236 26 237 -52 237 315 
237 -149 236 297 237 79 237 -44 237 210 236 1742 874 1010 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 382 1378 a Fn(F)n(igur)24
b(4:)h Fm(Comparison)h(of)g(sensitivity)h(vs.)g(uniform)f(-based)h
(sampling)h(for)d(logistic)j(regres-)707 1478 y(sion.)p
0 TeXcolorgray 0 TeXcolorgray 382 1721 a Fq(W)-8 b(e)22
b(see)f(that)i(the)f Fc(sensitivity)g(based)e(sampling)g
Fq(gives)i(us)g(a)g(performance)d(equivalent-)382 1833
y(ly)25 b(to)g(that)i(of)e(uniform)g(sampling.)382 2136
y Fr(12)120 b(F)l(uture)34 b(work)382 2350 y Fq(From)24
b(our)h(work)g(several)f(new)h(question)h(arise.)p 0
TeXcolorgray 518 2538 a Fp(\017)p 0 TeXcolorgray 46 w
Fq(How)g(large)f(show)h(the)g(initial)h(sampling)e(size)h(be)g(for)f
(sensitivity-based)k(sam-)609 2650 y(pling?)p 0 TeXcolorgray
518 2838 a Fp(\017)p 0 TeXcolorgray 46 w Fq(How)22 b(should)g(the)g
(non-linear)e(sensitivity)k(based)e(leverage)e(scores)h(be)h(norma-)609
2951 y(lised?)p 0 TeXcolorgray 518 3139 a Fp(\017)p 0
TeXcolorgray 46 w Fq(Should)h(all)g(points)h(be)g(sampled)f(from)g(the)
h(initial)g(weights)g(found,)g(or)f(should)609 3252 y(the)j(process)f
(be)g(iterative?)382 3554 y Fr(13)120 b(Conclusion)382
3768 y Fq(In)41 b(the)h(case)f(of)h(linear)f(regression,)f
(leverage-based)g(sampling)h(provides)h(a)g(im-)382 3881
y(provement)32 b(over)i(uniform)f(sampling)g(when)h(the)g
(leverage-scores)d(are)i(mildly)h(or)382 3994 y(very)24
b(non-uniform.)523 4107 y(Using)g(the)g(LS-based)f(sampling)g(for)h
(classi\002cation)g(is)h(slightly)e(better)h(with)g(very)382
4220 y(non-uniform)g(leverage-scores,)f(T1)i(data.)523
4333 y(W)-8 b(e)32 b(have)f(generalized)e(the)i(concept)f(of)i
(leverage-based)d(scores)i(to)g(classi\002ca-)382 4446
y(tion)i(with)h(logistic)f(regression)f(and)g(it)i(has)f(shown)g(no)g
(improvements.)f(However)382 4558 y(further)25 b(analysis)h(and)f
(tweaking)g(might)h(improved)f(this)i(approach.)382 4861
y Fr(14)120 b(R)l(eferences)p 0 TeXcolorgray 1851 5652
a Fq(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fr(A)119 b(L)r(ogbook)382 765 y Fb(L)r(earning)30
b(objectives)382 852 y
SDict begin H.S end
 382 852 a 382 852 a
SDict begin 13.6 H.A end
 382 852 a
382 852 a
SDict begin [/View [/XYZ H.V]/Dest (section*.7) cvn /DEST pdfmark end
 382 852 a 95 x Fb(Overall)g(Project)g
(Goals/Delimitation/Hypotheses)382 1034 y
SDict begin H.S end
 382 1034 a
382 1034 a
SDict begin 13.6 H.A end
 382 1034 a 382 1034 a
SDict begin [/View [/XYZ H.V]/Dest (section*.8) cvn /DEST pdfmark end
 382 1034 a 95 x Fb(General)g(stuff)382
1195 y
SDict begin H.S end
 382 1195 a 382 1195 a
SDict begin 13.6 H.A end
 382 1195 a 382 1195 a
SDict begin [/View [/XYZ H.V]/Dest (section*.9) cvn /DEST pdfmark end
 382
1195 a 116 x Fb(W)-8 b(eek)29 b(1)g(\(9\):)f(24.02.2014)g(-)h
(02.03.2014)382 1390 y
SDict begin H.S end
 382 1390 a 382 1390 a
SDict begin 13.6 H.A end
 382 1390
a 382 1390 a
SDict begin [/View [/XYZ H.V]/Dest (section*.10) cvn /DEST pdfmark
end
 382 1390 a 99 x Fo(Project)e(meeting)382
1575 y
SDict begin H.S end
 382 1575 a 382 1575 a
SDict begin 13.6 H.A end
 382 1575 a 382 1575 a
SDict begin [/View [/XYZ H.V]/Dest (section*.11) cvn /DEST pdfmark
end
 382
1575 a 93 x Fq(No)j(project)g(meeting)f(was)h(possible)h(this)h(week,)e
(and)g(we)g(had)h(yet)f(to)h(decided)f(be-)382 1781 y(tween)p
0 TeXcolorgray 488 1956 a(1.)p 0 TeXcolorgray 45 w(Randomized)25
b(algorithms:)609 2069 y Fc(A)f(Statistical)g(P)-5 b(erspective)22
b(on)h(Algorithmic)h(Leveraging,)f(Ping)g(Ma,)h(Micheal)g(W)-6
b(.)609 2181 y(Mahoney)h(,)24 b(Bin)i(Y)-5 b(u)p Fq(.)25
b Fl(http)g Fj(:)h Fl(==ar)s(xiv)s(:or)s(g)s(=abs=)p
Fj(1306)p Fl(:)p Fj(5362)p 0 TeXcolorgray 488 2364 a
Fq(2.)p 0 TeXcolorgray 45 w(Spectral)e(learning)g(of)h(HMMs:)609
2477 y Fc(A)32 b(Method)e(of)h(Moments)g(for)f(Mixture)j(Models)d(and)g
(Hidden)g(Markov)h(Models)p Fq(.)609 2590 y(A.)26 b(Anandkumar)-10
b(,)25 b(D)n(.)h(Hsu,)g(and)f(S.M.)h(Kakade.)f(Preprint,)g(F)-6
b(eb.)26 b(2012)d(:)j Fl(http)f Fj(:)609 2703 y Fl(==new)r(por)s
(t:eecs:uci:edu=anandk)s(umar)s(=pubs=)-5 b(Anandk)s(umar)s(E)5
b(tal)3098 2717 y Fh(m)3168 2703 y Fl(ixtur)s(es)p Fj(12)p
Fl(:pd)-15 b(f)523 2877 y Fq(W)-8 b(e)26 b(spend)f(the)h(week)e
(getting)h(an)g(overview)g(of)g(the)h(articles)f(and)g(the)h(projects.)
382 3133 y Fb(W)-8 b(eek)29 b(2)g(\(10\):)f(03.03.2014)g(-)h
(09.03.2014)382 3213 y
SDict begin H.S end
 382 3213 a 382 3213 a
SDict begin 13.6 H.A end
 382 3213
a 382 3213 a
SDict begin [/View [/XYZ H.V]/Dest (section*.12) cvn /DEST pdfmark
end
 382 3213 a 99 x Fo(Project)e(meeting)382
3397 y
SDict begin H.S end
 382 3397 a 382 3397 a
SDict begin 13.6 H.A end
 382 3397 a 382 3397 a
SDict begin [/View [/XYZ H.V]/Dest (section*.13) cvn /DEST pdfmark
end
 382
3397 a 93 x Fo(Questions:)p 0 TeXcolorgray 518 3778 a
Fp(\017)p 0 TeXcolorgray 46 w Fq(What)g(is)f(the)f(idea)h(behind)g
(leveraging)d(for)i(least-squares)g(regression?)p 0 TeXcolorgray
518 3960 a Fp(\017)p 0 TeXcolorgray 46 w Fq(Can)h(we)f(generalise)e
(the)j(idea)g(to)f(general?)p 0 TeXcolorgray 518 4143
a Fp(\017)p 0 TeXcolorgray 46 w Fq(Can)h(leveraging)d(improve)h
(performance)g(in)h(video)h(screen)d(classi\002cation?)p
0 TeXcolorgray 518 4325 a Fp(\017)p 0 TeXcolorgray 46
w Fq(V)m(ideo)k(classi\002cation)f(e.g.)f(faces,)g(emotions,)h(gender)
-10 b(.)523 4500 y Fo(Implementation:)382 4613 y Fq(No)25
b(implementation)g(at)g(this)i(point.)523 4726 y Fo(R)m(esults:)382
4839 y Fq(No)e(results)g(at)h(this)h(time.)523 4951 y
Fo(Decisions:)382 5064 y Fq(Gain)33 b(a)g(better)f(understanding)h(of)g
(the)g(underlying)e(idea)i(of)g(leveraging,)e(by)i(wat-)382
5177 y(ching)23 b(a)g(talk)g(on)g Fc(Statistical)g(Leverage)f(and)g
(Improved)h(Matrix)h(Algorithms)f Fq(by)g(M.)h(W)-6 b(.)382
5290 y(Mahoney)27 b(\()p Fl(http)h Fj(:)h Fl(==v)s(ideol)r(ectur)s
(es:net=icml)r Fj(09)2154 5304 y Fh(m)2225 5290 y Fl(ahoney)2511
5304 y Fh(i)2539 5290 y Fl(tsl)r(ima=)p Fq(\).)f(And)f(analy-)382
5403 y(ses)f(the)f(results)g(for)p 0 TeXcolorgray 1851
5652 a(6)p 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fo(Updated)26 b(Project)h(Goals)f(and)h(Delimitation)382
633 y
SDict begin H.S end
 382 633 a 382 633 a
SDict begin 13.6 H.A end
 382 633 a 382 633 a
SDict begin [/View [/XYZ H.V]/Dest (section*.14) cvn /DEST pdfmark
end
 382 633
a 0 TeXcolorgray 518 727 a Fp(\017)p 0 TeXcolorgray 46
w Fq(V)-6 b(alidation)26 b(of)g(the)f(results)h(shown)f(by)g(Ma.)h(et)f
(al.)p 0 TeXcolorgray 518 909 a Fp(\017)p 0 TeXcolorgray
46 w Fq(Can)e(we)f(generalise)f(the)i(idea)g(of)g(leveraging)d(for)j(a)
g(general)d(likelihood)j(funk-)609 1022 y(tion?)382 1278
y Fb(W)-8 b(eek)29 b(3)g(\(11\):)f(10.03.2014)g(-)h(16.03.2014)382
1358 y
SDict begin H.S end
 382 1358 a 382 1358 a
SDict begin 13.6 H.A end
 382 1358 a 382 1358 a
SDict begin [/View [/XYZ H.V]/Dest (section*.15) cvn /DEST pdfmark
end
 382
1358 a 99 x Fo(Project)e(meeting)382 1542 y
SDict begin H.S end
 382 1542
a 382 1542 a
SDict begin 13.6 H.A end
 382 1542 a 382 1542 a
SDict begin [/View [/XYZ H.V]/Dest (section*.16) cvn /DEST pdfmark
end
 382 1542 a 94 x Fo(Questions:)p
0 TeXcolorgray 518 1924 a Fp(\017)p 0 TeXcolorgray 46
w Fq(How)34 b(does)f(the)h(leverage)d(scores)i(look)g(for)g
(LS-regression?)g(\(Plotting)g Fl(H)3262 1938 y Fh(n;n)609
2037 y Fq(vs.)26 b Fp(jj)p Fl(x)843 2051 y Fh(n)890 2037
y Fp(jj)p Fq(\))382 2212 y Fo(Implementation:)382 2325
y Fq(No)f(implementation)g(at)g(this)i(point.)523 2438
y Fo(R)m(esults:)p 0 TeXcolorgray 518 2726 a Fp(\017)p
0 TeXcolorgray 46 w Fq(The)i(general)e(idea)j(of)f(leveraging)d(is)k
(to)f(identify)h(how)g(the)f(estimated)h(value)615 2838
y Fj(^)609 2839 y Fk(y)d Fq(relates)e(to)g(the)h(targeted)f(value)f
Fk(y)q Fq(.)i(Which)h(for)e(LS-regression)f(is)3002 2838
y Fj(^)2996 2839 y Fk(y)j Fj(=)e Fl(H)7 b Fk(y)q Fq(.)523
3015 y Fo(Decisions:)382 3381 y(Updated)26 b(Project)h(Goals)f(and)h
(Delimitation)382 3466 y
SDict begin H.S end
 382 3466 a 382 3466 a
SDict begin 13.6 H.A end
 382 3466
a 382 3466 a
SDict begin [/View [/XYZ H.V]/Dest (section*.17) cvn /DEST pdfmark
end
 382 3466 a 0 TeXcolorgray 518 3559 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Can)f(we)f(generalise)e(the)j(expression)1957
3558 y Fj(^)1952 3559 y Fk(y)h Fj(=)e Fl(H)7 b Fk(y)26
b Fq(to)g(logistic)g(regression?)382 3815 y Fb(W)-8 b(eek)29
b(4)g(\(12\):)f(17.03.2014)g(-)h(23.03.2014)382 3895
y
SDict begin H.S end
 382 3895 a 382 3895 a
SDict begin 13.6 H.A end
 382 3895 a 382 3895 a
SDict begin [/View [/XYZ H.V]/Dest (section*.18) cvn /DEST pdfmark
end
 382 3895
a 99 x Fo(Project)e(meeting)382 4079 y
SDict begin H.S end
 382 4079 a 382
4079 a
SDict begin 13.6 H.A end
 382 4079 a 382 4079 a
SDict begin [/View [/XYZ H.V]/Dest (section*.19) cvn /DEST pdfmark
end
 382 4079 a 93 x Fo(Questions:)p
0 TeXcolorgray 518 4461 a Fp(\017)p 0 TeXcolorgray 46
w Fq(How)f(are)e(the)i(distributions)h(used)f(by)f(Ma.)g(et)h(al.)f
(calculated?)p 0 TeXcolorgray 518 4644 a Fp(\017)p 0
TeXcolorgray 46 w Fq(Finding)g(emotional)g(faces)g(datasets.)523
4819 y Fo(Implementation:)p 0 TeXcolorgray 518 5107 a
Fp(\017)p 0 TeXcolorgray 46 w Fq(Finding)g(leverage-scores)e(for)i
(LS-regression)p 0 TeXcolorgray 518 5290 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Solving)18 b(LS-regression)g(when)h(comparing)f
(uniform-)g(to)i(leverage-based)d(sam-)609 5403 y(pling.)p
0 TeXcolorgray 1851 5652 a(7)p 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 518 548 a Fp(\017)p 0 TeXcolorgray 46
w Fq(Illustrating)25 b(leverage)f(scores)g(\()p Fl(H)1808
562 y Fh(n;n)1943 548 y Fq(vs.)h Fp(jj)p Fl(x)2176 562
y Fh(n)2224 548 y Fp(jj)p Fq(\))523 736 y Fo(R)m(esults:)382
848 y Fq(Initial)g(results)f(promising,)g(but)g(only)g(single)f(run)g
(performance)f(between)h(uniform-)382 961 y(and)i(leverage-based)f
(sampling.)523 1074 y Fo(Decisions:)382 1443 y(Updated)i(Project)h
(Goals)f(and)h(Delimitation)382 1528 y
SDict begin H.S end
 382 1528 a 382
1528 a
SDict begin 13.6 H.A end
 382 1528 a 382 1528 a
SDict begin [/View [/XYZ H.V]/Dest (section*.20) cvn /DEST pdfmark
end
 382 1528 a 0 TeXcolorgray
518 1621 a Fp(\017)p 0 TeXcolorgray 46 w Fq(W)-8 b(e)26
b(want)f(to)h(validate)g(the)f(results)g(of)h(Ma)f(et.)h(al.)f
(empirically)-12 b(.)p 0 TeXcolorgray 518 1809 a Fp(\017)p
0 TeXcolorgray 46 w Fq(In)23 b(video)f(classi\002cation)h(we)g(want)f
(to)h(do)g(binary)f(classi\002cation)h(of)g Fc(happy)g
Fq(and)609 1922 y Fc(sad)h Fq(faces.)382 2180 y Fb(W)-8
b(eek)29 b(5)g(\(13\):)f(24.03.2014)g(-)h(30.03.2014)382
2260 y
SDict begin H.S end
 382 2260 a 382 2260 a
SDict begin 13.6 H.A end
 382 2260 a 382 2260 a
SDict begin [/View [/XYZ H.V]/Dest (section*.21) cvn /DEST pdfmark
end
 382
2260 a 99 x Fo(Project)e(meeting)382 2444 y
SDict begin H.S end
 382 2444
a 382 2444 a
SDict begin 13.6 H.A end
 382 2444 a 382 2444 a
SDict begin [/View [/XYZ H.V]/Dest (section*.22) cvn /DEST pdfmark
end
 382 2444 a 94 x Fo(Questions:)p
0 TeXcolorgray 518 2838 a Fp(\017)p 0 TeXcolorgray 46
w Fq(W)n(ill)36 b(using)f(the)h(leverage-scores)c(for)k(LS-regression)e
(improve)h(our)f(perfor-)609 2951 y(mance)24 b(in)h(binary)h
(classi\002cation?)523 3139 y Fo(Implementation:)p 0
TeXcolorgray 518 3439 a Fp(\017)p 0 TeXcolorgray 46 w
Fq(The)35 b(three)f(distributions)k Fl(GA)p Fq(,)p Fl(T)13
b Fj(3)35 b Fq(and)g Fl(T)13 b Fj(1)35 b Fq(are)f(implemented,)g(and)h
(tested)609 3552 y(for)25 b(linear)g(regression.)p 0
TeXcolorgray 518 3740 a Fp(\017)p 0 TeXcolorgray 46 w
Fq(Learning)c(curves)g(and)h(test-framework)f(for)h(LS-regression,)f
(used)h(for)f(testing)609 3853 y(the)26 b(results)f(show)h(by)f(Ma)g
(et)g(al.)523 4040 y Fo(R)m(esults:)p 0 TeXcolorgray
518 4341 a Fp(\017)p 0 TeXcolorgray 46 w Fq(W)-8 b(e)30
b(get)e(comparable)g(results)h(on)f(LS-regression)g(to)i(those)f(shown)
h(by)f(Ma)g(et)609 4454 y(al.)p 0 TeXcolorgray 518 4641
a Fp(\017)p 0 TeXcolorgray 46 w Fq(A)f(leverage-based)e(sampling)h
(does)h(not)f(improve)g(for)h(GA-type)g(data,)g(as)g(the)609
4754 y(leverage)40 b(scores)i(are)f(approximately)h(uniform,)g(thus)h
(there)f(are)f(no)h(\224im-)609 4867 y(portant\224datapoints)27
b(that)g(can)d(be)h(sampled.)p 0 TeXcolorgray 518 5055
a Fp(\017)p 0 TeXcolorgray 46 w Fq(A)f(leverage-based)e(sampling)h(for)
g(T3-type)h(data)g(consistently)g(performs)f(bet-)609
5168 y(ter)d(or)h(equal)f(to)h(a)f(uniform)g(sampling.)h(Although)f
(the)h(performance)e(increase)609 5281 y(modest.)p 0
TeXcolorgray 1851 5652 a(8)p 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 518 548 a Fp(\017)p 0 TeXcolorgray 46
w Fq(A)32 b(leverage-based)d(sampling)i(for)g(T1-type)g(data)h(also)g
(consistently)f(outper-)609 661 y(forms)c(a)g(uniform-based)g
(sampling,)g(this)i(is)f(expected)e(as)h(the)h(T1)f(data)h(have)609
774 y(very)d(non-uniform)f(leverage)f(scores)i(i.e.)h
(\224important\224datapoints.)523 961 y Fo(Decisions:)382
1074 y Fq(Generalisation)g(of)h(the)f(leverage-based)f(sampling)h
(scheme)2572 1033 y Fh(\016)2610 1032 y Ff(^)2605 1033
y Fa(y)p 2572 1053 78 4 v 2572 1106 a Fh(\016)r Fa(y)2687
1074 y Fq(to)g(logistic)h(regres-)382 1187 y(sion,)f(as)h(well)d(as)i
(a)g(sampling)f(distribution)j(based)e(on)f(the)h(uncertainty)f(of)h
(the)g(pre-)382 1300 y(dictions)g(\(asymptotic)g(theory\))g(is)g(to)f
(be)g(done)g(by)g(Lars)h(Kai.)382 1555 y Fo(Updated)g(Project)h(Goals)f
(and)h(Delimitation)382 1641 y
SDict begin H.S end
 382 1641 a 382 1641 a
SDict begin 13.6 H.A end

382 1641 a 382 1641 a
SDict begin [/View [/XYZ H.V]/Dest (section*.23) cvn /DEST pdfmark
end
 382 1641 a 0 TeXcolorgray 518 1734
a Fp(\017)p 0 TeXcolorgray 46 w Fq(W)n(ill)36 b(using)f(the)h
(leverage-scores)c(for)k(LS-regression)e(improve)h(our)f(perfor-)609
1847 y(mance)24 b(in)h(binary)h(classi\002cation?)p 0
TeXcolorgray 518 2035 a Fp(\017)p 0 TeXcolorgray 46 w
Fq(W)-8 b(e)26 b(have)f(validated)i(the)e(results)g(of)h(Ma)f(et)h(al.)
f(for)g(LS-regression)g(on)g Fl(GA)p Fq(,)p Fl(T)13 b
Fj(3)609 2148 y Fq(and)26 b Fl(T)13 b Fj(1)25 b Fq(distributed)i(data.)
382 2406 y Fb(W)-8 b(eek)29 b(6)g(\(14\):)f(31.03.2014)g(-)h
(06.04.2014)382 2486 y
SDict begin H.S end
 382 2486 a 382 2486 a
SDict begin 13.6 H.A end
 382 2486
a 382 2486 a
SDict begin [/View [/XYZ H.V]/Dest (section*.24) cvn /DEST pdfmark
end
 382 2486 a 99 x Fo(Project)e(meeting)382
2670 y
SDict begin H.S end
 382 2670 a 382 2670 a
SDict begin 13.6 H.A end
 382 2670 a 382 2670 a
SDict begin [/View [/XYZ H.V]/Dest (section*.25) cvn /DEST pdfmark
end
 382
2670 a 93 x Fo(Implementation:)p 0 TeXcolorgray 518 3064
a Fp(\017)p 0 TeXcolorgray 46 w Fq(Three)i(distributions)i(for)e
(binary)g(classi\002cation)h(data,)g(also)f(named)g Fl(GA)p
Fq(,)g Fl(T)13 b Fj(3)609 3177 y Fq(and)40 b Fl(T)13
b Fj(1)40 b Fq(which)h(represent)e(respectively)f(classi\002cation)j
(data)g(with)g(nearly)609 3290 y(uniform,)19 b(moderately)f
(non-uniform)g(and)h(very)g(non-uniform)f(leverage-scores.)p
0 TeXcolorgray 518 3477 a Fp(\017)p 0 TeXcolorgray 46
w Fq(Learning)g(curves)g(for)i(logistic)f(regression)f(based)i(on)f
(uniform)f(or)h(LS-regression)609 3590 y(leverage-scores.)523
3778 y Fo(R)m(esults:)382 3891 y Fq(Initial)39 b(results)f(using)g
(leverage-scores)e(based)i(on)g(LS-regression)f(shows)j(no)e(im-)382
4004 y(provement)28 b(on)g(GA-type)i(\(expected\))e(and)h(performs)f
(signi\002cantly)h(worse)g(on)g(T3-)382 4117 y(and)c(T1-type)g(data.)
523 4230 y(Lars)f(Kai)g(has)h(derived)f(a)f(generalised)g(expression)
2339 4189 y Fh(\016)2377 4188 y Ff(^)2372 4189 y Fa(y)p
2339 4209 78 4 v 2339 4261 a Fh(\016)r Fa(y)2451 4230
y Fq(for)h(a)g(general)d(likelihood)382 4343 y(function.)k(As)h(well)e
(as)i(the)f(uncertainty)g(based)g(sampling)g(approach.)523
4455 y Fo(Decisions:)382 4568 y Fq(Lars)35 b(Kai)g(gathers)g(his)g
(scribles)g(on)f(the)h(back)f(of)h(some)g(insigni\002cant)g(article)f
(in)h(a)382 4681 y(form)25 b(that)h(is)g(easier)f(to)h(read)f(and)g
(follow)-11 b(.)523 4794 y(Our)25 b(full)g(focus)g(is)h(now)f(on)g
(midterm)g(preparation.)382 5049 y Fo(Updated)h(Project)h(Goals)f(and)h
(Delimitation)382 5135 y
SDict begin H.S end
 382 5135 a 382 5135 a
SDict begin 13.6 H.A end
 382 5135
a 382 5135 a
SDict begin [/View [/XYZ H.V]/Dest (section*.26) cvn /DEST pdfmark
end
 382 5135 a 0 TeXcolorgray 518 5228 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Compare)d(uniform)f(sampling)g(to)i(a)f
(leverage)d(based)k(distribution)g(\(generali-)609 5341
y(sation\))h(and)g(a)f(uncertainty)f(based)i(distribution.)p
0 TeXcolorgray 1851 5652 a(9)p 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
382 548 a Fb(W)-8 b(eek)29 b(7)g(\(15\):)f(07.04.2014)g(-)h(13.04.2014)
382 627 y
SDict begin H.S end
 382 627 a 382 627 a
SDict begin 13.6 H.A end
 382 627 a 382 627 a
SDict begin [/View [/XYZ H.V]/Dest (section*.27) cvn /DEST pdfmark
end
 382
627 a 100 x Fo(Project)e(meeting)382 812 y
SDict begin H.S end
 382 812 a
382 812 a
SDict begin 13.6 H.A end
 382 812 a 382 812 a
SDict begin [/View [/XYZ H.V]/Dest (section*.28) cvn /DEST pdfmark
end
 382 812 a 93 x Fq(Discussion)f(about)g
(the)f(midterm)g(and)h(improvements)e(that)i(should)g(be)f(done.)382
1164 y Fb(W)-8 b(eek)29 b(8)g(\(16\):)f(14.04.2014)g(-)h(20.04.2014)382
1243 y
SDict begin H.S end
 382 1243 a 382 1243 a
SDict begin 13.6 H.A end
 382 1243 a 382 1243 a
SDict begin [/View [/XYZ H.V]/Dest (section*.29) cvn /DEST pdfmark
end
 382
1243 a 99 x Fq(Easter)-10 b(,)24 b(no)g(project)f(meeting,)g(but)h
(sporadic)h(work)e(was)h(done,)g(mostly)g(clari\002cation)382
1455 y(and)h(bug-correction.)382 1713 y Fb(W)-8 b(eek)29
b(9)g(\(17\):)f(21.04.2014)g(-)h(27.04.2014)382 1793
y
SDict begin H.S end
 382 1793 a 382 1793 a
SDict begin 13.6 H.A end
 382 1793 a 382 1793 a
SDict begin [/View [/XYZ H.V]/Dest (section*.30) cvn /DEST pdfmark
end
 382 1793
a 99 x Fo(Project)e(meeting)382 1978 y
SDict begin H.S end
 382 1978 a 382
1978 a
SDict begin 13.6 H.A end
 382 1978 a 382 1978 a
SDict begin [/View [/XYZ H.V]/Dest (section*.31) cvn /DEST pdfmark
end
 382 1978 a 93 x Fo(R)m(esults:)382
2184 y Fq(Lars)e(Kai)g(gives)g(us)g(a)g(copy)f(and)h(explains)g(the)g
(general)e(concepts)h(behind)h(the)g(gene-)382 2297 y(ralisation)h(of)
891 2255 y Fh(\016)929 2254 y Ff(^)924 2255 y Fa(y)p
891 2276 78 4 v 908 2328 a(y)1004 2297 y Fq(and)g(uncertainty-based)f
(sampling.)523 2410 y Fo(Decisions:)382 2522 y Fq(W)-8
b(e)26 b(are)e(to)i(understand)f(and)h(digitalise)g(the)g(results)f
(derived.)382 2781 y Fb(W)-8 b(eek)29 b(10)g(\(18\):)f(28.04.2014)g(-)h
(04.05.2014)382 2860 y
SDict begin H.S end
 382 2860 a 382 2860 a
SDict begin 13.6 H.A end
 382 2860
a 382 2860 a
SDict begin [/View [/XYZ H.V]/Dest (section*.32) cvn /DEST pdfmark
end
 382 2860 a 99 x Fo(Project)e(meeting)382
3045 y
SDict begin H.S end
 382 3045 a 382 3045 a
SDict begin 13.6 H.A end
 382 3045 a 382 3045 a
SDict begin [/View [/XYZ H.V]/Dest (section*.33) cvn /DEST pdfmark
end
 382
3045 a 93 x Fo(Questions:)523 3364 y(R)m(esults:)523
3590 y(Decisions:)382 3961 y Fb(W)-8 b(eek)29 b(11)g(\(19\):)f
(05.05.2014)g(-)h(11.05.2014)382 4040 y
SDict begin H.S end
 382 4040 a 382
4040 a
SDict begin 13.6 H.A end
 382 4040 a 382 4040 a
SDict begin [/View [/XYZ H.V]/Dest (section*.34) cvn /DEST pdfmark
end
 382 4040 a 100 x Fo(Project)e(meeting)382
4225 y
SDict begin H.S end
 382 4225 a 382 4225 a
SDict begin 13.6 H.A end
 382 4225 a 382 4225 a
SDict begin [/View [/XYZ H.V]/Dest (section*.35) cvn /DEST pdfmark
end
 382
4225 a 93 x Fo(Questions:)p 0 TeXcolorgray 518 4617 a
Fp(\017)p 0 TeXcolorgray 46 w Fq(How)g(to)g(illustrate)g(the)h(thought)
f(process)g(behind)g(our)f(problem)g(and)h(appro-)609
4730 y(ach.)f(Simply)e(illustrative)i(model.)523 4917
y Fo(Implementation:)p 0 TeXcolorgray 518 5216 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Uncertainty)f(sampling)g(implemented)p
0 TeXcolorgray 518 5403 a Fp(\017)p 0 TeXcolorgray 46
w Fq(Uncertainty)g(sampling)g(compared)f(to)i(uniform)e(on)h(logistic)h
(regression)p 0 TeXcolorgray 1826 5652 a(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
523 548 a Fo(R)m(esults:)p 0 TeXcolorgray 518 848 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Sensitivity)28 b(sampling)f(\224works\224on)f
Fl(GA)i Fq(and)f Fl(T)13 b Fj(3)28 b Fq(data,)g(but)f(the)g(program)f
(so-)609 961 y(metimes)j(crashes)h(on)f Fl(T)13 b Fj(1)30
b Fq(data)h(due)e(to)h(over\003ow)e(errors)h(when)g(calculating)609
1074 y(the)d(leverage)d(scores.)p 0 TeXcolorgray 518
1262 a Fp(\017)p 0 TeXcolorgray 46 w Fq(Sensitivity)38
b(sampling)e(exhibits)i(weird)f(behaviour)g(as)g(the)g(error)e
(increases)609 1375 y(with)27 b(sampling)d(size.)523
1562 y Fo(Decisions:)p 0 TeXcolorgray 518 1863 a Fp(\017)p
0 TeXcolorgray 46 w Fq(Debugging)i(sensitivity)k(sampling)d(is)i
(postponed,)g(and)f(focus)f(is)i(put)f(on)g(cre-)609
1976 y(ating)e(an)f(initial)h(poster)f(which)h(can)f(also)g(be)g(used)g
(for)h Fc(V)m(ision)e(Day)p Fq(.)382 2231 y Fo(Updated)i(Project)h
(Goals)f(and)h(Delimitation)382 2317 y
SDict begin H.S end
 382 2317 a 382
2317 a
SDict begin 13.6 H.A end
 382 2317 a 382 2317 a
SDict begin [/View [/XYZ H.V]/Dest (section*.36) cvn /DEST pdfmark
end
 382 2317 a 96 x Fb(W)-8
b(eek)29 b(12)g(\(20\):)f(12.05.2014)g(-)h(18.05.2014)382
2493 y
SDict begin H.S end
 382 2493 a 382 2493 a
SDict begin 13.6 H.A end
 382 2493 a 382 2493 a
SDict begin [/View [/XYZ H.V]/Dest (section*.37) cvn /DEST pdfmark
end
 382
2493 a 99 x Fo(Project)e(meeting)382 2677 y
SDict begin H.S end
 382 2677
a 382 2677 a
SDict begin 13.6 H.A end
 382 2677 a 382 2677 a
SDict begin [/View [/XYZ H.V]/Dest (section*.38) cvn /DEST pdfmark
end
 382 2677 a 93 x Fo(Questions:)p
0 TeXcolorgray 518 3071 a Fp(\017)p 0 TeXcolorgray 46
w Fq(What)g(is)f(the)f(effect)g(of)g(weight)h(and)f(unweighed)g
(logistic)h(regression?)523 3259 y Fo(Implementation:)p
0 TeXcolorgray 518 3559 a Fp(\017)p 0 TeXcolorgray 46
w Fq(Generating)e(good)h(illustrations)i(of)e(the)h(problem,)e(process)
h(and)g(results.)523 3747 y Fo(R)m(esults:)p 0 TeXcolorgray
518 4047 a Fp(\017)p 0 TeXcolorgray 46 w Fq(Det)20 b(g)p
Fo(r)p Fq(ar)f(fra)g(at)h(give)f(virkelig)f(lorte)h(resultater)g(til)h
(at)f(v\346re)g(ens)g(med)g(uniform.)523 4235 y Fo(Decisions:)382
4607 y Fb(A)n(fter)29 b(poster)f(exam:)h(21.05.2014)f(-)h(03.06.2014)
382 4694 y
SDict begin H.S end
 382 4694 a 382 4694 a
SDict begin 13.6 H.A end
 382 4694 a 382 4694
a
SDict begin [/View [/XYZ H.V]/Dest (section*.39) cvn /DEST pdfmark
end
 382 4694 a 91 x Fo(Project)e(meeting)382 4871 y
SDict begin H.S end
 382
4871 a 382 4871 a
SDict begin 13.6 H.A end
 382 4871 a 382 4871 a
SDict begin [/View [/XYZ H.V]/Dest (section*.40) cvn /DEST pdfmark
end
 382 4871 a 93
x Fo(Questions:)p 0 TeXcolorgray 518 5264 a Fp(\017)p
0 TeXcolorgray 46 w Fq(W)n(ill)h(a)g Fc(soft-max)g Fq(transformation)g
(of)g(the)f(leverage-scores)e(improve)i(sensiti-)609
5377 y(vity/uncertainty)e(sampling)g(schemes?)p 0 TeXcolorgray
1826 5652 a(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 374
141 a
SDict begin H.S end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray 374 141
a
SDict begin H.R end
 374 141 a 374 141 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 374 141 a 0 TeXcolorgray 0 TeXcolorgray
523 548 a Fo(Implementation:)p 0 TeXcolorgray 518 848
a Fp(\017)p 0 TeXcolorgray 46 w Fq(Bug-\002nding)24 b(and)i
(elimination.)p 0 TeXcolorgray 518 1036 a Fp(\017)p 0
TeXcolorgray 46 w Fq(Minimizing)f(redundant)g(code.)523
1224 y Fo(R)m(esults:)p 0 TeXcolorgray 518 1524 a Fp(\017)p
0 TeXcolorgray 46 w Fq(A)31 b(soft-max)g(transform)f(improves)h(both)g
(sensitivity)i(and)e(uncertainty)f(sam-)609 1637 y(pling)42
b(performance)f(but)h(not)h(signi\002cantly)f(compared)g(to)h(uniform)f
(sam-)609 1750 y(pling.)523 1938 y Fo(Decisions:)p 0
TeXcolorgray 518 2238 a Fp(\017)p 0 TeXcolorgray 46 w
Fq(Hmm)382 2494 y Fo(Updated)26 b(Project)h(Goals)f(and)h(Delimitation)
382 2579 y
SDict begin H.S end
 382 2579 a 382 2579 a
SDict begin 13.6 H.A end
 382 2579 a 382 2579
a
SDict begin [/View [/XYZ H.V]/Dest (section*.41) cvn /DEST pdfmark
end
 382 2579 a 0 TeXcolorgray 1826 5652 a Fq(12)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
