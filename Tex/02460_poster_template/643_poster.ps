%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: 643_poster.dvi
%%CreationDate: Fri May 16 16:36:59 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 3402 2594
%%DocumentFonts: CMBX12 CMR17 CMTI12 CMSY10 Times-Roman Times-Bold
%%+ CMMI12 CMEX10 CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/texbin/dvips -o 643_poster.ps 643_poster.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.05.16:1636
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: ./a0header.ps 0 0
%%BeginFeature *PageSize ISOA0/ISO A0
2 dict dup /PageSize [2594 3370] put dup /ImagingBBox null put
setpagedevice
%%EndFeature

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore}bind
def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave
pgfsoa .setopacityalpha stroke grestore}bind def}bind def /pgffoa 1
def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.665 1.665 3.00003 0.0 3.00003 curveto -1.665 3.00003
-3.00003 1.665 -3.00003 0.0 curveto -3.00003 -1.665 -1.665 -3.00003
0.0 -3.00003 curveto 1.665 -3.00003 3.00003 -1.665 3.00003 0.0 curveto
closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore
newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMTI12
%!PS-AdobeFont-1.0: CMTI12 003.002
%%Title: CMTI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI12 known{/CMTI12 findfont dup/UniqueID known{dup
/UniqueID get 5000829 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI12 def
/FontBBox {-36 -251 1103 750 }readonly def
/UniqueID 5000829 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI12.) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 58 /colon put
dup 69 /E put
dup 77 /M put
dup 83 /S put
dup 88 /X put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 101 /e put
dup 105 /i put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5E0311AE44B83C3E
4FBCDB0B74ABB18FDD877252FD3501E05E597A77D142BED9940318B98D508672
4ECF79C43A857674E4DCF2556325CA8CC1C432E54543F706987376A084BF512F
0E4C517917FB1D607C83E479DD094240C3F309A57561CDF8496722F1D3EBF6FA
45CD3D7D810E2C07D39BFE08C0A25FD568DD37C2D182E5D30A7B2855BAD24559
D455B29B1F723BE1C4F827D72B1156DC2C1EEA76C9B27733FBB23ED36F61919B
4A6E8253C8C05F3D4BDC64B99B8494F7C37E9C19DB6A9CA8E9B0F9E7E3346EE0
EF416016CEE932E53A26599DD8CD09D77DF591A9D532AAD3E321CDCB28636809
E61D9EC969F2E27190A475407B90211902429778103D18665A681B0DD51F6E92
58D1288E2AB3FAEF05854938FEFFD3B4F376AAD303ECD28B23649E5D4C3CB85A
5C9CDCD1853BBF3282BCB5CF57720C6CF7AE468048D7AE5BCD2F15DEC1B33B5F
9917BF69BB64261CF101BB47A09E47D6508250374D00ACEC3E3FE8C5330AD9DB
9D9F60CC170F2FD6DEA12DA24CEA846E25ED6683A213E4FFD0BA239894C920B0
EFF562ED994A7A46F8EE2AF98F88317E513A06AB82A629979AAD3ACE316E7074
01EAD920A9E1D54E8FBD623773429C58A2964B498990E8420E5F7A45B3D4342C
1AC109FA67D4BF33C9D1E0E2973BB8B2495DDF5A7F8E306A0C712BD7A7FC98C7
44B26D102D3CD44A320FE89CBA6B3AB39627DA4679A5BB7C27276B34ED66260F
DEB659189A797BC41D05323454CA4600A6D840CA3C1DC31BB7FEE8DE367B8177
3F1546C9EA98FA9F7CD61F177CEC2950526D54A6E7A0038F2B20609E7BE31EFB
51FDB6829852937071FEAAA3A0E51E625D7FBF2F7C224467C7DB77F7AFE006A5
418CF691841AB7A9923506845BFE066769A01A51EA48840E898FC6FF0ED9C2A6
1DB61E8840029ED92A129D38CAFAD4084B17679A84A262D2F9376363D4B5E46B
1C94302E5CD24CBE93A27319A8F79138414B2E94CE6F78C6F06B544D5862C2C6
297EFE524BBEF0CC2C32F63CDCE433E19B52BF0C2C7064E3ACD429E2466BB85A
ED82C6EDC8AF5D75855B43A61504128F75C2DAF7F5C4405BE36C136CB809DF31
A40E0DEE80C10F6E6442CDCEDEF8DD0C01FB2C035A1D136693D366552862A421
81A290080EB8A3C5160FC2CD760A69F8254E8B0EC8E7280EC33802EC2668C149
73CADCFBD4E56A1E7A9CDA3F6A50E00AA536B02B4BBF4CE60B7A791098C3E434
B5A7F17D6E461FEE23C6C8C148C54D14345DECB7A619E56268131F65F86C51B0
E45860D46A1A798134AB3283BC8B73D9B39EC5D0C1241A85AA46B02E51DE6433
60BEAC76351AB35D8DBFD60C6F12F8B32E08C671E0269174E1E142E687B1C558
5668FDA480255261DC29288FF5ED56B50DD8512BD4948F31F14C71CB4F8FEFEC
DD8E4F4EBE9C28312640334BE454634EF26B5FD02A93210D487AA4F3AF284479
303995AD31F4A6DD2C2DCDED3380D50EA1D8743A3C6561CBF4DE91634374DE87
FED0CF17C73B49060648AC6AF2921D19FFE1B7C7E76AA84600078A0160160D5B
BFAA2007AE70640698BBBFEBFA5C11F351610023F563840413AF6934156D93B6
551069D681492EE73D480D648503801A921E37868B4ABBB013B628772DAC3683
3E44C318352E7700094ED0FF624AE560D2A783343B266FB925AE0D990B65F8E4
7A9725F23F0A08EFA08F81616A5D51E5EC31CD1BA229A89AB63ED782A6D716C7
1F00BA66A3158CDEAE3399653D7A29193760AD92F65C066A4DF35F91BDE771B1
74E17E4879428B5692343AA963A349064693B52F14B09C5F4B329C4AF4078998
D3F6C1046538F989C8AE84AE032A112C3E657907EE7A844B14C6A0FA8C9A1CD9
797E195186C478057525CBCCAA0FFB09F67F97E69BC402F6199B6900D9F285E6
47D359B1728728770C95B1A85E22D2132FDE7075F8FA1123F62504E53AB106D7
99B33689D55D0BC0C552745C5129CEF9F874850240FA6BF5F4779E35BF15A8F9
F425ED40480C60FE3ED85173E620320A462092834C0BCF6EFF9F1D5912CEB941
9C18D8EED5CA36CF2C7D3965BB0929EDBF7FC997A9CFE79A9FA9C54A11E1F421
7F3FA4ABB80A3C60E9165DBFB0EA765BD21846FD1260F1AA4644CBE05CEC736E
638311023F9F51F4C0166733A32BC1F615C8D9256E44BE8C2FFEC45B7B612FCB
21C52DB57E87EC8E166498AA8A4528B7C612E3BB8117D6BAF5CA8F9D038C1430
B7EA8699F31ACDC03774AEDDF6B73233944A1A89ECBAED2EFBD30DDF42821846
AF828EC54BEA6E7312B3255A7F55783C5D4AF1D9780A9670C9C7E02A50535A13
6D957F895D53E4E18A4B4263695DF2BD9626E717D5C3B80E908E59EF5D093798
7215550A5613AB86D67C1F89C95FBB0E6ACCAAB397479D483AEE4607E111EF34
2FD92DC7F991B6AE84BC7CB982D819A17022ECFEFFB981A6F678655A6278825F
0EFB5733C5F46529EF1FBB01C6BA7413BA9211251C0A70A470F735A96F6E0D45
DB1342D6B97ABC234790D346C74927F5C910F71918D615CA907984F0229E3F54
4F5F75AFF784C7A470DDCFFC308ADF6EF43979DD3B54C6A8DF3B53DB783B81E3
9C57413C3A317419C190F207720743084DC20288C1AD08B8B0FD4ED805FBA8B5
BB874DCE4AE93AE3B8A117612787DA6C8C7512191BC36F6D8AA38F39099474AE
CD570CB5570BBA932C9C7A63DD386CABF1956FF87C266BF145ED5D27547234BD
943841047FE9A41C24B82FD3D3EA49A56C56840B1B359FB2A3F28E10AB09AECA
2FE2520DEE9B5542591E72ACE610DA4BF31C6E204574DC78033008F019519B2F
E45C99F1B938D212602E824CA1CA020211420C77FF545DF586702451B0923EDA
CA15BFF98CF2F0A56404591E57F7C89CAC6D22E0FEF9094770CF003801E5CC08
110B272A50805F89C0BB5C2966B9385C26F4A5008AAD97A29408A5116BE613CD
5ED9F85D2BCDE96FCF3121D5EE1D455A4CB03BF2AC33493FEEBEB955EF737F7A
EABF96C137DD84B3EA39C61CE95B5967405CEF17D9CF1BDD1199346F95E77CB8
5FA2D38D858DAEF10D0DD660211C8C4C69EF58B60DEDE48DF76300EAB8F0A547
6DBC87BEE8DD4EDFE3020BA56F362503AFA62D8C13BB270C3884560E227AFABB
5D810B2B092531A679485FCFFB88BA8313646B644A35C413053DECCD4B371450
18F54701F610E52E727AE8D25A8093B60093FAF775B6414F66F43F517488B4A4
00AA4F672A34A73531218601904A7F50A045E80CD804D028EAFF506EDA1ED998
ECF16435C6CA8E203F2A813506F4B8CDAC0A3D69F4B704AB80F170EC87B7C732
AEFCBA3BF4050A9CFADB87F7AD4B53BECE197C10A2E84571A640328B90E9A294
73F6CDDE4F4AF9F1F3A257BD130454CF95D390ECA95FC4221D5041E71D65FC21
8323BA5A3335E2E905E33D5BA56BBBC9CC30D25764A066D013B116E693C56762
4F683F112A572C2C04ED041CF7BB4FAB0D899B3F2679B431E8993A650184CB4B
1B391B39929AF803F868245A69C964B560A274B07DFCB88A6508082DD6092E38
80D9187A146B60B225CA22F593AA6B4B7EE1EE41A0D375C4FA69EC6C8E02B54F
B855D385C973A7223DE22465D039D213315C35F0D079E8CD030F62993495B2EB
A0F9BA98565F89D2E09BB60D90B0CFFFF1F0845810ED27CC8F1088F74D48A30D
7FA0728498E78A381B0169B7678520EB5769522BB5838212D32C8C1ED5635753
EAA3C14E6640BC34D43EC162711996E0CABBBDE0932FCB6B2838C22C0E42DCE7
1BC85E372F24C1145655D59CCD50EA6E1A673CB0342BB744A43EA1B9104CF736
324E367D82ED67E01B0608294A91386045C1564E4E417E1A62EFBC148C0B4A56
73A98AE2F2433164740B839F851F9C38124B3C01CD976128DF6A06FEFE14B960
4573E748370D70F9FBFDBF875584852E70264766FA5CE893F74D0D5884889178
078CB149821A743D797E9577A7D27E7ED607349CB2CC6968A7CE402DF9A55069
4A985B517B714C603F993944CC64083DE3D5F969F9C5913C297E8493D310CA42
795C94740A5E5D3415CE7B4A5AA11A940D93992329D8B00213244405BBE73958
37CD65B6AEBCCB2263B937F671FFF3C6314D400983E5AEB6A34709D854FDD0AA
3D27A62BB23E253E6E2CA994294009B857B5F1FFB66E772A0BF9D83F4F72B89F
51B125AC9E495343C9D84A4BB4759DA4D2ADA38A195C7905CE288FD8634ED996
9068F0DC8DD08F3D3A1288A271E7F7EC4AF76EF6A78C47BAD95FA14A3AB690E1
19A13639774593D77FC1610D7F1E25A31AF94C5354B35500B8E57B0F65AC82C2
2A519581B587F5E3C941734A4269842D38F74E89C2AADB8ADB3D16542B0485BF
BD4F1EDB4064E96A330D735F73789614C8D606DC553A0A2409CF4C595AE51505
CF203817971BD7F9B3346C036A18FECA44CE1C2042BA4E7FFA3FFEB6371A06F9
30082F47FE87B207E13A68BCA122968AD74CF6A12EF6767988F0EB0CB64981C9
30D9717F6C7D07F4B37CFDD68EE4480C0CA305AFA4BD21DFE131D6715E839973
E1271BF576F70C2F8C6827B3EF02CCA123EA46A02B2722E06078C3D9B3743CDE
45B43B561743264277D0D1FCACDDA80E5C6185E90F82D1DA4DC076B6BE49D2BE
F03EF513F1861CF66D2B7F8D52C7A5C21DF1276B72CC1CDAAB5A16D20722A95F
8B1EB6E6B605D3878831204A0EFC95CB3C5B588D4F0A540D466D13B8468ECDC1
DB08D36E7FA19709A67A0FA08421053EEC9068ED464D29BB1BEDD0BA88882707
9F41334C3BD3F995321711B6ABDE3C12A8907F930F7AF490D774A05398ED03D6
789D91B4DACEA3D8EE11C2CD850A6EF4128B60EDE9BD37710F43836EF6D53FD2
D8123F81EC6F01A93A8B36FAE49692E7276F7CDCCB09F332ECE359E3E7DB2364
A60B192438FD158B18CB3EB40FD28F74A740367F02D5CB6B53959A0D11BDF388
9AAEE02F0E96AE2F802FF08BF778F26DBBAC8F5AA04CF3AEB180235BFDE493DA
4D0B13E0B61696A8ACE4FF7A09956A1896B2875E5B2BDBA09DA08B9589957E85
51084D76A00FB728E286CCFD2F53088158005599835B18F6F5AAAA6051270AF2
59F7BF641B0AF4E79F4491725189B89E57CD10B442B8EF89345D04EE3E18EC98
217D81FFB1B473B9562605F7B0AC3FA8CFB798A988E5FF20F068A6B2399C71B8
2E3C19E58601B0AD3872170B0AE8FA33F3A50EC5E67EC22C00D3DDDCD7B592E1
0D1CF31DAA48D10F7C6A56CA052A5AE914EE08CEE011FFF20D00B46A7738C434
D70F1040C611168D2C1851DBA89DA526428E6D5DDA244AA267AE3559B0C7DC8F
AAE1687F823CE628AAD59999E74DFFACCF7D3412B466F6C3A315D8AA3350FB18
9EBE417717C42F3201D19E1870A2A3424E96F1A9734F32E85DF220E08C4DDF8A
AE6F3491A3C805578924F36C146CBAF1D38C8C18D18E5A9B38236BD3E6B9E5BA
595F66A2A8DE9F52C9DFE00ABA5B99806A87D2EA39EF2C3A8D94FBFCB0CB5345
9AC36328B89AA13E4BBFAD70314009B0A2588847B7092C9EB938DD069CFA3679
73D9CF01F9756B931B34E70F4A5F1C41FC577515A5CDC49FE2C9A13D62E7E612
2AA5969248241BEAEEA5CAD34154EF5F9153D85ACD6FBD6B7F2834BC65C77E27
5ED803220949B14126BFAAC7728CAE16EF205F408232C5D7B83AFDB9C2191997
38005204EF424640DE1163B577274FB455EC0383BC6CC17F35112AB638743DEF
9954A5B2DF6A50DAA8662967E8E2208A9D1E3506309A9EC4C001CF91896E79A1
F3F6FE998DDF7C7971707CF7DF7415F6D42EE28620C0A225A1B9E389F397F972
552E566F748613EA1FD417CAA7B90A2BEC1AB07F44BB8AB6ED829F2D7F4DD597
989617E6BEF5E701498823382DEFC2D5FD078DF888DDCA99E62890AC0E5BE8BE
0CB662B561A49D2221847151D203457C797A904BCB5A1D68A51EEA20A167047C
36FF0FDD999E46C857864D1CE7568CE9518230418124EE5E51FD96C0FD8EB7BC
2A49F49AD72BB71F849B112147271000A77F41CF476AD687E6BC3DFDDE0CDE1D
ABE816BF31348D25FE0A11FE7F5559BEDFC24A14F91BB73BE7F5FA95DA24D705
3DA96E8D05B84A1E5BFB0F15D7D4638CE4C63B74404128CF56A016180EAA054B
85FEE6937681557D0B5BC3C560947D456F48D7F4CB7A5EED52B103281B152E3F
ADCE8B98497B74B05096AABA261D2A2EF56572904ACE2866C6A081C926BAC3E0
DE02EBB63FA29197B3812809F08A9E3D5ECFFF751E60F7082749F57352040E06
CAF9290336395684E85FA2446FBF1D0223F74B0D3464B06975010B83D0975181
3DB6C0E2967CFBDAFBD555018305184953487AFAE112D36E696DB8A18F3E3A74
C8B123F16D077DBBC85A226A26D406F622858EB7F1646BC0093A7C9711A1DCD2
6302B0611AC20A3870195D8BBA4E8E4F2CC73030B2354308CF8C06D68DD7FA14
87CE9D6FC7A8A356AA2DC356231B4993655A0FF55AF67090E2947C2B7FB9E96C
EAAF52A01ABA6D69B738D6E3D4B2CF1E037D991EB5943BB0E6AB3868138CBF20
A112805F4CC00C65A4BE86D7492C23E34CC0BEEFAA0403E2AC21FD33D7A7FD09
9DCAC0BE550881647B322FE5806735FD993F5ED7C62173AB29095F67A626B9F3
20829E4788786C978B4BC9BAB9B3A750F130F9D4AFDA6EA3A7DF09D7615951D1
0C783A653F0BBFC23902019BA276A6D7944F1A34C1EC7E2710091C0B94CC3938
01C50C5E4A9C19F47D69074023F574D7A7302565EF9920A8E2A5076E6E3DDD2F
409CF1AB8BCE348FE63A136E03A520DDACA32571675AEB94D761B7B625AF1626
8BA9ED761E12A52C511890DAF1F790857C3C9FD3FD033A8330CD8E19266FE888
76AB1F3B3C8BA1FFCF3A6CA570290FC1640B6C4231D8346BD346E647D138B2B7
F7861E2C7C7C4431E3E91E318BA1DF8338AD4EB4AC104EBE7AAD8F5A09E6AB3A
48B9EB51A85277B221E3A22AAF38219B681918DBBB2F77FA8AA27F310159C763
A6E66D93879B592289B919B425FD7A367B7820FF430100E1EAE0877F84326FCF
5F1DD99964BC6BEB63528D2B218CCE41024EA2CE703959071A65EDE99127EFB8
0CC01566E5E52DB32D01512383A7711C7770AE17A71E5D95629642AA79CD5F01
D37FC89696F25C2EE4DD70DBDECEFA4FA2CD5D2F8ACE75937D2B1FEC7A31A893
16D314D800AFD3EA28068983A2ED3A7C75A5570F30A2824A47D6A789AC554C3C
A78C2DE9771B86F73C66EF8E1D0FD046DD4F19A31EEAEE04D5F38B73C623F326
F146C7164C9B18B5EED2113363092ADE0ABF0D7BD4C10BE9766F81C34878B236
1A0FD6D8AB4BC7E3C01F1C880C3A9186E4006210D22EB64CD7690FDA750EAE7E
C87A9D29128D49082578ECC0BC977D91E9CBB1ECC0D3527DC0ACAB39402015F1
B067FC5E7705586D97E81F8911FC2BC8E7C077384AAD4DDDEDBEF65CA4B75F6E
39E41528CF53CADA928537D557B518BB740593A6E4D0100ACBF126FF20888342
A0D3D7C201C4CDE8CBF59A1BA4F924E4EBC3E02883D5FDF2C8249AD8117332E1
BB52D2F621115C0F98037D4C8D68DAA549FBF76B826F1DC92C77B68CCC383E54
03F0A7B187C35C25C04D1786056F2BDB37C17C9B26166C5920B3BA262D22D1BE
7921A00DF3C6F2876A1DE2884E34E812FD213F6D2790D9F623485C7AB1D6E1F2
030FC5F4F3B999AABC297A8C4C8985FB5F0731836DBEEF53E3DAE6F79FEEE1B3
0ED1EAA29FAA9DD9CB641E5BC06A2397DD6FFE8D8B8EC081349683FC5E1C3232
36F7108480D802FAC442571397A62FF6727AC3BA11E890047AF6C77FF78D9066
99CB9CA3EEA8DA662A2BB86DC287C1D43519588D84867607817C284988645E31
18BC2DA900B48462D24FFFFEC96E68C8AC9CBEC1E0DCDD55579DE73D8652EB09
7FCF2AE063C3B7A56A6DA69272BC397F32DE201170F8D131FB405266E1D88F03
52B18532E7840FD5D7B9C6A439460EAE7EC87A8A2817F889315EE92C675CC914
3DE91EF77879A072E5C935DB9F3D5C8ADC5B0E6E7548C633E2CEF19D2C173DC7
5E79EF118D6930C73050AAA94D8CA1BAEC18DB2D35BC2301C2B38FD930297D56
B5594FE012EECA0E106C1521C454A93C8FB55C18ADF4ED2688529F8F5BF0FE52
498AD5DFBBDFD2AD914D9A140A5E46C1A8B94F11B5BDDB33247BF7D19BC21F4B
A74218245C0C71C026C826A2007E2F62D23C2CE503A2AB76C1DB970BC523D918
64E884E1FFF8CABA7C15AEEF6532822C6A64FE38D74BD95025D9B717498E7CC6
960191C3B318BBC0D772AF4B0BC4A93C781865E2E3FBAD3BBCEF660950924E0D
7C79E7564C86E5E85243A410E989AE76A3253EB1414C1F450CF9056011CF0DE7
97B2F8E99A58E27CA6392CD2E789271045B9CB72814C901440454A495E8872C5
D10888AF8FB1CC507E2F6EEA1E1CF363DF0DDA52DD33F8CD3CFF1F91D85228AD
08AB947E1B306388FE13AF7345093EE01E194BD60FAB21E0A9048C4E30055574
ED7E429FEE684F41798913D3A7494BDD401358228842BF5FC3231BED6F014A7B
8051FF45F5BDA5780D1C9D47D5B4C2A3FD6DD965910F339E356E3B30665FD226
7EA449E2A63EB09515EA2BD96D900FF42B8878A298B8DE0320446D42271A7BF0
22BBD7C0A81E1ADCDC3947666745541A25CAD6E7CFF10F2928E64CB4195CB038
442674BC1D2829DCE0D56FB8FB9EBA6199A78F847565599B0D6BD2DC9D3EF61A
8A6F2F19451E43679AB8B02C5F0ED0E051B8198A45E158B3D7B52E00545D1A29
F6EEA04C5C6625F637DFED6CC6EA55984565CCA8DF6C0F9D0651FFF3AAAB7F66
21A8403552C373A4300641CDFB4B15C39982D70F2D7D47C2A6708182CF184D3A
EB886E641B8113120D041E931C01D27DF8253D97DFBFFBA2B8E56A63428DBB60
29CB6B5CDA0FC6F8A64A77F466BF33AEC2458AB118A9BB1310B4F9B8F00285B9
42A7ED40A8A5D2E38C7E8D6DA4992EFEFB9862E73AB73BEFAF8CB096584641BE
5138654695B57BCA8B3590AC500CCD37FDA05E889CF2D1D28175F872AD24F921
3304B6078985574D927B0CAB946723DD029A590F064282ADCC48A04065ABAC7B
30BD23A115ADEAB545B0CD8F1B6A3A9F6D8E166003BAD0D6D85967B13E77AB5C
A83B5BC2D179D84B7454D57F3670A114B50D56C0B3E651C6F0520C4A43C49A45
9A116C72F46BC451B90FE5D4516336D64238A8AA5BBB29DC19144C24BE28318E
B87515B10618A24081C25DB1D7ECF056D04F865F804D5AD3B7415A4A6E0AA7C5
80C7AE44FAFDE23E77350A20DF4F1863029E74F2C5D0A26ED0F0E26B18CC91AF
01A4730D49B217474413D17E738D4BEECE6116B6B174BF5EF70C2C970109D7EA
BB7F4081FF6E15491FF7277A673A125E1C7532E629B16D5DC486A44B56CABCCF
F8180E3FC398E2C4BEFB1B153EE29BF0AEB865EE308DCAC8B5444F32ACC5D3FB
9C7E66E4109D5E0A6DCDDC4DDCA50E9D378E0DBAF2DBBB2D3DC03662D657657E
CC5AAE28642A2446DB2E61B352D830A61339C6B8491498CDE63FB4542F006639
2BF0870CC8D112E87D13AC8D91A3D698CEE579AB3142324C9034D759010F3A61
0E2D0D8FCF8EEC6160E92E006071368219BBFE76904EA4E51EC51D853ED998B0
3B7BC1587E4B2C56B77889B4D3F778315429E801389C33F514ABF03BF718229B
6918A4221A531D953EB7E619FA29E693140ACCEC77326D22491C70151923A9FD
7E042BBE6E148FB9C08408A0D97ED1FAD6AC3BC307051BD5EAFFC3CBC08D9660
F6A21A5ECE89E45C6F1DBA4E7535C806DECADD1EF42DD5125492251383015D16
DFC8BB80E2FE75227500EB0B8288F1254002587B94A91D5D6911196EA8CA7034
63398E79FB397C04DA80B07001B445EC00499DDDC6DB78B54014941173EB9730
52CDE7D0860BA15A473CB9E55F6D88435303DFC250C4C709FBDA5C5F065FC988
6CDC84FCC6219854B2AC152137550693AE952B16DC9AC211C628695E1E614BDD
F456DBFBEDF573EEBB83E6F9DEC5234B1C63DD37777AFC1754F90A7754B2295F
9DF1B38F146545AEF5520C731FA6679B21B09CFFA2BF11CA27B0493E70D348C1
46B115D8C7F890CF8C35F9692EDA8C883E58CC87960A59FD9539FA75F26F8909
19EE30834842724523B5D4712F141947D516A171E438273BF5A50A4895607574
5A331EFE015139B0BF5BE3842CFF54F34BF87E4331C4AA5585BB1C86A8AE4A0D
D1C9542D293A71D0D16B96AD4DAB6AE412F8C7D1288A79392533C2DC24C4FFD1
BABA3C6C6DFF02BA5A8A65689FFC56EB77FD31BB19E0929ABDFFD293D4AD6683
2B5CB73F60B310E57649E13EAF0A4101EDD84FB9009D35DE40D502C680A56DAF
F11E7E2BC20C7924E0954A77503E51262630FA4E8E6BC3B44ACC081895F06A28
54168AABD48C7AB8A99815110EBD5EA245FB15948047DA1DE2B9500A0892003C
200FBC8E25A911B20A3FD2F317853626684DBC4BD4813E261E11A4201671D3E4
B33E1FCB2DD9CE0C2D9CDA6C3B38F170C64BC5E2F4A11BB4F3FDFB2C9515B636
35AA6CE4F941E9F2D484EFE51168984EEC2AC89EE7D20DC1B2D8836BF0FF241A
C7256AB7198D0FEEC52BB058D2FA0578F344B40C9709FE2D280B5103A8D631F0
8C3B8BF6FF5317A1581DE496AA85FF8C194AD4A5D864C08552F9064C71815DBB
8D27342D7582C88846EC65CB8F4DCB7B76E5168666AA6EF383C4FBBA4B08E7FA
9D16D76411F01C76F2759DE6651BA5D850B39AB1D130E3380A6A06216F19755D
00CFC1E8447F467DE5070D7F9EEF71D6BD4D71B7048B3A1C4DD7479FF990B54B
7EA474357F5DD8D73A9B47A1B62C472425BDEC916358263B8815F9DD7AB30978
9CA3BCF3DF6F9BA5CEC25D72DD6875C4F7AB4A0D7F3DF8C3E698A754A4389418
6DD2CE2722EFEC6BBCDB1403E9082DE32E65D6D0D91FA8260DB17CFC385AB64B
AD8B3E49E2C8019A665596B28D27FC3A2098420A5650D01F259470446C6F155B
4F8D8EFA7073B7C506776BE3ECA32D1CBB7F0E57F05BB27D1F435CD6A8D7543A
66A4B22A292CDA0701F86FBC655232D6CED52C10FE7693C27A52F2712D0A05A8
87202518E354E65A8DF637DB535BE49076072228FD38895F87B9614098F79B14
F6FFA786BD0E247FD7BA56C77709122CBE39FF2354F39B0471F21D6B2001B389
3FD60DB7D3176B9B01468201D3D947CC9A3F2931C529FFA52FD52D1EF62AA20E
33386D5298EFCF0C07FB44A8AB76FFF1734BF03B4019FE284DF3EB31BCF8525F
AF998D7660565D427C6B16AFC6AF0B2757E8809A3AF6E884E72501111A3B2F6D
D9025149AB01FD78475EB81E677BD835C10BB6947A7F50C3D3B4B9DFBA928947
F7C96C7F7E5980FB3BA02668068E2E12C86D6C494179D74A3F1DFFA840962C85
EEFD0EDF0098D5C707F94A14F8B1FBDB735F54D355B8D1E5E69CEC969F034A91
6C08A4E961F1BAD5EF35D176552E07DA913543839005A602E9FEC02E78BC6AE5
82B7F5EA078B6321E8CAA677355AF38F0C2C40757945537ECDD27EB6BCC0ADDA
671FCD6B01263EAA4FD9C06786199E5798A34DD448D343201D07E1B96A78DE4C
BEC0243A86686ECA7B49AD689EA756B60629B61C43201AE816B268AC925DFC67
4DB4345686A6E9ACC0ECA381DB3F60D154D82CF045E11EE9F71A6033CCFEAB11
BE0A2F54D50624E56D4B9D2FA1717C57F0BAE68FB46A28DB6790D2F8E2ED93B4
3355F5D129EC688B5BBC40FB27314FB8834CC17EA49B9150D42AE49E3FAB5091
24BDA5737CA2D750F09E66D623877692DFAA39DDF0124E71159F478DC7144B6D
549B36AB11B55296B747D3D5DE02638AE718C45485F51D974AFDAD1A5ABCE8FA
4A3DA936DC6DB69E2206F5D411F14D21004F65D5351B4DA3B18FA3320AA3CF48
3769BAB97B341EFB4742E4437DFF4F5763DB8E0F6E53624530F27D6232B5A15B
26FEC7437B821FDF109386E5554D31DC2534A004BDECD6ED8322F62A539E5B69
070B52F243AAE0B164AF02379CE679FCD2299F41798FB7D064D85FA9C3A08060
01A5849AF03CFB6688DC200BF42D09F51B192A43F2F66615407B5CD846D124F1
8491D4017730AD33A19C18A68AC611B2736F0151CC5484AD230FBC4E4DF7FED1
63F827A7B2527EA36F5E39997B53CAA75B3787BB166B52D6BAC590DCCD8415D0
B2973FEE322129755CB670F86E157BE4440648F66E14A3DA2AA140B926F762E8
69E4E07683072416CCFB1799D22B177770D9F16CACDA52B324AD6DB238D7ADAE
39755F6F6CB76C66848CCB46EC3344EC8FC5648E83642C0FC3F0AF30C5741EF0
71A1FE7C313C9EC7B94B64BE875985B86778478F37BC316B68C79367C783C65A
FD1455C4A79D45B075E40321C8C2269AAA8389E93DC50CE380C0EE65E2F65413
FC24FD616FCB53760DA34EFCB1E8B02941AA11F1D89D8DDD55AEC5E27BE1AB7C
30D1993C280CD2940AF20FB9F0B0F5AEC475B4DC5EB2B090A396262B3FA9B834
6D17308DEFED09BF42D8E2D8412D38EB9C57AAA310E3D0460F5FDD4DC130E620
2CE78D14CCC666046E56351D517DA4716A24CDF975CCAB24807FF944F3458223
D3D5F5B22474C15A009A58C6A0D2DCE5EA361CFB9EE6F350797C850652102ED0
5C70384DD2A35A36BBC63AF253136D9AAB673FE6B0427F0533327021FB716289
A3FB0C824E5E7604D05537E22F8B8A8A27972BD9016102ACFCA54A15F2CAEDBD
40128AD9D335CA60DE6334ED65D0CF5E4D26086F42D2C21A75632686B6773247
F292125B0863F15ECCE0F5F66DAAFCCF39C8AA3E5118D399001F78EA7CB524A5
6653BE41C4A242A5AA9ABF82FE1331BB3B4641EDBA15F91060F8F9C04324F777
9DE2B4609896025195B3F04F1FBC524FB2104BBF215A8AD149D38CD968315423
7B7988A692067CF8FB348F8393AA5D90F9D8E26A5E260581816D41052B1B389B
050EB2CD8B0D4ED58298888FD8FCE0224EE4A4075D11F804C173038D57883C64
4EA9AC2A7881E4EF64504C4FD84AE1D9409F5845C6C60B016DF183735EAC78CE
DAC5584A8735FEBFC74A9F2674502ECA479F6DFA5BEB19F5920E489D4A77B34E
AFEF317DA253C24C615918BC524776AAC6E1E80F0EB37CE81C356774FCCA5373
7B96C877A9B137788BFCD7C3F6C1EB719F6DCDB0608F3A6BAA9708A767FDDAF2
FB05FCC788A7BED4052860900CAE2931CD070D2FBE86606F3D25FDEA631C6326
EAE98A221D5816A91B1314ADEB6A20ACE51E71950F1A434A3A19CAC124886128
F29FBD256DE40B760F5A6C1C862947626628883B4F0D61DAED92936B0E9CA786
7319C8EFF96C58233C64ADF3E3D22089B15B6408BD514B549F2336BEDED6CB17
868A9840BD4C485677BE480E238C828A74B7B897B08BF0148A50E893BFF9B578
DFF9D47E23D4FC8599997FB851FA4B1EBB42365DCA26F35F5FDBE9FE5E5019D3
3948DB2A29F36FA95ECEF5A6C4B1D140CDDC8C5B238FA56F1BF5DDFF96E4063F
B23B0C13DA009AD9D48CB3007B7906B6F227F929D6E06E04480875B7B4970569
F55628D7EFFF3C768DCE87BC6E114E9660035D5B18F729C779E02CCF4CCBD1F5
2BFEECABDB105361C977F832D2EAB03EEAFC81FFE0CC1B35DE0E3C8EF66F3FF1
2DB35BB03E4BD43571A758368A1A07959B818E8F5F258049DE4DAFD5852843A2
DE508EAC7532DF1AC4478841B673D3300D25FF5CDAD43BEC7AAED12397E52746
04B97436D58463F227C63CC01C7A808BE7D754E07BB64B9D4659D8C2D974F82B
16F5EC18189501E2616121FA79DDB336DD6132CFE09001E4B04E4BC105CC7742
6167F673319490280ADB1128824C0B8E82359B63FB543D8DF3C59139CD5DC10D
F478D0E8DABDA5DC4F9D67A2DACC10A5116DF076249B3CCB334D078B7A84FBDD
ACAC697C926656FCE3B8F13738D7ED99825A80A47E0A6A242B4AC49D8BD9F553
86E0D137F84FBF2C1CBE8155AEC86FB923AB680C2A1CF5237F977E677D11BE3B
3DE24BDCA24EA08097CBDB2EF8D42A687B841477BD222D035C2EE70D9B80CF6B
26CCB7CF766162D36271F76D57C80BBEBC6C1B8857246E422A5DCF5E8F16075D
AF9CE393F85204BADE91C7998F5F04A5A81185FC2AA81330E2F3E482AAE87FC1
9CB895E31564AAF4773931C089359A0A969326402E98EF595DB49E1728CD5BF8
1F959E6079D460AA271EA507779C2FEE7CFE8CBDE44BA3D53F8D3FC6807163F6
E52A6421B834C3CFC071E4FF6DF10FCD768AE0613932B777A5B19FD3705C5552
55D6FF2E9467488D8DC622999B5DFE4C2B9E07CC21154F5AFDDCDA7B98DB696F
E13F7087236C85FD950CF5F87738A41CD459F6E270554AED14
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/UniqueID 5000769 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 76 /L put
dup 77 /M put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693AFFEF215D00BFCAD02E45496D7C8F5E99EB9096FC4300D038C1AFD31EC4C
5ACA6B72C1BE7204E37A4CBBCB1EC26AB87F2FF82DE20601025169A5FBD2D060
62B5B2DBC288C79C33B596832AA18D730AD572C6EDFABCBD36DEA87C0F323C3D
6E537AD3B43C6F3A905597570A8C6B0B4A5E08C08EAFF9731E745F2BA8ED0C0E
1ADF7821CFCD4E38F3F4C243CAD31D9F8FC68B9043740852B4CCBDD37BF728E5
648215961FA82A0C847ADCC5187331D0863A4573BE520C02CAE14AED4F06B3F1
FB4A318AB54CD86DEC824707B29F858FD726A167F2333855C0575EAF4EBEA0B6
754B1775F967140641FC06F82B191244186FF347A351FBD8FA62E8C978B21F6A
E124929876488AFA97FAD1A68A0C3496BCA768F4AF8016D7A65BBA3AAFD7F5FE
E75FE714FFF3D54D09C9747ACA01CEFD260985C6E87477C9C7843343C7E9E3F4
0537D461EF019E046DB8B5BA258462B2FAEA1826B3410BA3333480CFE0DECE61
CE2731FDDF7FCF2AEF7CC2B1EE7095F480B3B27D78FA90FBE923D372C680C87B
7F0E702B8FECBE0CBCB087ADD6D28549FE707FCB616448B0D94CBDC404915943
66539B177D5940370C2035D0FEBB3A3C666ADCEB45F5B15DEA729BF86BBCC309
0294FF267657EEA805DD28DF5DAD281CF587039D1E639833E2CDCF795E97068D
7B3553D2E8175A82BE3412E7634D9B961ECD7CE3E0AA8F32E6EE05C2D84B4666
3D4F04B51D880033FFFE7938C996F4C54730F727F2E42D3A4DC3BAB904FF9B73
D42A45DAAD7B1C67A45C62B221FA475A2EC8878ED40FAA2EBC64CB65E5C3028A
D1DC37EE522A2C100E07DFD42DECD080956110FCA2EB948CDA0FBF80B2C92FA2
CD53BB7B84CBEAD717B95CB532C250F55FE6868EDEA3ADAF7EC285E37FD404B2
307AFD36500CC89B593C465F3E3DA364BD32BA68BD546A4DD10C04666C9253F1
A2C223B14F3CB90B8D776D182A6A05FF0A2E799612B9E460F3BF7089A36BAB24
0221D7A2FBECBE28B7FD485D2E8F75CA7FDF7079FA234BE1FD506E3806F68DF4
F7DE200147757A4DD7FEACB342327B95C920B4FA5FD6B1539A7F71A5B9733E83
22731593D0DFE617BA76CCEE4C78FE9E0CBAD9AABF5EA6D3E4F3DC38E426811B
E86A82B999616309CA509216AB511D204E9D9E01E1937ACD42A6A028B0FD2A95
336FC074602E69EE7F57E420FC40F6413C547D5AAE50BC708B21CDCC3F719B06
0534D7EAD6778E21D87DD9118C00F04A8419E1A1A4912BC23C7D8D4E218F58D5
60A0AF8DF585FFBF5762D8D28ABCA19BFE571D5B4D7646F7B8A68F4C077F349E
FBB9244BB1A2B7BF14132A6D8A8D222CFF973875C17F876BE5325E0F77A8C4EF
D1800BE804CB93BF5F1310E13A1DE78C24593C5067A64042AC832A8C6810F4BB
E331E80948F76467F0114BB9989C13AA8BDAB77AF41DC81B7761A1ECF63273C2
34E8993F0FDDD2BFA5B4A8B01CD2A9231AAA787169E1D29AB1228A867A6EA78B
559339D35E6398157BC933F74CB52D1C278C0F66283A29EEF75DF9C8792189BD
40126CF63A7068C1536C8366BB6255ABE7FAC0E446C27B69C3B2364665FB6B13
B82546CAA4E4AE0CBC5753F9D8BAB7E5D7E07564B6D2CCD66F598D597CEB22FA
F3F33A11A796908FA20CFC7F2AF8AB34DF902D8491604ED7ED1A3FD4B8AA9A74
44F69437431B1AEBBD6E7D56F586793782B5921A54C0B2D49B75472A28BBA851
9C8EFBEC54E7F2221DA2E8DC905567D4B8AD8E92EBFCB8310332C29ECA31632F
8D0D833ED36DFFBF8A4C323D6B7E955F68092105B79DFF01A8FF151C9E1981AA
AC69D5B5A1ED43599422482C461001362B6BD6A5DDB604507D962548E32CBDF9
852E79FACE38A8615856BFBD808BC73E24D4209EB3CB0B00BBC40CE2C5F1B0BA
C5EA3AC3028D0F35B01F08103EDBC928BACA1F608139E646129F6038147F03AD
64E978BF296F3A5C0F38581EBA843076ADACC112F59DC651FD4C26B5D7A45B8F
0E066AE79F4AD20F86284FFC6849B715F85846AF455F5EA20C5325244203D38D
7086DC0F0AB084FA14C00867EAEA7A9B3764DB3FFA53AA2E5614836234C1D0AF
2EA610E53CBFBC6FC8D22C072F3596B9923244CFA46C9179399D61048ABAF956
AC953E28310EC4AB86929E210C3BA63B5D026496C5F2E061CD314064CC085A2B
3249112138EA7277011689AE702DD3ABC4EA4FC6DB1E9888D74BBF8D1797E2C5
6D66A9489A3FFD03B9492C0EF2513D371135BA68231730C7F2818836D9841E80
F2B5D35EEF67282E50DF8AF91822AF6C5D732F63232B9748AB9EEDCBF63CA115
C69BEAFEF4BADADFDE140210DC73E0CAF0CE5FFE662E64E294ADD5074FB6A6D0
1CFFC7D896EF29587945653D5ADA5B74522F4ECC733B3E43A8780E0B01362557
246811B0D812FCB0852A3A35607997205C3B35D1A85DF27A16FD25EAF7B4A08C
B5ED23C533F1C07CB809112D29ED9832306C805477C035720DB204D475CFC280
A8B57D7A9A0E97BCA725E969E5AF88A6CB8D7D53AEF839E4214C07CEA60C4B14
871506D187E0F630BEE2857B2B03C29B147F027F1499675F9544AA665E098273
0F295F81FEC962B5503C734CB7465B022FAA7CD25F497FBDB8BB844A075AD554
46B876626A0BF6C36646913B44147D1058C4E9602DDC11FC6317C46CCA82B8E4
AA3CB5C5B781F8C1196AEC5452626373DEDE317864F80C6A5CD5B6073A258079
7E405CBAF30215C2EC5471BA95BC3203A5F410E3A0C37A0F28C5119CDBB9E607
E5B1C8CE86A4913C62AD31DD9E5DF72B38DD750124F47660D382AE10DE1C8D57
178937A8844A0948F8BB26AABB16C5EEA5A69D9E4F06C8181F909A192E77B166
C61256E21071295E334782F82E43AC638CCF43C292FEE7FB21D291B1BE692A16
5548B872B930452F6EA68413E15F2186C86B3AB5FFD2E47C0B5104BDCC64A400
6D61D65DF9DD7D15F0D159ADEA85759E2FC0C789B0F0C4C3FF74732E1018DA40
0E4664ABA550FF7F924683DE6298C5ED0D8C6FAD03BE40BE325FF1DB9F8440E0
239741D1CBE008F1B1247C31341A506B4473744C6112D3FF9B705F121D14896B
26101952969E453743B21BB6F2F488CA3368D920A272D325BEF7E54E53C86E5B
F49D89252F2FC29209EB50087CD4EC5EAD56192F655A7657B882CD3CC121110F
7D21393773A1A1FD38CE3A738A458E015704C8820321E748CAD3879C1FA15497
09E729A060634994C9BB4F651312A6CEDF55C3ECC1B8B7230C242CB14B3287A8
4EEB8E88AC88F3037D077D6CA760A5D6099EFF185E8C664E6433107C535932F9
5B7C4DC21C2E6A6414849C19888149753A27AB039904BDC5942D8F3223F4FBCD
36DFD8DA34630D9E5C6EAA658A8C372A4B2D5F878E38FF308BE47C149C7BCA25
DEE9910A84560B15606A5764589DB6751C7A1E6A8CA9AADE41A3ED637D16C168
757A5CC2692877A44D2E3FB8BCA5B219E0125A02203E3429ED506DF85E12263E
3F77665C1705351E93D479ACB5D2224C3BCE328EBF9553E77D8F578C7BEDC3BC
741BDEF11A8D956C3D22BD9D64A4F64ABA4A6D9990AB516E7EA1DB51BFEDD508
54CB5193BD9F9D30819FE338F545F531F85CAEC335D3C8674E9D1E7C54E37763
C1EAE786E0D7973DB06ECAE05177B77B4739C2252C52855D4E6689B402E41546
09301682EFCF2B32DB8F860223F802E7907F46AB4C4CD12C432F4EA94CEEEEF7
077D040DD5460FC8F8BA2C70E7EC7EA7FC7566B3BDCF26E68A59DAEA853CA33A
102ABBCF972889693741A3C282FAADB003B25EE2FD054C95EE3BDF88297A3BA2
ED252223856D01FA8AB9856D3A4097A5067F29243D39339F46DED42B5A531DA5
37415E67523CB2449E91BFC0947E32D21BDFFAC8D31B83F089AAA259423EEF40
2F10278D43014AF1BF47D87A7206C236309B600D7B579DD53D5C3B8BD01E8149
7B11010603E105B0B1C74C6A51F08341048919B6DF4904F8F481B0BAEC1D3568
F7FBE41F4EF6A8BA56B856AFBF08A6E303097D9DE76A0C4E0E266F1A1F8776A9
60BBCD2BF42EA4B016DB4ABEEA1ACFB8E3AF737516F70463BEC1B1EC9324BDC2
00753FEAA18DED127378E85686972C0F72614A18853BCFE59C5A1F67EF0938CA
3FC0FC07E452CF1333EEE67F0E2DFD67689F90F883F7CC80D8AC5F95B138FC0C
797AD953B1720AD3A894719CB6FE274EF18FCDF31FC7E0515F6CB4018D61E5C3
11EF9941A1871280309337A4F4483DE4288F9B02E0788ED4E0CAE6271D1AAFC1
5EDCCE03C781E87763D8E42607E01E28610AD6DB2B172317A3AD7BC635B87304
AD3F9D3A67D8A0718E2F569B075FFE49740F41233D913E4219DB60E899E4714A
35D7C0175C12A49CC18093CC0E28C55B0CEC4C27426E960302E7DAA6FE59F304
38CEC515EBFA00941E0ED35AF47FF40F2D1AD74EEB7F92D0346CFBF6A0EF9C47
C1F1085FEC1E0206231279A14A7507F96A1823EFCE67CD10BA2D3FD3CF7D0A91
2704A33D67A429B09CE10C7D6D5B711A910ED37A09394A1A170C6BFECE5D9D15
FFCC13008C89C3C6EB4D0C760713FFF264F6DEAA7E3DFD7C40372BAE7B8933AB
96459CB5E625A5C22173918EC456A09DDC43DB22C6537028C311D387753ECB80
113C69682ADF8BFDC201F25ADC380B5F3B2A591974C0195CC9C0D298714A11B5
F78D472A1932E8F5E135A1BB3964225E4B94F1F4D5A4160D32EB252B9E483F88
1211D1CEB9CCC00355C5FC63CBFB1D3AA070B3DE1D5142E8A1027E6ADD0284C0
EA95756C9879B325450BA870B8F6A4E37EBBFF56BECBE4E97C40222FD6CCECD0
963D180EF18D90A86BBBBDBD6E9E23E790261BA29D1835F38527EDB23A8413C2
F851FAD4F2237EA776B153F1F2C98FD44937F068418A922512AA9461882C0642
F253A25DFA2C1E7E0D090A6D824E3A20F52D2EABB645E8A6248A7B78EB055BCD
2231AA4ADAAC92CDDABF342043CAA0D71B97CE21BA8A42D252E2618D6729E712
3C24C71F8EE5258CF80D683AFED2AF2CA96F5A2E208D0847A4B5E72067897034
9D13A829BFE78050B3D230DB3BE546730AC207349CAF5FEA7A25CB13164731D0
6DBE8D0FE4A79475F493EC99CA6E78BFDCC16250EA0BF43C77A0D70D4D3E935D
8B147D5F4BF1824F2CCD89E147CC73547A16E630DA89ED48BD3E22BC28BDEE53
35EC0CA11223A9FFDB7852FF258A1BC798E04EC1CF740E6B5574572379CD9343
D2B1E36095F1483565FCED65E0D71E54543FE04B07F3734BCD1F69203A1FDE78
CE1FC75A8582AF637D9830EB3B6C1773ABB520293884706B88D11678F9B91FFB
4EE8C282581B0B77C4E0936C52011A0AF816F9ABB805DD469A49697AEA40ABED
9E709D8CCB0B12CB7390900303958A43D88AF71D6B421F5D8AC413B1468B688A
2297C7472E8C63593A0FAE08D928F9D8C2051BD76EF23AB8AA94CF24884550AC
8C609B7CB31AC26958B38F6035EF1F786E58B1D5789AE5A63AF29745C4AEF358
E7A5033D6CC91B7AA3EF90E24666EFD44EC404A60609AAFDE1EF85C2721D7226
728C898B8E7A048AA365F7CC28959B479A5626D5E27B1E75100893912EB93D6C
1ACC4D30FB823B0DFB89AA1D0FA3CF01CB37A9AF8153BA1F323AA565587D4D52
786FFFA10A3626E0F6075B1452EC26065C77A3C3A00EFB864B8D98844CD01B7E
A1C38341082280C34693C1CDC417287C02DF746C81CB5A88BD278DEEF323022A
34F2B6583C13814B34233F51E820EB5C663EFB2C273B393ECAB6AFA82EF2E098
459DBDB3A9B47C92EE18B8BBC9BCFF0D4221BF992C8328D3A1B8FA1DB914FD2E
5715A3E034B8B62CA12C5C59E5C615D28A64C969F6314C55E25C1CCE5FD0BFF8
0BF7C1AC4B86922B7822CD156F1D8667C1B0BABCD19ECC31DDF2B61A75683C99
49E37FFB0A6A492661CA5847CDA30F4DDF7560776F43C017806301285C6EF731
44649D72B63D6231187C13F5487BCABC1E30360ED8EBE6993007E755F951E60D
3854CB2C3EC9ECCDEBDB052BF79A274ED0DABC3B7F9907BF944D4B5672CECA28
87496030DC93DAF999E773CBDFCDB785F470E23BC42F71A0DA0F78DC73FA7F2D
54319F25E799E1EB9DE6505BA149621A51BDB62A97F1334A20FC9623C881DEBE
EF38D80EFFAFB26C3107DC462D6C857A715762EC28E1F60932E6755329CBD80F
379BD86AE98042619ACBA90BEACE5A7FF36AD264317B57A355918E0D7F54A035
E9CE18B233FFC10584B4FF5419A090771A1E71BC61BAB7EB630FF370EECB96A7
7770EE949EC6669EA1DE8FE8C9104B9EEEB9C8236A2DC855602C80453CC6EA7D
B4882BD450165CD5286E99FE3B8878B9BD6EFC43C465364931D4931DB7F7C1CB
AA24D605B2DA97DEE2AF98662DEBF07B98428104E5F04B514F1955B8DF33BF35
059CA4749F6A9DEE408034EF0655E9EF27A67CE35168FB903C50AA6B36A0B7C0
7B3E20BEA7F4F070B97BBCE354BF487C197588580DD907C34C4959F3FCC362E5
446BB4CE040CFE20141ECCB38704A056B8B97514D0986511C591416D3ECED53D
47C895D53EC87457B802401A4D3E4A2E6860EFB4F4BB249C5BD5F710FAB8D341
C41A69C1FD75F3A4653AA62478345E8CEF88A5E11890FE1D365D5D10AD061A8C
29E5E5B6ADB7F30B4DC66E746DE562562FE61B327EC7DA156EC246C1787B45C6
8776BD001BDFDA2DF3AFDE35657378969E4E556BD218887002BB29A77540BF71
A34942F08569481BCE8325924B23D7928955C05C3495E4FC83870395109D3264
A94B09ADC5B665328A9D03B21B4C1B456956DBB59CD912A0E62BC8CD4B499EC5
C3923857EB2A9101EDC8472860CDA1911D46BB4A4376EF14657A9CACDC9B1A21
53178DBA3AE3166CC691F675E030CC60B5DA645C96493A0DEEAD90057A35CFCD
813069233B7E735477BD9B2DB917FB9C5E5488E8F5876A15456D8BBBBD350B59
9D14292DFF35BB09DCFB4D4A3C6F5DEFDAD7B1AB0267939C3B3C541BD4276836
CC97134D4BA0763BBBBBE1176EEE37806F361237A52DF365EFCE3F23AC11A1FC
88AF2A8D08289974073970DBA033BB212C6B12B5E6AC57994BB998D64C4111AE
5A1654FBE8B9A409B3DB60A9B5E78FDEFD2A0314A2220474D6CB46C89A3A2EEC
C8435703F9522509FD28B6577A5FC68822DCD903FDBF3438B11E7D0AB948EE52
75F3EE59180C07505D11EA17FF8DA8B0FBE57D7B120201350E93F9403BA4235B
3473CC39948EB4BA94A9EC6A7B50B27677BA4ADBEED793386C7A5A19A1B62602
2BD9D9E8F3E3160786B3655AE49943BA83673FD9066F57106692C73E637232B3
ABEA95B8765CE41C5C363509B749DD482B26C72BCF86CD1BEEBB2D4578CEB567
2A85A2081E7A0201C31B3FF1375BB27D5C3ADB527BC72C5790FCB008170FC079
D02F92A98F26289655BA857D718D76CE4B8FCF6B6A679A4616C805B8174D7C52
FD079DA900A06D6E4142D419BD81FA9B9A68BAB618EDAF80526C6BBD7971F379
7B204B5CCA9A848621E64CCE91E8DFB41BAF25F9E80910A9BDBC44F97FD166DE
AE4D41B087EEC62EABD947FF3460722CFC6266948EDE4B8D2EC13F7839CBBFBE
8800DB720A66640E7C2F6D7B3F3ECFE4F32EC2AFCF7A50028B09C769F9D04CEF
A8500217AE15712AC6C854A61E79654F4779B22BA1E595691D18FD101923AC44
602206D6F392A3602E7EBB6A296128D4718EC56CB9905DBD6AE43B201F6FBAD1
62BCFB4B91460D16073A10E405337F07D9A4F307BC3A13F54901FC698DD4D847
27FB76C6E34B0F7155650270B3D870EEB5E2357CCE91E351E33ECA386BE5B170
FE872A8B1B92DEA962F976AD2EA76E7EFC9F4021171D6011427905E5169BCB38
0B4B837A7AEA20F46107621382AD63D72A41AAB2FBD262C04ED2443FBB5DB4FF
58DA6996F97198A563DD3FC6B5732CFB3C374DC1BA7F31F9F2DA2768556C1B03
F6B77D35EDE3C3D1E17F3EE52D37398D8140C3145A9493B370F82638D51F4736
6ED11B0A2CEA6E11C539F66BA7FBEEB0D75973882D5E7E320C7CDE8574F1C706
DAB15C151643AD0B9FDA7B49B827D539EAFF9024AAC0B8B6A023239B268BE5BF
008BE04E7013712F1F06196EB7C80046B02A69CB90FAF42382D25E9C46747171
AD15CB3096922FD1B30C9CEB3E50E2EB730BA53DB43D1F1A2DB14B8861E9C248
AEC441C4040420953CD995AEC52150DA4998BFD6EFA53F47864D16247470EAC6
C8541B83AFECD94FAF76FCB7F52B01C018FEE352FAD33EACEA8F8817422E892B
632077606E3F418E5A0B01F006DC12F35B83EB2CB584A99322CD9E212D1E7FAA
B42B07C1C3591089DCAD6F42BB2CCEA93EC8FA47603CCAA07D3661A5A2BBED61
19563D849DF9E2D6B4C7A6EB8752F5344EA7399D5EC7D88791C9D017572CA87F
F9E290C5575E3669FC701C592E157216C1E2301E85D844ACAED310AA767957BB
BCA8BFD6FE096B6F9D5E91E0AB52A97B73A3769E5A92C18457B80AAC0A9AFAE8
8043926344F99F4DC3E883DAE071DD956EF84A6E6D1FE5E4926C3321BA76FE45
86B79AC601FE0551750E6BB09E9A9CB33818FD99DD5D2BE38B3069902E3897EC
F89E2067BE14E0C9EB49D7B1E442174A1B5CB260C3E3C738897BB603C415E955
631DB6480CE266397A28BD60C12B5DB109B446E93BB2B79269566ECDB0F931E1
A3CA3FCE78D1F1A9E9A77815DED76B3E2B30673AB7377156E76D461B814DCD44
CEA18DE04BAAB63C14C8BB5FB7B7FEC04B825E9625B6D926E227E19D58EDD714
F43FBE6DF162FBC83DC7BB2ECFACA0080A18A75320AEEE489EC95B3B80E74653
2B63464FED4C55B9883E0BA6E5C64B59D14C64A54CF412C19B0AFDB9CB6B2900
4F4E4BACD7E51AE83B757634CCFE4658CCDBFDF4267F6FFF74FB74F54C75E889
FB89B5DD29E6F7DEDA472B12786B8C3D5AFB721CE29767B8395F6977F3CD2339
BAF7A820B6517394357C6C7E0B80E7A39067D6293E7656A69B83D6E88D0CF264
DD3AB2EB14D04936C25AF1726D712AEB0B7AC1B7C05B82BE0745539DF35CCADD
819EEDD555D4AEADBCDE229D64B015C82B2B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/UniqueID 5087386 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 14 /delta put
dup 59 /comma put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 88 /X put
dup 110 /n put
dup 112 /p put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270906014FFC731E49C9A3A2
B13072D67E5ABFB20CE24ED96E7E62DBE177B40207982D2001379CB47D6A7283
9E73DEFE881E4C77381AE42DF058D81FBE1DCBD8AA217A5B8C1B75606E5D31AD
786B21468FD963961F88CBF47F32CD5EA977310016F5279CC754F3D13AD666CB
A8F8C56E27E1343B4C874AAD2B92245CCACDC805315D24D7150F18F57580B62E
6B59CC3744A166E2E533F1C0502327CF9104DAB44271C92A968136AF444187FC
176748F9E8B6037170FF4E73AD9F901D26B7549A33A98F5ADA485A644AC4BC6D
1BB4C695E24C34C59ECD8D13241DFE24B1A8DC496400C4AB872867CC57312CC3
1822AEFA4CFC0784FBDB9A5D5D200435140D09EF60926E108D2F25D576408E15
90B6FFD1AF0AE162ED8ED23A361ECCC811521394472DEA699E2EDB0BC2890526
1AA96C0193B195DEA33659D1723F744EE406BF389F1A8CAFA41289633BA01D27
5A4878C535AA870154D784CA8C1752321B9B31BCFA0D0C4B9DAFD77BD554FD82
5E9053438601E832AC8A3D146E3FAEDDBAB1E0D1EC6BD197D2FBC30A1D6064E2
957B001530E1C56E0BF4740CFD75F6A53AA50D881746BE617201E0FE37C87BB9
F989AC66AD86B833F24A232CDC0C2165423256523E9DC08E80BEDABECE9BC9AF
135276C81910257FEA86B3B7FFD2698EB665811A41E7AB20C7179C2F17A615B1
FD4252DB7D7139592E2A6D585CED41D5D6BE7CDBB243090FB70F146C442F9891
5291EEF2B0EB8434F17B15274840BEB842587F3B9AED05B97C22440FC332666E
5F5A99C9ACC79B6952D59C46B15B8F772567B5B1997AD2FE0801171A58B943DF
0EA5ACCE992DC1754A51C9E754A7516E6BB43756CE0D57AB3743F1383986C413
CBF283AA4E1B6102C1BD67947A26CFD7EE20738DE07BF2CB6AB91D17C5793A8F
9EDC7D517D34D446F595922BD7808486EEBA91ABBDD22AB691F10EE359EA6416
D91C6242C4360EBB285D67AD938F9760EC7B1C8357BFC56893182C034354025F
579EBBD7756CFD54770E2A8D81BD4618D916A30EC70A2820FF8BCFDF1D312FC0
FC0162F47FB4D8D9034DC372AC092A285AF9574D6391C93B9713965E23926938
5CA5768AA9E2269D0AF9511B662551A7BD6FC76D56FA085B9D03597AC3B18B05
B7D271BEF9B8173A6C4FD7CC1A7DD250065F3ECA5C4583845A6E0F89C9EDC01A
2BDEEB2DCCD7C4B742DC3CF9CAC9D7E3D281E9C4D8F06157BA1886575C811579
6C7219F735AF881487B2FA06455E229C987A128F53C951E0B6FC5784C0641D8C
184CEB4720D0667DC444D6342205506A827D221CE29FE3BBCB8F8C473E706670
E11E5B221716F315EF71B1BD379B921472ECF6A74E4F91ACD9CA3A9E3272B732
FE47125A978188BE51817493916FF8631ACFFEE739911B5115C55F586AC878E9
3ACF922740010524EBD4418504BD590495999743DC93548B508AF12F8F87B3B8
DF640A796F4BE9068BE20BDE45E6C67C0DCBE8B0B5BF7C93F1B7E133F3CE574A
44A0C8B129D35D98FB8BD3752C4D8262B3A63678DE755F6E855A0BB35230D2CF
1061C0A4F32D2E1B5DB23604BD9F35A475A18BC542F4C133C983A7ECD8035B23
F1E7A54DDC21C7EB628C92CDBDA71AB74F4C0080D01D403CC40C5F2BE920062F
3134B718ABC713CD4980926D5D59A16EF801BB561BA4911856E6FBE44BB55D0F
A449D50FD597907A384C9FD272CE6A23BADE0C292EBDA186ED57103EF1ED0381
E6A9265A50B26EBF1F89DC8F6F167C7C0337ACABA0DA832CD6120D4B91180003
EC08809DB77EFF2D9DBE70F640BEB821AD49E34383E63C474FB5CE9ADE8477F3
4792BD162749C314D594FE010F5579CE5B0BF869496C6371D0BD7D4BFF18FCA0
26ED9198EFA532611124C1ED36412675F5F4318CAC46D81EE9DBC083DC816FC9
781920DB814A21D91BC155B6D5F82104647E760C79F439991C63056127ED4D28
59289F8BB82D3A6C8A7A50E77541F028D51DFE90DAD31D9659EF60F5228B5534
0E2A24629ACFF2A9415838E929782942C722FD938553E4DD4D8CDAB64E5B6854
C8C360C2EC89D1463B6F730DACFC3A08F1030FA59036CC97663C43CFAC40E01F
E0A4AEC6BE46E16843AEB54CC147E193AA645A562042FCF094A47C4A7B8CB19F
18FAFB5E3402190ECA32FCF138DA7356ED98D538995E3428BFC013B17DDB2E2C
94F6AA9C0E789C10C4F1C387D91872A8CAB9CAEF1FEFD4705788B6A973D80B26
6E73D7B1607126C475C1AD6F74D59A4D335099DD4E0EAF3235F870555151C73A
C15B5F5DCFEBC9E646DC32BF432EF99B3ADE691329CDD52C6E5AE2DDE6E4C5B2
B86F3D720EAF34A23B21D633A8DE130868BF24576A6F2FE1065D8E2C28EF9CDF
EB1B58D658AEF260ECAE3CC92FCFFD5238E0CBFDB92F35DF24E93E5091C48387
2874E7A808C1ECFE3F5D6FD6020A714203096BA75378AB6D8A1FBF65EBE223E5
B29BA13D202A986A83F8A38041FFDFEF721DF89B8E8549C59792AB64D6E3BB3E
ECB240E3B6159BF345AA3D0C556B9475110489EE713EBF7FB11568F6E2837CD1
72746C6A0FC1ED05F3B4E58D306381F18F895B5B8D0BF016F2D5D9C2432E868F
65CF89200D7CCFB61278ADD828089EF086E4953B5084E1283F127001CDFE9BA8
0AE0662CC8798509DE3951CFB4F7FCF83D6D0317D22A2B1DB66460ADA5BC1DE9
B1756B87E79E529806AD12BB2A063BAA5F6716DEED56E6851ABE0157EED11828
87CBE17A5182A91089826FB91AFC16D82DEC6595A65A9B88FCF15F5101283FCD
8C58E9EA56FF8989882581BD3C260BAABF3D1EA0BD12A75C20A81F4E8B047F15
22E83E3381E372A08CC1D01321134FF898A0A12E8DB89E36F7F5B0A94CAE12EC
DE3257FDF8B414714AA5AC45BB154F9C7000CDCFB132BFC68E599B42CFEDF3CB
C58FDD1D097BA40FC36013F72D10A76D590A056E944DB378D1C94D01299D5BAB
910F385E30761CE1F2C2A9796A047097ABB50DA4E4F373268DF6BBC21D79858A
317F6B451A32324247FEC164D1134B436FF6C0C033236C78063FF352EB608E5C
C5972ACB35871A5A1BFEAACECCE033D7C819A127D8BA310F2F4D89A76846AC52
A0985382B755E8E1EA140867AE9F18ADCA267B99EB34CC14A1523DAE4B7F1AA2
21FEDAA7EF3CB4BF46DC809FC1530286C5CDB6A137F0AB9D17E5D43EB64EE410
DD1E2315CB9B8F28C783AC1BB409A4D2AC51C1A7A676DAEF3F9C211A43A69BC2
8C758187F3541CC4041A1643FCA2C241FAAABBF15262C1A43A66515B6F68B8D2
F335A09274B465505F01A48D4A9BF702FBBFAFE820045FCDA9C3F53F7DE2638C
9F406880E020B055B7BDF771B9B92E9243C2A0366D689A387860ABD146D1EC35
ABABA9E6D9049917DF5C73D9C2F5DB95BF39F93454408025D6C20C3945223541
E476A824AFD5399B98A6E4BACAEE7F9D74BCAEA064FF0B8DD2D1F2D6625F6F4E
E643D41012663331DD1F45EFEE804E31EC370C387A51060439E2D46A71B6314B
6BFF7BED03B2A4117B51725581C9A8588F40B0DFC917CA83C8F78B5447C9BE0E
CE9C5F1A8639C48BEA587228798053F721D47589BDCDA5F09AA3F870CF8F9E14
8A24BEB4D0024241928CB9749A5C40BF7359B427247E8ED9A0FAA84EF1D34B73
2FDB82279BC38CC0BABFA23BF1AE2A212AE78900F84A1492026341517CA5C7AD
B5AED14977775AF3D76FFB0F774504BB71E5A2B3D2D8E609C8AFB6ABDC7E7A51
77EE177B4C6ECA54ADA164C679806DAE6263A151589E6D77B705A070057AC70D
D44E55E3ED776B38B8AD5852636852BC323A5067457FD0AB9099C6018A6AEB19
5E5FB218CCB9BCCB19F2D459085CD4FFC3F241643E5720DE0C67B794A9A240E3
7FF87F0DC3DAB6E5B6A3D3943F1C46F99759A63417CF2B9F89EBEEE945E3C2BD
A20F5DF36C6A3E81A44192FCC4E35D3D64B3DBE9C62E8754B67AA300B2119D1E
D0C8624DDE09F1903E3188D10522BEEDD51A56242985A36A9540D8C4CEFC8706
F013C9EAB7B23ADCCAB02F0EDAE1C5F08AA74777F7AAE75EDCD7911D59EEE15E
42E648D3B557684866E4E93F2567F6E652D0D238B33C172B2F307909735892BE
E59F461C0F10B03EF6D0BF4EF2AF1F1268F34963237587C2DAA25367B4486A18
8E8109F7A4ABA73E0BE3252DAF637E34C7C7607B9AEF29429F1BBBE934CA933A
821261825604C4780F19AA40AB07B468952845E2477B9D6E3EB20C0664E00D02
B234306F583C240AC6C9D6994F4E2DDC320D33939FC99F08321996E4B4C7AFA2
EF769FC364F6D64E30009BF38C3CB7E34FF0AA416DCB3587B7386527D9F0820D
5E64A6DBA03FFDA78AF24DDE8B730F77B65C18D0CE443B7887F8BF27E86C7BA8
6A23D162F605154BBC66DD521FE18C8F94ECC2CB879467E03EF0D5B61523B148
410A91535406992773ED6353102F8BF8C44B12722B18FB0DA9D54BB66EB4D224
26E8F8EFFB3907E17F3E614D5CDFF6C1553DE6438490BBB87163F75709197D6A
6618A25D35A68FC1DA2BE0520C817DE89C6F74B5D7FAA7A8BB1CAC487597B422
43E80FC39B571C287ADA077ABE9C0C257742A9A1E579960A6DBC271C3A18B1E7
54968C007273236235DCB677B86A0E6C07B7CD059A67532316B5EE92618CA6DA
6DF58E3C6206DCC98688489A95A2FCD610EE461C293D0B06207094628DE5F865
F23AF85086AE75EB71B26E5EE7EF737723F8573D72259ACD9A834DD6CBEB2447
7DAF2833DC0C086255C8346CEB9DFDD5C4B4A9B57EC64674053C405710C7DC3E
B35D797572B40418A2B9D4D40B2E7EFCF06CFAC92F64B47E0F5E484687FD321D
5478A384133AF97E215ED846967AD19374345EDFD77213BD9E7A543E3813B9EA
A003D85BEF9851A2B977EE2CB8F54AA91B9158E6A83008897AF9EDCA74EAC4A7
C148ED347FE58E87C796A9ACEA87461D7020CB3E28C77168C304C9073E548A71
6305AA4DE200A20CCF728572729347D46532AEAE75C22EC18BA1A27BB582A47F
91F833B86E521AE4A27D1B49F80A2838F1736BC19D64A67975480D2D360E1B12
2F78CB07C9646A32A63137449368DFAE2D11777CE849E399903F22045BD3E7AC
2F3706DE2348DD5021BF1E7AB272010FBF877219F98DA6410B52C43935F0EC87
8CC39E53BCAA5D91CE6B77EB5686207366AA787707E7EF476F6BCF40E6D5E3CF
3E11CF4DB4DA332F0C09645C3DE1FD0934E6F6072856E5FCDDD61FFF610AA097
92851F1CC40481CE10AD2F01859B7E8EC82C0CFDC1F4B3AEA7174C82D871AA92
1E9D602C26CDC865C5E1B9AA227CF7FB1C5482C92E397A056D20AD4530163AD0
C18D69457DC9D99F3AA588375E4E599D4BBF0087D74E9B790D1B8941F2231F98
3A5659687C776DC425DB95AFF197C114E44890063E1480D216CC2F7930B099A6
702B3ED47D7034A368ECC701D78EDE200B853F2BD3970E1D2FF414F129F581B9
AF4ED1EEE8BBB17DB2A75161DD7864FE3FFC0A76A8307EA1964B918FBE1D85CE
4C60652AD0FD8A78B7D1B9F0888E40B56E304338660690E81647E2365DE22737
0754FD05B125C6AD2195C2B5B43E2F82A4A3C11E3D0B5706C714D5AD838AEB49
654C7418158A76795D6DFA4052D2F54D635090EB5EC5EDC07EABA381922B025F
3BE06353E174F4D16E982BBA9CCC8121528F01CD079100143DB7EC787CDBDEC4
404AB35E9BA1BA500D56EDD98F1D35CD33DAA95F6A0347F5EDFAB4A770E12C16
1C38667F19F8BECD31F9EC945C2FE63B67A88E36FA9F5E0BA101215F74FC36D2
0927D798C682D50DB8E5A6F09750BAE652F4E11384A38D20A6154443551B044A
FEE8E597B2D385F9CD52178B0F061F29073905F78EB150516E6000FCD21F913D
C52AC51FA920A75A3B373F3E97D2A713F290984984FA68E3880F1C77C3E72A5B
7F902B1759909853078D7934D71EB1ECAEFBCB6717CDDC9E563227E92146A2C5
A795C7D6255655346290E9BC6A3AF568D23E27051E4F48500186B689B1D54232
CB7CFE77C3626579C9F9013A2950F7907EA2060FDE5C2BFA14F4094F43FD71CC
6EC5E0E0F3D0D97BE10DDD01CBAF95FC11A2784555C73E25323DB90095C7AA67
EB1FDA18DB6862F4DDBD097D9E1D4C0AA144E7597878C3D87A08111DAB9143F3
71B3E043D1ECA2EBFDD55C02DFDA4A042D5081FCE044A2885F2D8B4AE2624193
3F98D7895503222B5A8FD450A165C28DEE2ACFCA5C5ABB6496161F4A977C89AB
CCA58DF866A3EE6241171E004ECEB3B72198FB2E91E47994E1167227659A90BD
7D0095D898E517970CB5E01CFF291060A07FA5AD963BD7940750BE7C0F4A1E0C
C1F2F6C0B2D7A3BA8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7553D790FA71F25D11EAB33FF45E1B21F7333E36B945FBF1C7796E9D08D
7E6119989A5840C7CBB8AB46892A1DBB8C726D4FC625BC7DF11D303554BA0619
A03BA787077027CD78A8D5B462AF949CEA622545F27AA85CB17A31EF4DE6220D
2ACBA3F62B13EC3FC7D3BE92C6BFECCDA58B45AAF06EBD411D33763AD88B2F4F
64AC0D26831B8BFECF1CAEB9040A2CD851E32747B67B849FE470BE165E630267
9FF51EEBB6AD8DD4B694B9C15EF4F47949304B227E72F97D2BF0D971F17328EE
5B5FD0E3324A6386FE092ADD67408F4EB05B5826C737D5DDD2424819722BD654
8366A9BECC92DF1193356A9BD6EF3C537E31B13C79D48C268E4F0F874BAFA1DA
0BC55AB5E3BD00E8D87447B4999BC72F7ECC8C1AF78C09352BB810ED
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/UniqueID 5000795 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 22 /macron put
dup 28 /oslash put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
B5768B77E7B2B812E8C804239B23202AF0EAACB83E7A32BF32493421CE4EDA74
808C7F2D0818FA5CC7B9DE5158BC7A1B7A9C7B95BD29B01BC1DEB37D4EC57C01
38AE5277D067BF0242AD7D07C2EF591D6C3EE87A9D65A57C287DAAF60FDA68A2
1ADE7E7A457B95C7BC603CD8D9A6BD66548E5BB2167E415C21463C22C4459A92
374A9BF3C35E2A4FE2658D8835158A2BE0E39E2553001E83367987705ADB7596
D0E268828757AFC19E45C3C949A68C4F8F52F0A87021F773E844F7E60E12E4EF
FDC0700FA116E97797ADCF647FCA726B45639F0B4AF5301BBBEABDA877B61551
06DFA3A34871D5052A8040E24A0FC633249D6E1029ECC74140F92019D3A4D67D
7D0186BC088472F9AF3FF96F84A4F10B85CCE0523FDC03195150520562569A4F
759C19F18AE2B1D3EFC99FBAB842505A271AC436ECDB011BBF4135345EEBC59D
4DD62A5641C329491CA0DDD0B4F6F1C133040301738DFFC58125250C5C9AFBB0
23620F63634ABB5F588236986304E2EE55E409576082C624255E2F2BC4442798
11780FAFB11012E0240B1959C29E6F0B9BB66DF5E216BDC3DA0F0C5F83555CB5
CC963B8BF85753A2398DE757DEA0A0537FF08035C5EF489B53E07FEE484D8A9E
B2C7BC13FD78E57338BB299F54CE3F18F0B2EE69369FB581A22BEA81F9C2737F
FE2D1867C15F51895EADB45B46C446F5CC5B7F2DA556AD4E4F644408A0A613D3
FF472818BCC16F00366FE33B9DE1B2028E7E332DE2603E0FB848AEBF173245DD
885A975F9B643144C838F266FE5A69BCF72E4FE6D36D9370B03DF186AC6BC4AB
758C735EE2DF3D56002D2552845094ACA33A245E1B9BB3D22B8AC97956BCDE0C
52D8225FDDC6509D56CE007EBDA7CE394058856D7372F004C9C713C2C9E2EB68
3E27A2A6C2D61C60F34D54D9C94EE55A770623161014A889CE51719663B45877
B39275DF978060BB97BC76CA557E5BE8E9CA3A1FE515E34A44F0179EC571992E
20B91339963A90B2CDC638CE9C30D9F8282DCB6B1130765CA64A06E4B1FEB97D
A4C4F01FA183F99E231F5ED40BEE0C7B910B85147941724A4F416D32D42D0E79
45C7131E3628A8741503EA33C049AEF1EF9EE87D287B90E67F3E66C138ED90EC
D7D1B10FD9372A5FE7558C1753FBBE5AAF9699E4D4A1E908DC3DC098C344149F
9AE570B950AE3791BAD0AF618A9BF2414B0FF019D53444222F1F30547CE624E9
E8EB609744E893D050A6FC11F370681605930229858744ADFA478AB79C2D90BA
DC89520302460AE07B1EAE50EF107F5BD0703758E55B987333930D56F2BB8FEC
736B9C862B51692DA54B32ACFBC93D0A77013DF60C93B2CA28528E91F6480270
6C7FC9F80C33C4C75FA27D5D4C5768AB630D2316AFF21A2D5F4601275A4E2273
A84CFDA73FB2B0717CBB913E21099E45F2C08259476348AA464D7169A8E1B5F4
A4B705FA812DF0B23EAF80BDEA1D63CE44C9C5134BE38B96BF1008A17E436F10
84C75866BFA9E75AA77274B0CC6228C438E0FC0682982F571E2B3EF1719696C8
CBBE2930ECB2297761BF9439FC78A1B497E03B08BE1501830873DA659D7B5888
6E4FA00323027881AC8DFABE6E54529F4C7052568991199E65D7F6477DD0F23C
C127E5C2122E71109089C34968AF2C6A1CE278AB49854F41D6AB8B027A4EEC5C
635B49B93947DE59E462BAD035739C3A8C629C5C5448FF5D16AFEC42086C990A
2CD1186DD3B4513C01A83BE33584A9B8A868AC6A939EABB9D4FA70EBC8CFF116
DA29B5A7F7CE51CA530A2C7BEBF8EAA7B282F4F0660A63CF0FE6DF345AE32966
4DEF642FC0798D412069EBD17C0367DA5113DC80CBA995F1D964BB2B5E9FC5EB
6BC0F5B4EC8697EAFF6FB50F7524164AF1B9E564A2BFD0E8BB2CA7DF7746B5FF
58842EC8EF33AB19E40E1460D34A15B3D0381C5C48C8B7F8ED3DDA22AE01C332
D0E70BA8FC68F5D6E88F8FA15AF85DDAD0C80DF6AD61CC7F39ED31C825C9EFF4
4E385D31F60CBC4AEBB786218720CAAAE94BB2BC2D37CC885DBD42A339FAF19F
C8FE456D658C7F2EE00D3935B3715A0A1372042E6CC331622022121EAC1CA130
C10187A50C3765942F23214C613C64D65765D44391B11598EC21F99A7AF416C9
5184B47CBFABD256BE67444DA1358C1E3AD77CA7C18AEBA390CEFDD658CF40BD
8D3CCF316961DAA2E5AFBE36EC942204268F21446D5441D15698824184918553
AA3B2DB6BA5B94FE9DF059C55E09F0DE342028A67855171BC0078527DB5D1D2C
2EFFF8FB181322740D38E5A0AD72B620CABA4295BBBFC8A6E0B965595C37E505
231605D53F636613B0D3448D426D2EA27B5A9C65393BE11269C8097FA1641571
F6A606E91B65F24E68CCF76F1EB694F107D814D90FCB643B3EBD5BA689DC4CD2
0B2D02124415DA5CB7FE77DC9B1B08CA642D4A94D8089596AB7A131264585AF0
ABFB5682BC3DCF5B02404C8937B8B2EED6DDC41368DF0DE7517AE55605DBD915
F0D7B0579EE1AE51B012DF26D1CBD818274ABC90779F84350BBAC26A463CB1C5
AD44A426B68939355549A7B666E3400573242FAE3F334CD99103A1C6C852E5F4
EB38CBA85B58C47BE7E167D2C70A88C644793EE169BAAC3FDCE604FEEADAB12D
44C3D344AE2DEC050033145613EE33EEFA86035D12B971C2668632D80E0E7EC1
E04EDC7DBDB7D6A856519421EA8A0A6CBFE9BE22E702346DC8F7EA3E7A796ADF
BA22BD7D0963348B9A7908DBAC7BCA5763E3C092AFE3957CF2AF8C777EB8E4BC
9783121C644F0F4EA43D11D7CBAC68BD44902791A585CDC7BA65F8803156C8AB
D445945E526908569D25F481719CFBB13DEC9F2009AD59AF8C0E0AB0F7A4C24D
5BA041E5430E295400216C409BE36DB528AAE3F27315993921ADC46DE0E36F8D
80DE60C705D212687C98FD2A1171D4170AE64646F900C4B2D9E5B0F42942A397
F7146BE2182166808D8DC0EA7604E1A6A8ECE3BDE5A54F4A57A5EF95344F209F
9251EE254A4EB52FCB7F3EC989B4845D23B2A2BA1F710E9C6E740D311E2B4D53
C41FE442CA198D45C3FC20F0211BDA087E93C939D540B6490B8F16C6BD6388F9
CA089D92A583ABCB2C6145CB6A18C3A842411785C116800366BF0D474959AFAA
ECE80C2327621B8BBF08B23BB1EFB668194C9D1F6A957DAFD77523E213693FA1
EE33629551BBA94ACD1315BB45D26A404C76DD24C2745E833E8E9352AD174716
07BE30875E1302AB70271FB3228349EDB89095BEFDA8B93C363A59C51CE2C724
DCD45BBBB4600A69E302A2A33DF9FE962E0AD7DD147387AFE91E86B28B101598
2F3C09690B6AC1CADBBEDA29C950165AB3CACF0498F3B7A00B7330D218A1A195
1C9B2CE9BCDB93EC220725C756C8886D25E2790874138B9227E4FA17D288F158
428C8E326268930BCBD6F8797FD87D28DB7F69A544212EC5937DED9A9A50EEC5
9D449E69EEFACE7D7A86B550F062AE06847DE770D62F594AA3688166EF6B5457
9F3586986F8120FB1D093C9E25E124432E8BA1D51F13E24C6FA9BECE396E6503
F2A00D6774F312DAFE503C24D279060D7B328D672EFBC807B79109BE95350BA6
26C1C522A63290B348F1657F327DD66697BAB9CE330F0B6ACDD08A25A9E972DC
2284CBC4079A9C748B8E56CF0C8B25355D442ABB5788B9C8A26B0451913D83D4
A22FB1C546D8C064A11CC208766098042F1F7CBAA5EE459313E4AE1B5C8F82EE
E9712A96D5BC9DB27B4D882754C9DED6088C7BF7D57FC1D68A1C441AC6F88332
B5C50524D5257EA763E6159E551743CA8FD1FCE0E9AAE0D0BEB9F65900ACECD7
00D465153A0A7945152C91880C04627B96525560BACB5501A6A856DBDC41858D
A9F1A719552F9D1DF3D2202F140721626D6E68B71588C944F767DA112D800EAF
12115D15DF1829536D7DD026B8936E928700A162D29DF8EDFB3118BDF41692FE
BD454CC474AB135F50B30AC8736DF20D7858585C00548C3133234DE66ED7C8D4
2D3E7ED5A49DB439FA99A71602C42493796405125E2F9EDE0E6080D65454CEDA
FF0FED94E696D5E07E4F08F626159C64DECF60204CC651A8E8A3826FB0DA0327
76467C0440CF4F0702BA23568CF3E8D4C6A3A23168C7C0018C322513F0B653B0
DFDC217076399CE48F346DE10BB102AA2FB86C48938EB4421A0E2D030CBA1894
E59BC4531EB975FBA44D1BAE78856275A5F510158F8AF984C6EC0740C0FFFA3C
5AF736B73D4FD2939382FB4648C9A82B9C98C993C3DB934166002AF2D431A86F
0DE5F1E0E1E6E65DDFFFD489E43AA11A8726A147A0E22E36D4095862AF34A779
1AC566E1532FCDE709A7C1881DD1E5A1083351C4C2FFF826B9A0B32BFC9C8101
56F382D55B8180AE5E1A6C9A4437442F9D309CA763B4A5607D65F4C33CE32191
DCC9CEDF7522949FA6EF76DDE98705C088F1FA0C99F4544674F68F4D0A20C401
8FF57D67EE01A50A9EB1672CDD0D69CD7CD6AEFB637FDF8C5DEA9381CCF96A75
5B242581B987FBE7ACB32BF4A9DD6111BEEA89941A37DE8B5D5FE44787168CD2
122035F6344F2F0F71F50332F6D7A7888C9E0672257A63F1A21830EDB1749F16
7389023CEBD2F051F1B9F55EA544B80DA49728457CF2413B9DBE5359407525D2
0B8ABA00E368CE50AF5A6CA850231D30AA3A811A9E171EBDECBA7F46F5D3E890
47B379EB44D50D2ECBDB35501ADDCF3FEBC4AE53C548F8114261EA436A8D1E70
202FDB6EAFE3F54528E5CC6B5390C7790E04A6DA534612C40F8DECD8B6327AE6
602C829406FEE0104A4279E471346D64C75E2BA70CCCA9DD869319A050ACAB58
DDF382AD1538DCE173DA613908C20547D459F2EEFC5E138A1485BDFB9B703143
36E419EE43B21B351C9BB0AB8ABC90B7EF2FD5C7E751846F503F77732175500B
6FA9FF1F5E26384DCB563E2AC63C8171573BCB41FA6ADB1A60F7CA9CC7EC5ED5
6B94E64A600631B0805891DF01C1F094DECCDD2D97DB8D4097332339725AE59F
EFE54FEF6F8F1C44E37B35EE91EE7A29420AB5C01261D4F80DFF4BC8EACC95AC
16980AD7455731F3331BA59E353F0C9F83FF7C19A93EEF8D51CAD71E1672C275
16113D4CDC0D9CE0D9BD729472E52D3BDDADA6A1EFFB5A2382C0CFBF0C55DCAA
D3F5A98580AFE824705E642CB45DAFB1CB7A5A7DB843B870FFB07F7B5A17D968
CF0EE334272DA55EBE0EED2E30534609070AA601448E439BFB18AFC169F2E87D
FBD5BB3729E73D48E2F7CD48E5FE61260BE7AB151A75FCB4CDECC9C3721303BA
C6D6468F25FBAE17F8BE90A64977091DC5575E5CE7BED75980847C86BD333378
11BEBF1AF984A60B393B04039D1904F1A5BA58A0BF814BD1C46B23C40B6FC8EC
220DE9B3A1E05440CA5FE19A83EFE8C8AE3D4F67182EF9464B37114824263F73
158955ACA9D36647081F3972DDFE6B2CA2FFDB10A37078508054ED23270CCFF9
6C60FA489D6283DD5BDD69C1C6DC16980EB36F541A613CD24EB35B9C84FBE4B9
4ED3D9D2891671931345FE1573517E4D86708355B7C5258593623B1966CFB840
10BCB194E197B75598625089E9468DA19883AE31F3A81E8D933D372F96564398
6673A12EDFA132930D324A195E630717E86A2E3818627D193EB45330FB5A79D6
1DF5CE5EEC91919B298AF7A2F98DC3DA89CA23D8A375C0F441224F5A9BEDF3F6
8F392E22933C0934C594F92A21648F48CC413EDE647D4C1B39B87061DB1EA58E
7BEB2D6A2F9FB14DEBC752296928A2554E45384A68D6C01ADC0CCBAC923EC7FA
A78298CFD820426D7AF8024A21922CE214FF9D083DD399AD2FD2279C1B5DE655
4B21D99546C41650C9EC5B512E9C235A4FA8C22843E41E1D988F6D3C2A3DCE2A
A58B6B8CEBF8B51464C962FB52FAE70EC40B06BDF4D8F107A8B4B7259D29DE53
A2828F552CD64D127ECB4D986D50340CF8324E0D8923303974E75702EF45E351
A8A58E39BB82DCBAB55D678214B924A3ED9DC5ECF8F096E7EC9BC687D169CCCF
9EF7F6035E1E95DF9A5DDD4D46E75D0389254BE34BE2FD67027A6C95FE75F40E
808CBD9629076B4148A4BD8D4506DFE898862A0499D99C7CCFA7339324A3708B
B7A7DF6099EFE0D902A6CAE560F51A1B4A554F386202EEC91D7E1B3A59752F44
BF5D68E4F3C541D99CB40A6BD67BAD7A5420FD77CFAF44705E18A73F3CA17363
C723918D05DA370C455A38D028096E40679AC29970D1BC32561F5567828F2BDD
DD3917BA11452CF265F954D563E2BE79CC7ACCD8BA7A22352E665C298CDE7434
C37A8A08EEDEED86E8F83F392925033BF18E3E0ECE8E72AC4802FC6854BFD26D
FB1271B05A9DF023AA8815D8A3E4FB2C1DBF5C663A49D2A7C1EBE46FFF8570FE
D72259F738A55C7BEF98B8EDE72B238813FFB066A105058DD6AD7C0DCAD8E7AF
BEFDC3C6838AC1204F3413E7D58ADE5FE50CDB3AD5FCEEBDFB4C1919A6F391D8
810E724CC897EB7566D69C837869D4D156A7A77D4D2C7FAB0534978A85BC0BC1
07B367F535961D2637D3325F1F67A24782902EFE62E50DF113FB883180E2EB7A
43DF6C9E9463861957ED6E65F21D6A368999069AC8CDFAF307C559DC576B4F51
7069E79D26F7241349C4F4063C27C388533745F4D415C587E6F33A78FE0FAF29
09585E853A844F4AA736932CBF30A4E6C4D0B43D0EA26B3D7B74FFC963076455
116826206B5F09A94DAAD18C05696DDF6DFAC9D985519E8E4EB36CC6689268B1
89A76CF3847DA0DC643F889D317A20FAF553A53E7FA1CF4A585E722570147A3C
B545A4BFECB00AA45DA74964F6DC11235C6BB2B912C4CBE60014985BCFFBE589
E56E392241AD6D1095D4BD0425331705C233BD19F3DDC5FE60104C16092B2CEF
236EDC82AD6E11E67BBEF5D99C837830D87E93C7C21C08D93533DAB1FB1F2007
88717E9DAC5A116041A4430687E930C8FD8998742469E9EF21120EAB81CE9DD2
BDDA8D477C8DC5514B603F9EAFBA8C0D02A6D5178888C1ADC7B6FC1FAABFE2CD
724C0457FC83EE9D0ED8B1BC34A1076E082066E24A2D7F81885124F30B4F87FB
0D7A375695F0B1DDA1B25DBB657D66B683C75C00237CA2DAB9CC3481C434CACB
F7DA77FD1270DE1A2BB0C5124684F7C076E5C6252DB25C938C4ABA90CC790D46
F6998B6E80177D923E65FE08280BF81E6556F16D9596B0BBEE91F2185C579F97
EADDF0C8D3DF6A3BACE69B9DCD3BA2A53E15CA76457800545331C3991F00D000
B80A1FC89AF8AB8B1762030E05D3327E8831E75FDE4E9C5360F84272D35409FC
4A89127DAC1CDA4E774B8560F20BA2665B718F9D9BD99D89A5581957F2D88406
216A56E919DA96ECD049580665DE246823EF865783895330059ADD2CD859FF0D
ECC6D67E7B04F55E2B45152DEEEC1945C6FD411133705914868D079EDC1E90B4
EF4988B3DCFC9E38746DD24A3B2534E06BC1D2E88C223D7D7E1D061D68FB368D
1617BE8FBC019691CAD401BD325BB48D8E3201F902E0DE0B2754A2AF6822073D
9C82868C73D68B26BAF9A7005BC46E9305499F3EF2274B7C66E2DC7F9277B4DC
5F8CD3B95D445D8A44B451DC7397F43018F535408A9281E0F20CAC66F288F86A
BCF088B526B75DC14751280EB7ECBF45D0E23EE75B9F15D1851BAA4F4AB5E8B1
E64B46E672081772615F203A946C2DA6C276474EBECF43A8C1418F1CAB944AE2
CD218BB4AA1850E5D4DBECE21E7B98A42D720BCFDF15A276E6C706F0E9F18569
8D3153F367FE78A76C750D39447939C1F4A2C2FC1F80670863B37B84ADF9713E
1EAE2960507482C6810AA639B54A2B2D41B0042555AA984462B40046013A6AF7
B4B870D0E2FBD4D10695AB6E6D054107B14B15A06320DD97EADDAED4D8FAE0EF
47CC42957DC282FC97EB1FCF64B5427150B5898910475C911934840DF63D2501
86F29777391E00893FB68CE07230A6E0B213C72AB73D6F7C9EAA0BF358DD5DEA
A97BC86C944EFEAB681AE34377E2214E5759E7E680044F55D3311ADB13423576
1249A7584550F93CF34E55ABFB3FAB7B312B4EF1D4E003D5431B1AA6600CF65B
3A02EF8A27062BED88E9D3D7E659CC20C54D22D22ACB5689E56165DF3811FD9F
A7F26465897C18A885010F57DB99CEEB1648035899084509D119618F75D0EC7A
FC48A78FC7BBE3E5167DCAE3020451DB2E79AD88EAF49C45C58802B832E47059
195B13C3214BDF5F35101C01469F97E67B2FE105D5A4613A272BE0F9B1907520
DE1BB27BE12C20FC4BC8CC46A1FC0BCC6AF91D60EC72DC22DA2E1E186D42570E
BC82E2FEE6C782AC323A8296350CA4382200A78FC1018A0C4CC5D5B1B48F9064
F52689B4CDD87FB74C5B7FBDD9E86F80C66059E36B35AEDEF77F1FA2A4E164AB
466AFEB50DE7BA4A7F7F36EB1DCCD75541D8A6F5EE3F20C625861C88E9673634
CBF4F6A309EC1313B5A6AFBB7CFE710824E0A421C599FBE779D215BEDABA8314
A34CDA355F1A10AE453F1C56E2ED0F33E6C25A63457E25A9A7A260F55FC3C61E
116A5A11D3CDDAB23C16D9581919CBB72C976433BD08078264C2B07973757FCF
45D9CA28E79874EC0C730566B446749D43F515587AE558619E0D88D721482B27
1929E7622DD2B7FD26CBEFEFEF5C56E04D01B70518D78195258526192BB49FDF
382B8A5995380C62124A568B630ED4FCCD11BA85C48FF9AB9020C8E25B4ECDB6
9DE8879EA81356A3D113462611FEDF05B5FEE5FFD91C55E69985F569380FF905
BB306AE63670D4B8FCC07878FB1564200E5B4092E0C752516069F28F0B071D5F
C784676F6D0AE07DC67557C0B28471EE54E749B1E42710B735252FAFF0193826
BA607BC97BCFA566379CB45EEB7B3027F9A3D8D469FB67A9D0749E2E0EEBAF37
8244531F4C49D09CFD24EC9CAAFD6DAE8AF969F720777FED405E3CD7F8D11482
A0DFA933B1B60B3B967592392DDB1BC7D7D1013CA04B3EB390C5D7A95C6A1005
E8C9EEA41031DB676C775F962CE22173BE208E4B751A032E0428E83AFCF8A924
27BCC37C82F727FE4C5ED379FA1B1DC28C11C63EB36FF4F8070645B92AAD646F
4F0D031707FDC11DA6D3B6C8118A10876CA3E45F55287BCC0FF67E176287C00D
FEC22EE2825A04431C5C8719DA889DF3851B1687731B0A1E27F3B25409780701
6C7042DDFF33A95468D7A46F881FF8BD4E994300D3E534D01EEC3B03E251C272
24AC1AD1F3FD04C19D384C6FB11EC234A4DCFFB34E95EBB2E904B98A0DF05BDE
3F4FD05B15425FC2EA903224464C01B7C7B952DDE630905F35138D791AED86A4
FC121CCB2710C6D3DFC8A3B50A8063218D6589A93D05B08203C3D36ABC4F492D
BE8C26164FBE69E3B8625ADD081C31341FFD5EE5DFDBF82D789AC80CEB79613A
F8D6487E993188144CB4781C3AD6795626A4AD6BA8C56E5D2DFA45846A24E857
A22F9E7DC3953FAC90A0B75592E73C61A2DC1F8D18B21A2BCDD1F6192E91DF46
BF851A15AD6CFECB6D878960CABFD86CD878E0ABCB1D6BC02C2771FCED40974F
A7278CF0D4FE914094EE81B865757EC5D3BAD16434F98537EB5000656A277673
0176C3FD84F5796916DF67A55147991E3333208B70606AB3DFC562B761F7D1F0
8289F0E83520C3BAF1875ED561E0573DB437C846EF64DD4E10F76128666267EE
938D8D13FFA1AB2E391D69A32FE49BA1A40850D501BA0403B3D174DAC50B4BD9
247F4B8C13F68E48BAE40305276F7B6D075F8C6D3C925B857A5606152631CFB7
0E3D262838E08EA4BD5FCB045078537D3FF311EA0FEA2C383832A6A391689B46
E4698E38819F25F71862E2F335A25BE828ADB0665C06B1626A3528AC9CF35235
8119E9105114D66FDE043D2A392D7F89A901561CC84AD76F157A12D6C983E90E
FE672A7FF6FCB9AFBE80B36C563DDFC9BA63D9F5728EF8028948C1C617B5CBE8
20743BB3E8F3B92B63E68708C7B88DEA2D8448572445FA936068EDE78C8B3DEE
B0083A74A50C7D64A23ED50CA3AEAB62B06EA91DDD5A49567FD1248BE045CB20
4AD08D966896F4E7422517FB3D3AE86919B4E718D378DECD34D861F443DEE331
A77F5E50E9006252654C62F431EA6CA323FC15E87B0764E4FD2BAD89E0F3F1D1
BD2B60FB513C98F9FD31D2912D4B06BC2EE8B89B470CEF412FA8133C55F4D193
E8734BB01EF75138BC81C3D4F3088F74AD19CFB6958479867ECEC800C3E37473
4657DD326E58FE258D0ED88328C2C8696591F75969F24104285617D00287FA43
22DA74842C8D0B462B8EEE629B23720E10CDF18A63B0A90F0EDBEBD40A88C0B6
A9D5DEDE13DE40C492F103635103BE365E142BEFF30521265C6524CE14C557FE
EA03893A8FF6F2C8E88198FE29F221F53ABB579157F74AAEF80670CE6C2FC29D
9AE36DA5B4ADEABFBDB7FD8AF98A59BFDD92C1A0B9BDE8A06F1427155B4DD5B0
38B9F93A0A8E5BF206EB1CC132DD81DC901DA15FC8C3555B5FC96FCE3A94DB51
918162B77DF079DE07E710DD5A44094DC37D450D7FE988B51422FB7E14342014
09A34E1BB5CA28BB3B71C024B6B5C6D403BD44E9DC070ACB7F40DDCC2E54A9BB
21FC33F167F04C908137B1E84C46C7871257253BD2BD9FAA82E66B47C5A5DFF9
3CD407FDCE1DF9067CBC0F18889D95A490E5CC3FD4667D11F363AC0F6A50C740
D96C8E5E92C9897E3B03DD491E4A5E112DAB86C4BF6A936439E3B67CC9DEBF78
709B46492B37584CC74F8951592873898977BED3215123719BF13E10CA05C332
E7007F279AD80D394D7EF73741BD3087CDA35F82A42D81CFE16E6E1F0F97A5DE
31A44D8F7740171FF83BE8207F4F86F1E2703DF8E7A73254DE62BE6443F608D8
EC7E5D9115FE16D891A76F009992EB536953BF0B7450D9C6CEAD40BC704E3781
CE1A5F851C18117BB63E7AC1B7185F2B0D262AF563D16F61903BBC29F3505AF7
9D9030CB0A0A68389FDE6F4395EF72D6A2468AA85CC43FD286CE63ADA77AE2C7
F6D040035B865B877099C483197D4F604FC0E71E84232CB9598ACEB242F4E653
018BC26A876B83A31DE652DC6D70B11A2A81F2D52A8FFE88207F2AE3B6C661A9
928144BE57438A27D18E984B9985C7DF45E688939B1BF56E326197771D48995B
EFC8FE20B4D6E35DA40FE9D642CDD430B499E8C404F95E61B155327816CBAD32
573E2A8DE6363536FB3D73D769DD31A417D731491DAD621252821C3E449BE65C
19DA40D85FC62583AB3BA7EEA69AC634184EC19B0969586E06670BB61A7F20FE
EC06E07A32ABF43B5E14278DB984802B6EEBE8A1EEB1755671B22FDFC4397881
E94799F0DADE270DE3F030CE16620F303722C0B6AC738AAB6E2A3D56973D8E43
67398695A32E2F57F54D3438ECB7750B38DC0545EF9849F0021B66FB455D7153
1ADC9A0947445555FBFCD5EA29C62BFBF057BD9A41B4281D34741D0641301552
BB0E18632375BAD8107AB883DA386408D80F0D7F297C904D006B626F7BAF33F9
64CF79A0E56FB3BC91BFC406F0ED76319B4D79BA33F7AA87AA6574BC96F7B532
647689F1F2B95A8942BBC5FA2AE6538924ADF74EA368AB4BB5143838B7D173C4
37EF37E9BB2E436FE14AFC17E1AEE94D2560BE226652F8326562E0E191BDE6E8
4144828D969F7B55CC6A7A73A707BDCE1132BFEA0DCB76B8F1EB9DBABA19B105
BE520485325CCE0845EFA3655ABEC9DAB5F378266C453433FFDCAEFC5A693478
64FD0085B2540B104CA6C8EE50B619CECE47F82DBB0CFD07D91F2528E74FB7DD
2620BA80EDBA38BEAAA6D87458CCF2CB34A3594F3A130C31339BE1F02BC56C87
FE7F1829470BB575F25E6597526B7E1D69FD8AB0F1CA452C1189DFB8DF6AF9B7
1D150B2ADA77894FF3CFB4DDC0E6F4EF34D4C4202C359BAE6DD1DC616F918FCE
760510F93D84D67398E89E8003EC6A46E3FA225904D53B2FAE087E07ACAC7A07
1C12F164FADA2888A023CEB6E1C4EB42769FEDB67AF5E7289DA96606E0050118
61E93FDCE8BE25A7DE3639EFDA5EC21579917F0C8E824BF8D1159C33CDD6AA5A
358F2F94981DC5C0673240837C176260C1B83FE13D3DCD0209FC7B95319AE1F9
B3359859466403608C6E3D7C7E8ACA58640CA14A71FE2BCB757ACB8027C00974
A877AA243021175457EB7428C1486D6B0646AFBEE8B0F970B1BCD803C3080A4D
BEDE97588867B4CFF1C033B7077B91D2923021570201387F7CF30F8F5539610E
D84D0A186625A2706BE4AA343750CC25D5541FE8D7374CB6B19961E47DE439F9
652D132D2183D62EDD138A74EAB09A1CB15500C5A081706B83E793321039641A
EF85BC1EA734EB6CB69E85C1A7F69DE75222DFD5FB573EDF516219B560289041
3A14B940696AEDFA2F464597CCD5250438A140BC328185485D50EA7E3B32A4F0
54B3266399C2B60D6B35398F63DBE1E8236FC6E723D30FA0367D71A2C242D04D
369B07519A1AF7920ED6AA5CA1A08784E6A0C8ACDDB866A37260D99BA1F08D99
8354F5F02709D01C61024B5FF57423204CDE7EFE520AB69F43231199B524CA71
3E350E38FDFC0841F8E8D1D016333B3969C4E4F8B9BC78C236693B02F78C78B8
A7B8CBFC7716BDF5F88E3F30118EBB09457C5EE757E51EAC3D35A3AAF9342FF5
46F455134E51AE9F38B9166DAC2805ADA297BBA59EEF99F19C339DF0E11DC7ED
03787345FE59E7E333CBB31E3636232B33D03B85488A3E94694FDE3872C9D58C
DB5055CFD42ADB96A77ED3117D15F9BEFB53F8234611CB8A33CE41CCFFF965C1
B98CA4B1DCC330FA2F2EEBE957A7590FF71DEB87A52E96AE7B58F114445D62D8
3BA7D3ADEAEF3B978AA34D466F98D855599B054F16B15C6F8D22B0401110CAD7
33AAF4F1D29950138AD734481FFE10651EA013F1C4912988B28C8DE0274C39BE
48B4592E21D28040FC6428D477DC42C78ECFFEAE71DBCFBFC2A21F03CB53970C
84D8D3C68803D45402F45ACB9892A16E8AE2275E83D12A51A7139BF917236A07
7FEF6F1728A0288CD1AE6C5E50B86DD16C69E50DA732CCC355F8675A809977E1
21252091138C64807D8A6779B86A03B39DCE6DCF66C1667BC47AA7E74D133376
FB870667FACD2181365EE2254C3B173EE0F81FF3DF81036FB169AC1BC91BC2BB
E4FE6F87CAA4981325237610203A68CCC1ACC841260C05E77D520214FC5C67A5
3A0C19250103864BEA1C6F4646528E5C59F30CAA5656BD532A970FF931F57CF6
991C0E6772FDB06ADF98D48F905E1358DD473224E8C9981B12B0921540E73FE1
9EFBBF8ECBB3A105DA600BA7A3CC0B9DC80E931311E2ACFA5E184432559881F7
A8F3D1DDF185DD6F13E7EC5E9C7C0E57D61F69568A56E2DCF200B6B60A06843C
65A2C35E33611142E748D6DEBC90EFB00BA06EA422CD2AADBB6FD18108E2A9A6
22B176E3BC045D38DD6F3F6FDFF63C8C27BF966F844EBBBB689822EF32B9655A
D4000429C0B47B892D2142FDFF605D978AB1A40C6A8F5C2715E48482175D8505
1C167DB9D7164CAE4CC6B6E77039C5D9E050A95374921178CE0545727E41B33E
821C60BE92FC109B2B38EF2B79684145964282B2CAFD92C262AA279C04BD6935
B2BD05A6B67EECBC6843E38DF6D0ACB5E07A807ABB249FB2C80AB84BA7EF01DF
750D445B7D3A2A4C86B8419D1E7D1F56830A531DC8A3638F416251A4B62DFF42
F23F4D0EB98B1451C8462478C28CE38B458F11F0B69A4D3BC26500991512400D
92B7E87A367050F84C6C4F3F37EA79F5E094B743BF065254ACCFE9C5A901391A
4DD6AEC67168AE1F80A4113C7D5450168364FE520C2AF877FE24AA368EA9D4F2
52AF70DB23BB61CD41DFBAB86441F994D6D04687B8DA91459714D3B41E06CF6F
C89D73589221638E68E22776D9119ABC4BB75F51614147EBF5FEDD2CE2A493C2
177DE0A2814C2E8AD4113DFCE4415447986EB42D9529C1FB296B1F37531AAEC4
68030D5BD1F194DC4B5C00127319B8DDC073FF21AFF581D40705C91416BA332D
B86CC2D01EE1E62B40800ACD3BBD7258038A7AA81110E24E78A18E28F0316031
9A5FFD9033E7585817DFA61E9DAF63036FBF098CDC38A8A385469C3553D54C3B
037E1F0BDE4EF8CB66D34957AAEDDB4D1A73E79F7D97C54E9C15D46E736BA394
FF21EAB4BA9ACAA0C0E39CC4988320A0903BBFE33D21EA1AE7117A767F2DA8F8
70C130EE3258C601BFC868699FD5E59934210937C471D663510E2D94B6100F0D
3F10EC326989637EDCC5C1EDDBA8610E9B355855C34C35243DDD9005C88FB16D
2320640CC815997F9215A7E9953DA77D1F9DAF421BC357754093C51EBCC01778
F410B12655AAE72B893A2A37588DB82081EC97F4B4256D2B1D2D1B428065AB16
597F2A0CB9E02CCCE4B4D370D32CF3A54C91884D9962EBE92BFED032E025F9AB
F5D455C21D257A35A548A80F15C801F3BF470C1AD8B6458078B485D7FF384C9A
ACB32BD7AD32B20B5AD1F8FD3EA3E859746A956BB4ACD67B0D692396734D9A1D
2C2B87BF2FF0DFF2FCEC515765553133C89A78712E98AC26A8D2EC9E8A7CB45F
71AA5D325E29F1931A004EB62AFABE5E647806A8099F5E23AA461F3E77C3BD1A
DD8B184598186C611ADBEC7FC923E084CBA5D4B5A589EB2A1812B6E080100A4A
2E4A5BFDC8AF2733790E3C641883AD2341D9637E67E0A2DF636A778CABE00B88
467941B5EFB26DBD933603007BFC97586E93934B1697E209DBF1120D67D3D825
421238E8A207946E2F56A327A6E2D72794A014FC5C282404F121C5842C55888C
9EF61DD7C7EE5F015B1B012355B6F505644E99B8B7238A516F532906B0B5B963
3A5EB763F60C4FB25003912ADCB25856632D06F5B9E180298292AE8F1701D1D6
D79E78F089CE07CF2461D7E19BAC23599B91E5C4B3C8DBB9A426D2FDE200E455
946C103D44CC6A7EA03B1D62D50A4DF967C84EAD2784C3C8928F24A25FFE50C8
A0AC06C594876C0BD69971C6B1B3FDA97F11EE9663B264125661F8957E35AAC0
9E2D2EC4169223073042EE40B4E759AAA017D8AC35476F3435E684F2C4E7E472
624DB75973C08861627BABC4737FC72F1215741A118E76BC310839EAFDA66DBF
8FC182D0745FFE29DF62BD09096683C24D522991A26A16C71409CF29BECFA4F5
A5F21AC1D092C2BFCEF454B8157FB009548D8D9E7B4153CA9BBE49709F941222
113A3320B8666D97B4E488BDF4D144748ED15C9F3599CF42A0EB80D64A834886
B2F0E046BEB6402459C54E4AC7788D90999BD610E7D53F1E3CF73CB586A28B98
8E1689D9A795DD5410F150C0D4D812E40C0E76FCEC31096BA8AE80522F114470
FFBB94DD887DCA1B847EB4CC44FD68B1E83AC2FA8E4FC0E8CB697CF4242D49A1
8BD95E07F21308B9B2DD514EEDC7E2AB5DBAE12E8ED45D2F5FEFEAFF691DE7C0
800746569A49A9624ED567FCE703416F82193446F52EE96E726BFE2516F293CD
59FA8C3E0B1B07926BED96F247A0462C819F52D0B05AC6BA7F9B90228FF1BC8E
50BB4758EDD41C169C352F19B5B20242129936E8F2F6B302450B0798E5741D58
605D7928152000F2FBF95449D27DACEAC77C012E3F7A4ECD3513F6AA6D8B979D
22EFED6E415BDF653E228AE3A37E9EA6ECF959D7E1A2BAA8CA30DB7D718C48F8
2B036C3965097D3DE3095BCB1A5A38F8DD56C0867AE2471C93412D0D430263A7
B9049E87B4D1A8521EE584718DDBA0D5FCFD470AFDFD7EF37F62672CD5EC7FA6
38E93073F4D0143404CEA0ECD6C3EC21069C3013FF4C1C1B045FBD7232ED98AF
C341EB8872EE5C1AA5B482C5D9F9E9470F3406130AFB18F394F695287F2F7583
C651E61ADF47B3FFDCE6292D02BF62C737DDA2CA9CC2D0BEA06143E2C4B9EB0F
1C32B2FEEA35DB8E9D4AC3F2A568ED1573E738B0E870ACE9972D07B7FAA4C661
6075A7CAD65F0B8E6AA66E4F83CDE9E1294502B95BB28496D9CB091B1C9FA0B4
F31C5768C30B6C631F521BCE39213741163182B290088701E7465B91EA9D9551
094EF811068099A0B1B87221BCB0A9EDE54A77523DB5CCB556C9D25CDB29FC08
E0BD549A49ED4F69A61A3921CCDC64BF152C87141F8076B692F09A8B25EDF01F
CCC7F539976256ADCEB395E4FD745110B5B5D39183C2499AA6527679BEE8555C
D76A860A07FD7763A20653BEECD2ABB9E216D5C97983B95F0307CFD801365719
861DC7F5E697AB4778F81E2CA5F4DF3B5A8E5E00671B4965E19C2BCE8BEC0EE2
C7484DEC790510C3B5F5A3C15EAEB2654FFF647AC73743455D616BF0BF14353C
5CE41795C6D82F4CFF1A8320D4E16AB4CDE5824920ADFB11412B0FD7DD5C4454
A0471B2FF2AD89F810878830A6402EC29AADAFB587C798DBCAC066B198FE7CE8
841A2D7D18667F951582FB92F06A2710ABFB503B85B867FD7E70F32F945E97F3
B34FA1AC54F4754D9CF44E05624EB8397411DF46954592E4B336DAAE4749B5E0
2B261A794AD43214636FBC2F5DDA605A02F6CEE6B3D30EC9B23725D67E9A8513
EBD0C4D906349CB72855EC24C00AB676B7429E6BD94C5E71DD739B4FB8DDD059
E92F790C83FB4280513B4547CE484ECBDFFE06A380F1520529487D7F90B45AB0
0FABD415EB4EDA8B5CF45F58490B2A8E7D0C8118E613AC2527A129159798AD40
5E97FAFB2F5433C1CCD0FF4E88D313785CF7346F83CD2F37D98FEC63016AE97A
13B9EAB231261B9907ADB8CEECB2FC8308C31BFB81663E6CC05F62196C7E1609
5A683E7E4FD9D995572F52AC473B7F0323C8B87159862BC8E9210F360A87AAD1
057434CD838CE742EE8C5519F4BECC6DF503EBF1050470194B37BFD02CB5959F
623262275AF9DEF4630DF81C3349A853FD8AE14350C216CD987506AF44C9E19E
ED1B309ECC907A1DF7061DDEFD8A46D06137F774F69715D41D169512E8D100FC
C1B0D112CA9696616433253D3165DC749F7D07341D19C6DAF7471E06D679C6C7
E15DC4B80472B6FF609C9442C8B5B2D98D41FC374DE2CDFC0C5E325C3786755E
266184F587C6CFF13D5FE38C8E5DB94B58021692536AF322C0802EC2F2E4BC98
F4783262783E6AF37EF1C93DFB5E7E3761B2A16982A13705DC8F838FBD23F1D5
820F18579FA62A1BC6F106164CA38FCE66D0B668ACDA760773B7CFEC51C5C244
3F3FB4643D826762550692E072BC167813C39C5FC897A7210D1F291C27C6187A
26A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 43 /arrowdbldown put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6C5B367635D8F3EDD0C81B37D0D5C1
85EF82D2206BA76018DBD8C44955402CE2D267B676DEECFED0F918A438388768
7DDB1DB399F422D8207FD68296B47EA6DF29F65C0D2C348CB8F01E1EA2D816B5
1589AA62C940029578FBC01B948EAB0D5ED52C99284933E99D1A992A025AF028
B676D958E758828CCB3B7E86BA73BF2D626D2100D578A738264084BC2FE8E1F0
28B085F3267BE62568839BBFB86A3AB339A9D77FF4A33896B0DDCC2DEA7DBFD9
5651DB72AA2349CA27D5B5FEF4AA762F1A0E540B3911A7D24322A4CBDCD6E18E
1DCE27FD16B89029090A909A03079A8C343FC4593F3F2A014CCB04B74C45424D
F575FFF87EFC8B539AD806753FEAB8D99A4B6CEF4A9C84A14C339CEBF3D2B0CF
B0F2112D66BC769F7A9C6C8B995FDBC693425458C6F6A2FA85E0BA9CD5D89C88
C32635748AF77337B7803679A7679C9F7D6FBA7AC66979B59A02BCD4FDFA3AA7
6EA79108C7813C19C87418262440A6D12E3F486E70A60A11FA6CDAF68BF006F8
32CD39F296494AFF56FD0E2E8D26256D29BC2A179C3F6B63AC16DCA13A16E080
C303D9D5E207306C29A7016BE428F15C7E55A7C2F474D354D75BE74559672B84
94F12A865823D618A614D4829EB7B8C992A7B0E7D8A20E74C811C1ADD82ACEA0
02F9E21B6057B03657096CA107F44E839F0D59D3F2E420588ECAA848E841EE14
B36CABC1BA877AC43F9F6035E66065DD0FDB793FE0B41D6E755673BE4E4144B7
A081F4C21482FC382F0135AF1FA95A530C93573FDDC725D31174DBDC0B15F37B
CAAFE303D7B639CB702E2CE230F3470CFE2ADFF03CE1E3695122670D07DDFC88
D990C953D735CDD7ECCEE3F2B22DC87BDD948F8EB78D4A0438B594E57E4DE985
3D8204C5A3551FCDF202A36B2FA3B223F15F10F1C73A24B65D39B2A98EDF3224
7B7439EB0FBCA81FAFD42C3D136093F5BCDED205EFEC7784C4F0E87406D19159
9FCB468821BFB2DB405DDED25F6EADB0BDFFB6E4DA4CF4058D44986BEA72F6A8
F49432F932443A25D19DED843BCE4255A1F99EC68FD3E6F2E6EA1D14B4A440E5
3459FBE7A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /parenleftBig put
dup 17 /parenrightBig put
dup 34 /bracketleftBigg put
dup 35 /bracketrightBigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F20DF0D776F1361D25A06237063DD6B88E16DF
7BF2D7AA555ECE15F21A2610055B5D7714B14542D0D2BE8077C420241454891D
5C6CC05A13BEF9ECD73972E0F78E243EC49CD04AACF71CB64380D28B4747FEC0
6267D1E8E4318E297479D1E52E30CD4BDC4D9C56E5D32CD09F25370CE24C4435
78358CCF44C74E2DAB9E3BE3A259D878C3C2A1EA1A1AEE3FB57FC368CC4EBBF4
36C93EBE7ED78B62D28309D493381C2B4BC711D00B99C3F05D4731938F47F0BB
9B9B0A48D195F55FB94C40C4E8AE84052424791270013A5F486C9D8AB2BD8A2B
C48A69E50969FC0E6182A96773CA72B4D8DBA2E76F8143CC31AD035DF36428D6
BC81C252537A11D7D37E8BC00799D81CEF9A50A5752CE2D5D29B3EA758298AC1
7EFFDDDA853892B97B3694D84BD9D13B7B1922C2F45933F643B722788497FB87
63B0DEB84380EF9CD8B658E9374DE838F5EB1121626D8BDFECADF62F1DCD1B3C
390AA8AF7B2E5FC77FB2A2279ECE8D4E23C4702B9D1F6810EDA03764FC52EA64
0138F45B8E9DCBF1AA12853EF01B578E3C036BA041ADD1CA1E9BFCD1C4FF3CE4
85E1747634E22DE838492FC116C390CF3FC5BEA2E98F378FEEC6EE9803C9F84A
C82D159880E897C461BF867D9EDB3917EDD5FFE1DBC92C28A48CAFD7D4F43A37
860750FCD595C2E863785E4CCB6A2039BC88EBB05FF53C42815E088280E56C9F
DE401248157AF7877D0B4F2F6C2736A6770653137F03725B0B0BC74AB7854CA7
EFC4C3E8938187E956C4086E2D94F0704BFCD8C6838E461370262F6DE9D3B89A
A58E47296ADDFBB4380BEFD99EE48A7EF11215A50CDBB83870B31AC354810879
589962B35C33B224B45F87C3CA4042D8666C6BEE784ABAFE34AF5A3E562425BD

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 223761600 170636867 1000 600 600 (643_poster.dvi)
@start /Fa 137[93 1[67 83 85 8[62 7[103 3[62 1[62 2[150
10[181 7[137 10[62 3[103 103 1[103 103 103 103 1[62 46[{}19
206.559 /CMTI12 rf /Fb 138[186 130 1[137 8[93 3[153 3[163
20[201 76[{}7 297.468 /CMBX12 rf /Fc 171[69 84[{}1 119.552
/CMMI12 rf /Fd 205[59 50[{}1 119.552 /CMR12 rf /Fe 205[79
79 26[79 22[{}3 172.188 /CMR17 rf /Ff 255[134{}1 172.188
/CMSY10 rf /Fg 220[120 120 16[123 123 16[{}4 206.559
/CMEX10 rf /Fh 134[82 1[121 8[101 25[99 104 3[129 2[115
61[75 14[{}8 172.188 /CMMI12 rf /Fi 134[99 115 145 6[102
23[168 9[162 1[138 16[56 44[90 1[114 12[{}10 206.559
/CMMI12 rf /Fj 134[123 2[123 129 90 92 95 123 129 116
129 1[65 2[65 129 116 71 106 129 103 129 113 10[175 1[162
129 173 175 3[220 140 7[178 168 165 175 18[65 77 45[{}33
206.559 /CMBX12 rf /Fk 149[57 62[126 27[103 11[103 1[57
161{}6 206.559 /CMSY10 rf /Fl 133[84 100 100 138 100
106 73 74 73 100 106 95 106 159 52 100 1[52 106 95 57
84 106 84 106 95 2[95 52 1[52 3[197 143 143 138 106 4[143
176 119 149 97 68 1[150 124 1[146 138 1[143 1[89 1[149
2[52 2[95 1[95 95 95 95 95 95 1[52 62 52 149 1[73 73
52 10[95 5[95 7[155 1[103 109 11[{}66 206.559 /CMR17
rf /Fm 137[134 156 1[119 123 1[149 6[89 3[134 17[164
83[{}8 297.468 /CMTI12 rf /Fn 137[144 152 1[107 105 1[152
136 152 1[74 144 1[74 152 2[121 152 121 1[136 20[171
214 140 1[206 25[74 17[136 28[{}21 297.468 /CMR17 rf
/Fo 137[254 1[187 190 197 1[268 241 268 402 134 2[134
1[241 147 220 268 214 268 234 20[290 63[268 12[{}19 428.394
/CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 83 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   0. true 0.0 0.0 3243.61417
-2475.38976 .5 Frame  gsave false 1 0.0 0.0  gsave 0.988 0.988 0.988
 setrgbcolor currentrgbcolor grestore gsave 0.933 0.933 0.933  setrgbcolor
currentrgbcolor grestore 1000 1.0 0. false tx@GradientDict begin GradientFill
end grestore gsave 0.8 SLW 0  setgray  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 992 1431
a @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 17.10097 neg 110.4656 neg 3021.72356 122.90561 .5 Frame 
gsave 0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke
grestore gsave 1  setgray gsave fill grestore stroke grestore gsave
false 1 0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore
gsave 0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0
0. false tx@GradientDict begin GradientFill end grestore gsave 5.69054
SLW 0.349 0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap
stroke  grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1054 1842
a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1054 1842 a @beginspecial 0 @llx 0 @lly 176 @urx 57
@ury 3401 @rwi @setspecial
%%BeginDocument: images/dtu_logo.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DTU UK A2 Pantone.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.1
%AI9_PrintingDataBegin
%%For: PeopleGroup
%%CreationDate: 06/03/08
%%BoundingBox: 0 0 176 57
%%HiResBoundingBox: 0 0 175.9649 56.6597
%%CropBox: 0 0 175.9649 56.6597
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 187 U)
%%+ (PANTONE Cool Gray 8 U)
%%CMYKCustomColor: 0 1 0.7900 0.2000 (PANTONE 187 U)
%%+ 0 0.0100 0 0.4300 (PANTONE Cool Gray 8 U)
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DTU UK A2 CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2008-01-24T17:26:48+01:00</xap:CreateDate>
         <xap:ModifyDate>2008-03-06T16:01:26+01:00</xap:ModifyDate>
         <xap:MetadataDate>2008-03-06T16:01:26+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>84</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAVAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7f8A8r0/KL/qabL/AIJv&#xA;+acVZlpuo2Op6fb6hYTLc2V3Gs1tOhqrxuKqw+YxVEYqkB8++Uh5rTym2oBfMMvIxWDRyqzBYjM3&#xA;FynptSMV2bFU/wAVdiqW23mXQ7nXrzQILtZNYsI457y0AblHHLujEkcfir2OKplirsVSDy/598pe&#xA;YdSvNM0jUBc3+ngG8tjHLG8YJ4iokRO47YqmGsa/ouipavqt5HZpe3MdlaNKaCS4mr6cS/5TcTir&#xA;tR1/RtNvbCxvryO3u9UkaLT4XNGmdByZU9wDiqPxVLfMHmTQ/LunjUNau1srMyJCJnDEepKeKL8I&#xA;Y7nFUyxV2KuxV2KqN7eW1lZz3l1IIra2jeaeU1oscalmY08AMVQ2la9pGq6RbaxYXSTabdoJLe53&#xA;RXUmgPxhT18cVR+KuxV2KuxV2KvKfzAiE3nBYSaCRYUJHblthVb5p8oS+W4re/s7x3VpPTDU9N0a&#xA;hZSGU/5JxVkL6FL5y0LSb+a8NvNHHIsh9PmHYNwLU5JSpjrirCLTQPrHmZtE9fjxnlg+scK/3XL4&#xA;uHLvx8cVZJ5k8sfoDylJD9Z+s+teRvy4enSiMKU5PirJfy6/5RS2/wBeX/k4cCsR/Kv/AJSC4/5h&#xA;H/5OR4VS3zToeiL/AM5BeS7ZdPtlt5dN1BpYRDGEZgjULLShIxVgmsfmx5wubzzPPpOvXWkyaHfy&#xA;2GgeXLLSfrVpLFZsFpPOsbhWl8OXw/KmKs81Lzd5381ecPKvlbS9SfysNR8vR+YtWmigjluOUx4C&#xA;2VZw3Dg4374qlP5gaB5nP5n/AJY6NB5klj136vq6/wCImtoZJdoC7H6uaRVaOsft9rriqIt9d8+r&#xA;5b/MvSb3zJcPqfkgvd6drMMVtHNNH9TkuUhnQxPGUqorxAb3piqX6Xr35paVpX5deatQ82vq1r5r&#xA;1PTtOvtJls7eKNItQUkFXjHIsgQ/FtU/Tiqe6Lr+u6F+ZP5g2l1qEmsW2iaPFqNqbqO3SUt6Zm9N&#xA;pIIoSVH2RXtiqa/lRa+e9R0jSvOfmPzfJdW2o2zXk+jC2t4bWOOZS0YEgAkHpihrXArBIfzJ1mx8&#xA;z+V5NG863/mjTdV1q30m/S80oW9lJHcuY3e3uhDEpZGHwhW391BqVZ9oH/rQXmr/ALYun/8AE2xV&#xA;Cf8AORH/ABzPJP8A4F2l/wDEJ8Ct/m5/5Mn8rP8AtqXX/JpMKsdtk/M7UPzD86+WLTz5eW2neW4b&#xA;W4t5ZbSymnka6tfWCs6xRKqqx3ou48MVSzW/O3nHVfyL8seeX1eSHU5bmO0vbVYbV7W4K3skHrPH&#xA;JC5ElIgfhIHtirO7zz3q3lz8z/NWn6zdmbQxoK6/o8LqirEtoDHcxqygMxdlLUYnArANS/Mzz/Y+&#xA;T/y+stQ1yay1HzWt1qOq61DZLdXEVolJYIoLeNGB5xyDfjUdelcKphoPnHz3qvkjz+G16/5eVYjq&#xA;Wh+YWso7Ka7i+rTy/V5oZ4SvFHhoxUBvenVVXlv/AM6V/JaPzVpuvTazreqw2NyIYbK3ElnZ8GM/&#xA;oRqP30rclLEjt8IGKphoGqXevfll5i1bS/zAvtWltrZrgepa2dvc2k1vDK8lvPE0T1SbaoI/Z+Fu&#xA;uKsP/MIaxrP/ADj35U1y41WeOSR7JLizijt0t5HeZgJiixBldO3Fgvtir0fzFq3mryf5u/L+2u9a&#xA;m1LRNUmn0jVpZ44Uaa7mUtZyH00Xi3I8fh7L44FRv5SeZdf8zah5w1e8u2m0RNXk0/QbcqiqkNmO&#xA;LyIVUMwlLj7RO4xV6LirsVdiryzzx/ynEP8A0b/rwqyH81P+Uet/+YtP+TUmBUb+XX/KKW3+vL/y&#xA;cOKsN0n/AMmW/wDzHXP65MKsp/M//lG0/wCYiP8A4i2BUT+XX/KKW3+vL/ycOKsR/Kv/AJSG4/5h&#xA;H/5Ox4VZXqnkWC//ADA0Xzi120c2jW1xapZhAVkFwCORetRxr4YFY3N+UXmGw1rVb7yd5yufLljr&#xA;dw97qGmiztryP6zKKSSRNNvHyIqaf0oqjvNX5X3+rarpHmHSvMdxo3mrSrX6i+rpBDOLmA7sstu9&#xA;I93JYdgT06UVV1/Le7n8y+UvMeq65LqGqeWI72OSVoIovrbXsbRlmWMqsfANsFGKtv8AljbM3nom&#xA;/f8A53iH0Zv3Y/0YfVWtar8Xx7Py3piqncflVazeWPJmgnUHCeT7/T9Qin9MVuG09WUIy8vgD8+x&#xA;NMVRcP5caePOfmLzJcXDXEfmOxi0+608rxRY4k9NqODU819hTFUq8oflXrvlyFNIPm+61DyjFFNb&#xA;waHNa26ssUysoU3aj1Tw51HQe1MVY7H/AM4+a1FpekaVF55uxp3l2+j1DQbVrK1ZIJIXeRC9OLTM&#xA;GkO7GnbjhVnujeSGsPOV95ruL83V7qFha2FxEIhEnK2qWlFGanMn7PbxOBVT8wvIel+d/Lj6Lfyy&#xA;2xWWO5s7yAgSwXERJSRa7HqQR4Hsd8VY7of5S6onmrTvMvmzzTc+Z73RUkTR4pLeG0hhMq8Gdkir&#xA;6j8f2j338MVTvTPy+t7Hzn5p8zi8eSTzPDawy2vABYRawehVWqeXIb9BTFWP/wDKkbP/AJVVpv5f&#xA;fpWT0NOuRdLqHorzci6e54mPlQbycftYqjvzR/KOw8+/U5m1KfSb60jmtjcW6o4ltbkATQureIX4&#xA;TXbfY4qiPOv5YW2vwaFJpWpTaBq/lkn9CalbokpiRoxE8bRv8LoyIARX8KjFV1p5G8yzeVtf0PzJ&#xA;5ql12TXLWWzW7a0t7UW6zQNCxjihoD9vlue2Kq8XkrWNP8iaV5Y0HzBLpV3pUUECasttDOzpCnAh&#xA;oZuaUfr7YqlHlX8oRo1l5s+va1Jqmr+cU4apqJt4bZRSKSNWSCGiBv3zM2+/4lVrVvybtNQ/Kqx8&#xA;gHVJYV08QmDU0jXnzgfmGMfKm9enL6cVSD847XUm/L+38tXa635i8123pX+n61pemOV+uQyt6Tu0&#xA;C+hCaVBAbkB8VOlSrNvyl8pSeU/y70TQ50CXkFuJL5ep+sTsZpgT34u5WvtgVl2KuxV2KvLPPH/K&#xA;cQ/9G/68Ksh/NT/lH7f/AJi0/wCTcmBUd+XakeU7QnozSkfL1GH8MVYZpP8A5Mt/+Y65/XJhVlP5&#xA;n/8AKNp/zER/8RbAqJ/LsgeVLYnpzl/5OHFWI/lX/wApDcf8wj/8nY8KvU8CuxV2KuxV2KuxV2Ku&#xA;xV2KuxVKfNfmbTPK/l2+1/VC/wBQ0+P1ZhEvOQ1IVVVSQCWZgBU4qt8peZY/MuhW+sxafeabDdDl&#xA;Db6hGsU5Q7q5RHkHFhuu+KsK1j/nIHybpeq6pp0mn6vc/oedrbULy2sjLbxyJs3KQNsB7jFWeeXf&#xA;MWjeY9Gtda0W6W8028UtBOoIrQlWBVgGVlYEEEVBxVMcVdirsVdirsVdirEZ/wAytOtvP1l5Ju9L&#xA;1C2v9TEzadfyRw/U51t4jNIUdZmk2VabxjfFWXYq7FXYq7FXnvnLyv5ivvMX1/TrX1Y1SPhJziX4&#xA;k9nYHCqF1HQPzD1xoYdSRFhjJKlnhVATtUiIlj92KvQNG02PTNLtrCM8hAgUt0qx3Y092JOBWFaf&#xA;5V16Hzy+pyWtLE3U8om9SM/A5fieIblvyHbCrLPM2iDWdHmsgwSU0eFz0DqaivsemBWC2dj+Ymk2&#xA;kul2tufQkLUZfTenLqUeu1ffCrIfIXlK70ZZ7q/ot1OAixKQ3BAankRtUnwwKy7FXYq7FXYq7FXY&#xA;q7FXYq7FXj3n60ufNX51aP5KvtQvLPy9FosmrS29lO9sbi4Nw0IWR0IJCKgI8Ppwq891/Tlvvye8&#xA;/wBnqd7c6q/knWLiw0K+muJTKtv60A9ObiwWbjUj94DTtSgxV9D+SvL2naB5ctNP0/1vq/AS/v5p&#xA;J35SAM3xys7Ur0HTArA/yYKjzZ+Z5cgKPMEhYnpTia1wq8m0zWNUtvyk07TdGmuYtN13znNYgafI&#xA;sNxLYueXoW0sjIqeqy0FSPA7VGKs58n+TPMR1XzHpWo6VrVj5Cu9OFxawapqAkmh1CB1oIZLed5V&#xA;V1JY/F2oe2KsC03TLzTvyU8tfmPb63qreZW1KOMPJeyvAIkvZbf0hCx48Cibg9TXsaYqzrzF5F0z&#xA;Uv8AnIEeXxfalY6VqGgtq19b2l9cRiW6a8kQk1d+KGgPBaCo2xVhXlO21OPyB5J8/HXNUm8w3fmO&#xA;20+5knvJpontTcSQmIxuxHHggGKsn/Ne50vV9X85z6BpuvXeteXbX1dQ1m21L6nZ2MsNvzjMcLzJ&#xA;zCiPk4RKk1I3NcVX/mBb3GreXPyk1t9QvrPWvMVxo1hqWo2d1NBI0V5CHlKqrekr85CwfhX6MVQn&#xA;53Xd3+XvmjyFc+XoZtQudH0/WfqguZHuJKvbkNNK7cmcRCQyMPBabDFXrn5QaRY2PkiyurfV5Nem&#xA;1UfXr3WJJGk9eeX7fAMfgVCOISgpTfeuBWa4q7FXYq7FUoXzf5VfWG0VdXtDqqU5WXrJ6tSSOPGv&#xA;2tt165DxI3VuSdHm4OPhlwd9Jvk3GdirsVSiHzh5Vn1c6PDq9pLqgFfqaTI0m2xFAfte3XIDJG6t&#xA;yZaPMIcZjLg76TfJuM7FXYq7FXYq7FXYq7FXYq7FWJ+d/wAsvLHnGazu9R+sWupWAZbPU7CZra5j&#xA;R/tIJF6qfAj9ZxVSt/ym8lW3ka68lW1q8OiXxL3gWVjNLIWV2keVqsWJjXfwFOmKsuhiSGFIU+xG&#xA;oRa+CigxV51q/wCQnkvU9W1LUZLrVbYavK0+p2VreyRW07v9oyRjrXwriqe6l+V3kfUPJ0Hk+XTV&#xA;j0K0KtZwQs8bwyISVlSQHn6lWJLE/FU1rU4qt8pflrpHlk3Zg1HVNRa8i9CU6leSXVEqTRA1FXr1&#xA;AxVR/wCVSeTf8D2fkr0Zv0FYzC4t4/Vb1BIJmuKmTqfjc4qnD+T9EfzlH5vZH/TUVidMSTmfT+rm&#xA;UzU4dOXNjviqT2n5SeTbTyvpnlmCKZdL0i+TU7NDKxcXEcjSqWc7leTnbFUHr/5H+RNc1jUtUvFv&#xA;I31dQNTtba7mt7ed1XgskkUbKGZR47eIO+KoyD8p/K0el6Hpkkl7dWvly+h1HSPrFy8rQyWwCwxh&#xA;m/3UgGydBiqb6r5M0HVfMmk+Yr2JpNR0VLmOyPI+nxu4/SlDp0aqHviql5N8i6B5Ptru00JZYLG7&#xA;na5+pvIzwxO/2hCrfYU+AxVkOKuxVqQuEYovJwCVUmlT2Fe2JSHzB+cv5lfmwl7LpGoWknlvTJCR&#xA;FHbksZ097tdn26qlB4jMSc5HY7Pddjdm6PhE4nxJefT/ADf1vFySTU9cg9MzXyl+aX5naTJHZ6Lq&#xA;dzdJ9mOxkX62tP5URw7KP9SmESI5GnWavsvS5PVOIHn9P4+L0yT82v8AnIQWHqHyjwWn+9A0295g&#xA;DflxMhH08aZZ4knRjsns7irxfhxx/U8t82fmZ+Y2uPJa63qlykf2ZLFB9Wjp4PFGE5f7KuVGXFzN&#xA;u+0nZmmxb44j38/tYirMrBlJVlNQRsQRi7Eh7r+Sv5k/m1e3cWlxWL+Y9JiIWW4uD6bQL/zFtsad&#xA;eL8mPbJwnLkN3lO2uzdHEGZPhz8uv+b+qn0lmW8S7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqhtS0vTtTs5LLUbWK8tJRSSCdFkQ/7FgRgIB5tmPLKEuKJIPk8Qj/&#xA;AC2/5x4/xhLaHWFadSD+h2u+NsHJ+ws1AzH/ACPV5DMbhhfP8e96g9pdpeCDwbfzuHf5fpp7Ponl&#xA;3QNEthb6Pp9vYQUFVt41TlTuxAqx9zmRGIHJ5nPqMmU3ORkfNMck0pV5g8seWddtmj1zTra9hVT8&#xA;c6KWRepKyfaT5gjIygDzcjT6rLiN45GJ8njun/lr/wA49P5zFpBq63Nx1j0Y3XO2L12USgcnP/Ff&#xA;qk+OUCML5/j3vSZO0u0fAswofzuHf5fpp7jZWNlY2sdpZQR2trEOMUEKLGijwVVAAzIAA5PKznKZ&#xA;uRsq2Fi7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVshkEbGNQ0gB&#xA;4KxKqWpsCQGoPehxKRV7vlz86/Nf5xC4ew16BtI0SVisMdiSbaZfB7gfFIadUbj/AKozDmZHYved&#xA;i6XRVxYzxz/pcx8On43eOZF6Rl/krzh+ZunzLa+VLy/mK0pYwI11GP8AngyyIP8AgcQa5Ou1uj0s&#xA;xeYRHmdvt2enP5z/AOcnPq/L9Dyj4QeYskL/AD477+3HJcc/P5fsdENF2Vf1j/TPKvOPmz8xNTuG&#xA;tvNV7fepWrWVyGt0B8fq4EaD/gciTZ3eg0ek00BeER943+1i+LnPc/yP81/nJcSRWmn251jy9GwS&#xA;SXUWZIoVGxEVyQz1H8gD0/lycJS5B5XtvS6IAmR4Mn9Hr7x+nb3vpXMt4h2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRvbayubSWC9ijmtHUieKZVeNl6nmrVUj54&#xA;CBW7KEpRIMTR8nhsXl7/AJxl/wAYyxG9hNwD/vG80i6cJKmvGWgQ/wCr6nHsBmNUL5vVHUdqeCDR&#xA;rvocXy/Zb2zSbDSLKxjh0m3gt7GgMSWqokVKbEBAFzIiBWzy+XJOUrmSZeaMyTWl+vadoF9p0keu&#xA;29tcaeo5SfXFRol7cqybL88jICt27BkyQleMkS8njGn+Xv8AnGdvOaxW95DLc9Y7KSaR9OMla7SO&#xA;PTc/5JkKnpTKKhfN6bJqO1PAsg1316v1/Gre6QQwQQpDbosUEahY44wFRVHQKBsBmQBTykpEmzzX&#xA;4UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbJ6npt6YBkoeAYkL&#xA;yptUiu2JSKvd8t/nfdfnN6zp5lHo6AWpCNNLfUW329RvtlvaX6BmHPi/ie87Ejoq/db5P6X1fj3P&#xA;Hci9IyzyNd/mbHPw8mvqRo3xx2YkeGvjItDF/wAFiPJ1+uhpSP3/AAfGr/W9Ue9/5yv+ocjC/Ghr&#xA;Iqab61N/2B8X/C5bc+boBDsji5/7unkvnW6/MOW7C+cH1H1q1jjv/VVAf+K1aif8CMqPm9Doo6YD&#xA;9zwV/Rr7WM4uc9w/Iy6/OljEukKJvLAIDnVSwtlUdfq7by19o6rXrk8fF/D+x5btyGh349sv9Hn8&#xA;enz3fTGZbw7sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqldfVf&#xA;q0v1vh9V4H1/Vp6fCnxc+W1Kda4DVbsoXYrm8Sj/AOhYv8ZTV+qfW6j7fq/oz1Knlx/49/nX4PDv&#xA;mP6L/H4/Q9Qf5V8AfVXw4/8Aiv0vadN/Rv1GH9Gej9Q4/wCj/VuPo8a/scPhp8svjVbcnmMnFxHj&#xA;vi8+aJyTBBaz+hf0dN+mvq36Np+/+uen6FK/t+r8H35GVVu24ePiHBfF5c/seN6b/wBCy/4yX6r9&#xA;V+uf7r9X1f0d6te3q/uOXh+x9OUDgv8AH4/Q9Lk/lTwN74fhxfZv+l7fF6fpp6XH0uI4caceNNqU&#xA;2pTMkPLG73f/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:CF1F4137CC3211DCAA63ADD3A86B9E6A</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:BEF362C3ED2811DC9A57EAD98AFC730A</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:1c5d232a-ca95-11dc-8f86-0016cb9966b3</stRef:instanceID>
            <stRef:documentID>uuid:67F67369BABF11DC9722AE09B9B5962D</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -56.6597 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 56.6597 li
175.965 56.6597 li
175.965 0 li
cp
clp
[1 0 0 1 0 0 ] concat
11.1914 12.3086 mo
11.2993 12.2998 11.4072 12.3594 11.4072 12.48 cv
11.4072 13.0815 li
11.4072 13.2554 11.3643 13.3384 11.1602 13.376 cv
10.4263 13.5098 9.8623 13.5811 8.91846 13.5811 cv
7.24609 13.5811 6.09863 12.6484 6.09863 10.3447 cv
6.09863 9.92627 li
6.09863 8.12842 6.79443 6.70801 8.87695 6.70801 cv
10.9824 6.70801 11.6289 8.17627 11.6289 9.92627 cv
11.6289 10.3047 li
11.6289 10.4785 11.5508 10.5864 11.395 10.5864 cv
7.42188 10.5864 li
7.42188 10.6885 li
7.42188 11.7529 7.84863 12.4321 8.97803 12.4321 cv
9.76465 12.4321 10.6035 12.3569 11.1436 12.313 cv
11.1914 12.3086 li
cp
10.2944 9.54004 mo
10.2944 8.37988 9.77783 7.83936 8.87695 7.83936 cv
7.98633 7.83936 7.42822 8.40381 7.42822 9.54004 cv
7.42822 9.61914 li
10.2944 9.61914 li
10.2944 9.54004 li
cp
90.2852 12.3086 mo
90.3936 12.2998 90.501 12.3594 90.501 12.48 cv
90.501 13.0815 li
90.501 13.2554 90.459 13.3384 90.2549 13.376 cv
89.5205 13.5098 88.9561 13.5811 88.0122 13.5811 cv
86.3403 13.5811 85.1929 12.6484 85.1929 10.3447 cv
85.1929 9.92627 li
85.1929 8.12842 85.8887 6.70801 87.9707 6.70801 cv
90.0771 6.70801 90.7236 8.17627 90.7236 9.92627 cv
90.7236 10.3047 li
90.7236 10.4785 90.6455 10.5864 90.4893 10.5864 cv
86.5142 10.5864 li
86.5142 10.6885 li
86.5142 11.7529 86.9419 12.4321 88.0718 12.4321 cv
88.8604 12.4321 89.6963 12.3569 90.2373 12.313 cv
90.2852 12.3086 li
cp
89.3877 9.54004 mo
89.3877 8.37988 88.8721 7.83936 87.9707 7.83936 cv
87.0801 7.83936 86.522 8.40381 86.522 9.54004 cv
86.522 9.61914 li
89.3877 9.61914 li
89.3877 9.54004 li
cp
79.8623 27.981 mo
79.9697 27.9727 80.0771 28.0322 80.0771 28.1528 cv
80.0771 28.7539 li
80.0771 28.9272 80.0361 29.0112 79.8306 29.0483 cv
79.0967 29.1821 78.5332 29.2534 77.5889 29.2534 cv
75.9185 29.2534 74.7695 28.3208 74.7695 26.0176 cv
74.7695 25.5991 li
74.7695 23.8013 75.4653 22.3809 77.5474 22.3809 cv
79.6533 22.3809 80.3008 23.8491 80.3008 25.5991 cv
80.3008 25.9775 li
80.3008 26.1514 80.2212 26.2593 80.0654 26.2593 cv
76.0918 26.2593 li
76.0918 26.3613 li
76.0918 27.4258 76.5195 28.105 77.6489 28.105 cv
78.436 28.105 79.2739 28.0298 79.8135 27.9854 cv
79.8623 27.981 li
cp
78.9663 25.2124 mo
78.9663 24.0522 78.4482 23.5117 77.5474 23.5117 cv
76.6567 23.5117 76.0991 24.0767 76.0991 25.2124 cv
76.0991 25.292 li
78.9663 25.292 li
78.9663 25.2124 li
cp
72.3325 28.3389 mo
71.6943 28.9683 70.7319 29.2534 69.564 29.2534 cv
68.6812 29.2534 67.6396 29.1812 67.2856 29.1216 cv
67.1055 29.0913 67.002 28.9937 67.002 28.7842 cv
67.002 20.6079 li
67.002 20.4043 67.1055 20.3018 67.2856 20.272 cv
67.6396 20.2104 68.6812 20.1396 69.564 20.1396 cv
70.7217 20.1396 71.6772 20.4155 72.3149 21.0327 cv
73.0737 21.7651 73.2739 22.7705 73.2739 24.1323 cv
73.2739 25.2598 li
73.2739 26.6055 73.0806 27.6001 72.3325 28.3389 cv
cp
71.896 24.1895 mo
71.896 23.0293 71.7437 22.3125 71.229 21.8359 cv
70.8115 21.4492 70.2261 21.3115 69.564 21.3115 cv
69.0596 21.3115 68.7158 21.3301 68.3911 21.3477 cv
68.3911 28.0508 li
68.7095 28.0684 69.0596 28.0806 69.564 28.0806 cv
70.2529 28.0806 70.8584 27.9312 71.2788 27.5049 cv
71.7646 27.0161 71.896 26.3276 71.896 25.2021 cv
71.896 24.1895 li
cp
112.637 21.0347 mo
111.382 20.6694 li
111.234 20.626 111.146 20.5171 111.146 20.3848 cv
111.146 20.2534 111.146 20.3081 111.146 20.3081 cv
111.146 20.1758 111.249 20.0669 111.382 20.0669 cv
113.72 20.0669 li
113.851 20.0669 113.96 20.1758 113.96 20.3081 cv
113.96 25.458 li
116.222 22.5918 li
116.298 22.4951 116.382 22.4658 116.478 22.4658 cv
117.558 22.4658 li
117.677 22.4658 117.739 22.52 117.741 22.5981 cv
117.743 22.6396 117.726 22.6826 117.69 22.7241 cv
115.249 25.6226 li
117.962 28.9116 li
117.987 28.9409 118.002 28.9771 118.003 29.0122 cv
118.006 29.0913 117.95 29.1636 117.858 29.1636 cv
116.619 29.1636 li
116.487 29.1636 116.388 29.0786 116.302 28.9644 cv
113.96 25.9731 li
113.96 28.9165 li
113.96 29.0483 113.851 29.1636 113.72 29.1636 cv
112.876 29.1636 li
112.744 29.1636 112.637 29.0483 112.637 28.9165 cv
112.637 21.0347 li
cp
112.334 15.6455 mo
112.19 15.6313 112.085 15.5117 112.085 15.3828 cv
112.085 15.3164 112.085 15.3711 112.085 15.3047 cv
112.085 15.1738 112.187 15.0645 112.334 15.043 cv
114.079 14.7974 li
114.562 14.7285 114.821 14.5674 114.987 13.918 cv
115.095 13.4902 li
114.921 13.4902 li
114.565 13.4902 114.193 13.4063 113.952 12.5767 cv
112.366 7.07568 li
112.321 6.92529 112.386 6.79297 112.575 6.79297 cv
113.514 6.79297 li
113.616 6.79297 113.704 6.89648 113.729 6.99756 cv
115.046 12.0532 li
115.101 12.2764 115.167 12.3179 115.245 12.3179 cv
115.396 12.3179 li
116.778 6.98486 li
116.806 6.88281 116.898 6.79297 117.013 6.79297 cv
117.962 6.79297 li
118.132 6.79297 118.19 6.94922 118.153 7.07568 cv
118.056 7.42627 116.159 14.0498 116.159 14.0498 cv
115.879 15.0283 115.602 15.3076 115.187 15.5615 cv
114.78 15.8115 114.317 15.8433 113.369 15.749 cv
112.334 15.6455 li
cp
108.792 22.4658 mo
108.925 22.4658 109.031 22.5732 109.035 22.7056 cv
109.046 22.998 li
109.722 22.5063 110.3 22.3809 110.81 22.3809 cv
110.96 22.3809 111.057 22.4722 111.057 22.6099 cv
111.057 23.2886 li
111.057 23.4209 110.96 23.5117 110.81 23.5117 cv
110.209 23.5117 109.704 23.6675 109.151 23.981 cv
109.151 28.9165 li
109.151 29.0425 109.043 29.1636 108.911 29.1636 cv
108.063 29.1636 li
107.937 29.1636 107.827 29.0483 107.827 28.9165 cv
107.827 23.4341 li
106.62 23.0679 li
106.476 23.0249 106.388 22.915 106.388 22.7832 cv
106.388 22.6523 106.388 22.7065 106.388 22.7065 cv
106.388 22.5732 106.489 22.4658 106.62 22.4658 cv
108.792 22.4658 li
cp
82.396 23.4341 mo
81.146 23.0679 li
81.001 23.0249 80.9126 22.915 80.9126 22.7832 cv
80.9126 22.6523 80.9126 22.7065 80.9126 22.7065 cv
80.9126 22.5732 81.0137 22.4658 81.146 22.4658 cv
83.3789 22.4658 li
83.5117 22.4658 83.6177 22.5732 83.6216 22.7056 cv
83.6318 22.9868 li
84.3628 22.5361 84.8662 22.3809 85.6177 22.3809 cv
87.2437 22.3809 87.7046 23.5015 87.7046 24.8374 cv
87.7046 28.9165 li
87.7046 29.0483 87.5962 29.1636 87.4644 29.1636 cv
86.6235 29.1636 li
86.4902 29.1636 86.3833 29.0483 86.3833 28.9165 cv
86.3833 24.9785 li
86.3833 23.8477 86.1294 23.5117 85.209 23.5117 cv
84.7524 23.5117 84.2471 23.6924 83.7188 23.9624 cv
83.7188 28.9165 li
83.7188 29.0425 83.6113 29.1636 83.4785 29.1636 cv
82.6313 29.1636 li
82.5044 29.1636 82.396 29.0483 82.396 28.9165 cv
82.396 23.4341 li
cp
90.1416 23.4341 mo
88.8623 23.0679 li
88.7158 23.0249 88.627 22.915 88.627 22.7832 cv
88.627 22.6523 88.627 22.7065 88.627 22.7065 cv
88.627 22.5732 88.7295 22.4658 88.8623 22.4658 cv
91.125 22.4658 li
91.2568 22.4658 91.3623 22.5732 91.3682 22.7056 cv
91.377 22.9868 li
91.9268 22.6318 92.4854 22.376 93.1729 22.376 cv
93.7725 22.376 94.1865 22.5498 94.4775 22.8926 cv
95.1133 22.5684 95.7383 22.376 96.4658 22.376 cv
97.6729 22.376 98.4375 23.0625 98.4375 24.6025 cv
98.4375 28.9165 li
98.4375 29.0483 98.3291 29.1636 98.1973 29.1636 cv
97.3564 29.1636 li
97.2236 29.1636 97.1162 29.0483 97.1162 28.9165 cv
97.1162 24.7441 li
97.1162 23.7769 96.7842 23.5181 96.1357 23.5181 cv
95.8047 23.5181 95.3242 23.626 94.873 23.8301 cv
94.9268 24.0952 94.9512 24.4014 94.9512 24.7319 cv
94.9512 28.9165 li
94.9512 29.0425 94.8545 29.1636 94.7217 29.1636 cv
93.8506 29.1636 li
93.7256 29.1636 93.6279 29.0483 93.6279 28.9165 cv
93.6279 24.7319 li
93.6279 23.7456 93.4014 23.5181 92.751 23.5181 cv
92.4072 23.5181 91.9639 23.6924 91.4639 23.9507 cv
91.4639 28.9165 li
91.4639 29.0425 91.3682 29.1636 91.2354 29.1636 cv
90.3643 29.1636 li
90.2383 29.1636 90.1416 29.0483 90.1416 28.9165 cv
90.1416 23.4341 li
cp
106.216 28.5518 mo
106.351 28.5957 106.456 28.7256 106.456 28.8633 cv
106.456 28.9937 106.456 28.9233 106.456 28.9233 cv
106.456 29.0552 106.349 29.1636 106.216 29.1636 cv
104.184 29.1636 li
104.05 29.1636 103.939 29.0552 103.934 28.9233 cv
103.925 28.6538 li
103.384 28.9976 102.72 29.2534 102.095 29.2534 cv
101.084 29.2534 100.075 28.8384 100.075 27.2759 cv
100.075 27.1792 li
100.075 25.8452 100.874 25.1646 102.989 25.1646 cv
103.813 25.1646 li
103.813 24.6592 li
103.813 23.7642 103.466 23.4941 102.642 23.4941 cv
101.866 23.4941 101.189 23.5522 100.748 23.5845 cv
100.688 23.5884 li
100.574 23.5977 100.465 23.5532 100.465 23.3911 cv
100.465 22.7969 li
100.465 22.6641 100.543 22.5859 100.705 22.5566 cv
101.192 22.4658 101.817 22.3809 102.642 22.3809 cv
104.331 22.3809 105.136 23.1807 105.136 24.6592 cv
105.136 28.2036 li
106.216 28.5518 li
cp
103.813 26.0732 mo
102.989 26.0732 li
101.716 26.0732 101.402 26.4092 101.402 27.1729 cv
101.402 27.269 li
101.402 27.9971 101.739 28.1895 102.389 28.1895 cv
102.882 28.1895 103.351 28.0322 103.813 27.7803 cv
103.813 26.0732 li
cp
108.324 7.77197 mo
107.049 7.39697 li
106.916 7.35059 106.813 7.25 106.813 7.11768 cv
106.813 7.02148 li
106.813 6.88916 106.916 6.79297 107.049 6.79297 cv
108.324 6.79297 li
108.324 5.71045 li
108.324 5.59473 108.415 5.49365 108.553 5.47021 cv
109.425 5.32617 li
109.54 5.30664 109.652 5.3833 109.652 5.51807 cv
109.652 6.79297 li
110.843 6.79297 li
110.976 6.79297 111.083 6.90039 111.083 7.03271 cv
111.083 7.59229 li
111.083 7.72461 110.976 7.83252 110.843 7.83252 cv
109.652 7.83252 li
109.652 11.8198 li
109.652 12.4507 109.755 12.5347 110.212 12.5347 cv
110.868 12.5347 li
111.03 12.5347 111.118 12.5884 111.118 12.709 cv
111.118 13.2979 li
111.118 13.4126 111.054 13.4839 110.897 13.5083 cv
110.633 13.5503 110.345 13.5811 110.098 13.5811 cv
108.866 13.5811 108.324 13.2866 108.324 11.8198 cv
108.324 7.77197 li
cp
61.6948 13.5811 mo
59.7529 13.5811 58.5024 12.6426 58.5024 10.2139 cv
58.5024 4.78467 li
58.5024 4.65869 58.6035 4.55615 58.7363 4.55615 cv
59.6563 4.55615 li
59.7822 4.55615 59.8916 4.65234 59.8916 4.78467 cv
59.8916 10.2139 li
59.8916 11.6743 60.2993 12.4209 61.6948 12.4209 cv
63.0898 12.4209 63.4976 11.6812 63.4976 10.2139 cv
63.4976 4.78467 li
63.4976 4.65869 63.6006 4.55615 63.7329 4.55615 cv
64.6533 4.55615 li
64.7793 4.55615 64.8867 4.65234 64.8867 4.78467 cv
64.8867 10.2139 li
64.8867 12.6426 63.6367 13.5811 61.6948 13.5811 cv
cp
93.8691 6.79297 mo
94.002 6.79297 94.1064 6.90039 94.1123 7.03271 cv
94.1221 7.3252 li
94.7979 6.8335 95.375 6.70801 95.8857 6.70801 cv
96.0361 6.70801 96.1318 6.7998 96.1318 6.93701 cv
96.1318 7.61621 li
96.1318 7.74854 96.0361 7.83936 95.8857 7.83936 cv
95.2842 7.83936 94.7793 7.99512 94.2266 8.30811 cv
94.2266 13.2437 li
94.2266 13.3696 94.1182 13.4902 93.9863 13.4902 cv
93.1377 13.4902 li
93.0127 13.4902 92.9053 13.376 92.9053 13.2437 cv
92.9053 7.76123 li
91.6982 7.39502 li
91.5527 7.35205 91.4629 7.24219 91.4629 7.11084 cv
91.4629 6.97998 91.4629 7.03418 91.4629 7.03418 cv
91.4629 6.90039 91.5654 6.79297 91.6982 6.79297 cv
93.8691 6.79297 li
cp
67.4937 7.76123 mo
66.2437 7.39502 li
66.0981 7.35205 66.0088 7.24219 66.0088 7.11084 cv
66.0088 6.97998 66.0088 7.03418 66.0088 7.03418 cv
66.0088 6.90039 66.1108 6.79297 66.2437 6.79297 cv
68.4761 6.79297 li
68.6089 6.79297 68.7139 6.90039 68.7188 7.03271 cv
68.729 7.31396 li
69.46 6.86328 69.9634 6.70801 70.7153 6.70801 cv
72.3403 6.70801 72.8018 7.8291 72.8018 9.16504 cv
72.8018 13.2437 li
72.8018 13.376 72.6943 13.4902 72.5615 13.4902 cv
71.7207 13.4902 li
71.5874 13.4902 71.479 13.376 71.479 13.2437 cv
71.479 9.30615 li
71.479 8.17529 71.2271 7.83936 70.3066 7.83936 cv
69.8496 7.83936 69.3452 8.02002 68.8149 8.28955 cv
68.8149 13.2437 li
68.8149 13.3696 68.7085 13.4902 68.5762 13.4902 cv
67.7271 13.4902 li
67.6016 13.4902 67.4937 13.376 67.4937 13.2437 cv
67.4937 7.76123 li
cp
104.089 7.76123 mo
102.835 7.39502 li
102.688 7.35205 102.6 7.24219 102.6 7.11084 cv
102.6 6.97998 102.6 7.03418 102.6 7.03418 cv
102.6 6.90039 102.702 6.79297 102.835 6.79297 cv
105.171 6.79297 li
105.304 6.79297 105.413 6.90039 105.413 7.03271 cv
105.413 13.2437 li
105.413 13.376 105.304 13.4902 105.171 13.4902 cv
104.329 13.4902 li
104.198 13.4902 104.089 13.376 104.089 13.2437 cv
104.089 7.76123 li
cp
105.202 5.81299 mo
104.312 5.81299 li
104.18 5.81299 104.065 5.70508 104.065 5.57227 cv
104.065 4.5625 li
104.065 4.43066 104.18 4.32227 104.312 4.32227 cv
105.202 4.32227 li
105.333 4.32227 105.442 4.43066 105.442 4.5625 cv
105.442 5.57227 li
105.442 5.70508 105.333 5.81299 105.202 5.81299 cv
cp
75.3662 7.76123 mo
74.1113 7.39502 li
73.9644 7.35205 73.875 7.24219 73.875 7.11084 cv
73.875 6.97998 73.875 7.03418 73.875 7.03418 cv
73.875 6.90039 73.98 6.79297 74.1113 6.79297 cv
76.4487 6.79297 li
76.5801 6.79297 76.6899 6.90039 76.6899 7.03271 cv
76.6899 13.2437 li
76.6899 13.376 76.5801 13.4902 76.4487 13.4902 cv
75.6069 13.4902 li
75.4746 13.4902 75.3662 13.376 75.3662 13.2437 cv
75.3662 7.76123 li
cp
76.479 5.81299 mo
75.5884 5.81299 li
75.457 5.81299 75.3418 5.70508 75.3418 5.57227 cv
75.3418 4.5625 li
75.3418 4.43066 75.457 4.32227 75.5884 4.32227 cv
76.479 4.32227 li
76.6108 4.32227 76.7183 4.43066 76.7183 4.5625 cv
76.7183 5.57227 li
76.7183 5.70508 76.6108 5.81299 76.479 5.81299 cv
cp
80.9541 12.168 mo
81.0181 12.4258 81.0869 12.4922 81.1943 12.4922 cv
81.293 12.4922 81.3706 12.4287 81.436 12.168 cv
82.7031 7.02783 li
82.7368 6.89209 82.8379 6.79297 82.9438 6.79297 cv
83.8765 6.79297 li
84.0166 6.79297 84.0981 6.91504 84.0557 7.07568 cv
82.4878 12.6724 li
82.2856 13.3901 81.7607 13.5811 81.1943 13.5811 cv
80.5581 13.5811 80.0938 13.3359 79.9077 12.6724 cv
78.3384 7.07568 li
78.2969 6.92529 78.3706 6.79297 78.52 6.79297 cv
79.4517 6.79297 li
79.5537 6.79297 79.6484 6.87354 79.686 7.02783 cv
80.9541 12.168 li
cp
97.4209 12.3584 mo
98.002 12.3867 98.9678 12.4868 99.3643 12.4868 cv
100.128 12.4868 100.386 12.2583 100.386 11.7715 cv
100.386 11.4771 100.206 11.29 99.6709 10.9653 cv
98.2412 10.0996 li
97.5791 9.69727 97.1221 9.13721 97.1221 8.41016 cv
97.1221 7.18359 97.9697 6.70801 99.3525 6.70801 cv
100.175 6.70801 100.772 6.79199 101.361 6.90674 cv
101.511 6.93701 101.583 7.02783 101.583 7.16553 cv
101.583 7.71338 li
101.583 7.85742 101.505 7.9292 101.384 7.9292 cv
101.366 7.9292 101.354 7.92969 101.343 7.9292 cv
100.962 7.9082 100.099 7.80908 99.4189 7.80908 cv
98.7939 7.80908 98.4443 7.91699 98.4443 8.41016 cv
98.4443 8.68701 98.6738 8.86084 99.0996 9.11377 cv
100.481 9.94873 li
101.487 10.5503 101.72 11.1099 101.72 11.7715 cv
101.72 12.9077 100.88 13.5811 99.4189 13.5811 cv
98.9619 13.5811 98.0244 13.5278 97.3916 13.3696 cv
97.2432 13.333 97.1533 13.25 97.1533 13.1113 cv
97.1533 12.54 li
97.1533 12.4385 97.252 12.3491 97.3721 12.3555 cv
97.4209 12.3584 li
cp
6.07275 5.72314 mo
3.84766 5.72314 li
3.84766 13.25 li
3.84766 13.376 3.75146 13.4902 3.61963 13.4902 cv
2.69385 13.4902 li
2.56787 13.4902 2.46533 13.3823 2.46533 13.25 cv
2.46533 5.72314 li
0.241699 5.72314 li
0.109375 5.72314 0 5.65088 0 5.51807 cv
0 4.7793 li
0 4.65234 0.109375 4.55615 0.241699 4.55615 cv
6.07275 4.55615 li
6.20508 4.55615 6.30664 4.64697 6.30664 4.7793 cv
6.30664 5.51807 li
6.30664 5.64355 6.20508 5.72314 6.07275 5.72314 cv
cp
26.9653 7.76123 mo
25.8311 7.40186 li
25.6841 7.35547 25.5957 7.24219 25.5957 7.11084 cv
25.5957 6.97998 25.5957 7.03418 25.5957 7.03418 cv
25.5957 6.90039 25.6982 6.79297 25.8311 6.79297 cv
27.9492 6.79297 li
28.0815 6.79297 28.188 6.90039 28.1919 7.03271 cv
28.2012 7.31396 li
28.9336 6.86328 29.437 6.70801 30.1885 6.70801 cv
31.8125 6.70801 32.2749 7.8291 32.2749 9.16504 cv
32.2749 13.2437 li
32.2749 13.376 32.1655 13.4902 32.0332 13.4902 cv
31.1919 13.4902 li
31.0596 13.4902 30.9517 13.376 30.9517 13.2437 cv
30.9517 9.30615 li
30.9517 8.17529 30.6987 7.83936 29.7798 7.83936 cv
29.3228 7.83936 28.8179 8.02002 28.2896 8.28955 cv
28.2896 13.2437 li
28.2896 13.3696 28.1807 13.4902 28.0479 13.4902 cv
27.2002 13.4902 li
27.0742 13.4902 26.9653 13.376 26.9653 13.2437 cv
26.9653 7.76123 li
cp
34.7021 7.76123 mo
33.4468 7.39502 li
33.3003 7.35205 33.2114 7.24219 33.2114 7.11084 cv
33.2114 6.97998 33.2114 7.03418 33.2114 7.03418 cv
33.2114 6.90039 33.3145 6.79297 33.4468 6.79297 cv
35.7852 6.79297 li
35.9175 6.79297 36.0249 6.90039 36.0249 7.03271 cv
36.0249 13.2437 li
36.0249 13.376 35.9175 13.4902 35.7852 13.4902 cv
34.9438 13.4902 li
34.8115 13.4902 34.7021 13.376 34.7021 13.2437 cv
34.7021 7.76123 li
cp
35.8081 5.81299 mo
34.9189 5.81299 li
34.7866 5.81299 34.6724 5.70508 34.6724 5.57227 cv
34.6724 4.5625 li
34.6724 4.43066 34.7866 4.32227 34.9189 4.32227 cv
35.8081 4.32227 li
35.9404 4.32227 36.0498 4.43066 36.0498 4.5625 cv
36.0498 5.57227 li
36.0498 5.70508 35.9404 5.81299 35.8081 5.81299 cv
cp
19.2207 5.36182 mo
17.9707 4.99658 li
17.8237 4.95313 17.7354 4.84473 17.7354 4.7124 cv
17.7354 4.58057 17.7354 4.63574 17.7354 4.63574 cv
17.7354 4.50342 17.8379 4.39404 17.9707 4.39404 cv
20.3086 4.39404 li
20.4409 4.39404 20.542 4.50342 20.542 4.63574 cv
20.542 7.11768 li
21.0586 6.85254 21.6846 6.70801 22.3696 6.70801 cv
23.8369 6.70801 24.5288 7.66553 24.5288 9.28809 cv
24.5288 13.2437 li
24.5288 13.376 24.4209 13.4902 24.2886 13.4902 cv
23.4463 13.4902 li
23.3149 13.4902 23.2061 13.376 23.2061 13.2437 cv
23.2061 9.28809 li
23.2061 8.16357 22.8628 7.8457 22.0688 7.8457 cv
21.6792 7.8457 21.0586 7.96484 20.542 8.21875 cv
20.542 13.2437 li
20.542 13.3696 20.4346 13.4902 20.3027 13.4902 cv
19.4546 13.4902 li
19.3286 13.4902 19.2207 13.376 19.2207 13.2437 cv
19.2207 5.36182 li
cp
51.2202 5.36182 mo
49.9814 4.99658 li
49.8364 4.95313 49.748 4.84473 49.748 4.7124 cv
49.748 4.58057 49.748 4.63574 49.748 4.63574 cv
49.748 4.50342 49.8491 4.39404 49.9814 4.39404 cv
52.3193 4.39404 li
52.4458 4.39404 52.5415 4.49609 52.5415 4.62939 cv
52.5415 13.2437 li
52.5415 13.3696 52.4521 13.4902 52.3193 13.4902 cv
51.4482 13.4902 li
51.3213 13.4902 51.2202 13.376 51.2202 13.2437 cv
51.2202 5.36182 li
cp
59.3096 23.48 mo
57.9478 23.0698 li
57.8169 23.0229 57.7148 22.9229 57.7148 22.7905 cv
57.7148 22.6938 li
57.7148 22.5615 57.8169 22.4658 57.9478 22.4658 cv
59.3096 22.4658 li
59.3096 21.7388 li
59.3096 20.3198 60.0366 19.9409 61.1904 19.9409 cv
61.4985 19.9409 61.6963 19.9785 61.8896 20.0254 cv
62.0034 20.0527 62.1113 20.1094 62.1113 20.2168 cv
62.1113 20.77 li
62.1113 20.9087 62.021 20.9624 61.9126 20.9624 cv
61.353 20.9624 li
60.7827 20.9624 60.6323 21.1128 60.6323 21.7388 cv
60.6323 22.4658 li
61.8408 22.4658 li
61.9727 22.4658 62.0747 22.5684 62.0747 22.6938 cv
62.0747 23.2886 li
62.0747 23.416 61.9727 23.5054 61.8408 23.5054 cv
60.6323 23.5054 li
60.6323 28.9165 li
60.6323 29.0425 60.5234 29.1636 60.397 29.1636 cv
59.5562 29.1636 li
59.4233 29.1636 59.3096 29.0425 59.3096 28.9165 cv
59.3096 23.48 li
cp
54.4204 29.2534 mo
52.5933 29.2534 51.6494 28.0322 51.6494 26.2886 cv
51.6494 25.3447 li
51.6494 23.6021 52.5933 22.3809 54.4204 22.3809 cv
56.249 22.3809 57.1987 23.6021 57.1987 25.3447 cv
57.1987 26.2886 li
57.1987 28.0322 56.249 29.2534 54.4204 29.2534 cv
cp
55.876 25.3447 mo
55.876 24.2388 55.4058 23.5303 54.4204 23.5303 cv
53.4404 23.5303 52.9722 24.2339 52.9722 25.3447 cv
52.9722 26.2886 li
52.9722 27.395 53.4355 28.105 54.4204 28.105 cv
55.4004 28.105 55.876 27.4014 55.876 26.2886 cv
55.876 25.3447 li
cp
42.1929 12.3618 mo
42.3066 12.3545 42.4146 12.4209 42.4146 12.54 cv
42.4146 13.1479 li
42.4146 13.3218 42.3667 13.3945 42.168 13.436 cv
41.832 13.5083 41.29 13.5811 40.6411 13.5811 cv
39.0425 13.5811 37.9893 12.522 37.9893 10.6592 cv
37.9893 9.63086 li
37.9893 7.76709 39.0352 6.70801 40.6411 6.70801 cv
41.2837 6.70801 41.832 6.78125 42.168 6.85254 cv
42.3667 6.89551 42.4146 6.96191 42.4146 7.14209 cv
42.4146 7.74854 li
42.4146 7.86914 42.3125 7.93408 42.1973 7.92773 cv
42.1553 7.92676 li
41.6475 7.90283 41.3267 7.8457 40.6411 7.8457 cv
39.8779 7.8457 39.3135 8.32617 39.3135 9.63086 cv
39.3135 10.6592 li
39.3135 11.957 39.8716 12.4438 40.6411 12.4438 cv
41.3267 12.4438 41.6475 12.4023 42.1499 12.3657 cv
42.1929 12.3618 li
cp
17.3667 12.3618 mo
17.481 12.3545 17.5898 12.4209 17.5898 12.54 cv
17.5898 13.1479 li
17.5898 13.3218 17.542 13.3945 17.3433 13.436 cv
17.0073 13.5083 16.4653 13.5811 15.8169 13.5811 cv
14.2173 13.5811 13.166 12.522 13.166 10.6592 cv
13.166 9.63086 li
13.166 7.76709 14.2119 6.70801 15.8169 6.70801 cv
16.4609 6.70801 17.0073 6.78125 17.3433 6.85254 cv
17.542 6.89551 17.5898 6.96191 17.5898 7.14209 cv
17.5898 7.74854 li
17.5898 7.86914 17.4863 7.93408 17.3721 7.92773 cv
17.3301 7.92676 li
16.8228 7.90283 16.502 7.8457 15.8169 7.8457 cv
15.0537 7.8457 14.4873 8.32617 14.4873 9.63086 cv
14.4873 10.6592 li
14.4873 11.957 15.0469 12.4438 15.8169 12.4438 cv
16.502 12.4438 16.8237 12.4023 17.3257 12.3657 cv
17.3667 12.3618 li
cp
49.8477 12.8789 mo
49.9834 12.9229 50.0879 13.0527 50.0879 13.1909 cv
50.0879 13.3218 50.0879 13.25 50.0879 13.25 cv
50.0879 13.3823 49.9805 13.4902 49.8477 13.4902 cv
47.8149 13.4902 li
47.6836 13.4902 47.5708 13.3823 47.5669 13.25 cv
47.5566 12.981 li
47.0166 13.3257 46.3516 13.5811 45.7261 13.5811 cv
44.7158 13.5811 43.7065 13.166 43.7065 11.603 cv
43.7065 11.5063 li
43.7065 10.1724 44.5059 9.49219 46.6221 9.49219 cv
47.4463 9.49219 li
47.4463 8.98682 li
47.4463 8.09131 47.0972 7.82129 46.2734 7.82129 cv
45.498 7.82129 44.8213 7.87939 44.3813 7.91211 cv
44.3218 7.91602 li
44.2075 7.9248 44.0981 7.88086 44.0981 7.71826 cv
44.0981 7.12402 li
44.0981 6.99121 44.1763 6.91309 44.3369 6.88379 cv
44.8252 6.79297 45.4507 6.70801 46.2734 6.70801 cv
47.9629 6.70801 48.769 7.5083 48.769 8.98682 cv
48.769 12.5308 li
49.8477 12.8789 li
cp
47.4463 10.4004 mo
46.6221 10.4004 li
45.3472 10.4004 45.0356 10.7368 45.0356 11.5 cv
45.0356 11.5967 li
45.0356 12.3242 45.3716 12.5166 46.022 12.5166 cv
46.5137 12.5166 46.9829 12.3594 47.4463 12.1079 cv
47.4463 10.4004 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
139.623 0 mo
139.468 0 139.373 0.0449219 139.306 0.115234 cv
139.237 0.183105 139.192 0.276367 139.192 0.432129 cv
139.192 20.1436 li
139.192 20.2993 139.237 20.3926 139.306 20.4614 cv
139.373 20.5298 139.468 20.5762 139.623 20.5762 cv
144.778 20.5762 li
146.782 20.5762 148.003 20.1196 148.745 19.1621 cv
149.837 17.8521 149.871 15.7397 149.871 12.4995 cv
149.871 8.07568 li
149.871 4.83691 149.837 2.72461 148.745 1.41455 cv
148.003 0.455566 146.782 0 144.778 0 cv
139.623 0 li
cp
142.463 2.40576 mo
144.28 2.40576 li
145.085 2.40576 145.563 2.53662 145.935 2.98193 cv
146.507 3.66895 146.557 5.05469 146.557 7.8501 cv
146.557 12.7256 li
146.557 15.522 146.507 16.9087 145.935 17.5933 cv
145.563 18.04 145.085 18.1704 144.28 18.1704 cv
142.463 18.1704 li
142.463 2.40576 li
cp
173.782 0.432129 mo
173.782 0.276367 173.735 0.183105 173.667 0.115234 cv
173.599 0.0449219 173.505 0 173.351 0 cv
170.94 0 li
170.786 0 170.69 0.0449219 170.624 0.115234 cv
170.556 0.183105 170.509 0.276367 170.509 0.432129 cv
170.509 14.9844 li
170.509 16.5034 170.394 17.4067 169.901 17.9482 cv
169.565 18.3154 169.093 18.4951 168.429 18.4951 cv
167.827 18.4951 167.37 18.3281 167.022 17.9453 cv
166.556 17.4312 166.413 16.5576 166.413 14.9844 cv
166.413 0.432129 li
166.413 0.276367 166.366 0.183105 166.298 0.115234 cv
166.229 0.0449219 166.136 0 165.98 0 cv
163.572 0 li
163.417 0 163.323 0.0449219 163.254 0.115234 cv
163.185 0.183105 163.14 0.276367 163.14 0.432129 cv
163.14 14.9897 li
163.14 17.1079 163.428 18.4375 164.271 19.3618 cv
165.146 20.3247 166.468 20.8364 168.472 20.8364 cv
170.498 20.8364 171.804 20.2944 172.606 19.3608 cv
173.55 18.2632 173.782 16.957 173.782 14.9897 cv
173.782 0.432129 li
cp
158.223 20.1436 mo
158.223 20.2993 158.177 20.3926 158.108 20.4614 cv
158.039 20.5298 157.946 20.5762 157.791 20.5762 cv
155.155 20.5762 li
155.001 20.5762 154.905 20.5298 154.839 20.4614 cv
154.769 20.3926 154.725 20.2993 154.725 20.1436 cv
154.725 2.6001 li
151.628 2.6001 li
151.472 2.6001 151.379 2.55469 151.31 2.48584 cv
151.241 2.41846 151.196 2.32324 151.196 2.16895 cv
151.196 0.432129 li
151.196 0.276367 151.241 0.183105 151.31 0.115234 cv
151.379 0.0449219 151.472 0 151.628 0 cv
161.319 0 li
161.473 0 161.567 0.0449219 161.636 0.115234 cv
161.704 0.183105 161.751 0.276367 161.751 0.432129 cv
161.751 2.16895 li
161.751 2.32324 161.704 2.41846 161.636 2.48584 cv
161.567 2.55469 161.473 2.6001 161.319 2.6001 cv
158.223 2.6001 li
158.223 20.1436 li
cp
/0 
<<
/Name (PANTONE Cool Gray 8 U)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.01 0 0.43 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
175.965 30.8726 mo
167.698 35.2104 li
156.995 31.0483 156.093 31.0483 145.388 35.2104 cv
137.122 30.8726 li
145.388 26.5327 li
156.093 30.6978 156.995 30.6978 167.698 26.5327 cv
175.965 30.8726 li
cp
175.965 41.5972 mo
167.698 45.9351 li
156.995 41.7729 156.093 41.7729 145.388 45.9351 cv
137.122 41.5972 li
145.388 37.2583 li
156.093 41.4214 156.995 41.4214 167.698 37.2583 cv
175.965 41.5972 li
cp
175.965 52.3218 mo
167.698 56.6597 li
156.995 52.4976 156.093 52.4976 145.388 56.6597 cv
137.122 52.3218 li
145.388 47.9839 li
156.093 52.147 156.995 52.147 167.698 47.9839 cv
175.965 52.3218 li
/1 
<<
/Name (PANTONE 187 U)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 1 0.79 0.2 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.1
%%For: (PeopleGroup) (PeopleGroup)
%%Title: (DTU UK A2 Pantone.eps)
%%CreationDate: 06/03/08 16:01
%AI9_DataStream
%Gb"-6H]oG[OXKo1niPns16Zl_[=L8'[ru@`I*??UHC.m)SMAf")oZD^>d6g?RlrggVa(4W"+`_1Wj7LFGAXeRS.R87&TENCiU@Wp
%5PidPL[X)LrV$2^DEe!U5<F5$SAQ8jTpBanbNVM]qX8?PqrZY<buG*D5f9X6/VRBkX10L#NcD`^W<@P8q1mSZh7e17kr0\K]RKJ>
%\'I7Nqsa.1T:KoW]mBXDduUY]T"]OHp>)4)+$SPqqK/lA$Xh80Fn=GDG@1C8]A#Qaq+-m="E=-nTDneuYQ"1VB4q3J^d!>KqV?@&
%^\J?3q<%"8hpTj.ieR(>s8D&K:S3GT6L$UXSpgA#V[p7+cB!HrrN"iSqH#>qNX#FYT2<0"]YU1fq!d_L:ENsBrESHnB>=Ar?ZaWo
%m(AkEH+>CTrK!TE[EpRbj*tOJVs"(R*QdKbJ,&E#5J@$he&PO^hL9_LDhb]5j3P4Yom-Q,5J?s`a&h`TcelD2lhS^_YDBmL]i!!T
%<QJs8rorI42t%4/Z?uR0hgKlnIeNM;mi0fh-i)qTIIlm_LVHso[qkKf2d^L`9tR%3r4fsmp$JB$+qs[^2n+9bpZg3HOe]<^gZ[Hn
%W5Pt>=)C_W_JNSg8u6(r].@ARVs:GM>10s9jXSmGV#;W^DuT_&S%npgr6&0FhnK-_iS-ST#lWoQCQZ<rO.X.6qu;a7V);QSP4G%;
%\>j\Ro)!@?HhZ[_n)(nY,gpc4o2RjHjbL%s]Hbj/0/)4rJqP_8BDTBki-2@groqZT>!O1dI>@(bfsra3'?U"cYQ"O`j+cLDIspqf
%G9?gPl#q20a'=HFi_6pe(Iqu]fq2@/cTV^XG:l09b&fW-)BGLjl^sR?UYjFMq";\:IsV"kB1cJ*lCU8SrH_Zn`KN"Hs+n>=mf-Ac
%J"`)2rTVe#pI[HJg1S1UqH9,b?[bQ`?bHF8fnWeU"tdt>h2kIJ-R!s5iD9#KqjW)/a1qMP:s\%6qUGgc9iFQ1SpnYne?=>mmQ::0
%T0@`!m]Sj)s36>JO0?=tnAdKNhn8gXB+k,$n%\kq-YJ.Tf<[S*cnF8Tq\t)l]mBS-TA82Ymlj'OrcJ/4+90r^f:V88"`/[:q;'e$
%D]\?1bL^.Na7IQrn%Sblq004.)h%UU)OUqE.,+\TE;YG4GlR+(_W`9lD(oFnjmdu@6ET^r5X570H[kbSh7L.GqY9?ZIt%9@L1'S!
%_^)u[!ZA+[;Yod+rbDI>+I7MlrSrZWDnj!AUp5RMk1.LJDdU8+oB"lErUf7GiSL0@q1e6hNbo2Qnc%G']_h3MNlVEMp&=:Ks*XM0
%YP31!C&6uZqla^fn9WsDpu1qMY]nB"rqY)Oh_;U5rqqp`IX-J]^O,YQe]0J`>F//N,ep/$p*rXAXjcnW.E5]erUd#^keqk_H/JQo
%k/>ki8_]D*_j^#<fB;$hmsi9II=RE60B\h.:ObA&\'rNe044533IRLHkCu1PoNCEWku6f0l'(<EknE:@l/V!6i5:W9^ZY67G'`]F
%`=7="l*Jg9d\lR^djNNjngDf)e&UukH*KJE)UQZKr:c.72lGgtoXUjFb+D:u_Oo&E7%_Pm^`UlEa.MJhnr*hHlihmK`tSE4r--&N
%C]:F3WVe4AaneU*M>@PTnbAXL+4kq,rc@[/5,\FEfNjj/Wi&XkZ)3t*WN\IelOBP9:98cP/ur4T)HO/Cf=[EWY3UDIh@OZDs,6R3
%olBH&rH5W1fBICJYKJddJ%]/q?f04$SeL!ghCS;=2uY/Z`1(k4ku2Kbc$FGZKE%MT94-JeAGR:n*b\(]?@GpM4T:U*El1"c:2D-Z
%&h=tY2@uY"nk9^IWE=F\DO@cVC$'(5BeD-8SnC$SBW;_AI:6!'86iKO?qR#sjH'ML/4$-U>ECS\)Is>`#8r1G671:tMl6&DAlf,u
%KmrYY@eW22GQ,uk2]khUGeYef>Po,"\>1E(AZ<ka>SF$,Ods',m#,r1]ATDV0"^,C>MZ^!iAl<]6[Iu5n%AD28"Y/mq*HmJqJ1RJ
%!q;^jq'A$j95q_&&7S0RLCu's9%W$VjlJLBjCMSjM`uk4@u?[<-.]TGlZdIpd<a)rj(2DW90S%tD,NtdPuPk/]r'*bc.$f<7c;OS
%?1p:OQ^i*A-'Lm]2.'k5o<T)^O;H-VV78kQQ;@i-3GH%^^KO1Bb&nld@!R7IlP.QLp?Z;*L$4up6@9rl&7Gi!`#+(7;2-d^n2bm@
%,5m+kDILA9BLB;IM<#Tg%N1%d6d?k>OEF+k%5156p_T<AP'Y24,Tj<&l&T3W/H@>QEmds<Fb#`r_s@.ZYD3oF0sW.1.^1P019`ZQ
%F^TW*Kj]o0.QOb[Gg8tD"UgeN(WX]^n=m1!P?D,2b#ql>gpHbGS5g)Vkm@3Boo^l%^fjAH;eD"9$d+d"/ZS!8&nPM)dc/5g@Qg16
%o'.#n^Vha2A>clYCl-j9dY5Y<Tps&ChCPgTRjbp87,Ah%D[G&+T(+G;ZMr1OpB0aYKsa$"r!f_"H=C`_=GK7f0<DFNZ\lJ/V-I+/
%7om0\Fm9?Dcnh,fCRVM#Z^5AQ,L*6d).$'+rsRiG1RcL&&rB3nP"A[uac.Yc>%ijJLss[`^9:,jaI=G(9I,aO`7(grn_jYr`\Wd7
%CD+j;+plR@m?&[OdjeIU>;'[4Srqr9POqmZ9psR4U_W$+XY%K=(Gr8?8@Yfo_CI4_9M74j@eI*AQP6Y&"jR!%P/(j:#*i56VNi3:
%c$NXk$VekRP)j6$V:W(R.]qH!arll,n>&;bR_BR`6dJ;dYA$/M'BtrZ3[^*YnYCdQRc>20B[96)YA)Ba>5jr><[@A"8W>;I#;8Ub
%T@&h3VM//EiFPo7OVFH977aKZ,rT?$@'oQ^-)<7OBhguh>1>-u,+=*c(=o\9YgBZ%ZI#qPBq]<2gPW][NGCRV['&Y!e\%fWI%N@Z
%gT+[Z^oDm2%4jQm2"46FT<RGg9%_X4;o5VgT+<u-We!r-"`3I*Pj^EU]W-0Ce%&KOXlrs9ZiBCq<eZn:H(c=bB?\k5N>5RcKp=mL
%_M(4B5D_TA;E0BG;?/_mLZ\bTSiJ&CdPI2J)jZM"js"==;?Al#/1Zeta@eL<q9M?G=EIl,fuB6IN.hOH"@63oQlo.XB/?eh7A0i)
%@)>^$'JU\4aI\<h`1dHE>?P>@Md0jK@NMf<Go!`?"jh*1\F;+n_7G#%AbHN'oTYVd,jQV%H)JY%Ff&ouPGh3aKX9CIW]</sC"h&.
%VeOMNeuEC\etXTmV4pXPSVf`KQ0NYT>d,`_?@C+gl]#Z2Q+,Ve3``V(4L(].<jn$doHgQn(VHS/A&Wf4>Q$EtqNY'"@5XS./;X39
%=XVTZM.!G0)n\tOC%6e7N9=ZYZf,oA-HJ(1D1(]bdQVImSQMN=-alh75(<::_e7XdVuFkFT=o(=iNujTe09Z^3NqaK=dG#=^HDJY
%X1Nhpq=`l/fIFXhokL2nHEN(Kf@?J,YDMnE5K7fjrea`Js6/u3H:Br;7SbR:H&6YgGPWh]6]aF`:\fm68N_bk\bEP[52+?NMY'.r
%]6k?7EIAXI2;oT5<-n8V%[&+6]01H;M4V5&hHY,CZ0,HfQ_3-IH$=`2pNIT,+K'Pd:j;6NkPg84oFLP-1#n,8Fn(2nZAJ#&3/:pK
%fc%V648ae7i:b[p@=PLOVnn2<,GPi</;!i)>o;QX6m8uU`"mpViX_G_-jr1Wi'G6j&p,6<l(eoH)iHVY6Nh$mJddA3TBi(?+u*fP
%\@lk</"7>Hk".tI8$V+A+jAEE]I3b7#sV+Y%qPL-VSS$jk[AE$hJ)MO[ZJDib$.*uIqZ[u]sQ]UpOBtZ%Kh9h@(11r6qn?k<n8e<
%Yqo!5.%;H^b;:dK_-N=KZXMu\nl$AP-W916Z>O?T`9jPWO7H8P,lR:$MH;Y6e3,\b;%0=TKciUA'pcodlKk@hO8Ms^8Q_/Ri%rih
%4Z3,!T3<F5RW_2E%k[7q2OjZTnTl(_r&F<2p[@"S\pa2Cq+h>YYCUM_)3d1BAdGY+q9\="?eBedp,TD(RP[&JT@,o4`39#Gk<qI@
%M;sM$r'I+`*$JN]XAU&D'KeJ-;8W`tII=s5[^)6?c'm2b^!GAeJ&s`QZn=if:,21r^6RLoW8K;tTSdt9!&eu4C&gRXnd5<c,RV1Z
%'_=\h!,kselrY6m=<@(+]D'4JS!3d!52l!f]2../Eq_$R3GD`tC37Q]fBmXST.M#R>X'kerZiR1oAlErUZ<(F//<G#:)]^e&67]f
%\agfTEp2PPK-3+A"QHB1M.7eDEg?-Z8b=@AS$8?CD?=RiBnH0O"M&pXls0&;IrL2;bK!&Ddh<hqGC;r3I*Cb%]_"5Ss'U",3qg+V
%QhEFVIs0gnr&h&E<Ge=fg/DR&<1po3/R:2Dh5et&e#&U(24\Jc[F;5RELhD5'rst#Uj=q5I'`%72N>=`4S5N8h.IW`I::i2oe//+
%4(3dJ^mG<%O>ZYi@n>a1Mg0-ec@)X4$Zp8pc@(e\KfEY;5??Y0?^9i\Kn5:Ni499t>6pUK^b#UM`.33#5%r&%(inH%Z)>5#=;cnA
%ImFA;DYggZp1Y>_Y$2`I-DFl5:Y-S1W1RDD!S[_(s&IZ:RH+@2=t-/A!Bf/S/f126!6tgcdt_mQE[r#n=0?/UeZ6u:<0"%n2d5R7
%Zt6;fq'ngkoVY?9IO/KOEJQ0_-n"o$FnouTma6++m8?Ts5>)>W`f^K[RDcIo3nsS<k$iO9N.igZ^dB;eS/t0tZju=MQfpJ'r1`>G
%B1^.C,oq2qZl1'ncV=/eC/hQ,B"uf2S&hSr*.(%!*=S44RF3Q.S=.VLNCi2C0lQckg<.Z<%Ys&"8S7C4#Z]Ad)u$Up4/*H#fhe$'
%&qg"+RbFose_1nCUVXN#<ln#u2,!V]c;O&SeBLPO:"6k%\san7HL''-^0(s#N;&'@2qpOsbO[sF:qUkP5K?U=j(oTtMa!=E;u<Zp
%kL<5mh$^r(o)5lO07K4>e&8V`R?:"cq[TP$e<u5AYP\0&.oCJeQiD&kRU8g<ghJ\$HIH^fhCd)PT/J4fWHR&!(>Wl]N+UmZdZ"H:
%D[uH[cn:l=d[2'p62bnQDBO%[K:Z6hoLWK<U\T.\-k%RP<c;*bMCQ3#MU%GI<`CL!p\*gpT$FoBm^#KoM0OJaF"nG3m-N.PA2<gM
%+8\&-JFD1<4d`irn1q=5:Dc8':YSO6\edJWcaEWCL8XR1VfL=p4dS%3_8$(-"PHOZ"LEuK(s^RpCpj\?c+^p([RS6ooT1'Z/a;IL
%gR6_`[Q<"a[^)N-dMK8*93Q2mAYgJh-'L7G*7,ElI:r!)gZek;3Vk6BqQ0[-c+3#-U15-%njjaM$U2Nk%-S)R5K8<ST7;=el-4^?
%_hM\_n%KEAr'/X!s*H)c*_O=WS<j#a<(Sa(kMHpIe[n+>%>nVZIgG@)KQSoKpBfkIJpaK#53<+`+1d`4ST6]NKH$g]cQD#9nLmK,
%mOONI6qg,MTaf*sq@C..5PjY,/]3aoZ[_d4J,LJ]kPlaahp1cibOZhTD)m*jn:16cL:ljAG(XJ+k:[+Ja4#[JnJ?tP!-un(IP$sd
%?Xi"3Qi5n&\ff]'(N/nMAMC(_KktPf^MUZ=I$IR:f+Ei1`k_s=/mXU0V]F!Vr6=DGE*&_A0`K[8JK`,Ug^Z5M"mD$>s4mS4cAX@]
%2%9*TYk]_IiGB_*RiYsBdHt@7'0ch-_[\N_gsP,*N)<EtKNPB"r]=43&pEUZA$DO2a^=jd#8qJ!.4bj8c^(>RjDqYoZ=?PFg9G3Z
%M=MedX$YB7%iTF+/_W929DL2k2L4OqeiP)q?qaPVb=`?bY`A:+=\.Z"8MYiW82#r1P>LQFlS,BXoUlf^+>H#p'\'J*,c6@MSFim;
%=H?T1k!4hh0ZI_.B8fGVcNFoLRIp33RF.`adt:,k7ZE7sc1^NFX)k_,9p4pEKEa`sfL\qqdqIt]SPh4I&@7(#'A)2+l6_.*PjC+C
%*J5\bLaCj3h_!,0eT=b;'D;+?j77\U.6T7=$(;-gJpLTI3iA;ZPH1904"W0i^U%3\[[AQM;S):mV8of392E`Q=\b:,Ch'u%P'U;l
%MnG7?9A.2;c$O`hBq^Am3i\@"o'>Au;RZ5)R(Q[9rUdHjoF5IW4%=#*XrRE#;uanDPSsX.5jg7?B;R((qIH!OkiMW0PF,chW3:#c
%3QJC\P!OcT@2#EqW#d9Hj=\'`:Ir!S+2`s=,rJqi1NKi(p5HN)<g[pFXa.b]/0ru'qTM#_PJT/8C\[US]t.9-G?Uep:AAG,5&VOq
%qKb9u)0dAI7%qQm:-.W@hW05JmrlT,am4^FZ"]Q:p;,F*WFSspM[3G1TW"'k.joiEA[9GNCmc-&b?_a<CpOg:!\JuEU=eV#Aj8%8
%d]unVR7E0UVN*$-H[3\%I*A&Gn_\%np"8`=%/kj4M\n/s]l$C_N3#/amP;anb]oA*1A\5Ad"=nSlo''Vr`t"LQ.2CsfhO<WEUL0B
%7s]W6H6FF6h#AW#K4tVMb>5<*If0*=bJ3tG:JnMQBBMk>Aq0N*&3))`N$8j3jr#Rq3B\gG0_B\G_5q/.rIAbr[HG;loEeVA:KTW8
%!'uSqTHkW3<k*lp$*3g+G/pb(n*'UhaVAMmBb;q!^ajR?8;kfmRXhaN]hB,.:bF"$=%b*F:dlZ)i^e-eGid)RT&6g$+;$#q&sRk=
%2$oLh8ZgLG,O%c(7'7_u.tkdH<PG1B6[3(M$7T[F,.m!&4QfPE]Lu7u:@Z7pneeG[1*>06l'[ePLig8W,%0Ad=(P)uk[@<VPV#-;
%fNcO#7d?19o+:+gQP,H27>F^B_G[@sZq:dhNRk"X[dM:<,@g7FRCGj'j/@L:UhTH&U@i)^`N,89Ns;,WOFON$:b1OK9Mf`KKlU0c
%L^^E%L'HN(hF@9=Tp^Bh)jZJm,as0;7bg>s+WTLs'!VgeZ(bT::6$U"\XlkV2[[T`UTpo^>\X+n.'LRgLa*j3?"BHOdgY0[4eeLE
%OC=Ea5[Vm@<\NL4SkU^,<l1Tu.S0mZP-TY#k9BT6ig?V[iXV`fiB\iV(%/1O\k(f:9'`#!ot2''GUJ\HCF6q#Eso+*7HLV4B!4&j
%e`6.P0TEHu)KW]-C6<.c?!qNoW+KfJq&7@$+Gl.'(c9`u6QFUW\6NlqDTVERWS-8M(E<_rn_$F9Y]1@O>,fgT#mcW5P?&;D"=kMX
%gl_s_NFYJO*qV]sR3:@\*NctRJtQ;HSR4o9(YXtA[Nl64B7sjNYC]!s#"@5o5u[p)gp5B)^qt33gJti'b$E*f!'Nt'6B=oD`REgs
%&;PC*3?O#dj!7liQRhHm[-7f5-Y*XDP*,%(T`$=Z(!DBn2$I9b:.,8$@kBb%\5JI!6E=5BO@3^93U&4MSQSHG6R:7u[=/2Kcm'8m
%Uj]N3A<8,gOa.gXq<Col?*rpLkJX'iC\]ZK:%OI23>.'uHWF4s4QWT+;/mot6c,UVRA>5,KnhJ5[@#YkL-f5+9(JG\kf*0=B(3Vb
%RJ&$V_b&1OXRnm7GXs-f%bWuP,^+H:$]/t[2'f4R@1nD>NlObY`1KHh7EVJ%W)&K7B`fYr@Xt.>_WFpj9Fkj=W;9bIW(iP3_KK"r
%raGYcO*-R3%]$Yi^(XmN7Tu_W@9QSp9?PY/Rq*&!OuD5`$`UP0H#eK0UI[2HUhuV0W]Y"Anl6J21F0b;+YGXG*J\.b`&:;paBM_<
%3h\PWfa[a&*?19k`65NN(.A1u`el5#\@BW>m?95mFt;5N4=#7'L:$?MfS4'6nIE_-+NTLlYKIP[e(:ldZ!tig9NBWE'Lgj3$B/e7
%Mh#\eD'-dHp(1C594`tBeYNI]aOlFRaq.f8h7:=u7a&cO5,U-;(!6](];A#M1uU2hCfet$\rUAq,S,ao.BB0h4LAQh?]g?mc32mT
%<gl-gRBg]jd/"';JMbYMgBPYm2K5ipV0O%UP?XtR(aeI_P7Gra4dSWg<3h0V+DGK9Gm`3XAPAmfnr!;N+G=(o'f6:75EMo8AdT+o
%?EP,EnC:2<dSRU46Rt/18J6HAlXSIG='H2,N?50D;Q7nFWO/QW1h9feLJ_pKNO"E47M8b0r2@;)N00>sW4HhRT3bTb6"4B5Z,OR@
%5%#u,J8+mJrA_edldJ>9(rJms/3Z#@aF4T2RuhOEL6905*lrG`D9/-!"#``,NB+)T6%KQ+NVcRi$CK<J3.]b8X`gb"'CWW8MQ(7t
%"GV_;Csm)U_i#9XC"r7E:ui7X&kn\M$:?])j,$5uo=MjmZOPWi3GR5h!,,Vof./,dAt5);Rk:k_WiN6Fl8-a:%'.?N%KkES$:C>.
%5a0#.FfVVP-C26!-MK&lR+O8f1;sI*P"Q(mB\R;br(l#`<a:)j1C3D'UN!8(G)`S^Bk=>Xh$/D"3*MWtCg"&jBi8[?$`UbX-T2WX
%*Vj=D%g-R$"1C#>K:kn0(<-"poN8=8(/A\c%*_Pa#+!MgUNSblUl/p$QVg)=@61[jXLb*7,EHV.`.3e7B/U8r-FI@J;&`pi:6Mnq
%T`unt16i_D)lkjVREX;sFjA$9[,G"&2X+&H1iB-A]RDtMD1a+a^>]8Q]U_rk%>?0lL?t[-%'bBHOG:V!]<Zuj6SS5PPb+C9_5;+f
%-+ZZ%*8%YuS^duH0*$^+4sH-5dmn)hRZkR2_m&*^I1tlQ0+Ff0,1_*mV8E5^MPJl\5k6j>WUTIlZHVHb`s6Cu&a@-r2NX["B^cXm
%="u'jZrpu6n#Fi"*#?g$Q%DMF%Cp@M.<s0e7ahSrH_:R.'"NIKSbSIXr=P.kGW-R=)sSnGeA2+lMeo-;)HUp_e(.b3U-#*(%P;DO
%JrNA:*U'h0Oa*K)*&hS166fH)_>Xk&/B:s.Fm`6'&H+U8H+J:c(b*rBJ-AEUnH9!B^Vqb+_g)$/-BE?\;"q>DBYIt&HQU6TY:^jC
%)JSl,pp%f8,XiQ_!Ld'&$eW6?&%KS+P@&"EfbP]M/rCRE7p``/ZeVeM0Q#<FaMjW+_PTAV'"tl-X;"2fZ*L*`Go0",qAakLZkt8$
%W*<uYVAP75Vi(m<bN:^ab=uA,6j!'-+ojO)Pm>/7dUp?5^U_uJog,`99"O/AC)GI)F;HemEY(Hk@%0k[>*-BPFqJQX%>1mi=a1\/
%9j0pZ,>+>%@_^8FTje[BU%Mr6K+m\bRi[Pgh8CKI21SDX_Zo^82X@3N#%Xh;USgNA9#.kSA?RYt0*Hq1'&57PL!eCLP(rTo217rK
%(?l:J?#6\ML`9`u@2lNJ4H-1J"N%fL_!4Hh,%R![c+uA*di4ElJd^4?^+d<b>,B(?P1*tS'>HQ.C^(]\dV*Rg`\>u0*8N?YJQPR&
%feK_0'`tig45h!&a#^f!3$R:M2'(WI\B;$`1I1jFC*4:F0AasnEiD%.#e-.rQDB`<8#O00ZKVGa"@BA\6%M:/VQ!)Hc<P;A44rA>
%(:0!P!s@2W&4n]E#G)Z]N.f96)+63c(f8+b)`?Vc"Qr`_o10IXXOs%fWG/RE+Z\o&:dW->BQh;(=;j._QQ9]t@VJ[XEjqd1#gEdo
%p_IC?T[c^^JJ5c5kQmZ-#F6s_9Vt73i8(AR>1:p1p(=!%=p;j,F]i/mi0&pMe?V"!`/9_nE#3ke6-gjeEG]HFnQ[UW?8kZ#j_.P$
%.sP6BV]^n*;.c$??WZ)_<_57N8=M,*TBp2O<Ff8a"gRR,ih[eF;"R_MrN'-C*(o0hE%`SA*>e(d(,Ub]!r#[f?"J8DE/im0coe^U
%5aTXs[PFd.Quq"*r?6O@10^]Hp&knI(kLrdFZj5QV>bb\%Am&Ka'o.3H1a'q$aW?>Qs.afVWXX]+p)Co'p6$4[l6`YMophu/>Io\
%bJl<gdtGF!U1$0N8jnA/m)>mQ#RS-FC^CBDq4`$kU7uJ3&abK:&iFG??s0sEUa@7W_idU1Bgpf4+hC=Q$q$J71o:W8$`$5#^(miC
%+U]09"uCJFIq"H>,]W=6JR8:e#7n'HU1$/#Mo2Oq3dA5u\eRs_TS,/1;br'$OCmLV/#'I(S5)++YDImuc'51uWR@#@d-IFo?\PA2
%Tt$?3+[u=CjN'XE()J0m$Tg2QMc$&3'pHi]K+/GONc>o%E4>f20V6HfKGT[]asa'#^?MA+TEs^fFVAbF6ZX62gk8mKAa!%Tbj.b'
%"`'#i#@dRr>[fjJ:ersR?j@?sK>8P+c30R];h8g*Md[L-FiE(i<$D.pR?Ke@1UWb'33^SK"W7^P)h;a>F_q^hhUIZ@X3mZ5<MH&2
%dD;;56kTod'Dk.9?,RR<.(5<$*cV1WEl&8!T=6M/?h;E+_JNeWEO(L[[d8&R:\]/Gie5SmL@>_&#LUorc/Zl'VHfFY>Tr/GLRoKe
%IpFu!@$A^IXW#nS&QU7?h2I2JLmr%l]paX[Z_[A9Q`/A$#8Vnufj\Y-TJ]A7'0.tW6e3MB81bIl<HCDI#VF5/g,mIVMQ=b@iZ<h_
%>Tbli:M*nu\'gM3+-$N*-\Gr/7&2q^laO`WG9#%Ec4[*RSoUV]/WEk6W@psWLK[DZY#t<e-CCc"lPq;Jq4^of15#oTZp+ENTHXY"
%^u9qGO`ft1a'n"\D2C(l[QFe-PO7G(H5W<'ctEXh_.@O@D.Kncm,unCB#mRr0Pf@W8M*9H0dTR2HgQsV:e^j*,m_`1Kk'M?]@GG*
%5Dp:P8b@U<cR^FD[UA!$1cEP`XUNApnUYLrR]MWY0XR/.mUuZmp/\!ac)+"("/GTf2a8s`7G5Rqn;%?b>+G512PV<0+g@OlNu\7f
%bdn'q7@,fH?K>l%jR'*)KEDSfV5d[;(lo+?b8;9ZD$/;VU5B<RmE2;)`em\XN=ZujaiS!o/JVbU.BnmROO,O\NPrV<1g@G&*#^/u
%[pDpV!%F4-]eU-3+p%b8ONh<%Dib1M[7/3t.Y/U*F'Qs5(^AP\%/5F!-7"L$1E!M[Sk)Z,YZ^-!QiFTi%!HM-1=uMV%mF1P'k&kN
%4ItPfN4(-QcNBCGDJ6CK@K8l(YY?OK@c=X*Rl'u%-5$tY:nr`o_&pr=AAjUHIiX<QNL>Hlr*oFGE%'4\bm8plC/N.S\HeQGpeC$N
%PDOh5!YAKWX_q0&aYk>!?-Eni'eX$FO?d#eM2rkX86of_4lO[5`&K6%3`Jnj8k,(7Cc8AY(L1G3ChW\XfZ8H%XL+u,>A;9,Jt?>E
%lI!I<"=IDX+9a,oiD<a1P]7oqK2Xq<o>e(PF%UUs]WbI=Y+##aq;Bct6Qg-#9aPj9)%l&3]+]F>'N]CGeNXQ(;WFgZ_A6=&lu[6P
%"FS)/>6^!7&"dh;bRQ(?3t0<25rnO/;^NeFV'?&dW_W=IEmOa^)FE2k\6]31@s]J(\\'b_3jc>&,OpeBfU@**QFcXKE=<Xf=Z+=K
%+Tr>7oA</Q]UQ^q1`]RQR"D97m:?H-,YBV?GfpL_H3%o-D7(D&bFC<8.Kq4m08DPq.U$N#,!/NRF4<;,Fn?&^`"9K5E=).RLp>F%
%pGe+i%IXHL%I=CG]k_A\O^L=[1G2eKC*Ha6:Qb3CjtB[G$KtU,lHW&B^etc)MR[`LC7N?gafs!6pG;u7/D#D6<2%rc192:1.@]-u
%W7@21PThAMa/7Tf\KT>Ho[Rq`JA/Za+P:ns+9]V6"Nu9a&MR:jK%2dM80n<DanHF;\$SOPa!2VP]MjhQ+apS.FUo?e$Am'.%g\$e
%DHK$e\eWYu--C[dBOs;'Am]^khtY4-*jYLD'l>f?q[ktp3oK0Dgp@_)ki=(S.N?)X0q2k+/R<+SiAl`,#JiY7>=j1X#fmpQ">mYk
%YEkJi<N1M;9[3*+U$uiqK#c8DX<\\h@D.=0_,?C$#c=#FTHZ\53a)#E-%aXQD&Q+i_H%VRnpiTgpX68S@M#@cEKGdQ*LBk8i2HHP
%TK!A=@N!6X\$*m"DKVU<.T`Y)W^%g+$sWnEeUVs+Q%BjRbr+m61eB]F]$"Nc+Ufb`YmO=gb)r,ZonTA7Oak@YW(Yk:,KJ6S.BL]n
%r97o++LA5^Y4?WN`5ONnBKV^9[;8j:=T\9HD`+5afXW7A!L^&6PkICHQ_eTmTE3dhOb='6$W#3(7hXqC2STP1%[<?C9"!c23Z$j;
%YQrqZi\su$(J:o4#E%.<m.F6[qn'`_[\7&1$&nKg4(c*>6OnknaplHr6G_W`hN/D-A&0<M(+9m^$P$U#*\.^@8sKl4LV,F&22>"I
%EoOM\3lHJI4@2-AWl)`aR\<@[-Zt3sM@P>qYa-(SO6S5+;jrplU-a!0I$j3#q@N+()9WPad#[jT%PiJ]5]jt@.M.Z9\l]%[q!k;k
%g'-sX0jabh_1rON'rQHcT4]*WMd6`5?CNp!]-)RN&EQ*5&'kfE@gM*JP;kb<1GF@RJUI$6f/,tf%n!sV:I$*F"X8@G+(Sn@"S3c]
%SgtHMBKdg"&bXh2o>*ZaAG^U8nTl]XBJE;CaW)N$.&&eVoKd"!rp=1kMr_ME62b5&O4G.^STp"t(*W\-]8@Sr+]LO9&b-rfV7j@Z
%Z9ZXdH]+]kTliG@&^07n0=%>`V:dkfNiTX5*[=-9E>dB=cNsE.Q-.rt,ZWk%hJ:(%b;$WcD+l@Q6hP0V2o8h^R\QG6#SA*T`c^9#
%6FL8poU[9Hb$]Pa3\ieh38Pujj)?V0%i2-:hUr,n*/($Z"p--@_hpM`!@8>1M3-`87_l^AjR`%&!q\O7W](PE3l06I$#g>U=7p/,
%Q95Y;m-TI71lkH<Q+,A9V6FXP>A#ENl1)^\C^%>SUTrb$>OJTs\-kjDm*15Q:??TkJh5`f2]*OdA;@b&(bkP$V!^s3@5O;X6UXp(
%:9c'=6h($`6pZB!7+=?#XW0\d%n$ntL?hDRM<@G3RC<&a^)B[3]:nMYM?lM@:`(_&(,/L_EQq(.)51@aB,F$*[a5-M-k:M87F<(F
%`6+$iFib*=IR"^m"!WLNT,g7G<B7lfCuo_9cD6B"%kcl#b-XT3"_:7G1WO-N<1j`sL]a!@.iY6)T&K%!(*!r&WK`<LoCd-TBRrGN
%2`p:/Jq*ua,dX:Hh_C'WOBg2t%(I8$V#lbkj?[;s@Yj^#7H.2DAn>h7SZibZ=^n;)Qs5]_S.%\J77A.%'J<ra]KK?t=45M@'GD6&
%9'-\iKU#P,ZI['ha'>`]I^/)b/\eBDR&kF5lq42.d-SeoYro8h#0Ri"?'B/B`r])\$QM($W18KN(K@hIXhRSEk40$7&i7?)5D-3q
%14BG]I_k:]6B_-glW-<tNWL.(CTIK]'ep3,_d-ahN*V9SX+bg9bbIl8%BQn^DAIgM%$5T?(6,bMJR:HRT]HPX:t?iUAkdFl^b/o3
%[Da(g[_VQ^focNHX3S.Y!Q(tD)Bqlj+LTtjKOI-j9X&1kT1RCnBJ!)3g@7nnCS$&]he\^hQ6nkb[@I]kZ36^aYpB^PT%g3,*5U(6
%6X,G@$^b`J!a7h5E7G'l.V"dhRb8/6Z)RdmD^Fg/!M]M"Zs$C/"?8cB>El)f*.P50Hd`$b$HmTb!/5c;ciJRRXssH91HFY!*9XOK
%Xf2<=;-JD00T8LP!3S,VH+3c5KVeKY?2nlEc%<=a&*Mf'<bX(lTA@`FiqIc#@__]Wg[3V,mu"AemG">LIdKKrbBE5c2[gWiff4AV
%&Mf!u#>WB63Yd![9Y.PFKV+?S_k,?";[@)o;@c#*h1-QCT=g5q/X=R8E\;H1Ot+W7&bJK@e.)T2T^n%ql#Y$.YjDUO/B(jk,e?N=
%21$i,)b+nJOQ1k,9i>fiX4i-'@cFa;m#Gan'(Q_r_b-tlKV[=`j^8].*A.4kWY>YIaQ-Q?9A]QAhuf;g)N^-h@"^0KR13&\^u]p^
%2b(#>4$!5IEND,h?CY#'N<?aohH)(e:e[X%G;pg69+/9V44K)a#)kp$q4KGKS<#u2!loZT:`tXiYh]#(S!A1Xg$25c6l+kk7;l9V
%C0e$3Sgh3#.YJTXKGG$%X>m7$R?Y*Z0^K$aW>H2dm)\HCaS=KIS^dJO`%Rt;NU[(fX6s#Pa&T8@/>k0><hqFY`%>0rAqG."3>U[]
%S]EPkJCKTF6lP';ZcQ6n]1/c0.4EmuNH5S4W_ta1@3!>,PE3cp4B/IaZ%@40!+K4&MCbS@\R$mA>Fl93%``:&Wh?@=J0g(d>"V]_
%qbAj7p&e+>!_Vs]Z#q9D@XA.X-BZc#[Su1i8+Kn.PH5IYb8^ci64-cj5*"UMalc#/Zm)j6b'mc=&FYaP$nD'$Z70h?7P!=c8P;/=
%X(EF&;N[GJg;+i71<J4EC.Dgn;rDn28mBdM;%mV9*6th&)?i@(qFb*p->CaHS'"X<1C3q5/tRE[P!^gIFPGTG&rj(RWnZ<Mgm4"!
%[)mLtClk0\ElTLK-NN(NTK^FD+*E.Ej;O<L2YiXZ5l%!G5)S,'-Y$u`Z+V@tA#1jfF5dXa\kW/`LeB*;Vk7sH,qds5_g4WXB&+fk
%P$;qZ-6KXQ-m(cU>s!A6^,\r?/R(:h2?h;O?Oa@R\ftIo/-?&G/R&i6jG8sFRsXW1.5gme2YZ5[/tREf<K[X<F,e2A%$iE!=3Z#K
%)9Jf9<eQ.M0!2u40"\M&O5,fsIH<#GZcX:0\-QP$H,,7YdW*>\g-I:8!o[Zu&OX@RKh*^$fXbO)G^"Do\t'3jN8ijMG7rfpX@?Ka
%lm),/ar,5h<=W!deqm?EOK7^!g'o,m.#:@S[S&o,&75[`NmSJkKb&.2dUcO(A`X0K2GbC;:Q^]l>%Jg4WU`/."s4%hna&cL2)Bn+
%"X88>B-J:]O$'hVN`EH'aBO*+26'J=#^"YOWmG]R5L)Q7#meF*_1g?BB"Pna64FD7*S"3@`hg?lD.[P$;8n5\EGhh+F#X4<\q9$`
%(miNs`,:H[n1+5Q%=[gW)E'YZkp@+SUR9Cj&jfU?(?REL98ell*5Fu,nlC8gI"RRA)R27CJL#>!V8f>j.mLW!&j^K\7m:&<9soRE
%ZsehQ0`DQ7\:!O24l2,^fL6ES2oo,?G0b61BN&gj:+or+Uepi3lio"F\N_.:E[sHD8s=f/l"7Yq+GMJd]]:V\98bML#f%5FZC*tJ
%EtT/=bK2GhAuTBdI7E3MZ:cKq:DjnXlR,o1X5)j4/?-b:14p"uV(gH-Cg,0g+Td8']#Hls39th0MH`nFGT&JE#G"H90QcLI\1@l=
%93a"igA.>*4`17p\,%'I(8]O:D)X$d`c\hLJAmF>TcCg\68W5SHJj:(0rO!LQt-Esa?m*56:EA/q5ONYFGf;l&-^j2&8e]47O"'>
%/]]kb"V]n/JT#qUM<N7K6H(eX[*sWK/fRp8<Z.;^bRPckDSbi/#B[5=kj7r\asA.=g)6MJ_F]Z[WAcf@82)^L.mmOcS:X5p9\[#0
%P/)32EAJ[W]NP;,d5@SQb(;[Ee?!K.7kPc3DH=44"\IS,d27W"YiMntE#d0C#)=-Kq(d)O*hopn[='5C]M`-dnBE&^l&`u%R7WOc
%%OW-/Y`ftNaqFJ;Z)"^H=D7@IouLgiM?P:<<<?C80\`,5#+NM^C9-,!K9iW!Rb(HrTOQ`7HrrW'$AMi%JQp0MJl/%4co&9.NaZ<3
%lOMR*99L3F"i11K$(pHIgrD6^i-0gsALM+WgIUs[nHlN3MjQ.7b)LARaq',H_:CS(+K<N#BoT@%:.j'i&D7P1nk!o]rPlAbAF<@&
%F!cZ.4]5%l\s87c4\(Mr&_eTFWtrmYd#_WW_<*Q^%\[DkFkYu7//56:=h@U05n-+ZYLt3WfWK2^:2`0:0?&*Jh6'N4h2J-=PZX@W
%Rgsgd(k<BP)b4nQKqZK*HppX5eV5.d+8>mJ\!s@)?NZV\arR'7Tl+Yb#=m@Nh1L>3!HuM@3/-eE"KS]0d93SR#NLE`J3..jaql/&
%89Ms_CfZ?M@jYs&s'e3O`sP+@p(c7tKF((X!6H/N1#O'=#-sOo0FVPLY*OrWN5MZG%-4dp%4j9U5jk]Za>7?LlbuH8;92#R"f/e?
%0'CA9oOp#r!@1[iR2j4cW<<2G=I3)<o$FYJ!$F+fN=,3Z3(%$+5_UmcG2>1]_Qq[-.q(R?3U\Tri;#n4]?.;.AKrj=f4SOZ@/cS/
%V=BQ.5M%6)_\aFTqhS3u\YL^Q<@bKo4o$%EQbf`6M;r\S%.03+5!0\;G'F_obdaBuch4-#%k)g45X<;>7Uj%Xf2-U'L,CTI_S*&7
%OY:CuQ3C>81-OLZkFIps"<>ZeKfY7V;F)^S(FFNYYGPmY_cOVbN!h/.s5>2MY2.[-e@A:2K3N@s&lu;V>[[@.0P4V)8<k=o`(0fm
%gb'J.^cWU!`\%R;$a1MYnG6C]PHnIB\KB")N<bh?[)_2()D%[gKsC#qaRN^Y5L.3aFMM>$k&r:U/-fFre?0cnMAQg_D;6URE8h^j
%C?^bBU8/M3V.R8Nb?D4-J=A+E!E!ASYpWTig9u9*9=>aXL=jcTNWZlFAq1JNm?OkRWjQgJ-3GmQoOSs_9Ep1(A#hes8m^>r8AHnr
%$ojj74L1gKe\=Pu8_?#T>X6,R[&bY[LRG:CKrn_bXG&gP="tMk">eoZ7anWYDE;+V]:_B%+2ng:o=OY'`ir)3\)iqm\\,nj!^Np1
%+Q\FhF1_#e8iD8YCHDp$fekt^\%t%D`t:d^Y*&o@@?n6f*=?;e3ifkSJ[;\1s*WXCNbGD#;.%P5)MccYTbei@s36C-CfFa6,!X2f
%eF)0_X.BVtr\Y[9[1-BQXsJj?9=nFtm`8Kj?F\Ne7BL1^du@p[d5f[,Q7^?&Zh;tr'esckf*(BGDHB[$L3)nGo:EuMoF^?=7DNV1
%5#PbS^-,H.EPW1CSEa<i"05q]e#J/J&6#Mh<8MMX-%+)jg,5G98,s^uRNffk;<JGVRP<rQ<5eko4jgjjgBK@bV((m3=Cs?"`-aiT
%2<$Da\,%Am4)eZ'h0amNcYSal3Q\6c^5+I\7AqnQ:eo/W*%[fN&$.qp1d`n]]d4M91=lW?.G+%JBfjOrZ\5GR]2"*KitQd<D+!*>
%k42MZ-,dbqW2a9^3s>@c!3GEc;P*!I@l\13c;DuXD1nTdU][lU.VJU+4*sp!#%t[k9?)f&WPlZm3`]aNgP\%f)S-$:X5&3F/'dFa
%SZ5Xq?;"t:hYhu%lQ0J&5"gq=E]I:D?)i82<o!ig\ELo\[)-#[VO]]`X87c<I'kD)T.Hk,E'[![/3Bj"BL!'6@ap;N8Kls:=1dC1
%1Oa;bDsPk'2!0j*Al*8XXOn'I@KA_#5"@+YWklBTF6-Z'K8Qj?0a+#KL3&k`B=qF?&`r&pDg+rrrD5s5:&S(fR.sF3b^$O&[^9T@
%;6A9*hl*HWF5/OVI,C+<SC:_iCFRlI-(L97GOY"?1RimPPsVW)H`UOs\G.O%g,Yt%eXp+4?KsH67G6.-N"((uM@V)hXjsoaOg!$N
%S_SrB4uYsuZFQ'm:f3J!O8I0Hg%m6X%rj[^]UB<oN9G9kJA;Xif:ulbBn2j+TIaC)EDRAM*G!\u5rCo63s?0p"0h?T>?)Ru5d#,V
%S%qu*@(uu*CCO.RRb+Zl.d6_aU0G6;$a9TYT;<Ap1L:!M7\JE_S4h9BlYVQV/+DMR&Cs(ipU7mC?2nl%g4`ZQ\#YMC]bDG3_YT&5
%Y8t[YP!`1U[6,efp6%k6jmj-*FR-6#3^K)sOLM8aL@JN_q"9(NMr<o4$Yu&Kr)Tj&cPXA\$A`Nc+XiHJ0L.@^$b7_##Wcc,#p:=7
%I7f`^\JU!8>B0Q[gY-hq!bWRJB<B=F9eBOq0l8?mAmSk;Z=U,X;+t&=eK`(:D@tA8J=IYJUDR,`l.G(&.cT4n.(#`OHrU=:iinL2
%HCpk>L&pFBMlH674MH)QUR007d*@YN@Tp0('DeBPE^8AG0uG[tSnX^mi4pU]n"_m<,Q>n%b"/OG@$:]dI(%]!.q%4*3uYl@F*8Ki
%inOJ8B8BSMYFHT%N/6^MFpY(U>4cCL>:6VrPj#RaWc>PHA2+=FoP,rugdX1AMM9^'dEJI-Lm+/W2/=U"[C9Rd=5or`1T]#do<*s;
%p(8RX>0./BlU=]EV/-GNYn-rCqfkuImt7Ft[[THX!56J86D`LL)7D_uk^u*XV:7%33tCIplWu6(`Q#5d)(!mUidT'a2teGA[D9cO
%>JrG;Z[o1?[aZXn\gY-q2tJ#T/j^mEf5"D9a/W08ZaS&NZG*eue':TBmE$F]>-(U03c@FsfPg/s@E^&=@2ejq1tA]qQ&A7kIo\;D
%(Zj7hk5-klhZe5<\1Q41<"\1Yc3Vf7/"4Rp-ZXm[2a]foKl7]CiC#)B*,aih(o11easmWM;gi$[nlESN(W[-)\9p5ZHA>?mh5_-R
%<GmoB8:oUlRAJ%d2V;>J7W9\hjT;:pAd"&%Rd@J?@ufL:h93<'\@n".B1#_6:cWE3<l"K_T!Yac'UR;=CCp-<,jUYXA3"`bCDb&I
%h9UWgRQ!_C4Pe_T*4tSnqAbK(K-P95C><0OX%-R#k4[d?"Mf!f[-nK(+uDZgcFuA:Kcgf8mr-SRDUpUWfo-7#Ue!7b8*N%<!s=a(
%j`LrWmDe`'@h'<&nhCsu.8a4[jGab!P-fKSOMS`On(>fe?HgU&\W"9[o>K=)$=UP+!Oa`*W;4eN[/+u)oY'#uSLo/F[X*=W0,AD!
%H*o>3m@&LVb\ZR>,d@q8Nb`Oa7D2;R_2,ANg(D;X44!*PE]<n?mhk+)mFI#I(G"CP&Xu5#86%765YTGfne0J]W,FSdQ_Uj6r3CU_
%62,kH>FP@,m1-2,jT)"1oEM5[gMNkKa=\57*&k]VcF(8:&Wm6q\=.W1RHrUH6(4uO1NT].2l2nLKsUm+3n8'\.SfEPY&W2AMO.9I
%2(NhUUH")HeoYJ-@e!@$99_90>P(OG\ciP`6-Np_(if,>(@_BBof8Q=W4;F`[t1j^<OW<*GWAn4j-hr+hq2d\gg3=#SI.G"_6Vm`
%B9E/HWG9(/"Q=(=W^\];pn2f.)\1MOHKps-lEtUC(JhBh4*3Fr<qWPM]_5dq#guc-Zg)rdLr6?kh;]u1#J:9hg*K@L?<TnrW82rS
%"!p\\7e>Y:&%QZ=*%0$3Mt-TbM;g+F-;763[oc2E*')N33XpO<F6!hkR8#\:4n1N8(Uo<In0Hn,L[N_O]R["6M4-"*W+l(3"aj@Q
%TYW3cB#=,(Ra=S2g""gOi0)RD#uYHEJU-A(,o=HU7VmM8g,Qo?9L`?JiT#0ol$qWe9N:s'1QUX@J2pDX7M#W@6pB2+o$41PS!3<E
%:OI%LP"f/MTp)_$U^o="Yr%u[?LiUqDjVG#g*ViN`$6VCl>b?V7prHE4+LcI>[bEG"+]P9d:C#@=7ik#n`I7qLE:amqM9__g;4A7
%+)-c^F]ak<BsE[]X9U;(gS9TPHr%HAYlc_382'P9VF[im[^,:E7F!jeF!d&9IN<au!MqrRTHXMVI?Zm\@TYNLXMqo/@4X=TB[#Ph
%>8/T&CG6O4W--qoAr)`04t7Q'n*#^'fe<_:RmSPb9_qS<Z*:WBptjI0PCD,=KGnW)a%kn3'47&lKEZ/F]TNcEDfbFe\mI<XL>.+N
%GQ#gn'4iq&RlL$PpNZ<JKCQ^YO#5cd*?LteCU<IS*V"M%93U7b$`c0&c6n^]R.X?:>]bi]:]pPUIoh%B1g6A&oF^eA9Q;M?Xg6MJ
%)=Wk#O3t8@g%Q)>GZY&"qI6#*NO-HQd"p1+<rO#5n#F@Cp)SQ)EJk6Rf4OAZLI[sk(t7.6L]a6Y_]uN:XJ;Eb(rp.H7.CK=N3nDA
%HeZBh73rk1P=:W,ehG`?qE'1V/X?l"Y--%%`t".o@kae-qC'N.O+#VmR$Q=C%t43t*nEb0c_t+VHCJCLM^X(2\gF^h+;/hQfQU@-
%]!be33:mgWGk;l)l*6N)7iCf\%Zf#C[Ft;:Nd/8M?,5JrAXh!Me$XlK0u:c'B9g0eAo$:,56SgW[2JkoiR)9H`cKQ(-j-'H_]uNj
%RlL$PO*LHE3Qfh'c"@:A\Oa=*UWuk;r=HU:9WCH`RkXIHp3?3IJa$FH50ADRS'ORIen3f04Q=bTI9J&!NO+6lNMnGgJdG^I@1b]X
%GMU-t\#mp-`t".o,;?g7]Ck+f4FW&UB^lPh^(5G+_t09AD!(%1[gcA+jq(W[o\Z^Nn-c_dpEiZqT8-Ndf4No1guHdp%)t'SqPXLf
%g>ObiXA'W084Pf5*l0+Z33M"hp->2YY#XYo_QR^\/F%I!i&*_7<B50'%fPaufjbFa>"I0>8]uY/!;;d2e^c40rM1YrH[-h0LYB4S
%cl92$bCr1"&&Tj1-R2/(>H9IO'DC)F0`_J'f(o[t[P4qQBaOrX[XR3J)\:Ze]D;67SCnGoe;6S6+Z\;IGi==glm(g(bRD@a\83F4
%m>cV^ES?Tc.e0UB07Ue%pGeGHeug"h)TUNI7D4s/FZR*dnRQ3ZrCTt>po8E2]hJQ7reL1![Ft<5p3?3IJZ4*8I?Xb.VkY1_f#A5K
%p`lA:GO_`3_G57D]4p5[RD.V2FG6SioP:Y@[MD4@EJLAl>k0AF*6qb1IZMH,/<(-ROiAHj!R!E:p+Y,REOS"@;UU+0RrV'DENO"5
%ioI-Y6?7jT[Kp@R@>BOYks1*S[]L(La5T-28r'f6oIsaZpOK\2kS/C&Ba<[$!(>\CNLWSun'5*MDn'DCSZ:6f+*u$j>kXBdWtq+]
%XWLgGg#J7aYE_GJB59<s;@^5'%DLiEqHcC':t$l:U&baBH=tWb^Hk7fg:kqC48-)&BhpXck`i2&J&(=C30gr'c5la"a163*oO8V7
%gAs=E^o-JYeN+<s"$gs>(KH[*?m*!qFmNdsc^no;%P`&gjUkkViDZbX<BbMhO8.e\'Y;ibSV^WLC]b$X0j&7h$ArN#&68cE&oDFN
%=rf]YiNq\c;!?_]>"<u+%c8mJZm/g;MFW'"`e+U%VsR*'X)S4K]sudO<=$#>TWk3k#*>[ZFT[&mYp7$(B?rH.d(Au37sr%gf;PuU
%iQtF]io>BAoZE)@gc^UqXi%*<=%1dO\di4f2\3;kr#V%ce6ks_*QG^"g4igedIuWn-fKkQUcZ];Z;hEXh[Vn(k]:e=+(qe(Lhjl<
%JHB0DRUGO:[i2i7HXui;!P'gklR._F@ZO5TC5pZo9faKIBU*f]lP=p8@!pE8%Q13*_OF/'Roe(5Jotq%O1![6d<uP]1Bun*`EFAL
%J7m^-1g1UEdE6lrj(VG-k:D&H*/P.R%KK,g^hn"IP[D-N/N2'!Kk;8"e5g/IVsL\A@fjm>!474GLb8ARN2Ec.cqcf6PKWMRG#u9-
%EY%6H0[?XjA5"5gI$C7-FQ$eDY%$;Rd*E2k4_?s]Y-NN)Lb8#!#u0!NUKZ.+b7U3p@QRH!/DV)l!L6i"laduTb5?DLl-Lm5>*VHF
%AWP0/CI$]YMOAXGDEcV;^FbAjW9RTH*RuAuo9FA]JD1+'-h(Ub\%E)mM/D&&Zn7u2>?cfdT<Q@JO)<[75Jf>F^rAk!L:s!1E>u?o
%)EWgHI,Z_2k!a1=G7PA!H!/B6(!Co+c"l.:n"iH?>+9"T4YD(R@*NS,rMX;`E-9`UUIX&qMH_aO\Cu[R7VVV"cOQ1Zs(,K;o83pr
%X'*7/Q$'9uafWOULE;@;U7bL]F)??,HRrrf7HomLDX>1[Ycq?u%G^'&2P:8;PI&Ol'9o"!d%uY`1Es;/LOSsLoW\UbY[$LlN7c8_
%S'kiLr7K=T[Osckr@OIo\K-3,1M$'^c:-2:=i9#(T_Yb=,#apU)u9jC2LVY-X6.Mr$eXjOV%-_)BkoTu1QJRFJEScW"!A%`!>*?r
%02;T[c@4XP+HhLd/-%Ht&9h7K&I!"P&FIC(Z1J&.V8HIF4er/qcDsp(rH&Xq%`\2DDRnm(O[^\n`U<;DZNE0>*E1j-hacA[d:WTZ
%+ii/()";Wub=7DtWC%d#Lkk(n9;dke?1]>0%`V!uZC]=[i>/fBo%(DGrO"c*YLR<'lHi&Wj5FW/(r+@poaqEkEJI%tg"MC5*:RXU
%?9A^[(sCMi=GAKHG7GF7j"pBbDo"1,r`UAkpMsr:3-Gr/R/!?Z@f[&%Xd:kP8j+MtVR8F+EkirIX4G5@/rA'[`S*aP.f1Vg7ljd9
%[EBe7"YZA<DVH1eI[3,THVAsY#MT%E,ITeghe;:Y%K3d]2GTdq3d."kfYc?E%8@^2-m>B<QtIBI9r2Nm3-Gr/R.R'V@sbEPig)_S
%\!`58R]Xi]8NL=dla44<S+#j,p:@gEMDE+MrfE&EYf"F*YDZ\g%7=I&F&?m.h6,Sdf.u9k-Q=mfJ*so=#F)qmfgooGgt:.:b"]ZQ
%H,1+KZdEUO%`jF<SR#WZo,)M6<Y'$b5X\@c&)1:<Z(JVJArdg+$AhtOEPrW>Cdq@TC?T:n@f&VLb1j%^lgmaY\l__+n6%pT=ph00
%P:kBajETRbh6F"D8pdj0>=qH`EX/+PO&JSbc0D"'EKj1M>>WGnY2lSbnu[Z'>JA"fFD!UrdT&XpbF<=ML47p.9cn.9^5[=%ViKE@
%.*G)D[IRflj4J1p7>pn:c=9djY\L!mX/HU?`)%CXUTD3hcBg$GW3rTl+*EW7T.u^tg1VSoZH':p;J!4WD>&CZ7m,f1CUuTM:@JH$
%h_iPn"&VDjc>q`hhu]dZMd)Z)oF^eAoGN3k.tlD9npi+^!>;5?CU<IS*q?2@+9rTdGF3)sEG,EN%E'RXNgVaNB&CkqLZ!;lp3hTW
%*du%9;G(JJ\,hZVn/*b.-4YIB,9E0*Hjihp0W),9I=SW!@t52qdHq%#,n59uA)OSD0o`;rFhlI[,T88c-4bOc3s(Wdhsl*dTW<1e
%J6JYNW*.Ttn;*/#[/i6XWcbiV6d2FrV>FT1B*>(\ldeQD&TrBfNL[0%Y+*>5Rf'1hRJXmH)pDiR*D;FQMd.i[L%Zipl@uZ(Id"]<
%n`Vb5Z]eM>7i:`Kh)Z-O[Pn"H_@_i0C[XsUgE)+9Fl\a;r3F/=mtrf%Z1"dj3?OO_2Idg6PIlH%D64=-i,Lh@6Ar]AqP@_<3TAG/
%lK(/C$br)+G(=T+Tk&H-#%)>Zn=hGa!8hqHadlX?S"Z%Qa.s5'(`tcqH>s$6[pa%$BU_,-P)l!;oMqWN$#+N(XnGbGS9sEK,G4%-
%=[jVUl*1F$?lJ[.$[o((2f?F-:GlO=[@F^Db)!-@a;RY$b)cL[,<M\6q"7*d.KR\?QV+J^dXqAp;JIY2^=ApL*O]6'_()XtI`B;p
%*YK8UPI9\ShPV!4Cm$Wt>>8ECF9`LhK<"i[#]M`,Q32<=JSlNWX.c/ma(CAM:es\c5AA'EZUBbLegcaZj<HQ#Zs"n%oU2uoW#754
%V$G2V#;prs?Nb"KqGrB#G1c.9!Ck7O=[-oE(AHI7VUd5WrPTp=o7NlS\9<MmJ3ke>4&A:3b7,6G]`H?@2,g9X)Z!V1f^(<ng6JhC
%T68*'QZ>!Q=t;Q*j,Vd+;;"iMcl9!'7k!8&#)Hpr^,lbDJm/f'+Knd9<7kBdGj$Xf3:4fljjWF!?g@aUg>d"VFm[2_`c8FlMZ)K!
%<nu'<Ub9K8/*u9c5u=7B^N6-eJi)%*Nh+*O-@Mi/Ub8A6;?om"dEG'SCGU'qNgP("2/^&"5/4qX:"S%$3F,D?_nBRB1kseng%SA;
%Gk;l+M/R9[\,fCoiYsK#V@J%(,9EFT]rMB-SCN6NR+JZ#qYm+g0>52=N;@n%e#n!)HIlcq@u!RH0pnKGYs-$T-g^=./_6d/IFKJ_
%:7Z(G?g3.Z*K7HAY&fkP&Fj4%l;X'%K#'MO$!h>1L-F$,O$7&-rjVPt#<\OZenEajm/+jo4?UniKND?7VuoVCa7>1\Nu=fqn^e6p
%[aOcuim:&R73>B'eHA\6U[GD:%ZAaY/_o!24(,l9It)caqU+u^_cJMJJ,Pj<T0Bsapg1\l]_U%2pBp`Lq8^7"s8LR9S$1-F3P1oR
%-Eo;J$lO*XJ(4.8-_-';H7o&$rm"mN#Q=J5#l(lM4TG!MLOWOR?ShUeILCE`lc\G;`trPLG(3NkU[#T^k#_Qh.,=VYp[Dtr0?l.f
%RDl3VQ[l:j/oi3LjqGlsW:&a#,re$H&&C6c%QS03J'kH,[!#fHm"kCWnXpM$9OmfpfiNWt><lMQ?hoLZnA7,Ap(r'8M]<a<OQ6)1
%[R]_c2oUJh\AAE1fV>rU%]Q[GIqc3JOXeFcZ=c7^D;P<An*sL)me-lQgnXXiLCdkY*FD7n=1i^<r)?a<`/@8)&IUUgDF/lSct)E]
%^K^S.VdA*EK`IRP'8#pXM+13P7l:$)*RT*L=iY0'<JN_P?\KHqc$3f\.P"Hcq.rS:A2MuG*Q^AdfSI0<_%?>hIQjP6QKiJU2dTG#
%0<O'f2pJE&<rRuN>*eQ:K5T=0!7=ZjBSe8:]'=T]3ag9e<r7Le[ga5`:"X%')=r*@aVSNi5,N/"p4jn>"Im+!`JF&-<C*C&2tr<3
%gE-DqO5]#&$\,:g+VU'CIq3n9Z!L5sQaXus@)#DnNif_(%a&1KFhH83S+ZJTBuUm$*R/TgM2'd>EB&UlMs[Q!_nIS#lqujip"Qb)
%OP5b@cfU8Kh;iLmh>Uf<HPA\/CZ3maKV5dH:4V^bSbfo;K`K8n'8#pXM(WL4FR_NA]uD:Y.8,)2e",8PmJ(LYDHaR1ZQZ^ul^lEC
%aZCZuLqEW%&GIT%I[19_X'Y2/i(_gAIiYo6d12,Yc44BAmHbTZ[+Hu,=)S<n8?F=fe@mQKWF_"3*n<-(QUcd_WML`4ae%lj*pl4h
%jRrgGgnXZ?=dhTV^"S#uos&[i*ON`3%TFTb?c1`<;,U!"4/.':\=$Ookb_$8;p0F91iH=9*M3e?JrHR5_9[dB,OY716enI3q,oV,
%XEq8Vl2S^"CO[=G_pJtD>YP#up/VU_RB7>)UU(%;,%ai%c;r;(EOCM"k#5-89E43-/d4+AQG(8fAQR@k<#TY(!)u+9K:coalC@GL
%kGILQ^CJEEBF!h(\$'@][j\4$c5k<G`nO0=HZ[`-SZ1-RCYj'!qX)pO8F=I1B6-T6BEr^es2,uI;>g>C+fL;*6#Gp.(P9*1FR&14
%'EU'i/.GhX7%<#,UlsQ^&`&4,2H.d?h#]$rWR[^oFiS,/ASlfQV"S<So=6)kZi`B5pgFa.."6V_4A]D>8Ui=hlJ!Bch/K_&lcocH
%Q.6a(/t11^J+Z:(JkS29SXic-1FpW0d-X,u1I//7=)VY!W0pM/YB2"51]WeugE-Q,O5f3_"p&l/l*&(UIJ`&t&<<Vph-#1rYurPK
%-Rp2rMYdCpAmF#a/X"Q8<m%94T^WN+D@CD2"k7?9H#t9T[/.A%s8S^q8+H-Jj0cQLYM7>R;39HO9nUDj9X9)SJ@O@Q,\nKbN;H0B
%5*3L:U[KD*(4f-$k:V5[c098(##UP#PV%QOFrPA;R<PEB?djJa[<V2h&(<Fa"fXLiO4m[mgBqe1ah+fq,]A=KCds?O#MVQKBt(nq
%<r9$V[BF;Z_<?-$mg%VAZ0dDAW."@;T%Ln/FZ7s4jDM1<Be+GACE%)2M:\:ch>Ar'Sp*6GU+.`Hj%ZFp;3eSZqgJodOkI#J#FA^=
%W*+5C=UA@VBFs3N2e@5XgL-N:\*b6V(4Phd_7$Q5?B+/nOIP_EF_j@`FZ3G"RX;GTO#/f+2&Z['D&MsQ7mX"LRb\s-c>WRup'O;q
%hV.k@EEgX]iO%ck!LoX\DQ[;BL!r'IO'.)ha1"o(><V<e:;`KDUMO;T?K##E@HiR#pTZ.eHdob^]u"L_9\tbO,PeTR=aWHdAs7t?
%_W`pf2q[g]lkPP@Vtb_F]nYAXN]js&c;*=TX]fq$h+3!H_U7K$.iaKD/UR*&I?-IDA*/,rs"1*e3qL&R@oG?="Aj8]LU-M2Rap(0
%FWSRJ'i$^?ApKW3_W`pf2q[i3lkPP@-fof]]nYAX:@iV[I^&N_fdiRe"WmqqW?nA&=Ke*^<A*_k2#CI#C8q"2p2!^9e/;q>;f#/[
%[HDipU:2H9+ebb+QK09mTPfE7r#hZ0FVJET7qgeKh&CM^7*"hjOq_H,h<e0>m5:&P4F&m2NSGm`5i"\pM_1U!E<N7hXZLZ9e@'"b
%WM=@(]ii"I,C?fNXIV7)"2F7.\rgb1I;03hR+*74T:FAqO":5`T=Eu!_t(PgT:SrGeG"1A^2&cB)qnfT_;r-[L464U8\LJh4$XgR
%<V`2h_"[CFQOn31efKd&icqg&!7j@#6F!eZ&T5:@E:(Yo*kN<Kp3hUXer9j`^j$qF$$,*.?0aSU(Knp4a!BIkabTd=B9;2f-9Af!
%M$Li9<@.JAYeIh2?o#3?pZ1]GcsVBaHN3@R]K>:5nN5n'3Yu):g"r"rNlN7\X5._<Uu%!S88]k>X^"#]G>.L0LYm_6PXYW-KFnH`
%O5h.812cJ`hB"Xe;R$1E+/YW<Nf9/)5.RV18Is0uSi,DoQRWsJ.PI^b7#'UrQ$8bVQg<2-"6!d#g.B(rS4=KYj(M)iHZ#M"=LM9;
%\+b%nCdS4U$-Mb>)i/Vs!SnoU[Uhpj41kdEiAFP$E<H^nQ5sH_j#iKS6p@<K'R`8f8+[k](2<)WdW0m_YkDGjSfYH#K>ZXt]W;=g
%ms3mD\1V5$if,k06IM.KB`qXXh%J^9RFY]Xn2V(rV-N<m3YHfWdmO6)M/&!\EYUBgM)AS&$j'F%emtsnC]s^Jm>#(aV]UQUSXs<V
%B*T*uG/HO"Bu3JjYT):aY>)Br&_fH.NcX6E\+`nuAlIA5N1?u&^N=4d(I-@n],=O9dLUN@cP\n>Ce+1e<Qu5HWgE->>D[e.#4(NX
%7sfR&Z&\+L1G38X84!4'p>cY54o4pgBkkN+^V+-E1NqEW*S4n\k\c+.O2ddHNGp#cpaE2S[u-LFmAQoMdL,pd42sRN[j<,9k+fVT
%XYVA.[-UCO2=*$eBr>!*5'l>>@m8=]Uj&^%XEt]X091-;G(mB<\JnVV9Y5kDEp-#*3i!jQM96;TU9\:OO`ck=fRr"!B:<k<;&d4)
%Zf>.H?3Q8?Zp-=J*`q$8JkZ)R_Nrq<\hoX7lC$(i.1G66s(jJ%3ZQC9kSVsDmJ(KWG+tk@lsN;(pZtQ^HA0p#or7dc=HCLoS\aa$
%1*0VfVD4&)gH-6/@q9qpA,'"Rh4oo*_:Z*+!=nbh24Ag&SOVia?ittJ$=[9^pRmGo9Af3uX]\Xf4IWY+J2ZUEk!M*P58#s)Oon$\
%S&o6f\-D8D1?%#A\?WLFD_CT@<E&S'R;'O+`\^E?&(?@")*9)8DL(K=*/HC7)A,+S)m!Q'N41TP`r8G&?KR3,6bi#q;a5l%(7T&#
%?$-%Op3Y,])>1=5cDK`n$0Q3pkjuM2f1p&([&:e;R@)7O:4$:]1bofr$h.,\h4q_,P(ae*8%dTB]GTI=7?.Dr>LQJU@V%S"<`c7k
%PW'7gD$irTs+6`:oA<:JTBZ&+EsM1-)=NUi*<ScT8!SCB7mHF&Z>.H%=YfS7QVXkNQ3_85pcs/%p]PZ!B@ln*HnUNG02;buW*`d?
%\:#%Zn/`\BJV_YuE&@+<rj\HO"<.>McsE!lM#j4,[j>r^mV3/-2Z;WWn,dMirQpZ^MpY3B/,-th*cNQ@T'+Kce_uu8+!nf_hg[7]
%0>BIec0*j1eB4B8i\T3HD@bi[W5U$j0f/0="[puc(c[:[0JXU5,4;UjJ?9OAYuc:VPCV$lmoR:l^;A*l\Bjno.%2lKHH[@_5OKo/
%#ss?e+'-6f+TQFFkIh9tK/0c``Zu`^F3a5qiZI`$VZ+lZ02`RARD@FAM)&2p?Q6Rf1o("H<I(M\gFn+AOta/&-?dnW*kfU1IDF[0
%35m\3dH7#((g:6gH;tj8:VCIsAnp!Wa<Me/cTX)SOQ/9@&FXZc+0oKk<q"6n*b>;"A)K*W0Y3"JVn%_/T.BYt2*&'*n$,W355W9@
%"WO&%hp%A_DZ7c2iOq<gk'qA.)K%hWJGeA$:W`0f^#&H:m9!H8rD7qAMb0P9M&X[2:dYIsYJiI/FJ'XO-g=e0:2[NXAI8ejac#l*
%OrBa@m)^n-]lf(qh2@A1jP>q,KCq4oo%Uca4jpUMNKD?9@aD5JEbLC:e2,a'Uh8Er'.:GR'AeKNo>?7Y@t,;95>Se]-eqK2m\^Bc
%a8R.'rI![TSo?ng\=\f:cZAN@$2;Vrqg$'W4Q6:lho4AX-er&VgohCZf*V2lrZ98]ouR)S_YlOSIQ__$ST>lki]AW]AYs`bWb82U
%`Z?'KKr9cbb=?t=!MtX192AQ-BqjVX7%MS1BqjUIKKN#KKo(hJ'7DckKo(s#GA+NDd;jN,d:TU>d;k;>J396M4IL^VR=I,^J?cke
%C:Q#qF)dr&B!<u:F5mCfaTRjM"Q[Z-jN.O`rB4?3V2:qi';[U>V2:pnl3+2P$!8Pg:aZoQ-PJ3-GL1JHVX*e@YK^HhVX)6qRs(eF
%>pn_#'\`ai-b?HE<S,cXY3U'c>A4/>'4#f-jDha`:NTm1kd;9Z:NTmV6eBkFY3X+F-N"C<#oNPd['$GC?.U;qP6jdD#oNPdWijMY
%>urA!D$J/s>rPMDR7ol69L,1C5b:Zbf\`HH?(L2j*bh0=5b1Taf\]VM?(U8k1=9kn=J"`fE<;S@W\[qidl0''1fH_NO+sY`'Rj_7
%dc@+<9:GtLkq=AH)Q#X5P\6B3$r`U&)LF;7lNGZt_c199l3,Sgj!HafW6\TVCpbN[G5smL8K@#7RP5)=0PYD=8\%"/?#fgg!h't9
%*=0KP=kr)];jTV[BF*inkfdh5`=/1t9t\b7WUY<Y[2qo1\Tfn84!.%rF&L3U6E5)s=rZfOIrmgd48.9:?jqKINSH7/e;J*'b2rj!
%:`QJOf_E,cCm[c[6S@:JC,V")oJ6;he;eO*?>(GOQY'*l=e)6'gWuY'M-64fm6g<\/1u#-nK>B78+@E-kU!\Z`H20-.(mo"DY[Ta
%2bt^n+bP4Z%%6qN^#XV`[A0MM9C>0umjrK5F'O(6rB+haSE61"5%H4i*:6+S#Kcp,MF[EDQX%MC2[Cb7LYTk>R:&UMcP,0,gb^7b
%=TpV>6giLM=SP"18*?S4h]6QZ7e"VDS@Kk+PMu*=D?AEg]P[R0FmG"IR0Rluo4U,=8b@Ys0hes=8!sa+%'9(5nF[V42a?IB=1KQ%
%d%Q7/'OcS<*0J0"P&`rg-:m\18Nn=IF!R6m2fSnC]UA;*_Q`,34I.XfbXsum_#tH!drJLm4%ptJ:*sBR$^7!h.o703Et]qm0S>)$
%jP1W6%(#2TPGsqc_JFZ2W%?"MR@nSjN<q"/-KqV:>FnMbR7tU/Q7!>f=*,le-E'Tb@g:,?$+_pKP%PG--Bg0:jk0bW:t`_N!Y.r.
%os"[)W"W8T=r@,ukdCssSDac16t([]m.$b,3_X+>.F0^0$)XuJUR(56[nO=kA`&GrA"SMBWHBh);Wgr,JlfH7ETL94/kOqa'Pj"a
%f;IG90_TeH_6dS(`HtiOQp(>cUd)ZgLCgOp?;J=8]7?`mA0s\%q4/"EXkWdV3:E\P;K&8aAB+ea;h=Xi:07;?V:MEV64m/3)[YWN
%+cHCN0Ws1)B.(+sGAXDh)!I+][I;+tB-!Gl"qb1P"c3%0mdtbD2?TrUYrjfs*i<W2crOE).L5?MT8pf6+oSe",_^/]p%Ra\!R:m3
%[V9iK/%<t)2K;jY<F!VbI+At7NQRMn[\566"T.'d,Yn.1c/iu34:tEg7*[DH.q?nDEn5Q$a\.o_CY`V`/CY?FDdZA1pt5>4+_)J(
%X#];=7<r]*;Rmad,C*tt-B`%)%-D2eG(TJ`Hp7i?ZY>HiMU^q2LDaI=2N9=(1AeeL`'^;='pa6^aH(1-@V6AD#_(K;'AWlo7%n:u
%g<`k].kA8^HkXWQThMo:NIaf\pZ.?Om,.'6[SY"&5aU;T_ETpr.,>EqO_e!=:R0(Rg=m'Idp1\Y;EG=MjiPlhLf.s9Y<.R\R\Z3t
%U.N*qo#EWjTbGF1Jres+s4E<C'X-7$AeafDQVE0a+^qKm2p/C&,>:,JN00^$A#"eKSk0mU*2oDZQq&j[<!pt4l5N)"c7^PNim):I
%rEWkg>O5Kk2>4^B>7B*P@Ae)YF(/sYk(l0=>AT@1CbsL"Nb,S$2WaRu2*"R_gFTc;bT7?)a2.1nDrq/(e()^fZa#K,,kCl]p"[Fq
%<)%W4">aU'RI5`%BIA`+H+k(HK@uKG+^u9fBCtia)`3^GBT<kHd(h2oq]pB%F!,H>`Y/fHKCG9Mo>f#VO&,LkcsSoZAqC;C,>\$J
%2`j;/C[-P2D:J9h9>(#6O7^\arWLF*.#'<#gU;]6(N^IVm1!$Y6A*r*mgS+(2dP0:4LSs7M52/oL9Z;5*V[YOfOQ7K*6Q`HPCjuM
%j\Jqu<5C['a)<UYg6:8o-8s+\F\)NGIdDMBo0=U<@P&!?%*`'U^AiVSD8PWe(aDi25=T)H9p'$TWKj0'g^K<^FSc9e(/Wl3CkJue
%DjS_GBE.j[^r_IYK(VG0EZ",IdV$o#iM+o$=p8Mh(_0J+p:[q5%+Zs6^r+rZ34)P1eq`Xu4eAq'8F&7,8$^T?p,_Ri-;?]FX\[L/
%B!N86)/I5Med(Y'IW!)`D8^t0*gU+3qqhkt:)O!6o4B21G/&[=gK`0M)8[O(e&u:fdk"M-?4;I$Tq:+hK4\ksW6J"sZ&P/)pPJk$
%k!8&_PUDnZ7rc0iFtchLgGh+CB#>IC)/$rIeqZiNe86)X.),SSIV^gg3h([JfK5G`b-E>=[p+TuTWcIKlVf1D$RT(ASCMs^o%9gB
%+"DLkCZNi3/Xh#e^t<0CFWA]UN1Pm'1n-5,'@A.q#HObp$L:M9gT2;\0]gI(-F^VP=QUsMaj?ckV!jKGZ->PsK_&!DJ=a@2N:PNR
%5V94>-;IM6Ad.k&*#i$.`i5As1:HElVKYbff]GHcAARo3L48[klI=ph*gJ'TFuqL'__"#\(hTY`fVVNr_8i*fCa4;1os!fZhu>U]
%f4]Zn0%.)o.1uMi[t+f^[P_1EZOLhhe*-%TS:`sb[cpJL]-_0,Z_qma`R>OW;n8fe0>3AZMG/A"cSL8;[P;7&Yh,OqL),3YlE1F3
%g[(kToKQ3Z:&+F\5kD;1BgS"4X0thuU\1B#)`<6D'^)-'`\r6OnuaD[gC0md@<DE_QNV/K#><M>R-]94TW)"tI;&Z.am@%QAA:.\
%OYhGP^A]p/Gr@&;!hV=)drnf]r@SlA8*=/lp'^HLpWCeE-a4[1*82nGB<9"^G'4@<1:N<>?p?j)qTW`Com9#Wri,.lHY;Uu>e,p,
%]@,aN8c8=G=+4s6lnM.M13\f)00_?MqTW`Gi-\/rr%lc]pBo1jpi:;!J"Ff35cVT.Uui>b!uIo)=[qp1\]q%*hth2+QW/9Irq=Go
%T6nQ>0s%pL[/&j56!!WP(&ttC24rgb5=SrQm!D?Ro-pB?DC=bt5;n)iZo$&s1\VaSge$FOMuR%ms1Ye':Pj4!TWoj8qNPOPir``g
%<nCi2F>ij7l)dU%\P)^<GFj&fq`c4nhci;2$1WqO3$Ne+mjYfPVZaC'SSjctGX;o01ID'WD0M?9k<Ab1Z324@Q$k;GX=&[A*oW1Q
%XEdDZlR?8UDCb&#59X2(e=c_.]DNtV\W=>6G56ohqYSDh4XH&0a4*3tMtHe;A\T2WfUn<VHYS;o&VIhW;`ETk+-=].:)5.'s6<Z-
%hZ)`ug\7>s^AlYXIk"hiE7Fo,qUJsC99ik%5(<7nT<4`/oSB2#JFo&SEk\FNs-LKk^,t`-(X5_ln_'Y/Q:e7%fI^l^`5Kf',4NGj
%Fm-VJm(d=@BhE+TE9lQpE7`5/'@Js5.I)8S>YE6YA<g'#^G*NNPp1)<2(p46T$Qa0\FRnc$sq#.!YA#/X9.Gh'4?c!>:q5;/eG6o
%PI>V-Ph&-$A9\ob?s;0TcUX>pnTn3dXH2CI!STB6?@d[IFe0*$fa6*s?`u\CHN*X2Vmdc)^\[a"o?R^7A)'%L9?oa^s48ngOV%HT
%r8X99ldr>T]D_,P:Tr.;-g1Lr%K?t8Io,*#&;g/aO,Zg?@?0AOe#Hg*S18KcYq7C!'4Aj#CbX2B"28DQ^j+P:!4RM1\OH[%)SH,P
%@Un_sVKunpBOV\nrHUGUmu]^"Wb.G,05lIWn4%G;CH)]`r`"K+,,`4&0?OJp4m:g/8$bk13_711"1i`K;XhBFI3oh5$++j6OKc#n
%%]M1s,\LT"X>Y((^3S^O33Q+9T-\[=kp6;8iJPq3@.`$YY,eZTjD+*k,ek'V)q0F27#?gW;V1#=XT'BH0f`J1H(uQoP@&dbMum9a
%hH#:\NK9d<U%kId[^G=DoA\5Ko[k-UY]u1dE7u(XbCO<$lKgJ`1/k@0KZ1I&!qJ=V.2,0o;-f'0PE4/C?d\o>j(h8mFR[9Sf79_6
%!]:_WWpk^1&nBs0Br[\R\^;,(&)'<a;a:Je60JQ1V+RquPmB(%8.*_mb*7/p*M0BMVH-;?9sKirD1O[LE=j<&eMWc>.9,DC>&E;V
%$DL\4]tfh$;5P\D*5FpdX,):7dKn3A8&<s-']sgcaq\_bp:R*FZnL)B[B.IXN%a>?D5W+6^p;I,f@+%^c#>B0YdCs`-(7X=ZLe%:
%jT=#e\hD7dF\hb="'!ge1]SDKVnFW8*D'R*pTN?f5$Bij*`rRZXOK?`0A`:q0!AGXNd*'M8UDcZd\^HP:4R^+8V#l7<<7j(p4'qZ
%A?.*<&!h_IQ+N]s"RBI#_,bA2eq$m[QcSRa5mJ?W1#T'BiVJgEP_(c],`ll>`XYibA17Kq9LVsLhBTMEf9t\7/$ui$S+5^#;tfc$
%.0LJT0jok4O,Xsbn3IlOZL-BL,jlMRLe8t$WETVT"U"YP#k4fj<Ln,'m9BY]4qR%qeeE\KfE47i?lf%#cVkU,Ns_Cfb:VF,.fiN*
%7JmVrf-!\%`ShYPnfV/&GM)@YcA?6j3Wb)$9mVF_3WWaaNPD3B#ahrT.DM4i3\[+sE3a$)[VP2:ag1n.D&Ft+SO&";Rbn8)XO.dS
%-GWlL[EUJo"C+l)nRW5*3e/;e2X[#&Bb?G#YLS^pY<\_3Ol^=q*K[V^K+1q_X^IJ6E:$ZPC[HYR+6,ZV7R8G/VoBN-0$ut!Opc7f
%$=#J8Pe=(uN%8,eX@<qLTL>&=dqSTD&9Va/@kq4n=VXKAI(g\P>`u(pA[)93PdLUS+KPR$Y;TAMM?UXnlbH0:fW?mb2$KA!XYEmo
%01/r^ZF,p-ZXqV!"5\Sn2-r<+N7haPPX,ZFQ@WX"YI.I;Afc(m(j[nH95,C\Q'Wo2Ul9)Qm2AtYYg8]c:i$s;i(*,m#6>%$MES`,
%o.d>t.8fqFT3iCIj'%+=R1%*$.pgh>-G.)p7a>Vj&@c8gT2Q6R[MH2TF&]u-\WNCb`3H`\f&D,0Y6'oUn4bYomS>I+7GKq#rajo+
%I?CA(IHmb=7G5tP0e.I=9W,n]Ub9EcqT;tG`bIc!TW4QRD#gdMNS0<B5*/$E`$mAU;m7/V'/1(PisItbgTi_JKm*3?f!]@5[QSDV
%+<[Osq_M@f7=cV`EC:QRjBPs!>=l$+[E[utJh0ugg7">_W:fJNAmpcA$nQ(0=KStfG1hb(]Y6ScflYg.S`l-1:'Yo#",sL\?b@1e
%3O'U5[K>7.*]V%-4=l\rle%J3bU+:G>d1Meq[#7-eoY5Z12sG0%'oQ0V`X!Z.^=1g2t`Z?/gW<LBF*"fAin&QY-8\"&`?%f:O"9u
%1<P%]?uIg+Lps?p"dUE/9L=W2.PNDN*T7]OJX1o4-;Nq)0EniF]?DI_p#T`n>Z/oYEbXA::AmX_Z%`$(U('4C&Y=\C_M,3,#9h8_
%I,b\dR2Qg[,hZL75_r]EMnJG9gX:No5aiVJOBWE_R4)9(bWOQP<le+DrDa%.BH%(gC3[Sm/9SMaTO&m\$<<5/Cu4gd:'*t5;3gNr
%Q1Z7?AC9AkG#d_0]!cJ:[VZ`L?!!G0G^2k*3e`7*Z(V:j?+26;`g&us89ADEF#9Y_j"aKVN!rb1o<+KAfpQZgV%"q.[dh.Y7+@;g
%ON;YQ/4)`)%hU"Mc.>=q-V,L+<*U<;W&SZD9.jFJQCUpI2FQ:FW<9%B'RXtJf5?e&CqE-Pd;25iGSCC,D/r(gBN;f5JZj3_n`j8[
%GR:25aL-nhZ>NkW2B8Wn>i'YG773uRKP%&ZVnO&]]/V%.WXh]W%/]:sD&b_fYn`0i\%1FTaB!=B![;cH)U$dM(;*FEPs\c1"H6>[
%&M?Kc(D7V7>dS(MJ?DuBW^13t22\k8U)145\@Wrg#k<SZ)+mM%l&@0])lJV32de8SU,h4/rD\/s7TN]^HW+"L5n]?o?p7@k/Y'(K
%$4)6d)UKm$FnF,!^-n8k=7rA*PH.e48qGa*ZmpWS!D3M<"4dBj=Bu\'Eo*O]Q!^5bh80sAT]t(Vg_a+^IRUcfCb:EdGWH"t^nCjC
%N&=ZH^teQLY.f#if2XbEj#:9[lB?qZ649bmFV'I5m&s3/[_8Hf4"-Io3uuq;#<2_AQ*;%::L\XM3fF\QN?\@2PoqRN9ETh-TFb49
%Q=347C:65*Ca7j<V*uMneH0\e[q(j#<aKY/279^Bek&3^dK-<:C@/)o435[Xc_LZDKeP**OMudW%a="Z:%L@J%P9NbK!9EnNnA:d
%gAnNiI[B0!BF)R;gXMC@B&P:$D9:M[GaMRel\`q2S3.0OA@$Lmgg/..0iOd(pl])[)G%Vqhcok,[m6E--ZNW44CS=p8</5-j_l0<
%_$9A]'ckp<=S^S;/SG5d(Q3tZ>K.;%/N=+iXNfL[RTrN<:PK^<)FD'/9kaFKk3Kj`1Lm_i<Vj$>I;Cd0]5>q1KYL\pn,,*2kNMtQ
%Im;0Q]k"HV]`3;EbJ#sTI<JC]EX+<`39$"`TZr;f]`Wbh"/cl38/(QJ4b&-,O(q^"hraJGmOF,<%NADfB$#(u27Z?O*PeM/.HYL+
%!U,D>@#Kr/'oQ&`N45/h!uFP[HJ4,,LBipCF[fBT&-4bdW*i=1!bg-kmAGfk-atY$lMVK=!IlYb6iA2koS*"N"JNYg$9)j'*8qOb
%^$:+[p0!A3fnd9)5iag"eBn0/N4mu'G0,mmp&t75l:)m*<"\<2j\1[e,Z7/=\sYhi0iUs77/"T5RR(kqjmH^rOnjET[Fc2*b&`!9
%,%AO-&*E$RZd?H[;mRF7j:jN_47O:0BG_de'D<2#r6oW[!do07@_YCgR[l/Kg0LCI\8]CrS\ff8<XXm"s76IZn0j:Udt<o%`\>:V
%Al$^pJSk9tC1%NFK=dNo9H9CkHTtSuH(7V&fG-!`jV/'\(W;@9M3$]k85.WVDpLC^Eu5l06Rg6l$r,qe<IE\1-\S6q9WdRT(rLE9
%:G!0=GD/]CKjtP4W&s,9*rN]UWn7k=3j=TNJo`X3JC(D$J("9Xl2[_/N*<[$?sWJ(.&>8am&,uVl=RQ>@dW>"TA5t)1f"L7A_6?8
%?X(QJCEI2!["Wh*$e5?P141,7U33\t)ONU-\=Lh$dI-N6?urkt(('`bmiRH%@b22U0sFUn=$g/h-?MaK#YbQ>B[&=E6JJYZQSFjA
%qV*B)k:=cYl*."cM-(!0go4<[>oO1cg]#D7a0'^[FY9%D17Ii\Hb7)(nmA8V#;0r#9[c57*fla1B$4QJa7mndXWHHI&,D9*J8jV1
%\;e6GY%&2]c/D7[<FNuuf<#AFlBfd9B(`KCb%?Gnf/Nn=]EV_u&BJ@5T0>qq2P0R9[0sSd%c%nuoWZKq[hZ@Bo4Z&1T7,3Ne5Jk$
%nFs%AkebZZ_1#OdLs3YW$b+_D1a3G7"5if[V_cX$pM>!jJ.1G&dB"LJ.V?L?)kZa`Pm#!D+>WElB;V-4CP9r=57bK_:4X"2P5;Q`
%"`Z.mhe+peG*5_L_f`gDl.16h;^f"779CkSU&19p2<idK&[*55MDFk8&mLL&fM,'<DT*s`%/$&3/n$GVUYi/7dB3)q/Dld=)XgmM
%#pC-pm*IU6K'bo$i"g^N-M3VcR,\P11R*V.b3u7HF^/A__q4EGQuA\Pc%YP^YU=k,gF_dT$)[K?A/Okc]&2s"Ri"+3*GI.]oE3K.
%pBVkKiq=4;YQ;\S[qoUhp,QFtpsB1cXUTVhL-B@D)"1Usce:9?^>$bHZ0b>C6Zk(;+^0p\&</"f3"=T#c0!9^kN`3ZXOZi!gq/V%
%*oJ&WJ01O($DjFr2`o]ClS0P@a%g_m5nPt/G(I+VB/jX3P7-?Td%h&iUd*"NDtg8]3P)ArI]\tIFJ(XrXQ^[U(tcVnXUkT/@'aOi
%1PE!m9j$(6dHYR)o[K7Jo0du?rB-_Bfd<B0EVhCWnkIgn1`1G[I7h0J0EPA56De^\p=m2k5L/TC^id"XDtt4+k?,L/]Ya\'(YuON
%!b*(Oc(6`U+N#1+bqnTe$9XmrcPa4;>mC8smG[XQa1K07#s%>@#huu84WRgqHJ+@.SSPbH_D_>krVER1k%s5[7l/soQeGJ"Ms%%p
%.(g_Cm_!mq]T+@6I_+Vn(5!#B:Cr?LO'BsrK00gQB&DT:EVGhN^@S!GMC^t$36L*s2)a)3A+47A_"d>j6,1j"G8_C7T5%f#=tF&^
%`WBOVGq8qFW:qg8-dT,/,"1q!_kD/4*'UV=!qBtI>,q*.Gf\A$!/j>U*K/IWXiCLsAugt.0eeB+pi-XK/N`I-S:c)0DD7[B!^cq<
%0ne^b;%J!?pboe//5-\V\KM(X[.24BX,7/.*;53+TX2Ce#TLVla7*1q_R9XQ2%-[@_b=-eY%8FdGZAI6V@Y=>RQ:e:6o8:ka$qdG
%f#%RfIZ.C02HC).b*4Q/K8FXtP8OSU-c@7\Tga&iV6EJ5`5!4QH7!SYIP(<-EF-rrk6Wi<qjJ)*OpNjm>GHLn*?*](p1/0n:Pe=W
%o?)fLiXiHS<GJ!r.rtlQ"kgHN9WWL_o%B=*lkl4/0)1$&_M:A-fl=6#D#f+cN"QWGQkj'JD9%;t>4WtBV;bGLM=h00OK#ZnB#H&Z
%c8ID*"&#;*`^_dZp,G;hMWCuN)f1DnhKO4o^O7UGqF0_PC(3>c)@*"]@#D#K&Z4e6"aaC0:rX`%=)<87-$s%9iq$keiF;/;G1@=l
%lr/8+"It6k^b>?6)6^As&-L+1NCepSNMG-D3',Uo?0R)^\mWn@?oNthbj_[fDbIhu(&ldfHl"TuciJjl#,j\,F*hhYZ`8Neh&Jrn
%K//1#4PRlqA]5tNLKnWd_Tqln7mciug:(cU4S6P7i[Z-6]FNt736];ciuHQh:KLZ-e;+Oc)GH-Qej;IG/u)ZjRCH.Q"tG8*$jh5f
%J+5"'6rFHb*>dqaNb=;O;_Cn.H*lY":#']eT,[(mbm@CNYCga(:t$6"S+/SnKIb%[X(]?/?5DJ^dP=OT/(sm-=BqPMR5"*O`>*C7
%f,jFi[qTD!\j#74DYqA1_Sj*#9K;i!d&,]m9_lo/VjE&Rld=iXc--@n_tr\[EBW%p^Lk=9h6D.\%cO@:*M73P;OT'X*H-Su-!0hk
%iu^kr0Z@ucYa&rd3af(I(9Jj1ERT3L+IKiWA41t=8>cK'3$WSXK^]@R>`$5q0nM2<\u]P'JO:rOd7fT)nmjcg0"bUFbR@abE8nU^
%:*H4ILX7sLB,N"DQGE@aD9'05##+IS1-iGla"Q,`Z2Vk##@ZeBp@upoYS,q'=7g:7HsN#dBZCu;Hau[U4m)2#".S?!!MRAuYVOdD
%GO"*@l*)UCMt@4TF"IHeK*q^Kfh(7-U$_(1=hH+o\/\51qnTQ(>4-;eSDBKN?Q7:C9)b.Bb7(C1'(&lHauBtQTc4u-,Fcc&l77H6
%(g$\%_oS%<fBq-D)a7cj&NafGDOO#nEVXsmL!2l=[:F4&[5R^T1n!hWJ@qi]Tiq3>ePP5Y]%fn^ER/dblDB2-/H(9i]?_5:4k^<&
%X1dPjl[iV/ik<VPXK*Q*AQ/).]2LW&Ws9>\Ik2Z>3Z]@hVeurPn-4!9@a(,,dr%qN,XaoK1gW1X0eG"V.["DjoiOOq-?)hZ`O:BE
%l<B7[lMu@q;1sF83aR=@UF\CoI+s'H4:8a2/au4MaX?7K#a'is_?uOUUGMZB55[*!IfJI,G"hh7Is1jJTkH>XX_sOc?P#<g1+r1N
%]-b^::doqra#o0+s3sMa;IFR<m?A#]Jp.Z7.J-;aI879+gZi4og,*mSI??C1Pj90r3_Yap1cKdVWJiST:*0SF$2J/hE1kU&*.-m9
%.dR4BR=."V\+kZh=kTotY`h>q5,gJ`+QOVQBtV4:6dJUaNjQ];LfTF5dS]dg\e\?%1[I:]#F;%8rH:OZC`FBY/4es&3*ps1=$'kl
%FO('ZC\G'9Ef)r[[1pY3RKupJ)a6!=d$.7<=Hj?-rIGYV8"48piX2OU>lT7fLMoG'@D+B2B$]o*=;i/_P$dHV,a=iu)9LgaYFuH5
%JBhMN#W#fhF7cd@4?oEsd_feWm]MFU&bKTPd%Z<+O)ccbWYCp<Y?=;Z]qWuLGF?H"/dleE_S<fCq0S1T`1tAQ69rSEHG)n\B4]_<
%64/,_-5o?6U;n/(!;8W'qEgRHmUk9E?h_sH?i\o]64lY!2_A@QoK'Km_rt^.8SXOt[H+Cd!4GV4\9muiX\C&ugG'hg2T[^Bg`EZ^
%g#2B>QSGE#6pJo&[p>eN#hCoA;ElDa_$EuOR7iUdQLij$S0t5A(%*sro+WW2QB*o.-u90#]H5@AE9H-X/U@W!ZtDn4Tp(ru&hFO,
%oNCE`?9n?+7XX9h$fRpf^FfHQD^jOY&FhdnjVamF=d6Ge,[e3;p45Lo#JS7U6W6R->PgYf1]U8U9t1Q4bd?M=3WQ"cFp2r)f53rs
%@>O#3Y&GAQVpPWf\B]Bkg+Ha"Yi77qTNlVlo=KJ4JV_7k:UOtI;k-4=H%^`%E?PCK0?rL!ScHbiRO_]O'Z6(gEQ/7X9YuH25-H7Z
%JV=Y:\-WCMH#?-%]RLsOR?@TVE-/p2kXPZp4J2iH:_u2d3l68dH(*(^JhA#Z,1r0kBOGu]IZWFifZ;YSS.?6o%%k'kc52<fbJi,?
%/nDnY8P(6s%!BQ,55:gWa\fY]\p<X/Y^3tXG&R83WO-c-;Xk",]"]Xo.gm7i275Jp&(-e]6o8dfcpIWCqTJZC$+kj8(;stn51Hp)
%2cc3=*8!'Y`0+N-FUB(XP[moOJ[&uG=4M)uR#:Um.8CRj@D0s:>VcfAlj+aIhe(lX/3O>s4>gW%nto^6Gid7`3PGYu]!"CUD8%,&
%-_uO;F'/+#4s_"ccmu\g+?FUbCN`?3_K7`1LM;2oqP+/Jk)&Nm<$T9T"`Zs$-&++/5$:=&ikeO_+T,UL--jpWTC2=LlTWi0Jg_fK
%a_moEJ51\_0c^nF7hHZ.%QFagCHctWJ$rCt0k"a!X.cG^#$sBA#r3Lo8m"F:n/''#B/_W_nj*9<"3qsnoQ%HZLr8Y5+>5da9F18q
%$:X#m&,>OLo"3KqlC"?sjF/AGh1S$*0'snp02H1qk[\eVBE.C)E7>h6`N/%\rMO!eg*JBPP=X;6D9>b%=%%C&8-%BQR*>jTBL?ZY
%A`3%%:=/D!DIi8pQ]b*UY_@I%g_98g#iT.5KXI>4c?+c2,ofTh2),003\LC*A22adnb57/5S2\an<C'fImMij&6<'#(F[NK?H?5]
%F][s\MI%RJMlZqsg2s!-92XuM,\</Pn!84D"aZCMgq"75Trp8a0Jgo)JYH7A.9J7MJOD@%Sc_K)-L,>g%LmsX">djE`pY:83#rAW
%0%P8"S[\K^3O_62KfUEiH5+Moa\#c`\[)U^jc=8M&e\Wcc+SCObW_t&>%j>e@#5Gb%<N#-.R__`$<n7^!XrKER'h5?%sj8#peMrI
%!-':g@'!jb5fi:)=,&5Oi4i^4"6e>V[g:a5V;bV*kM?P));a;TceAbkmm<5-0h[J)",bs<pN%S09&I9W.Be>,kc8a^3%ku#/r"7:
%8!5J3iFM(MLG70hq"hQp77[hL\b>kgnWpB#m]oWG&JNrn3eS(4.^S:E^j9_h%"&T6VHm_V.8n'DQie`6XiWZc_E)"WhqKHEbQ)KP
%R'b6(Qc/Oc.-n@`3UD$sPg.Jn7_+NVdFhhI4gM]EDsq>ZEo?LUdBk4s-1S"b8]1)UJ:.?n]p`n4V.D3W+Z9h$1npio9RIWlkF2t:
%;b!,-d2R#')l=;^/kE(c]-4pGE'5^^@,LjgH?XlXAl]]&4<66Bk-[V?;pDRE6>2#KHTXB&ANU?Ua1#\E4SJ2KlpK=*1?,J5H8#8n
%(l8PdWECRL@rphQ2DS]R$ucs`8`$ioQi)MX/3n^V&Ea2"To3!rB/Z:V-m>B6,[18FU4FZhVEI"%[!P:4XOWR^>SR2$_6na+D](."
%4lNl>FOCk3]Q)@bLkM!5i;Z%A`b3Vs`8;YM.^Q56mFe_M(L9@&*]9Ut'q:I[EW\"eQ'4tjZk6"\h@EE[q-X;ie,mRtH39H14bqaa
%j\4qSc2)4rkS]b;PQ3GJpOUN4F.c);+^uD^Jr$=]\\aC=GM"idS0=0)LO2%7#M7"7DqWRLF3$]o%msKsNQRp#U6&?<7_NfD<7-eF
%g.mqQY%FkjEFME&a]Q#;R2A&c1\_YpZE5g6>UE<SecSek9oTl92U;,4J3JoY1iSOEi0+3971r/jh"P;@.6H6f,n5js_L;FK"%+&9
%^RH8,A.@3L3ghm%lqTXA8H*nRfI1[`P!7H><55T3%kY%..tgQs$Mi?df-prgA+XX9BPgf_1,6(E@`7+!Tr=@^G$X`Yn!7YZm-mf1
%!0&\YoH]_V=C=I,gm5iMeYkEl6Rl+*h*sdkn`sNSl_W+]n#n*@_MlNXO-n!l6B?I5iP.n8CGA`NoH=c`cHR(YIh=J)2uDT./d;%V
%gZj""b/r'k=Ff$&ne*Co$*%DRISgN=XpPnY0Xe^jCaCgu7Nu%G*iBPHhD]A/TnA^DC_Tl1L^Es3\&H11C*51:/'#Q:?6Sh/3WcIT
%+cG8m@af>]FASNE]Hd$(UX,joHr=n/XW^MI$QfM)M'i_6rmr3=B\'/eZuF9/ee+@\W8.lIR`IHY2BRRZMC5Xbdp<D@+q[S\>l8j+
%F=73]>@ssc:A8oJ[NQmS2P.kXI3$*@=T[ZYL\'Lu@T!X^g^Dto2ki7e9#)s!EjpL9YF"/'^AETE?h]9FHNI$e>?'iIMemWU:.^DN
%Y=ZEWKM4+;#Nh<4-ttHC,Q9lO@DHMiOm3a;@EWU/]Z!Wl]H%Nu)V+-`km;J-pL^[D\_+Mc'Q/IQ&J(3roU#ff)Xf#in182%.3s-a
%.B0<Nd"9#>R0tACQIM4HFi_(^TaJobUkl7K+:9"Z&?WE*F]&`"TP.14.P:($i4KVPd,`jM$)!"uXD9#1f/8,,0Ef=A2$O^\r(P_<
%Y*P=:2>Jdp<do1_Vs=]G?s@PR$Gm?G8m?n]!=\iYL-+]A=bdR@@\>pSZ:58h'X[RZ>lhl-7:(!?RGYQo(u#f,$dOW.cgMZ+m\mQr
%EmpaIP"($L+mhnO)cq%^1rBV+RDq[[c'"c25>D>^nN^m]_Qt;;[LEFT0CB]N%RXLm!2/$[q8BqO3SMjB31a?tFb0^)#k;fV:'-_]
%V*18lMRf-*^?_4oB5`alckrS.&R`hSQ(-DN4j:B%N^Huo+-<s>_H<7DaKDlTgW<77Po4jhCO9q8@4O_Zq90O]JV\6RB/^Jr1(YDU
%.]<W]!o7]a-f0u]bF,?nfN*O>H7PBNL+6lR3&SFD?EA]Gn1W7Bg'BPO&0&hd^G98YZJH'Y!F1V3G//9s1Vg^K^kD#GPd+joRQoA9
%^E?,;qRR4ThgP"rR2?nZqhefd1_,lOQH<^p1I3\9"8pH@(1LH;^dZ^Pa32UrR5!`.W*@G%7.q`o=Ri1NH7/DKi<[4+`<@sAJ_$5A
%Pie8.g-?5:ig&!q'$VJP.A+V3=*^*N2"4aj;c*[J<DA9j@Z+RWZ1mEj"7%3t)M'NU"QOj2M?R[=O>/)?(h;Jcq>6]h:T"TUQiW<_
%^7gRo.b$SD#PiFR@>HQ=F1g&H8(`s`kRCoMT)#G]b36L&=qSfl%Z\46p;IK\rUoGDK=!H3J6#rS`n9+r64BM]MD1lf\;J[MP3^DL
%YITBK(hqa(WNa6uN<Tr&M1.b^CW<ea0`WEMRUH:Ye78'XV!-5BXMnMC?l6ePod7I9Bb`5Ac*9\j=gprTNc3[*Jss6"R3ChXSDY=<
%bkS:j#j5\<J@)m3\;(5,#'uh60*AB./Q5"H..7.2UjDIT*P')XU*M/K7GKm0c+@^$e>XkT5#dohiAF2"B?p-_^aO=!SVH\A0jQY@
%Pkqdp5!$BY?P1fJ*]#NU&,T77C;7R6gg@H<cXRu'87R[Jh;_t3G9#&nd01q<4Wp5XI/=>'4pohp%<3$O]>M4bO^T#;oJVB<np(?A
%5ApnAO0D>GGT=981cAJ_`FX@3:&UZ0rm26k_CY-[\RO;.!BSh94Xh0lXu1NrCJec$e<B%>W3E&p\GJGQ,S:58qElifEp'$E+8KW$
%-H-5qbjY#udr\e9RL^0mW(ftO;eY@J`8GfSA$q0oBa0HS,9'RaHLRq7K:2=h;bsl_WK)_6<G]-s;!6V+enS[RalWYSL&fbB#3q7J
%P=8*lTd<nFRG'/9W"hmm:`8D`>Ion4\Q)<o$Y3u!=OJn,03<W[[>enDrbXVNbRD?[pA$Xr@"mqQPUW:L?[%lk4/=;I;G6=li*sBe
%8=6:j01!Irqu__f9hSDBP:>-`^/>fh?XC'p;W^8-]``0(^sd_[.<[hq^us4T?F'u*NR/79`6V"2YS8TEb2C/H!e&XES+3nZLkWI]
%VOgtXYOp`.@7f=n/Ph56HPZ(XPFd*JP4$C/%EECJ3[R*cK?)kIQ8mXkY'-WGhY<@V1pM1"J5(d.MuobiS`F0YU-lI%<2<API@kZk
%(iPD#?V*6/W1LEMBbnk??Qu[&L.\K@,*RAo>)EO.RDQ<1jCqbNL;i7H[noY?at$;%jl?]K$U.LP"p+"j:P_SpV52:tFGhaO,YZbl
%ZoNCT,p@^er/J1SG?D(hX4RkOE>AD*H"Fu'>'QQfEQ_j2\4!Sq(k[/f';jDu;.XXr&/(u)<!M)o89t]*j:MA?Gb^0%/V=+M?)b;$
%UR7:iGa&&9c=*a>4JjaD6i(2p8f:VDUa6sr.A1:?U-n1Hqnm_&"\&*AL1m;T8^)j_dG10,R8WHSnh>?*N0SH<;XA/nmnTn9"EkDK
%hk^)OFRrVV-d<DiJ0m\`h7U6<gdaDIaE72;b_s2[;g<%'`Ul`Pf7d[Gj"c21.1NeZ1?oaE(VES\.e7B.b@G(7G0GC#UWQc&Rs.lp
%_7H+&Z]H&q-/j[Q[F:FR#$Sb8riGsV`H!@5M-qL;8rUDGHfgWM^+BNSGe_Ll:Rg3J,dpsdJnNr(hng8<UB,G^dbJ7B.c1FulDbL7
%i):L_d=;7d3*X>A\O"1=GgP.BYaAbYa_V!k0dt-*$m<o31S<oF;.ZN)U(BBp!B*2Bj$#`RXd-POjTjTC3,Dq.>-:"6AlBl65m9JR
%!P@G2Rs<A\C86?V\eZ[:3ZYq&kk+lrcS@`$m$5fc?"`=V^;>@_=*)#j7#@ViN\%9=ip)IG!:"ZTO&a-DT#E!0gCt_///^Ni',ej&
%.]/SX*=reRjO1Qo0<s`#riK'c@s,P.41gNF`Y5Zt(EJ*Pk3Pg#H"tF>oXs4tH)p-ZFF!4R=I1BaJSaQ<&"kni-.aTCYpm22gnA&T
%,Z?+0AeKrXlOo'I_h_H$ij#q*;;Lk?d`%]?j`DBC?L<GFc8'>l0B2llTd#j;GH6MaGn[[6;7odEZdBRC0,C7s5s(j<BXZ'310JrY
%Wi?Z;9?=TAs3/U@rVW04rY!\p(I]!T=D],P7(He3';&7NF;Rsh_k(]7<0ZUZNq^O8jaHT;Vg.jX'QXEdH!\TIT@O0mVT*Xk/R4-%
%;rM&KX]S1pAcq[gcN?TeWn/s?RJ$E!<'lTufMdcsXA,paK<0@'Edq_MPo5t.pjJI"DOmnSPfmg!!p8,0lJqgj]=GaN&Qq2E!!i:2
%=OG!MrWPctFcs":YZ1%m__(%S"16@?]^42LJm0Is.!hBE$t,@1,X\>6lokn!B#"d3N>u(1I%KlBDrqfhJn!--8T*Hr!HhrmH(pH/
%:^s9;0G*-F`(h7:j9=9+V0X(Wqll[LAX8B9JOQXKd[nNiTk(1)2*7sM"jYCeNd&b8?%J&*f:;Ju%,b@[=RVX@gpa<N;+p?J&#=6.
%=!$W2HT&-Jj-En"SIur1ajYEPi49n;,d`YOc6=:Rg>o%c(^JrU?t0IDic/-j,W\p3_j]*W@5/<TpbIsn9OMmK!pB&@N)I@)@E]%e
%QYdKXA6i%;*DK3nV:oT\eN?fk@Fs1Vc"p<8FbDZRb<mQ`8S)V:C(Ro(=M)/fbqh]D?j"%SL-WjSeR*N7:qsm]T010DOKWDtCm]-c
%@X1!C1\WgRQ:k%:1*%Fp!QTom9B-Lpd;&\">d<n7mE$m8_g019IB%T8@j6qI+P^b+,-oH//td,u[U1S6?1`rkEND6Tmf4/u>'MMu
%\JX%#Z,'Jb,"qqB?2CQCJA<_tRPH(%<NC?HeOB9-TfG!MC#Li=8Tns'2,m6.#,OB9%[Zd87'sSEAJ7%[70;gLhS^RC,trdt9@(If
%i/g6>n@C>QSsI_Hlr%]+r973<9m.GKY?#Y#LXBgWN9g4#jD*nt+Tu5A-_66H+`E?ACN8H(2]/88jdaC`PV_DrCS:^.>fk[NKaGCQ
%gSGE5T?WmJZ"5(Ahk[0(Pk6Y4p_M2SRG]/W[)S;*2X&3QV(b_a/rFnA(*HLp10E8CK!6SWC7nQP12KF*XT>N5UaUlo%(-H017q'H
%l-/07NLL75eiR#VG0`i[F<;\`lZX-157]Q>GuEL_T["Gm9H+`4J)l!@r3Ql1n%">-d0HZ7<I/^!qf=eaa)q-oD+W[L4%tk&GQJA?
%_OC[LW5D_-8Y-&To56<!ZNP,t<To94B7i,gh#p6NN/S8#g3pD"7h&[@+<;]'Nhfop*&(ZWpZ_$s]10Y;,l*dpiYfm[P2@OU$5/2C
%V5]SM+f3B&D^RRUQk[i3dk$D<&:<Ve)&'FA-$%3C8ZG'tJ8$RYs&/OOG'-j*EP9*GFfSM^3i->e=;C_7m((6<e>4k"oe;Y:W^0OM
%2)VLrI.Fp0"E-Q4aGu6R>dS-Q*$,eUQ`!EA_NJd_K&lItqh-c[j7$.&`<lCZCYs8c_Xd5pH_mRlY%D\*2Pr@_/L;[C"/kDt'>$R>
%bdY'M\As/71;s='9"Np^Ic'`I1=G/s9&HEIYL3hA";^mp;OIT?G:.o>@1FHN`hqoYk0\mlaqX0_Wt;F#odXElhpMcr;AXa]YUQ,>
%F^b@ZGK3D.;N[kmlFP8B_#R8(eNkY^F?6LXq1;U.8;d/!DeY(HT1`T5KeOtK?=THSJ!hp<)FqOW*amJ#QJ@!Nr4XN561#FS,poE$
%<`%eT2c-o%GZHGZ2CB.$@q:KF%5A*J8SIH+h!ZSk4?sGO\BdIa5L's40HtcV4d^`gXM-&)iZJ.HUsm["%j>!%]K#@5rF>ujj0,A?
%NaQ3NE-B;&RDHU^bN,&^Et5(%7G_6]4tJT*P8&C<`rK9e6TG!>m`6OhK"gOT>g2(^V7mns[ds@8<0<S2p;`CFGU5&\T7!;"%80nV
%KV>sQ`hcHA,ToY7jU;:2(M=-%3dj^hX)oY#<'S4'kkSjNecu16NB-G*k_[tro]?B,\'qOrcp8KU5-PKH2na///oUu`E#%n7S18[o
%<k2p:npQ#X7*b0D1c^jsDPAUS-`>V84<mao`4ngI[)sDeg$1k![D[+'a:^Ai/7(^pH)Cde<[mn\.Dh<PPuK-L,(YG<!R\Lph?,2n
%^2W!W<k0N;FaPBF#*/'Rr40b&WTbmajO#sS0bo[0H.[tFb^:T<Qg0mGm]1Ge"E#[88VB4Z'G)&-!&$I'F]J+W=[+W1?Sp-[1J3-<
%-&j(b?pjGf![M&`*e*IfW`J<B+kQRIZ8+Wtal^hUiG.7pS:Y+F8hqo@M0dGc:mhY[dB0U)GO$[gmkNdYA5-eZ)4,A[#67G6\oZud
%F4MOsH-rn"Y7S+Xj&tn7SAN$i9sY':nSn`$nZa+"f<G!:S''CRkO`BtnuaqbZFI1+UDFuENrP4YC?[c.OleU(Gb$bB<`'=a)]4BT
%P<I!&W_/d.0d9J'pIKbZ0?4\:J%?NMYAb1H:JuRiPLk>$eHKc6h_$;Bf;>"3,$-B<Wog+q!i'.<ZkLn?-I+o)&Vc*LfnaaueW'k7
%AB+gQ"<UM)J72Cm(,)?Bo=KW1_S>6&?Zc2mm^tFuE;9f[Y\O$mT_t#Ue^DJ<G&9U)TTUG[OmPVYIU#@@m9AMU^Nk6"&HgOsneE\h
%:W`b_H0#S_T@:eP5V=Nn-]Dj#b"]k1.ViFtBTJY%&Af\tJXu[r*n9@ab.sVh(9Pmt0m?AYcY7jkfQ]U)a9B-N1mJHlP^<W<)m_lH
%F]/s/IU<Gp+MQ*nVqC0I92hMCQs!EuN`g0ORoIof1A0LdJ`59SZ+`28[Q&g<<A,KbE+'AZV_-6;K?;q&=<"93j#,n-@b9PVS4"GL
%gSs3c.jeBP2<?;(&!'l#$O+ObJM*+J*Gs%?L]_/lk+D%4dR%0Fr2&]Z=OCVB*JU8GRfHT\$C>L*2^tXTd]M/YU*EuTDbUGk+`-kk
%4K+&dZrmYsNO'W#b[!j,(9caCUaj(GK]n!N9<<,fOpu0'P;FN5_shGuRQk\md]`!'"O,#uf8X%\"Z:7mq%C;SBpU;O7;nZn(iShA
%Ql]f?>LH*a'!IdkRme4MA49),5asIt\LEkC=]#8Fe/aQm8T?pFhh<I1%=mmXj3+nGb_3j'UJ=]0oMcV#5qj!c:Zk&(7F-TL3#2QL
%E&<2QW1ki/"@#B=!mO=eY8+p/E1)m36NO_1itiL[X3h^tXBNH@\-7O:Tpj5&]^uO(^n,.aRJ"^2e\:C6o(B[L585?3Xu%pDPtH4O
%Y2WTa,Wm991.ECd.O-O4'JlT5<a=W1THO_Si/@%jH_HTmUEQFL=NiZML$2PJ>"b@ulSK/JrjW2:dIJoZ],VPjI5C,t]7q7GE^.>j
%ZE)fG=G2VMcN2`&QglOoF?2U;*,m7U-Yn=/c2cA)PXKAs_"U/'`7ruE^d=QXPMC?&?DJEhVl:eklFUN6'a;4?5;fDIG*3VC'C*)]
%Im?ifSTp8;?*!*lZ\.7Sptsk;hfhtO2X-,WF5Ik_A>d`<gP.8SF=%@qSK\e0)W5Mi5kOn\f>.tNknl699j!mF1]EnLP5>;W(I5aM
%lR5s`S:Q[YP?Qdo'c>T6-[qFO^gUYk'OS7?_^oa9`L-q&Bh_[R3%fO[>cVVqYt45>JZABh2T\ZX`QDW\RPT0)_:Q";LG.DPmuCDL
%7Gb0M2u%qhYjg48Hh35_IIVNMh5OP=5&e^[?],To5XQF6RcKPi^pIIRRq<4Ph]trTA+GF8=7bk]`D:T)*;jS8geP>Uj)BCsQM!A'
%h]jcV(X<^/gbKM21_12`>?6FF+XZ\]nps!9Ou3Tp[(]mB[3.-?f/"Tt[Jh?BX/aFH)uIG%X]p]u0^5/[FWh2FB54<Ob.%XcSf6gO
%fXP))m"aV,,gOo&AdX/5<tYj3KD-,ForK*9C=H`F2s%Oh;'=530Gp9>:g':@7<_[s;l5l(46Esb`BaoVgV!5#2@FbAGi3Abo`Bo%
%(<DZp%0WXV<a\^@77ur=fnrO_`"2+::Y<+H.4ZgOA^?Nif?/hJR=BnefZ4DFCHH9mersC-PfH[U7aL%"ie2FXH^X\EPDe]Aq=&H*
%kVFiUMpoDNXE.802K0NDL9lB%Dtp?-JZ_tt6TT/&V-k):;C65@0tgV/([s'ccr%D1-IUTE""josRS0.[YZab!r3:EF/P\(dhD&V4
%]>RuC9`c[.Xi^HO.Hfb4;/h=ojsl3me5?=JJq?h:laWI6Vq>:G="mph1hi%i?>O-HD=WLS6Y0R$OnoXTEmH2NO:?jrOMS,HS8MP;
%4!tLZ5L5!A*5U%Wj1(bAA,2APRRQ_HU?W*XBUY"tN3RA1,;`WnEj#p9n@EbQXDi_["#pNPLV"C_iOPIuE+393$)Xo=YR1$r0VhPW
%h,@%kTGe*.:hBHHIp(6>?\kaMS;tHf"8?@WXR\DaTkV\"D,b#[X\i`u3d2hfJE8N)Q"4$dMfuU/M6d6'VT$aJkX5JNGY'Wt;dXoX
%n-<a;e%;Nj>[k8'1GfFV%U0_YLLl,K)RaOG0n2'Nro"Vfgq?Vr&Ot5D39g5u[5<gr+48W&-tN.S>901oPnGqO'eTnQOAl1il8m:L
%])!SO,](5m[K6!am38+Xm`h0(&=D!O72EG:r!q'0UtU=[KT8b6I\bWNBqM3P*Nd("E::c4m06W<J],gK3010dpg"@G8"J'Pk63!8
%Q-`u%Npqo[6[M1Ml<\?aA4'cc*^2/)=:0LkDmloYSSYSCo%ID9Q3:XXGY]q]Z`jccnl_Tn,p:ohLV^`?C%<^j:@ejb%6,LT1tKN3
%q$<M6;&)Eh?FTmb=DuZJ\f!68QGI_*T7Nd>?Bc#Yk#?O`/l?HJ+o:V-!*Jc0;o7;OZj]&W%a^lR=B%9!.Obp"2`qR'6:9tY];=<!
%ee!E(*[jCnfkEP"LKVG-a+YQJ8QFL>/P>,E8VE'8>dSNu!^k&`ALV!-Bg1aBW<uk<ZQla$fEoQ=:PQ+`%i]Z6-f!Dj5<:Z/>.a&9
%0I#Bm0'PFtonK&&Up\REif7@=.p/C=jaZ8'4dRZ>KW&R!//@Xd//9upJ[^]J065k>0c*1ep1mI?nR&&?@l&K\*EZT>^AWN0oc[q6
%,$-2`!Fh&Vb`CMDSndS:F.8$DaH1k@fa1W2&PpV<[la6Z-n=n,[a"9Vl]%h83tbimC]'QNU=FWbA*_XGN:n\r_Zm=JCkE,AWAgX(
%_1->h"G>1J**&djT/'-CMY')hJ]tho,m`rBR8'2I6u,c($jIn76QYX1d$+D(O,um,^+r&m2su3#Vr,!k1>P.T(2B0GIc@K3__E(^
%Z)oT^[Wp6ZD`)j:,kc8a',gU>PB14Tg8/jt11K":DhmXnOgg2DgqN9G-=0orga864JXbj*N!kqqYnMZoCak/I@A,VdV[a"`KH]:c
%G+u"+&F;*r,M]Co#nd\)hr@]l-X2oBnbAWVeJ$gENlSZ1._"cl5)lA<d7:Q3V:Ue:'CG@lT8FL>_P`l?8VSM5+i.;R`^?Jr#gb>"
%8C08.-`n\o%'(+oOtfBIP7u6hGkUP%HW4mOX8tS``<H<@XJ8/MA!(+N0376mG.jUm"Y$0hAB:k@DS<J3Q.42jkgiCcd%6aq>ob2'
%gK-MC+;!s0ZY5"Ch?SR4*)2h1"FrLkS"^,0`ohA-,UU.Mc0"k^H;Ji:Snf'6D99?qiUK`!`b.V`jLcZG^GsU@-c)l)kh-Z[]rgVa
%9hN(,B5sZ,F%hdHf@:8]\8B>t4RUC&JVtrK9MOo)49),F2t5m^Jg4*26RI-g(Bqdk!EqbsrYA^ES(H92PeI;;R0k+:$<cRI7BL;1
%(VekAW8Y;)p;J1NIuQ&V4?2)`TgU+nm(>QdEc0hjZ?N;7>`lu^m])3LN'FJ>n_'utlUd'#=brU\d9SXq_r)*6G:0RDnLQQ<?BJRP
%X_'%l]tcG`bJ5>$/AN*VqKs&]=h]K.a+p-]!?R3.:m;h$2t:J^7*Jb1`7iVDY53uh:eMP2Jee;iEDE5lEBJQpqm4lMO9p""ch+A:
%jGX6S6=R$nW7A$JTN9ji-h#7ZP2H64X/9>C^+.]?F=(@2_B"l&@E]M\[P#*Oi'4WlnCmVlQd%u(+7@W5eVB[A;t/(m.Fq50hbPC2
%h-u:<4"hu`4dmBkD*jH26"SFk0]W7kafPJ&Y<XsTF!g7\m[3%jEF(o"<cQD;?csW^Z?<T1R*)YL2$5r6igErCYq/Z@#r0Vf_1&6U
%@)CF"#&I[(d9/t[mEIAUnM\`1.YNFc$Wu5iAtMMAL%'3k?(5QmXL?!B6>dC6Cce^6I%->\h<Td'S)C(t@Jad(4PT[V:m>-n#D/T_
%<%iPp..Zj3p1'90b5lD'%\cad3c5[L1Mpr3)Fbm?BV_[EN'E4-Hh/_@fX!7Fo3S-p1uj%0']R@'@,sl_gT[H5;*<MF:[@$N]QSB(
%L<$,-q!V9Q:>\)pVb6a1@jNRKCY_<Nq05,`kZ6UC'oG.4e@1-n,KhCIK@mbogpir3(W_S30Q>jl^/)K]jk'_.>6D`?&CP#@)`0jN
%h#k>*Cudi)9Ur(MP@X<[n4e,-A9psO$KA$nl6tXg?!PG^[^_$taICVsnb0YI5t?R`S!+.Ue0f&m-^Ii^a]]lS%=i"f[.V>AIeBDU
%947;85uRL2#j*3Q1:L0"6hZ6%/=&=fb'NG_,QFW-;u'E&@rmd\0gAfmf[>h+aH8f_GH#HV/;aJ"iYtj2V^t_Jdm9o(Ttoa^qC29E
%,e@d'4VfWe;\ZRaX":8T0YBT81AWi$9DQi1L29@&/ip%s?ic#]XUFGiL-m,!UZe*s$[-9GDpd9DKt'jfY;BTipnR2tWd.GUV44GO
%"9kdlq\GU@=mH0#3q94):Cg!5TAmSGB>`OA_E^li%KDLpGHMOJQk?O5EG,ZaFK:P,11nRBdSJ7X6FX&%4X+f97b+^O(^3q4o9"aB
%4.^t"&9W2p!>L&]Ts]43O$Xk^M'X]'_gHP@hDiob0pJ?&YA-4q?cd#rl$R3)+VO_d\6Oo(VD(uP0pI'M`D\mR!eNFs^CU=VnAJdj
%`>IUnbNBgnMc9=l)IU%;+CX<Wbc$hs#p]HF4Tml.$GI!^0:Qp<c33p6&<b$d?*U627+.ZkF#GRC8_4\9_O0l`&A)KN@8-Ir@Xg,C
%@4VQL,E<dGKY:(@HW_8$/CF#n7GS3s@q*)9qi2+FB_Wdg!1QP:fI:9EdD-MhA!2IP-AA/"Cj'T:1HFjtPf<pKahK'b!c%ct4=cTg
%#TjMBR3RS@fs?=SQH/@9+qmYm`g]Qa`V3u7[RU^LSfT3TZ3@l[)_F*/%_]m+,%<U$T(?L7T@gRY)\Y))7+Boo++<8T29Q0AS4KEE
%7D.e4m)o*O]hk?>#<]lZ)1a+gE#ND?_A.c29RIIrZN*(n?O-geNTX.;&CC-u^^sQqYWn`kP?B`#b@=;tL!0n1:0?dpJ4dqjQnI\q
%])hR2nOEMilFKc%:P9-rQ+=)Wr0'$P@^q3`2DcQG"W]XF?29hE1"`8$G0#dF>Un$\'r[\cmB9de686_#:]lM$)^mb[LqoK1gmh"p
%F#ei*@cQS"Hh;k4_mr=QogssNDj7Dn(o2PE@rG+`p3+e'*5M=(JsmCY$-k,ONH4a[()(r'EbADsYJ*.-:XqdsoOX6r#t,=Tkqje)
%`cN4Nm35fk8h)GiihXMnT_"BuIt!pq(Zdu:=;+5rbOU2.I=2?U3aiMkL$$R8[h:g92iMB\n^+8\YmJOV;(aJp<E.*l#IZ[HiK8-6
%$F$A/$9+c%;+R$V<HWA?&EBgKcF\lb?lc,I*:,+jTOk8pIr.kRK;1gN^BqN4\g!K`lD!`!QeuqVq>r\P'r"uDW9]gA6?lR%Yh-uU
%_BlJrN`!V+EX5h"<$ALjaPo82@S;qBFV0N#Pm]7YQ7?#RjjL4VFf^Z]FWK2NE^c7[g&H:-Nr$.OIp@(6f]rRKW_jLc5A0Z7.[9;R
%U(]P^ho]piOlI:nhdU:NEZV>77`V5Q.Edt:dB640%I@$\V?lFqZh2opHLG.$l/b#Z/5j2Xl00Z]O[kccH!X=hGoo61)BOh3rF)_*
%!D*aZ:+S%n:PoH5"8.PPm<mHo@gm6f0hGAF\D(/07_Pu%S]0^<!itr"0djV>^*hH,;pk3-s'Vf_Q70'uc%.5+*qG^G2q5*]G.ME)
%P,-Nt*MfU-H>#Y#B`3N/XF64o0udVe,,t(b&Y=k^eG.UX)V-PkhmHGJW[eI&S_J'2qIHeHR5q"nIpudYaTA.-G,t_eN[TMoB8A:T
%DpW9j=Mc<F,48q<>K3p9jt[,X<`?E;IcUqg0IK9k^kSq:<Ks7YA\q$=2p^sP6-*g74e.9N>ThhcZAY>VOn/#p27\YOOC*aOmjdg/
%42Vk$E%?iJ$(i^daJ,d>.i*#Y9g1@"'`?[`R"J=4c>F\cK[D&J#p@?gX;5/_DH/mh=)u/M2e-1Eh)Da%8:+e^,0HeT6Xf%JPQllp
%Med]FE_N0u[\frd6@IB0LT[sVD=&O)1Ef_OEP^o^0eM6*-J`CSQ"%phVfgR;am11qqhoMOcZU*5%>3Qp">-od=mu'eTfR;FS#^GU
%ZSY@SHCI8ZJ5#Y)g^3tn4t/+cb/U3+(,8*4'f;>6A?oL7fU8QZT2M\q.-\G1R\-M#8\7YRDh&S=:jh,QF&PWMo$#2HM5%'CEa$)Q
%eeoJ'O0D!h4b`WB(3)qS]nm3Z9'4.?54%HhClji)dK]=o3S3!'rZ2+0q1SQfc;Tn/O5lmI$uh0#>k]bt?u4@_l4H;giTZULEd1Ie
%b[Ku^VJ2R<5EI$u+e0U[&g(m?J0Va-<Eq;a8-G?tAO=lLlADj9])[:%S>UkR\PQ5OAp*kkH6W0VVW?5Il_43s3O?J=()N7]Megf#
%ZZKY._D0%A]3#Si_GBr2>%Qf:;D;GVWBi=c1f_*!3=,qV@bfCPQ8BW$;_)]aR;G<g`?TISfbK4AfkQe00]Zpb"H.sfcC7\721:if
%8%l>7O.fF9b<@-3,J&3dfUq62dDR9\O5mLFQ>dWDj<GpG7h;O.HU.2DcCoKi>VrR)`fF&N'P"!&OYH]Q>ZM^j'-@7(T>6?r+,7k6
%O[KL2PUC:MgFXuXV'l,*WH$hdSY1"1E17HV/Pa*aUig`M-e<ig"YtbEP2Z$?2D5dhlcK@t94aNodYpgUROF3<#"SgN"JN<olU\V^
%,SN?*jUn(#>p](TqbYk^TO-H0C'jQ(Tk(C#WmnWV3p$>X,&t'dZg%e-Q,mW-TIG:uc2RZ0]7*S3\155E<R&6"F?ruFiNDHi(0%97
%r8=G#6aGb[*3+m5_>2O,27eODeOhIBZc2=b`%B,Fo:aSJ$*X_=04nJeC`X88d^;"'&T.+,mL5*)\:nFoQ%k*OFVbY:pB])BbfZj@
%p>"Y.lLe?=jb/:#!.eGB=n\`BF`!:U_:rN5=ZouR8BMmWT6eF=c76iar+litr*:@rU[Fi.9Mo-FXg-WeQ&<4eA2)rnf?qJNeaBGS
%gH`er6/#$Jnc21;J8ANa=GtZ0WF,*d5lW&;,c:D0#\AK_XRF-p*tt@OQG1u)o',d>q_<)"^SK\X#ZV[@`+oVWI!V*.qmY.8<KMhc
%>9^TR"`[p2gg;0DmUKi+n2@X!,/nl=1ejK3Q-)5$B)]Nt^)sHD0!tPYg`8Nk?(>+/>8BFYbDO/+?f+Q_K2Nqt\bcXr3S_idbM\HA
%HW>(^@!7Tlmgt.T^L4"i57i*SVp'@MR:C.:8TbIYe&V@]7S3*8/fQ@@[WtO*TC0:a>*A1+'S1#`d_/Eh:.qUXdLSApWM3$MKkur$
%Sbkiniu&T=f>.:LO%Q*X3Q[U"fFCGSB1YCZk'=`^?!iRh,'Y[>U.W0l*Ce=_qjuC/^"(GEAQs8Ic1kb)="`#,ChI0:Yb"/s@U-4^
%>GT;gTRgT]0V%7A%0^%F?C-[/;!+t_(4p6-Dcgq#@5FV?FU0s*g6,GR%+-%5.s<l9NX^7E9/W#&a9"6d8tWP)V>C'\6#<MfiFCat
%9j-&s:FqErh-tT?$BL1&1jhU5UNN)qQsI(5rRA#g.a6DW-YJr1iWAOk"a#'8,slk@:1C&7rUO[%;JB4XBTI7U#cEQu:Mo8A.f*p.
%4qgiWlO]XDinhamJ;#S8U1M,hh1\P?EjYkn?'l/,^S9S/5Hrlh9MBZ+"NK/p]nmEW^-QN*;SPQ>%,[c*cg+*6[^VS0+u?\=kR6Cn
%oS89423+Bc2HctZn#):>>_MhHGUH_VCZ&K=?B>><Mqf;L]`7sTqJ:q6EiGeb\bsoSEP!8EgLstejm?.']CAj4)Ep"6XpR/UO&LUb
%Y3:&.a'LN'Q.KHl>/:e*M%`DT3jBdiLs&elNp;qU(Sk$pl]p5f`/m)s]bG)bC%0\<E"?'E.a[hjMAtHIYgS`AVh9-\\\6C!*+W*H
%W\@1gQqd2>^-DGgq)Aj'oY[3<`n'//$mDU1gBG9q1/fsP8Y_Qq"iKdo,_ZQ@C>?[Tq\'Fc-u4])=:[GS`H;)a<.*K<dp-<A.iZ6[
%>gs[R:RN3]O"_t\j/aDohe'*s@_rETk+Y4VLmu56H-o^<m?A?0lrR^D+$\=9m!`(A`=UM%[>NC0j#Ynq@tQ'O<`]a7FK.77d'@D#
%Ma^P0]jM&E?I-7A)(UuEiZD3RCsgW#+N+Lc/5$(P0<:a=%f;*`GTbql0/d!P<jr9B1U]Ae^X*82<arJNI[c4:1r&(4q._RHT9\i?
%gdIUe0/,q7.acaT;j%NR@qbFRk/4%O85l+loW74AR9CJ7Klq_Do!nUKVfEjeNqS8no(N8<*2V*?5C"&#29(>,_iISQGE<\rlYs*2
%XQFhdLDUinijN"$[CigScZfNa-cB"s\<H(Q*k\V*Ceg6Rb>Vskk2k#KDUD47%SP4gDenAR-VE/C/Euq):3tJ,$!udpf%1Sr.&KXY
%`"(5EK@O[(p:IJu.r*CQL"W+Q@gn&u8,J%BD8$XE^haFlK*S]>:nG;6MU3Ji/VG$;M8.*;FHNNs7;g2!O5H^ejNj;"Rb^uJ\ATQ\
%7BtRK@_;1<Z3`FOa9.ST!uFg'PnQD6&c_I-'di.SogC^Y/LOrRJ5'.%DqK8:fn)7;ofI:.b;=Ifm<9+W0f"1T4CnnT<;qF9@ME[I
%k`q(;/dRm#-r^D?0t6->/$_"%7uZOrBMo\J?dG*,GNhU"4gIC/Yf:;^#:U!i(IYa,>DM7`bWn8siW0_/Q[[3%o5g"ieuRH6YqS'g
%Ns_3-d_mM>Pttd`arJNY9"(cqG7/2SCkmG\K#17KI2MNm((QY(frtuEXDcN'RG#<(s8VQ89:#G?M_`Wc9fYF%<k;^bU6efd%fr\D
%^tjTe'g5HkBjD_Uc\2bDP;I%8Ph7]j2c)O-]PF#Z^B\cACr@tI9%"AV`ht-?//:C2K7;foL3`',.QXnN!M[OHa<WB#Bm@B22(H=c
%PsSH-.\>-?Ht6ct;PT/+9hSbsoLL@69#Qu%WH-q?_.M5JdZ`^X'j=A#*i"*P#cB0%FVP=fG@B50ApIHc<HKc6k?8N@<$p^VI,W]f
%cL0I%7&&QrPF^Q3c;q[u)^R/2PC-<TX;A#0T`2Om-6"I-;kEck#oB_H_e57Dr9R-O81*-aOUtsaAXhAPMt&NY\$HBlA)BpC&r,&0
%ZBdsU*prIW&ma'!;ej$]g8-@G><;$'7>#+R]?oc%LVkR/\TO9,/`'k7=A);a$D#phWkPLFmDM,hX>X*La+"=+SHgDk/aQ8NV67&D
%.ETiaOWdt,WS5Q@As.SR!`k+?PZ&NBO=&gpR@oos%'<GR1X7.Ma;QKO9.#$+**eijMC4W8])Bop@H.!?kY#Q`X:*ThQ`C4ZZ!@qp
%h[r@5"ud^_&MR`#NlpFP8E@SWS,:p8Qo&bfG*n7t0^<ltCHk#RM^uE=]ZZ*f@^aH:U(_&PbA#J$CE`jd.LLE$kIdN8FL<%?0%B0M
%dVJ3O#]l&bDTt.D@8J&2ejs'Y3?O$,qGCr7j%XFIZ%8GrL-WHMU?3J<<gX<XcFae8b>R]W&iC1S,TU@[E1X8c_9i<K\qU+gbFG$U
%s%dArn0_I_]1[hhf%G*Pr"1EdbAf7VBH=4sMNb?W0iO@.!gb4c%slVoE)i*fjk=R_1J>\Z(Rjn^XipH>VSI\>_14:P*aTPl99@;s
%<,YnpCk=D(o5EOLE%=;X/GXB'WL_1ln=;dgo'jh'lI/<M/aF$)T;eomJ8JI[a(C#aRs09tQF/l@B'i/0dSnda>8O<iI_o+YCh!KN
%k?3RZF*"T9DV5(abR:fF%5=g."3hZo-)?!'_G.YdS\![.OiQ`L@JLEQ(XdJ]b)DZcH"1+9AeWA4+a.GG((tFV;#i8gZqu3Phg=nH
%E^"\c4Qo6-CEF8fQqMB)PhL',lQ)S+-%Hn<%3CuE`pTiq6j*Q/\&p/3e,n^/l'>hK-^=/-b(V]=3-kXVrM$P/6*#BHjPR$dE&>XW
%aXjD<!g%^X/gE(KJ_q+\;H-H-Lb_s\OXK4jAP//oX!W+MKb>`ue'15+m)@f5Y=R=q),^8G!@AH/8DPVfjU<bBW;]G`Z4FV9G^pgF
%LfQ/V1g98hY_\3/gl5U%LN+^nL\NXd*&AAE8mfgLA3)^m$fa!,cP\&'&&a(i'1/60(Z0SI1Q)eTY5Gkq7F=o3`hV"fmP!_RKpiY^
%s2<E)eLj!!(3Rh#0P'3J:f%=Qr?+tUF4(XIcED>,FF\tCZ#rk`W_+j]8a`/k::F#TO#"Q4N(W[*44n(1/TTH[s2;^=!]WShe?-.5
%&&V#N]SXZaZ:W+b_Q,i-_[Hu/n9-,u6nFM1hLq@(:VVb>/hu!65opoekdGiFD%c2aXb;+J0"(_foLHj@ifb$ZeZZV8'2P?P=gmj8
%TH@go8VZJrccc(e'>o/JFCGB*77cOM7ubDbFfL4]?0<R\c9t(R`poU<B_qHlMgtgIBTn2YK-Nj'Wf"><RU`s$%9t-FZB1O_("=2%
%9V7+q0<Sf)0SdiC<CdHCP)X6U39,kTf6(=sE'g8<BKPm'-h$E4)tMrA4[Iqg#@IXqc,qk\4-+p83`]?'Eo"1NbLh@Q[/%,h`q@$a
%WAt#e'I1[uI-R[BH,;I_9Q!Ta@JKPrWMn9Ka'JO<%82mt4e4"o/?TJgU)u^Vf]naJBI>bZj7Nssp,elMb`0Um]&^N6q2S7P*G8Fi
%,d\T_n!C*B7UQW>e(UL/Hr59I]qKqcn.;`CTh8IYC%l8.ZWde#c9P7;`7W'NVu\3^]lqUr*<5<mlu,RRpB`jNp2V@!I7O3FHA48I
%W2/jfjSR5u]]4,(S:!B5Ls#I6=_1O:$M0>16]#3JIs`[!%dY!shrEWi8Mr%."^BC--rAqZ-,8-CJ?u?i])6sU[K$c]I8Zh;)#Xj%
%Wp9"[Q_"$cE=58Lo5q^PJh*(?d<&9R%M]u+ht3X4%%*Pn&;!+W?*!pQGM3&dIsIf[\d@Z&9rB2/(=HlT:Js;F[j#b.?IjhRQpJ4P
%Ad1FU2,)go<D-'rnZqc9,]tj2Y4HlQ]Feh,1J[&XpMC#NQ"U_lM!0cF8HM[;Me63?EZ8A^/e;1MaeMF81_+M&@FD4Q)Ghb6*?YVB
%_0%(oli83#Z2gg2);/'p8?e`lMVYn%8p["B:Ts0FKbaim,R?(,8jF%Z'_keHEtZlU4>*cG&pRN7Z]e8J'H>/[_TahA8<(ho\VSB#
%$J2WLc$/%<QYq5O]7Ff5Yn[)I7CpR7gg68-gk7@b/SnNlh4Rigib!jFK6(TQFEo?\>]EXs!H6:-s*3EQp=CL;oY*/u2@\\tF)co6
%8*C2Y/>LSPkPI`qH:\ptQJ:M.&;R[lS[?tjk8!Q4*Wkuc7S`9WP829Mi4mY80>p'n3A\!mnD*F\iP[G')"hW("13)mp^]RG[_]D-
%Ne7oM2-_GL8WGJ+(sJj\4d:&P&*a**6MIlnllu$RG7mP0HK5IJ<RP<ZE-p#ASX0[nWLBP=P!pjj:AEsAdi@EaFFOI5j9oFKiLQCp
%[u_1BFfIUdXgla&=T469([/_kaSkf1S.*lGKZg]t#YrC];H22JWYt3E%9Q&6g-\<*Vg9-t%jZP1<[T\[8Bgh^K7C.A6W!`^CV_po
%(>l*[pES63-[K6@Ls.p:.cVOkh>X]m>qB#><;8,&=X"m>!hXe-E&X@i?HS9L$mK:81:rs1ERG]*;AVN'&"3_/)`<!%02,IpO]UNj
%<)p,?,OW]1C<'!A'&6Ih$Dc+/n<YSs<`N*-kgL;0DYuY;j2qrd*P=mNbGpreO-r.uL`n6gGNBGNOUeoM,6([h7Po:/"(f8eK9fCN
%>#lO+X(jq$Ol!(#=GF.QX=/(NoB/@#RLlMf65G:Fa[1=p!lt#_ne]5T,FqFjWM^Zr<D4O751,>A,eHOsk'8LP:g:#jH1g"G\-E>?
%6;j,0#CPZ^'qhStL[W:pq0_'(%`MU)C;R<n+*#R'V?BfI6]=(&R$g0;eN?ST^K/]th41s>l$?)uLigtp*rN!5;DUHn`o"]f''6b-
%V7p%hMc#-C'ETFgL-`GuHhQeOZkAgnJ*&<s&6s9@hp8.IDQVO16U0m'jjU8\M!a+qRS$c)#'j]1GEKbl;hT34^Cl&2hj>6f4)fb:
%'%-/s#BPNh"2t^PJsNosl;b+V[1P$V,WO54KVC,U$)]nmi`8.EnPW=<VBk@<JG1/N7tWBK&/R)\4+L@%.CV+,;Qk.SeAo$ml5)6,
%Y?4BW^jKr1OLu(^D#YS/F0Uk_A=]/Vce&s'63,\6+LlJn<*O"]U=,;cbCVrRU-Ts9l#2=MO)R<@?/cY3D-dO^AGA#jTn?G\nOp>0
%F+]k+?)Qo)qB)UTb)b/(khnEFFpim,#G%@2S6/OGkKaK/9s!@b%(Rfd7HN$\dCl_%+13Pkoop#k/Dod>[Sn1T%]"LX=C1iNjX1d`
%TUGtS#s<;D%4_0uGR&_s(G(`6FL^?`j?RJZ.5_%IbEth`FbbuB5(3CKl\m;FWK)l$:7Nd`"FRsBbHGP52.it;R-k@A6t\7@e_2[)
%Oc1[Mp_12piX=m0'I,uInqhg>Btf!WVh)d%:*jaI_&($2#'Y&bH'X&R726P;#^C'9+1d#=i;6O;Bf2>(fc6;BU:N=>@aU*$O<`VE
%-D0b]rmZa+'bBB"9LC(WDCb'iV)p`1AQ!2ONGH;>`R\d&;DOi/fk55UB7C;kG@g=3kR9M&_#Fn+d)Z%O@N:#jI]fGKQIcqkVrEYK
%fsaRBSn]c&<0aa?=L*c`\q-e@U\JZ,=@Mh\UI-_oWF-T8BiY81-,/G-WO`dPn0V7sJ@"[Cns'A0KI6(jKnR\o1Y@J@?FjF1lE'>6
%8YONJ^l[DYYeaH<qc`'t*ZA,`6U\Q2%OBT_-!*rN(Q85=Mu?'A/P=$=I<Ai>oHZQ_.*`a/'#FjmBeIj!DtN-'QLc\Y11u#A7;qa2
%Pso=t\=M<gOIjX+A5Wkk>$f=-hGrJ/jH0$`.fXc/qX.9GpetG?KVS(9,R]0'2!4UZC6!H;He(--lihLB$#-Zs1;`Upgpm>7.Se7+
%ik'367hmK$mIFLI=$Np+=H4;`nB"BOqoEdK&u56=cpo0LRc-6e+',:m@rUTC?e82T5G#Q,&Q+E2_#(bL\ibuD<e^>(pA(M/Yr"'V
%7AE+X#UM]/LN.RUa'g\@7J-3sOqo0>"UUV=0'!@&*fdK:LAP;7b;`TclX^c`#E>Z.dA.qZSS2QIL.,%A)9Zn([kXb-:fG=TNR4N+
%,0n=#2I73)a>\?Fa-7fj8KY03ANIVbY]XHtC0W5pAdt]I]%DhbhS1QO(h`8K3EXdl(^$]:+',*%<+IsZ!>>u@mUsql"H@r1g-^)p
%02Ko%!u^dGTS/GGk#AI\RsZ>6]i85nKW,B%Cahl"&:3eEmE.L/#!=4g3/\K0.a%Zf_e@OBHAqhQIDWp6dn;9]jW`m^&tn'Z>qudV
%P$*0oSLNjZctd/2jF!N?/5'JsW?O+,W(dO"i7AjY$K8O">dO>n"'kTPVoVqN+=P.YYK=XL?1`r%D(jVCnnd&p<EX*-$f?2Y'/+6*
%@^#%s1q8mqn;HJ+b-KF@e^meTLq+OS>uf]C*Jas'H^5ES6h%ll.4B_ThV?*ML^b*06ZUk-rUot@[+@*Y6&i`a"\-ULn_,VY@Aj;d
%m^=d)GtUjXR2GZkQ;3:sWZt@k?5H([gh9!$&uQtjG0WcGfEBmuk>g?3*G$C7Z_BdJG[b"U$cVQa=#-q/Y_f':TA#]]C'>(JG(+kK
%s(WZ\2'RftL9(cT\NR,:qbW@6nF@^(6:f\<6DWeD-o%o1:-[;ohm^GdfVf)o.<B<PMmm/O);:<Dij)Yf_dWcPCFM5\MF2#G/+'LR
%A`+*h1qpX$6bT4RO!@W[g@!P7krOMm*"Io9lH@NJNF9uZkY50icY^0FMO2JL!<m!rGFb#^8/==U3pjf%c<PJeCjGELeX>%iT_tuV
%3;^;UVMg>_]@"L36b>n.4Q]X(Nc:$*'Ncf,Ld(-(lp@sWSdR(_0]P"g`7sRS?dtW2'F+`DT95r+hdG_k+_%6WWt<hhT4?)@\q6_'
%PVaTZU&'q.A/K$ngtF-RcPY+Ye]]?Nh__M<LS7)]*aUDGbJ\3A!mEe!6mA5+6;m<Ir>n@hRG,AB,bs0*B'h;/_ZTBjb=W\2#p6M0
%EE."`c$J(7]Pie'?"I+T*LI!aVmt:"iHYhqqqDai#"lnYTVNLtj'q!(h60hiW6BNp75U,ViI$g/k,D9;!tp+j=!d6l\c*9kFIelX
%N8OA/CUS/fTd"28YTE($^mbM,$bdSP;c\S+$:)8Y:Zs0`mV[aO``CcuXkIcuqsNAsL9,*eL]=*YZasQ(%Pd3Y8Pe%N-<u89%1oYF
%c(=Z,e_aH`Ao7`"UZbZ;4QLp1/bRSL[p=p%qR&Nb>r(['lnE&BU,nRn]<D1m@Ch!DMs\;VqqS2;FA=226Pnqi+C(\+?S"gDPRe]e
%5V--9nEfn+oeor?bunX]lf<<LXas3R)s_n(]*9ea0Y:e3Km$:Ko],nc38tF6b;e>AgU+NsN<gK4EHk^kEQ3]^Gh^;RrC8Y[SQeir
%H3,rE9nVhRFp0?sYdK7*8MrY3c+>Su-cUj.30[*X+BA8]DG??%$mBQ&H.Q^GG4i9!o>8Qj%L\JHa;gP<h8GEGY*fi^;j/1h[mMGV
%QP^cNhtEbc^Lrs_8204+N7DIM>A3b*i7d0iPcFba1&UsBrs/^bfj6a,l!G!_`n7534d0J)+?@ml`<@seIEg&QdsPdqKf2_[P-SZ#
%Vh0\SgO1&ZUiX>>Z.]K#E<l.AIh-Gq;]s`LKutHQnAi/?#`XY]4uutm/Bep+^cCT%=Jp/Q7YR=%7XdKVp]H)>dm]O2i^fT_8M'4/
%P:2$bq7t_.Ll\Q23F,D(dE-0c;9]:S7)k:qMHJ/3]e:%J1\ee%QbQN2!fb\SPj8[H][;ALS(k*-T?QStK[j!<pK-7KMp11NXCJ35
%Li-C+hVCk044Pq'N*RLY2A.1W583[f3JXMn6:[@\)i]_7RboG]@!je%::9O2X2UH\)L.0i/cmX81&>MO3.,^V`<3;5?B[@V85JeH
%f@G$q#S0Gl?l[l^2Y8$-SaHrW0E.^Km+GF%]H.s5?dsH,-/qX7"c,RS97OcO(YNn.C?X;BC@;tuh/o&6k#>_eXUh0#F"QEha%h\\
%.^Q/!NF0>XWQJKaP@Is6;oI;fB_7`5dBU<;_7(Gl=$(R/QarJFhi.Zr5sA5Qe%(Ra47*`\qU'j).5=uJY;=dX;(R2[BucQfcVs7>
%/(Z$7?5hgfa-H8`l<%+BFg:5H]V"KI]Lk2qC&8&gFinjS'q&/mh5,Trh15B!NP;cX([cC-3Z%<Nm_^V:<;C4*Ru8(S,:8o`MB=Ii
%n'Ai]iiS)"$f7Z1*rL;pp:]SO>"0BSG>'-Sa/a6BDjj_I5/^dfZ8,+$S/@*llcqEqJ:+<m+@1`rq[5!>6071k]pjk.r7g--mD&ML
%s5!P/rnDr!LO\ofrqZTi5Q7S\n=TaPJ,E+B'Z,@k+92*8o:NaRs6IGsVgnOR?iTX<IWOalO8-3Thu#))p91*<rnW)"gHRq&Q[_[-
%^OQ"X56(015QC;(4ehuI>Pmf;q!ES,?dirn?r-dJhX_ZKPm7WuA"R0P9)SKjSGG\P,+c^@P4R.PH=$8/r[iG[J,@".e4QM[F6JHe
%gmL-[UmUBm?5c%U\..o@N!%+hrc'p,8t7je"U<6"2a(R*5uUdl)4J\a`Cd,&1Vom54b6!&Y8d?6^('4O(k-oCrZS%Rh^6]nTIS9)
%R)MbN>b"b?X>Su2,3LcPF7"KOlT%D$k27Xj1f9("1NA`uqpYC<$<'-#pnM0-b;l"-5Me:5i!\OI.oW.ZrB8'`B@:mUE2p.o&2_V-
%S_lgQ/g_:'HlQHFS7Db$3MboUGofI`*H@c\gdj_X1P.Ei+"_PI[5-Q^mok2;52K&tn6^;)LR:`O6EapZn:U`Ki^;M`E3`8q>9ceK
%EbLam5FncehJT"s+D1I@mGVWUn*DHEk,(Y=pJ&\'AkkrZ=eEF-a61qf,Vq3?aE5i*9or5VPkk3bh%*4W>6<dpT[s,%KiTXYgV%2o
%dAj"($Trs#E&%T$e1LZ9,5$hW"5m=dNf5*.H/#UQj.b/9=.;@%$o<ntEkZrNl97J=N^('GSL?j:L>s"S$ZNGUn#734PJ-qbrXU#7
%@h4+\quYpc`164;4K*]W2"G,nS'@jk.rneNc8OY*)$C].].\(al$!A7j`t!&^[ijiX@%%XKWpA+'E$B-)dFkqG:EKnE0GQlM!9+o
%+WGNe>7X+&_smP=[n_F&]T<#&T#h8'RdYT`o6`-##aO-$B<&]bL\=h_D%Wra_?JF9.4j7T@6RneU2;XReE?]uR-%F%>"M(K@5u9f
%`3aXlIXL/>7h`h'i@=N`qaO?H].rd.X,;9j4N5^i,-7*Efp#=i_t@XOXECQYnTCm<l-/<C&cK.#bBd(4)hf["_<]"DJ`goMKr,-Z
%>-"(1[n'En3Wq'gW]snEHpPE6a?@Bh@VNZDaq6ns^[BaU>^%HKA.!ATI]0_?hTq3b*l6gFS6MVm2f9ZVZnC-3V;YKpl9s&dGYPp`
%1_9Z7BGV8&PNGUml;7AQMD!S?5jS?rX4,m;6p+63V#1#3[lp'8>6-Y2W^,]=hC\NK9rK%5%se3N2a0l<$khAuX$ss4Vpumf3ZUCS
%^&&#diPU15c]O2JSVq4M?VL]r-%-295b_8#NO1[K4h*7Y;+G;+E-NnA%#j5*XCRi?W"CqAo_'d)b`YskaO?_>:(Q9q]V=pcS#nKK
%pW)V"e<JLRcp05NS=-dA?\i:"9T4Zg:I_gYj(6>#!nb0<o"Z/HL&S->[sahY[i=RfqDo_dkMpfsD,Sn:k$Pj2nYtQAD"<+eO+PCQ
%/OTZtRJ?aZ451Muq9OW@paIA="n50#1F:JW(omt'ca>'0H#TZPA.^<3g4h:qJ!/:LFT<LE`*)84>f^V(:":'M>)ElWqK%!$W/,Y;
%=8^#FmZIk<3c6sm,>q_&p4-H7GJt`E_YhP'ce8B!-P69Ib"U2,$t1Ui&M!_Tq;`gAg/qa.G;b<Vo$(K%Fd>SdeDraG_MNY>"=g2Q
%O;lZrVEVhB>[Eh`j)PbD:?80QTQ@Gpa4TWA7C0=BBDc5$PXJ\8Y9lOY$_T)I*PDr6?c#qqDLLi/@^*B_YE6*-nk5(#cOt@Uca:Ru
%k8?q5!JK6S,D.@F(aH\s4ZMc:X5o_%K!^!'5a,HtX&DYq#6)ljg`?Me!n*'_,'+h^(W1r`$,fKom7.]d`ND?>"E+a&$_6:E7Mn;,
%^KqM5'$+@s%:EHT#<R0"raKg>``p,fbmbb3?uGr9d/7E?CuG*JHr^N^:FVB4Td__hWG91'BkUipdr]V!Qaj%hi>\Sg,Kfp;G.5`t
%6FJN*</pWoC<Xt]Gehh2g>QLlrO4n]2N^uMR1,r^,/%DF72gYOr[Jd[hC.T1%b[O-A11o2p8C-dR:F4;#ocR3&=a^eI"$h:#f!K*
%hLC2SM@j_c^kq+\*tq?k/)^*\Sc^ueNB$9ea1s;a9V%7*P>?,J>oX+a\ON3ubSIs3VsIqF\E;"Hc5^ImmNRouV`FLpUH6NmjCsOE
%mmloI;ssH<4?j2e+e94%q0X&NBsL5rl,(@rWH5LAg=.R<g;<\4>1ACG$Z3=!ZXN$lIh7+sbWuVPOr;AR9;KBm%4Wo)Lh,<I8'7h:
%Mmr]h!N*Q3o3!(Y^XQ6(OEKCAQ;;dd&Y@Id3p76*lqY>b@@$Kda0F$%dtVdF*AFbP(%gh((c6jtjAG,2ftZ^VKC0eDp6i-t.GO^t
%;Q]AqcW<*XX6a#:(U(W7^o%]:DsD[SPG%[Q[@_VZ#cBD(?&AA.Ut2![pqdW-6$qYg1r&7j@ihnaUciIu+&4-2f/Yr&[!IQXm.JUn
%Gl&N=Se]6Ybs=mmnU*rGeCrbQ9t?[`T%/c2p44rc+dADc.TOZFK0j)g\r`/bh?TK>@kdSBBaQ1l's=f!jnSZ.J^^s5.o(Ros"Ptj
%P`lbhNj2;R%4P(bbFR^(Q4>cj(OSX.)IP77*K0KT,O;lr8!ck%WM&01I[26rC.3Y=;cB+[lg[')GXWDn&!hTGP`@eVYgFTdJfQ]<
%&9CWTjpPT_/Ak!2kVN-#[C>GO)6[1:]M,6Mb`#4pHFP#5RH#-)7hi5/>DccNDR'b@Yf57YX'`0ApSA^UlbmAe/Gc,;&['<]kuRq5
%)V5RD&7hu(HqH=:Wg2<UZuIf[!Na's\V8fci%=?QK?s:O&28"ScTlF0!2p#W>DrYjc\M^(h9[8b@b-Aj@JKjsfMKfdV-W61DE;_m
%GW!2`%YpcEJQ-$cD(5uqM2G:82rc79"Mb#@m2dU?h7?.p0n&05cQ/.4)F@URVU$lXNjlhLc7?#GTRl89kP'jeD79>J%WiSgi&ROe
%g:MegpXuL--e(C7<Vf.(+ccY^>oLU2#QXQi?T-[bFn([&A`?)t)>UD8(EFkQ%&mX[(<Wbi<05P"SNJ0gSdVZDU@O`;o/_O\2T.lj
%a(8V<@m_Z_@9B$mj$F3/`,J[8,)cnP2;jaEI_W=<OtHCg;HZB1)lZ.):J)$T=Jfi;nkgCQU97qS#5de)Z_UrDi\J/p**+#W-H=;4
%XisEbbH\sr:M!?-X((7shk.c9\-DN';K=V6f+*1AUE=g>'>!Gm17*jLn*.-9am<WV`$7"9e<[Lh\AY(-R';JESuK+N4lE.//#qfc
%rdoBS-1`2.4No0+7f\K<.uUg!:,d4=*WDk.A&A$.jGiZUhd=U=4\Ns><QqOl!gUb.5O<1c$2:F#.-7l,-;+nOem-F%X20IQ=@d2Q
%-4Hb_'6Z,_RlJ]mSE4cFiS_&LFC0B6!J:q>1-[81i3ncrYS7+R?u>'8gb6NN8JgjkAcr<HcX+&j26^WG+GTUD"8\WA%A&Shhh>DK
%%lm.:!O?>A#B?7/D$(mKg\oV0T-G9[S"'"s+e<X(:/hKpq$#9=8Z,n]M@qUj@2^)r=/PH=i9>jp=2mI2HLRj-&R?-1j&LANH&Bpf
%/(r7&]hhg&H:V$H_@JP$f`60++B-4b%]k07K+H5\;<L(XU<cdB&O9Bhd62"AKGrZ+q[3*Ke'Fi'l-[aGcaI?SqeHF3c^rDpca";W
%nN8^Ie#W`FCl9A=4WJUf5)<Oq`JrHJ",6NOTP4Q:p.Gp@e0SCej$M`Qa#s>dcImN7!pK`Cq9)?678/NEMY8tgT%<A6p;Wm5]7R6,
%HIZ[cMIu?h"Fgag$Eot"O&bu-0Wg1uGSS;AjafL`__kk*\APugX5KZ0KJA/Q)JfEQ1D:*jqW%NR3YISG#%g&015XO.>YJ>!`uG0U
%SEtln\M>d"2#?q4jKg.r6`S?I=]VDD9gj-bHi^-PqfS:-:_h`L?A0H#fn((t6$.(2eS%:FG5h>lD2E^1Q,?p8k<.,kb\FW#RQ$&f
%[f#!qdBRD(NYA3M[5sOk&k[:V92*^k*?>cMK9p/"R%-h*q<b0&OoIc`3ggVrSD_%9k.2:<=<"_Z"2:7iV7ZMQ]^DnH2?rE:]sfP,
%e-1]6-GZHk3PM!F`PC/?r#LdJ8QUqBX-!egA^&M#7bu!VZ83Y:@$7eDP/O+*]5%I?XbD6Z(F9uE?>fl&o;(JM_J\5WDHXKU$X92Y
%;Z`Kg@oRW9!:47[.A5WqI8*MEkG[;`0j4:KXfG,pYi=%L;g"42R&2n6\MDrO__d"+9r'lPOfOmhP<@Xse[])roDD,=d\UPbcV9J6
%\1tcLDe,`sfZ2\K]c'tg=Tlr-Z-dYg$qUW.`JEgP"\!TbI?7UJE0RR@A''d(iH(?idFo)RaE-9[)'>.Vpg%_D_GrK$rKoLqH&X>a
%P2dda6ho"_==:Gl$k+J`>iZNh@&27\OdQ7&NQ]Na.ZS>50iGB<4_6!OkD0VDR/+QmS&2fm`em$=\rhHh><MA.fPCG=&CF-d!9nGt
%KY^$n@p*Uj(es!<`L!]n$c6P?@RSdp&<*Mhl4TsK7G;-3qj`UIT(I4dRg1hDlT9?66-P^ka2f]m,%c%Z8P;D7>$bDq,G;@6rP@FK
%kbO&W7nR?E&9R*AR4Ue*E?.#l>JC]&_$a\,kr9BAnpQuuTRq33ILcu]1^5g.T5ph'\3:kt].14#O+n1R<'A3fC#G@-LR8.nA:.EM
%?o@>n\X>C!l9C8"pm6ELPfZUOqWp*BaL8?YVTLQ@_Bi\)T$@Ei)G#9qaT,9uennN+qUmG05;DuWM*[PJ?Un0u=s<"I\LgtaHRu`A
%D$V>3nhaoiRL+`:q=`d&^$ZES_:\oDF3#NsTZh?Brqeq-!,C`O;FL#!hT%Cg4#8Ualr/9%XOBrB3D\1"apED/HLBGXG$1^m$TjAC
%+G&o+Y4&K61'J-'09e@'TN<_+boS"1R$7Fg:2VcE(0c2og]T.D/O_1!-<<f^<A`".RHSkVEPMe:V9S7"X#C55XtZjl1GLs;-\:rf
%Cu1[R;uD!<b(gSgVZ[pB1Oc#tqOM4&iMtBp2Ls4.SsgHSV@2',=/)PVLVM,gN&):S!7rdnW9jRT)Wr7D-pmCiX+\NpO^PPJ_)KE@
%(;/FnT*FbfoF-0F[e=N=dO'jA=qApC$ga/O?rs4Wb1N+_g6sY7%:dau(s:8U'sd"e/.(52d&TkcjrLg":i+<g+=?h<22Q$;3a"UA
%TOiGl-1'^#iq,(d>U2*kjNt3O(E#u.-8Y+,e3biE%;W33g'"A*P.KgQ1?i>h1E:L!&jO_C:gl@)/rDrbT<5W>2!Wa@N@MP>iqGnP
%a[\pL0kL<Z#lKC\2/_nNg1oV@mG2oa(mgeWr!o;V(.,rWXu!q8pNtK5dneuZL,oO^LEm-2=M$I')T'XmE]n$j.WccbrlS3I=1JaD
%cJC`_e0_DT!Mrs(_WtldA\Hq\f0W_(D*V:+X'Sj@Tgl(4))\$YasN\G!,D10S!dT$>kjA]Dm!U5lJU!NG==[S'B59)(KVs8f<R_:
%SOOo].'5Ug/1Uc9<o_1YTha<QA[=<6@(!/fl-H$fAO6bq'mt!FK[q8XdQ^gQYE<C,b7KN0b5gAJT#E3g0:FrsTZA\%r+Nd[R:1$#
%69An7Y&W^ZI]G3pZ9od08n_=%mWrZ`-JVM\;J6rqmZr0^Qq8'&>%["mlt63t%"cG0,3WcO)!U*e,)G8<HYcPp+BN`f7/2*LHOk8l
%NdmA($;9UN*,r[&/`CEQoK-pf,5@k0p$o2X_e^.C@2<DaK6%jUOTZ/^WqmqeNrYoQT+JVA0>,-2==m`2'?WFmqLu7'JZ;$=Mr\nB
%qakcP<ij36ZP2!-]ErgIJ*kV&\oDC<IG[$slGYi0-a9!A-jRXq(,BMP%@rNfQ5<1e+r`(J!YI_?fY_Qm=,r1]h,UY8+\(7?PCRNb
%&&?:3Qi9U6cPF&'4cP;RS171s]!DKY')=++IlfcT7!CU[mErcP:%XIdJ]_X=@Hu#e4U+M+ZE]CkAe@;DjZSTmE+?kW8tJfA+q?H^
%+Oc.T3AL/gq=R%hi>1@gk\!pd]1aN>1QM3sm\kXNGEq[2;q+TAJ3B!,rXL[s:,hM/:%3pQJ+1$5XQ/<I1"6^7mKC$nkEWrSVMb8r
%'5X6P$OhaJ0n&gJYW(#CO%_$bD.d$J'8cl2iDI3p<7hJVF>5*r0!he^KISteP>B0>ofSY->FQ*i)B@c.giTl!4gK@8[!td@h2E+o
%faise,HP**PBg'(6c^'1Y.0s>XDZJE&\C2s_GV46,k)`WJP5%aW>R)7U"r'=gki?!]f\[7<5*`Oj-WDn+&K,G.Z-j%W_SeB-4$HW
%2u<tWjR-rt.Yp/h+('58%cKqGB.%$VZ7_!,R^]Q\g,u-U,VHK4"V5bhH-2oNa<,$9\C&CT+0:B'Ee6K"mGh!pkq(>A/@jYjaop'M
%VQMlp:$V"03F"&I/?VhmqSo9j-&*:o*.NW-iY*W^ATh+N2m7bXb)oZ4T&0*-[7"YRcqKL!4*cN]KWV],QdH^q)Iac=/>t\VWB<OF
%VLK%m?66L`!5\nt6C5HBmo3.a!Z92V/%UL'T4@<HU]V1>5aUJm:A'u^?=h\^e:n;b_:8ePDEdI3Xj68@kN_11jp!n1j[>W`_cU:f
%puc/XMQ^u,O6^%\A@_FW`JSihX;(n0=u2kdF]0$#=?1F&Sug^,-aCu!#+5I2\6jTLdP->`ZZsHfg`RBcr]k:1l9h.rem;occO5;9
%@b`15\CZ]BD_$5oA6BMX)3k9`D<BL2f4d6)p^D\L"ibNWY;%"ANV6krdfjqG36+`!JGHht=WQ!X.f`=a;RNY!h'm/a1YR'p8POQ-
%/`FLCGWFNiJs,3PDKbD'l,1%lfK`C"9B&"d<7Xta2WYOBKU)^hCe"?9'eKm>ThX(/*jWlA][ClWEb,>l[p6PEH*&>7b.Q)24BYOb
%HlR"=IP8&7IEg#0g_%a<KPtoE1a*-MfX:fI:S/M8(:ATmIXu./=dh&/Th[kToaCD:9!MS(MP]-^UT-0Zjq<]/>GTB.ZibOd3+cW2
%7_%:nm8a8X&(B;Y,Y7M\HF@i?)*3p9g3po1B[OcXTdDr^qF:D,$;tF">0InmEY?g\JOg,fM*R9tGH85G(2^ue:9>qaRX2EKH3G<W
%W8[`,#1>]'R>E4k<o[=QK<3l_S.fWmEO]k5qh?c\:i\=iQlfF5Fs9[HIUOm4:Art=SS18(#1:m(Zc`J#T-0^KqZ`<IK'#'@0O:f0
%G@r\n;T5b\*N;;W<CJs4BO@j:cf%lC[6&h%FaT7##=JYs+P8_Xl^[H7CmdNXISZPlh1=V1hURkGb8C4hm#2K3G$l(PBLcM$U4\OM
%dp#iIQZ`O^haBM%i/"Ft&N/Fh^O,nsk.?]?ldnFXE&q.0F\%^aU4]HNRlV'N`2$D/"]L\iR@UuY[qCtH.Y04tRM$&dWGOEm%)7-P
%/qcj#A'^%e!C/H9*bmNnl(iGe'['2OpQjrI_l>P2iG\ChJ?JC4c"mIa7^Ob4(tG,(FTkQM-/`'&W:*2X"T3DV<sG:.k04SjDqW9V
%=I5=Yc<dd1^>Rct?J%p5@?VCsTkh<[DE=(LAlPES;,b`\*0.Ma=60R!JN^Vjf.ne^O=/n_MhZFY(HE$_[`_XhbXlZH9\oC%8q/=V
%?8nh3_o=>sg;Z+I)OJ!6AN#lpT`KH,(],'Z<3AT@?69QG5!OO]BMGdR(!i$gNXK+!pA4s('bb[L$$#Zj6B$*Db)O@4q[2n+"6F&>
%FquePf3Vd]?KY3Xn@;\RoC+=PgkUa*j8b&Zs8AVAaXT;hT]:8rjqI@<bOGdm<@:CPlI`[0^sn`=RVtM=^u*![Ji%b1r)ld]DgMaY
%dmb(n?Uab'$eYN`DA_dbCl+o57bu4H(,_1R`j?&3$q'f6<-'?gaT<Eje_s4j".jVZ;O!S0_ISK-R)>oO3EGd]Ie-k7pIoHFFOZYp
%=Z2!'G_C3[GFri(ak'o22,3Uc%[V!6_'K]ci(H6BU.=u0IdR:eQR:#=T/rPZWu8#7p-=iKQVr0V,Y@q%0[R/eke,54Md2u\#pI.b
%LDhkY(PG#>7[2.*68foQhL@jqe!;29h^@rfE,GUVp>,?EVh1mN_2C-L$9gZ]kTFWGb8SMn01@'roVu/D7\8:!nQ_m`R:0hK7&qfJ
%"KA[2d8Jj#WA9QRl4`0.F2%F'&-?n5J8um&eR?9&j\<?[l4^;*b4!`$4GuO:>4=K5_qbIq#hsdI85!s-=`Yugh'9,:L[$Y^"1W21
%J4LEb=.Tt`XeE6E#]?ECWsn6p+R]R>fmdr"aa@.?A@/!u-`%5.1N/M5Tkf5W4mS5kP@V.VVRGj6V$9[m]sKas1Omjj?-"<f,O6@4
%REs<+UP%6R,+6U@$pgC(Go`i$03STZcP"rWdZ/bc@m14JN:qMq&C7IF>)KHSI1Z9E"5fL"3bX`.`KTBu#su]jO3@V_0U0/LN5Bid
%o+<A2#::*kb+VLrU7W>)nI&c>9Rm>MhAk/TF*-7O@B80dd31V5.nfH$_llZe;s_?N:E%T1mW,fo[[!@t%*[.RRHTHi:XMECiK98j
%Fdc&_^_KTVd-bNi/CN;7On5s%/B+#+LKi5MA[e:sI*=cA<8ch@=00B7*_^Mq?orlnkQ6kIRAE+&#:f5>_p6Aki;+lap)Hg5-=4e*
%NuE[6L=4Ug+o1d3)J,`dg=qo'g&\7''?-%@B_;9%!ls!Qh&+@0a<A%A)gC\Kk[CB5B,pB-oZe7Ih_#9+KUCVY`Tu6^B7lIZ8Z(IV
%@:h,66cj:S0VOhLHH-5H/Tbkg5X)i+m;_HYmQ9ki"pPRZ'j"YqG5^L\Z@Z/\@anV%PON$lBSo!<>Z!o)Qa_'.b<sIC0BQ>>Se\Dh
%;iB=_,b\RS(q+4mo@&eb5<!k-p:4998&:5,0,oH;ig?O`r47Mgc%G7bq#Eb#?"2JoaNi[pI,mbXU9FPg+h[m,!F<tKWX2ADfi--V
%g$*MS5Ji&H5e\M8/YmP;"ul9,onQj%91u=eU$?bdWEqaA*TiHVna%1kpb@PBZ@"u4J+4_2WXCaQJRlI;LWsk%J1Ylbe9T?%r@0I0
%&8YTN)f;>]4*9Bbfbd55_ZM9K#tr;YC`%,:dk8%",fd&N4#Wd)"LpS?[R/IJ;nG^O)"Tisg5aFdDBs>\bf_rh#'(7@a[?QjnLT"h
%9MQnR]bp7>'-I>jS-^^^35VU.;n@e`.GW*.G$o^OU_0,sjN!m,bp%+QlID1Gmaufdc(pUe_ap\&_H=_hPC<OKp)=^BM"#q.AbH+,
%7g>T["d[9_j7pQ&(0/Z'M:J(%V$(/hNMQoXR\e%=,<@(Il]BGW6=>?ha<o.]Sa&4l>Mh!L0FJl*c$/P-m(F)N'+88@,[`>\9Z+Rl
%51(:N4QR'Ao!'CbDPfVo(pQ%4X]<YI@uT'h"R9^ZADp4IE&;QI"qY_N;OQ/86eM!'<JTa[SkTo+bdPbD`,cK':\2"l%q&^2#XOsD
%V?dPh5N4hnEPcH*f'#]l5]sjdBL516.Q5Y]7Hj'D=VOj@TcfE#$sMK$_`2)rs'tM'QfC'2F3uA^47J:U`f:L'?7Rh6?P:E>1Zr-u
%0cGDnET2WQ!hg47!(&$KR?=-@jLT^hZPj:X5uU$-VRJq!ai3PHWiXF0lgh/r2,m:/CV:GAPi5jU2&DF0Po)077oP9\!O@P1jfhGE
%CEk+bS`N0e,ibT3;#WOF<9>6D5q2h%=_i=,.-I[*%Hmr;"NAqM%<=&mVioc+C(P=M*OJBJ76?Y%\B`)o<b8kjHM.OMEY","W7=]l
%r2<Pq&mZAO<B:]F'S_QsTFOYDW']48\2T7!e$T\+^@GP#Po7[3@?FE3e4_nKA@bSN82P&g#eKS8X\e3nb`/AU;=b21Zn9)`o'R7O
%'%"Uq(9j>4K=%s>Xl1btIt^fl+TrK<DH?+9@J8(+"E9nF$59ha(gl7_hSM[l=2NXD=:#G`_!Q_2f.<ard2hjIU?koB`7,$i&F1sF
%F&5@!`fA&E8g)<]L:X9>NOkbmFA[^7$t/q+7B6F'(s)ri/!41ud;ZWk$<^,(ge[JDMbFb<?!+-F<*h?qWBVpDnpq]&Z,7VOWDlQI
%2i[DU7efGZgWE`$,f'+?JPAh:`C=Fs$)^d.6&"V)"ncY.`TO&gO:G[L.q0,:bV4$'!6cf;.kPk/BVuhF_e+YcLtS)fT=i12`AuM_
%VunRPBM][g18/FD`P@h&&J6GLEemmg6MKDK5ReP:PA(LPnd=kpN+L9A0T4,m!!76Y4bFBp2(Lkb<s[GdUB_?ec!`kG":_$Z^!4'F
%BYH7uBoRFuaE]p6A!(%K88*?%.1m_<P%Vr_<h))gIKR_T)@8V$0#UHj+.NHW^kC]:nP>;@H^p!7q`GhjMS\R6`F7)8J7&O!aDULT
%-n#;&M1cI`%+?]X*if'E\g&cLbQE+:cbp6b\Q+'>[#M4nGh/P/\`)Q(a'LQ0+'S306=VnVN?Z\"4uk,3b<N%#4^)l(!]gCe_#:>,
%M^eU4PnO9&!5)58)\"[d"/e>GEVK(f'Q%5^;5-C_!</OfmD&Eki32-B*2YDmd#!\0:2OSDUVMFN;d7(-`Xkc@[%"Eb+pJ'm1Y/>^
%-3`TLc1>l%oDk0'Q]Yu.J=ROp?j<-=dtF$U;TBo!((YdH=(a&d/YRu!g*$fH8H,G'`bIX`Wi'gIhRJ1KIZ?=*UP_)E=)1[`!N.<!
%W<R3-^f)KnMdo<DPmMJ/XO'ou*4jS@^^"jl1>[A\'32\9"EPd\]aD_)pN+#sMI;S9>1<W/%-e#/J\MLbj3@$q+9No*fnfp&8[SJ*
%K*1A&XM:=8-I4+KNa/`o^"gS$D)?0>Kg(%(2CS?s72u3J/<[9%P>T;^B;)aN6'&,0,ppN$NM;o9M?rBE:pXS,Sn7a&<<M.^PZ"n\
%Q-09.V:<$3K5"&uj0/SIK(3&Gie(qo@%QFh%>S=@;ZUf9B/#U-&KsUdcqjc+"_AgkYL>!E,X?%N>.#4)5]jtW+AB4-O'@m`.VSZ9
%<HA_.&m4YeW?OFArjZCpa<P`3-[2R$<_]@D(F,eGVr(^1a/OX5O\`bPY^IF:p"gSiVCM?c)7.F&S?*kD+'q2q25>7i,6654H?tZ&
%d1dDS$Y;,/FsSc=7=6cCb8N:,p,A(;P[#Y63nU$J\EP]_@N9Zbi7W_E,a6#%c/9?^D^*l;'hISHD?Q&#$7K=5N!?e9$2$"=#e5CS
%Ofq3%3PsM'K<CHH!PF+=D@Yr1B<9;7jTdm!EtDMd*d%0]>mrUTm8tX-"$`5$bR)W70e_)[Mo=h;l/a$LKih\*fOH4<F(g3iER-He
%7JHS5m,s%b<c11eJ_&@&!j,U"2rk6&9hNB.Z,#1b)-1r1:`^O^lG=0!';-ZBG?Ik#NlDC%$>jp(@1XnS]iMBS`j.%VOpHu&Z?jmm
%crLt<0rkk=m??Y.k2V9uEU^>nP!\&S!jLcc-nLBb.>pulUU+9ZIBcQ0T<So-!&M9O@XAqVE<0"3)=:]&U@qeIPAGYs0IQZ&0f%CO
%VbDqfW^@%KP'.=HRIsuBUc7PQ#h\U?FM"mk,-m6!]\`JboOQ+,_f_.#Wae^*Sh:-SA?fY4Q4BU[^Eh$XW'M^na(ta[#M$1_C*NJe
%Wae9W<0_G6"!DG\7M:B8I@tE+lFm'!dsC,Yn%apCL&k78UX;^<+'SV<6CnHjmc%(fmKVqKh/V\Vs7C66CFu"#0J@B6C*h=CG%Moq
%IJ.t^I_l[oJ.5eaLh[^B^HtZ=h$9<<-1.'>CpY_t!?^kq,g<KXMO(eiVu<%X/oX_A:p7N.(S_VsA=qZR=NW![B`YE;8Co-g)<'Z0
%$6Z2tKH)O6G$dkY,r<Jjn_qKkLo74R]Xg&sfnd6BQoI$No$duK^q"neWa"9_$H5SMp_G*cha@Pk-124l`Y93bHOgR:PP=KdNIDa[
%oeUd.k_G@e$oG#FlGBQ(n^/_RK[*[tSPf7t5s[a_c"^[Dd68:e9i*n]==j"+#.s`OKAhZp#$/Uoc'nDA\./N&MbrGN%"ZcS$q3k`
%C:+$A4q%R37E:?B<M.*nF#-L34b-Nf>*"eTnQkui`Y31$_K`Nj.UeqOmfnS5Z!%UV,[86HY%b?^^d&35jj?U:>2^)tD@k/95^LqC
%hgL)BmhZH#acWE8'l/cVNQ+4'=@D6pl398d#=odi+TXKtnK4ZN5cXAW0Qi+K\FTi5ej/l]jpl(CNKZ6N_#D;%(5`]jZ[t0m500DD
%b_lSt\@(fqL3Y$i%?Idp@8X[gNP%d&@PQQW>V;=iE6S_^lKH_cNrZU_/d://>_=8A@q=erDMM>r?5X$?S>L(%(r1lr%1CJ5+pA>S
%.ZJ2^Zgd=i]pkukO7YEP%Ie&08Sq@f!VM6mi\i*-mLFid+MuuZ8i%!4@O3Cs2fQQf)H@,m5BUZHDm:F%@%\HrU*C6#%)EK@hDf4)
%:H^-\77F7@mQMDp<%r-ZVGjWtN4PL5/q#!\8??g#"VIaf_hc$<6N1)ibHF1&lar-j""0YX0<ZO9n>QD!pX\)T/.D3]rL>teGXObD
%.ZBC4n,kbI>.X;*TJn6!('I*P='Vdc<[<tuD$*9J/MtTBH`,U'dFT]FHicqV4+/kF8)%$[OR-QL"@8_Kaj*$4bM%U`2aT("XT`GG
%NLNX"!7&L=CO%BRLr#6bEi93Hq5a6'n5L?FnB,'S@plqf^'Aa0M9J#fS0T8LRsA"!DD<simW@!0/dX%[*L9g`nmXr1*%$%[`H/1^
%R_3cJVedT&1Ibl8@O-/A`]1B2MoX5cYsSq+g?=p4J3:`l8!dcHNp:#+^!Mhb-@gYjpI=*@?OY&M!Ng-n2*;MI<lBT1b,(m&Bb@@l
%7Kf:,+]-`kQdX)4H1@s&[mT0XMU<`sd\Y@c!$J!Y#R^2e5^M<\_WQ%,(`5>=W$QDIqc]g=2[Tc!bfSiN_(s255&:Y'AalO6q0<2,
%FeZ=VF8Jb]W'5WOU\\@,CLQW]9;/?5-Lp>(N.^&14ifeG1!&1boup4<!2nl9^)FOVZo'r8\1(0f\q<@'A/.ToQdAaF'AsW,<d*Z_
%USirUE->&g(bJIhW1Us1&Nt]2Of/@F1`*\I/8CuhjLVjUoI;EK$j$Ft7NWPG)`-2/lNpOf31gi?+=/M[:1<m=O;XGu[uH0Faq,P<
%?g4L;iaVZsKA;RqMr^hAq0PbG&>dYdb0[_:mjr=,ka+D!ZN*Xs+J.V0W""iHIGTpma[ja$CDoOI!]f)*L<\X#1cE4F,kQ`0/-CLj
%(CPi&$'cH^1!eslKES*u3<'*+&/=h_MFZ[&(uG@Yl[[c(k`K\@KI!%@YK.Eq,>IXV4\/fK<RWjtr,3j@1e[$/Z7n&IApkE-3J;iJ
%8!9(F5rn,KZ;NpiINL@2J5tX:N%i6>c*Jis_EYmF^iq!"l\r]8^n_DO&q`kU1=c^G$dqTlp.!a&cnWS)Oc9Vs(stKtY`PH3e]@h<
%jS^#K*!0e+fNm9""2cbAD'XrdEY>X3_!r52n6kJ\H)fpt!9Q$1PSnYa#]"rC2]7dW(_0<@2IulLU5kmKRrLM-f,J+$-ga;fRNiuO
%(b$sqnp^4,UjBJ$=#8<\>6/['-O:3N`eUqqjX-TRl81C1(nLh^.X=u^V@"Tq89]+Q+^bp_,7]o?lK5*9/`lP@64T+M((D'"!c1T^
%5pB8E2K3LSDH5L$ic@Ai'NCB1@lg-/Y8p8td_bI`V5s$(M%gN*c\"=+U!cf+3lYt<XOfZ\^6bE5,YZk$"X\>ZnF9c6K`PYiZUPfP
%WFf8$IesEQ3.df@9#m%G+H'&0KFEeAkIP'NRLIPX`U?*ne)egS@&oKcjGtiYk%rD2[G"Ts9E63RJJ",V]4?\V8)6"CCrt02"3YtN
%/7Q".1%]hJ9,YN3"6Q025T(/*37R]<,nkN5'+Vgf4PM[-*0H?`_W-JQJ5-BGN502dUg&It(1%q,;FS5od,58n-a[2N[Ub*Z1(p-/
%ctgpapUXHuI,M9n[19p1*^F^/5:6T+(\$SPAL!BX@;.adEY6Cu0YZUu_i!B("&Ya;qud"9@:KWN6Poeoo1$n?WT(6mdqJDCN$q$`
%,8&.5_taSUn!=#X7u!N9K:&,/s0^"#maV_`W8oas]DUlXUJ#Ib*$bpp4n0DBB_`#nNX2ah&7cm,A->6C0JY52OX;DOPhX+baJN$4
%Sm_o";-[a=b$]^i(pWr$pAnmY#g![+D@K2u<H5-3Qa6:\f,"6mTSt!8)$^Ul,@OiSE06CcFQOch0/>#]>`3!YoOKh$dk\2j""b0D
%$sR@`:g=R-kF$#dgGk!Gq-Xm[:3YD8&W`dT.UI[r1'"TE#4qg??5Ar)D6q\^OdN<Z&L:hq+nXi/,Y3S4`UM&*Jl&88UiDhm&Y`H?
%`ppu&eOnK7TgBfqh)Cdd,Xc`j:>((K!^!IfU_.$n#f:+(F,O'(l=Zu!U2R<&%%rS(TscuO"416Y^B9*@NSjJ;!M'nq_#M6B"&DQ7
%@NrKMIsD,R)A&eqE>E%9!u_K#L'4907LW)_<eJ\/MaFB\6$PAM!FSeQbtI=1(rV>X!YJN7`KcW;jD!-a,b`7J0R?Rtfe)t^)HDkQ
%>=XO$]^%W3^gmWRUSS'/Mh.2,g!kIYL'SQd!)BcHd%m.*SkFu#dS+>7hRk[["+l4='o);felbF]O[Rf3MONK7+rhrU@$DtB"/$(q
%BT1%`-u/j$.S=AGKHAK^&dOekV,$qfBf+C;GUe@7&EGZ7Y;i41(?9F+ao"Rl0MXp.O>>c!$?Qa#BRlG5[5XpTJSCmc"u??r@M0UD
%ojUI@H7i.'p'1Jp4As>+aGHWA")9bKY:3VH6uRN=%?N:JGQ[e*QJC\s8#Sb8:Lbo;l@g"T"4[s)V&`3]nV9qp!BQYAdOE*H3s8iM
%#d%bL0EB$=nhNFKJZqX9SEmPO7&E(K>R?Z=A7ej[1bJmKQn6i2dmTIu<!X`R$XFNPIf1#PUo+G'+D#PEFmB8p6`noM!_B_XmU5t$
%#0+o>I[$2Gp^r-'=6ie<A)E9S9PKmrp7Mdg<a&;NWkXgVPp%S5"rJUFP2:4C"C`iW#RZbB[*o)00'c*E"grrP`87EmS_8(mm4-a[
%kt]5b:BMGK(&C>qo'$iH6U<U]R*cuu%D)D`WJLogj/g!afJ;<6X+:_afDl<_!B^ZO=s]T.Cf?hZ_/%Z$YDD`&7pLq%A$E7Ei`us6
%kF+8qcOR1QH,3>'YDrN'WJO'=GChQ:STWL%Sc[pb@=3_#J`):ub%,$KM,;X3A[.6r=HO!,oX*%S2jk?lmC#8(lHsL>DtX6/7AVHr
%6bt`:LM^PG[ckUrSIMGLJfrXOCtq5nQ6h&s,tIRZkJK'9NYYs$k!`BA?R\-P#ZS=$iq2s9*3:Y)\tZ@]G%to^mgo;[=e!G0]e0#8
%qm/_fqo&SuQqb\(UQ;<cF]bjP;2S8IYgPQ(!X>r*#f[E(Z5VFR$K3h8.NOVd8@q_H3.isr*XEB?lU"W'#I5Vm880?$EZeDa3_VHS
%Jlq!kB_e3Ud1S6fU-$MM<5c^?o0G]a(Io2W%:FY)6lETnCVQ<s#F<7!dt3baQDk6M]5W#!EDl&(bDSg_#(A`L0+t_;[,gX[$\mHA
%Ou\[V_X<THeMP(4(N>r7M\R1SfUXu6kRk0E;@d!FPJnIGh^UiCV?S0_CijB?P^2j&fNsMSH33CJ"j<0eIiZaLlNt)F\@RJSFjuQ"
%,FX.u0*u-o6d5^Nk:>o=$2IgQcd3;>6ii+7#6qJ-Z#=$ZVmTX.%bM`0>#p5ch0Hu2_!D-RSMl!W]KI#Y%:J"C[B,o?.mQsm\6LXb
%2[>!_l"SZlQ`::Q'k]uX3ApU1@cmu8HmH'$(gs,_]jY=S=oEXfd5irE$>ZGS-6DIj'9<6>4Dm#TJ""=g2d!0%)C$>$V.(@-a@sJ;
%gkcT9_7?Y<H7P;7r3#n`\PCNPPSIckM&?[@"/&*X>Sj#&(i``<9mf9QYU+ooHSg^rp*&14\FQZ9YXl$EJK'DaZI%)[RbBh-_'8H[
%Mjp0D+Au!OhAM4PXlL9C]S$@)!8(&t-dGl5DYU]jh,-<H24j@0<hN>E[FAKeiku(>Hl7&4P:8mt1JiTr,[mpa3uWYRZfm&&(M*Td
%+^hl=A]+0/!"_O-gCh\VKr/EZH5V8.!hdpR.-938E!U)+<*1\<OH?&;&lh*I0a@LNdImgQ#n+#ji'GBf,I,5Wn?H'HK)]@)Dq!JX
%UTmt'4IOD4-/tVqKE7?)P7TA<Cc#"q_?ber)HtLq+fGtF!*pE^5/G<ndC".*NXgl&*1r6%C/rn;*0[6)W$0+D?>-E"/Ic4(UXk1R
%@T&e>!O/.'5r..)L/K_$&R^g4i`]us%QVC.B<Q8O5.,CSi:hM2(fjG_AMHV/MJ9"<U.m-#>%I]Qb)EY>N=f(*R:<e$=QcJf]iLG.
%0oM$2@<`$8\5E^RBIZm^k=`4MY8V(05a<Z"ne0Y(`*!^*(^3WRo@qRhpo:n^@Htg'bq'bsXYiaK4pW$-ETDhJR3(B,k.PGBW/M[s
%EusUEL-\E6(q=Ab!fH8#2(gB$&on0na_P4^W"'oQJ,s&U#4$n/")'qI#a5*re^,sg"W2^'==p/i@^(MkO@hPGiXNbh_5Da2^=6l:
%p"Gqq`Z#$g[tZ>c6sWp7[U%7UUBJb:N\+GaHk@rcW?j-Tf`)65(P\e1U0j$6U"_/bT2U_MfLr5c5.TmpY`NXC?eta'U3no.))P.u
%P93"m%?r"$>$aM*(AVN9T;`VuNGr(?%PuP*d/f@gWI:;Ueu'H#duOX%e4,$Wj'#h&7AVhU)A/-k^5C<?!pibE#:S`jMYa5D?,R4'
%$\UkfN$_pYU6LKL[E#[WL<(+WFWQXN5qm?:cW^Sd%D_ruHI7HB'2Z#)[fL%j>]Al(B,)TdZVd<5lJSU4cX;S;)RPqc;+43oT-hoG
%2^RL*R6Gh=6]3a+U.m0Pfd_5sd?-,N%2>nG(^\4e+)d5unZ*$9!u-Z>+;7?6Qos^J&6"gP<i1+B)'G]AT5N4FLXO.BKT1DA;.r5`
%V("69#W9R-!QUnZPQe)niPP^fCj:fM8LRZ=QVlgFQ>&J\]*6gg80>tuAZFeFiPquC?B6.Ndu=t0.^Li`guR#3!L]g6R\f<DYYLqr
%gq]@"8H]YRW-m/'BZUQrI8j!@MlooHRS7>fZLeS"kla*\%<>",0Is#N(/)pX8H`IPlJSiSG]+c);g^aWc&:*)kf;<#YZ+\:Fg0G]
%R2V5;%p+i(5K7gHYqS77a];P&io2et*IH)kon@/XC_&D1<+G38SZ[_164;9cp_Wj7q(Po,M!nIpcaZ%27#4Z*QnfF6Y.4Rc&"1Au
%Sff`52iDHmYDe(FJ/U*Sf?%>$nppS*<d\sB#4RmT5@g>j5l9VM"Snl$?a<irg.8Xj\4ZKL"rN7.M7UQ'h7/jg1R;dT`mkEoFokc%
%Lf6oY<>Z7($n>;c_e-!X0!;PT:;Ig9=t4SL0/nLm^W^@QZf7pJ+#n"^hBpH]<J$)V/>m7k!p3ek6tNTD;*%TD.2qbbXRJ]Q8n`Z1
%dr"<U`9tC?D/,]2lgu'?!:E9hb>u@p[@B*Q-T5*`eQI]F?8H^,b_,Ga<s$;W*J;Iq&.;E-ZF]:Q=gLq;)<W[ld1WS^Gju@ti;p/n
%J3^(T%4S2,?57ric,%0q9L>fb:rD$?,M]>U^hR^E]uF(=$'qq1.\LSUB[nY2oW$QV+d<$*'NISD^\S6]D,!j+d4F(hd=&`TCY_1[
%$T)41Z*9+qACVW1@ZZaL%$8+2TG2itTGg=`XO>"Rm`Y<FTR_V.[Akq>&;*;Z+k5jLkg?=M7kI6o:K=L_c)bN_8V*!5&mj*#.P*BO
%Tkgk`Rf_d7DM.!n8.hCMqfFedCsdKl>><[@or-T?ko*3Wgs5Ra?Fdo*Cr#95XeK:s(TYC!QGMMUe_2kM6YR?:Z:N710pW-W[R'p\
%J+LpBKl"[XY2gY>CDd]+)D&N7%'j($n?m"n@a1djVD5"V2-`$-0odlf#hTALIrH?.9P_(-)Rk)7-]lOf"d1Qn3.RsTo7Bd%D&lN?
%Wbs52CA?LjLI[>Ad@8kPBP*+j[>9CO&ukuNS%S,)9^BbZN!'I396QVAB\k'Dq&n>F,da;U8K3A_OZCe4oN2jR)#P07TH3Q2SWOM*
%@r3IS)-q;21kWdL8XKKjR']^IE_:92s"rU;)ZtPcIi0)$IR8t@#Km<OdI\4]4WJ>6&iEF;ZVtf4,RsbF_,Qt&*BLR/XlCrMBfU[`
%WKsI2g)C"R3Jt!kZo-V.1WMkpGbcYe`3&*CfMSOq"+#QPaB>ek)%BEI&s9#bCSTF*'mg!G@]T<m(a.EBGEQ2p4`,&*.QpQnn^0sf
%Sff8F"]Er5#9SL.+JD<FG4Z*;#34_H;eNjWK96X_.U?b8@8s)R`Mb'e'5nmD_uM+718/hG+paINHrpS\rLs5OeP_CZN's[R4mjmQ
%?0d`IN]7\%)Tm:hFu(F7&=XQN6Rr<C%AU!Z#T@(g/`I.kK.UnY:=e*e,W18[l,15e8uLeR"r#UE:Mh5Qk8-CnS?>kpS%4o=Y"lub
%KW/emB--0/[Ft@5'0VQ3._EL1:tns4bMc1/1'&$5KHD&()=TS#cD%k+/#OlICNGeu<_PLa5^g^:p+nobqO8!X>#7]#`lnD_=t;<2
%pJ$E+4d9DSi.p(tfM_"IDJPA_4qel1=UTkN7fu,/]g^Q\B^T^MW6]k0KT2_e7M'Fd/"qH,o7l1(eh2AQO'7PUSYgB/MCAPQD9ekl
%"*WE=>)EC0MufTS*Ol?O8K8H`9`pnH!U0C0quiAfV/p^D-L,N"]4]Ur"Y1l=&56_&S*')@EY8FPiIYNmBI/-bJCTug/YZ8YM(gR5
%j5*qh],f/@Tl[jOTf&r=%mW/M5'^jO8k3H!F'rH`heLZ&Tg#;na5OORJ(gJ/2Zq@"$anoO9(?mr<3+:cV+\5@%)*(`Y73YK]JI>=
%W<\L4N.GE6CFb8u!';=^@V#S/bTZq\8N(!M1M%E)K*2ZlD#kkW"e1cJ+](KbVup2oK'.=(^=FcN"CqegL*gC_Cpg*tb`E*c`Dl1,
%G!j/!L=BQ:6c3qc_r.4Nfr0q\Vcj(9SJl#-R>Na06rY[Zec7Su+S2dNSqIqgLFLIc;fh5d(<,m2a(gesOW2@NJG(/4_qP1FpV&\(
%O"uo[PIHsRoJf]gC@3R_bh0F)nS6:W@IeV>Rk^pplb)JDB<)M`b8eG,*]H+f1LIWq/J'RZQBEa-BcHIbU;As6c5F==.**XC+S7ud
%0SZ\b(.YLt.7X'WF;Y+rOP;mU#ce-@*Io=J(j%0-6h*0*(,If.W+"WZW:`^/k`n'W&t,JP.;3M8-*%#!)U,Z&]uh`r,H>)sDkhQ&
%aI',t8(%HuKpu$lT1FP\Tbg<J[d0,$XC`(CL[<K7R'"RiN!9=%!IVbC38tQI[T#L[bj[:IVb7$s":]/-h2AQ0d5qJAhj+=&PhnaS
%QBWHASfKWo&`]_lNT`n-C`/eAS#$:TAa[%'(*7%h*VRQfe%%"01=8ajJn4T=_h>rR-0Q-VEY#:tGQKS&"Jn:,jFP>b"G8N&lh"I#
%N<&$kf%?'D+\'.AQ6fMCD[,uFM,f=b:Tu+$HAU"S:J7,p%Y7GrM:9Iq$7AN&'Wf](=dl+D6bs+^+1VNmEeu7NL^#NW+QQ\!Q:Y70
%=Hn?7+@HnbJEqMM\1F;#*dW8)ejHlLY)j5T%?)qYUKJRa!]LZNlB*bbR<Vm;r3PotUIbu^J7YO=[A9aQ:YRo[>q&brgcYoH+1\+.
%I3R,-_JuO<\mTb&[bTf),lhNX*>8j69Vb($"8Hu+!X[K]_d:Db0Z(I,fZHTB)UZ5-:k7mE0r?h(0iXkL8YEJ[+H7F;/F*@kM]0P8
%o<r4<SiN;j:LJ'KFq["X=M"m`?*K(!5YjMM.F(SB#9\$(hD!7A#*9o52;UsB!^=o7B*TQMQF:E&;DmU[Yr%kM386n\oRE_*&&p\1
%!M0hAXcM6k$#LJ)!9%VDN+!MK&Ro3ZUE)_@Lm#-emgTbhMY-WWn^9\_S<GO9rNnCH^d>IjiO#9M'M@CRb!cq<7:9u2\gFW%ct%Y\
%m<P)j7)dti$!C+m5SB)!eTet6WoKMPWhF7-"Z/5lNB7KApfKJ(DTXhgJe5"_.A0k+X:QqX0RX&(Ei%crN+QHGn-OUGdmN(-&0_9]
%GJFTLT:6a5Ji!55?&P;hab-[*7F"?]KGH%,7[>TDi0kD8`<P4TT<"Xh!LiN'qjr['$g8AR2):2@5ZNC=-X8,a3hqWZ*YkAakNY+;
%o2.1b'3L89:r2u0KS^-=c!D?H.g(QpYnOO)"-F`@1]X%JYIl`[Ce!S[_QaRce&k`EfX#0MF3cH1C]l"@3,A4H\hK:$(eYh#7[f!Z
%jcDhc[0i.SWs7IZL2u9%0uY6oQbL8Nj\Z-D6:s\%+P9LI5ZMB1^I?3(b/&j38/#Y=]4Xr7*/opg9HD+K^K9]2J=C>k?kCYT#`5$-
%iaDc5#RXt94_$rG%j!rBcml;(W<KU0@fF_jQe3&eg-m4^b&ik+JG!%mDU/Se$a:'ValJ0o%!nR4RA@D[#4PP=,IliZ=GQn3Lr$qB
%/dR(HN8pf#!%nOE["K@iW$J#f=NoSq5T(1f*j30Xo''a$<%chFGFq-WOt*.j$l_pPo,?W)X?0n:kX+3eT9P!5&8rf.R]UFe*s%*.
%YRRp_X<aJ)PfR+8Nj)Gn,RSMNl>#.'"h\'.Yj94@F:Dqe2?8\A31pjs-W-'r*l8n%h&KIPaZ'N8YU*2Ef.&D-k!eAW$*B[^6+3Z0
%TLl6$bsC?"M*Uk8_%?O\5]1f7s2lBV*AQJLn6i1j(cY(WrXI6oZtWL9$ocVAUD-LE;9171EG7#:)'e-8\:+L-1r:&.J9kAG>smuK
%B\\S9KHVL7MM*&Hmg<S6TOcSg/U_=SD%hRr'jsfA*b44:n7XU[KqnFp&;L=kY1=&Gcp>a,T-?Zu/kcHP70X1%P*G0_Y;OgnRO)NE
%qZlB)nS7rRJJld.4Yd4;H5B@?6%JGOWKA`NI,K,D(oKi/%tZGf_-(a/,:,J;3Fao`g&Q-4C,*oB,aQ",0gJ[$1="FNY\3Af!Ef$n
%<+Et'q)-+8BI%9fct][``9fMmE4UIZdn`9rQTpqkc_cBQVH[_g88$oG9%XSll?j*$^:6mH5Fab3aSuhj5>K(Zb0Mq=2"[<i,perE
%K^k^=J(!!q7$.bo'=lq>Y(!V)P*F_$AP#DXQ'-%2P2F7)$PsN>Rc\9mOt,?A?3\Co-uCsNd1`,@8"=8;Ph-;dJ3"E_AWeKO)A"#*
%`#:d(1A/3Jro_5I:IktaV7n'#U)X!"Jb@B&3d(;B8S+MKM6`aHi[#FI-V#7L`apk!7S<l4Vd.dgIS_Mf;+,%!S=,)2oLR&(/I@2A
%+>UkTF9$uN>>U\85L:Mah0=2/8$K6BRaQOp$7:p+I'%s@+kk,9(`J[6iIs0;>mljV^)-t+8N7^S0!<ul3>9\=/#[.^'rGsh'b)-o
%L38,bYd/W":Z.5$MR'CTUs<PIM($]d\E1@[dFQB18>-oX;(k]?RnS]j#/Ej/j:e#),TJ4L8iFdpURS76\kf9r:SSP3m/6h`]],7A
%]bh^0gepia4a7al"ei"-T6n,eYlgtf8CZm5`0[<>W]WU)dMGZ>\tJYsYlN(#;9YA[S=I'tjjYK(0[!nd-F9!)KVb$sL*%Z\m9U\W
%P^$um3Z,tH0(36m$K\;!g9Q[MA^p1M6p6e@X=jP"aI@(Y6jZu@r\00<C>0J4odU)9-GdhbG*#q!bZB*d:0,`L#-c='?!ni0X>&^=
%U>0Wq7\Z!Uno,+S^;B@L^34H+oI"<HSF$&VU^n$TRiM_a^"4)d3IU]"3>G:3Hr0/+@?Dh_M_&E2iX*Zn[3E]fM6NU&"sgo%/FU]i
%&nbm`>nXOjX!2)Y-O,C+kQ"%c,5HRW\1F#*aqY-o-jemLSDso4U(FHa%TbTF3ub"JM$S0br[r0l78YLf2G9$1$:n/18hD.J=q!C4
%5s0?"i6n>1L/&dh&l]Zq!esI.:pW#sZ[A\Y;m[Y>9@dn/%IUO6$i,2$aAk(f6BGVL2;?+%.Lp?tX+Zp9L"Nuab^&a$):*XPK-G/@
%ImR3pn2X.ib3n$l)@02pJP1B)]<HR3W'@>E/fpsbip8pKdR[([C2nQ?O4%H?KH/o_.mn:dKPb@2kZe?OA>'6M8PU?S,XQNJ.Q0%J
%]J].CJ7>cH#hf\4OOHrS,TP%@eS.NA\sX:R2!o6S6BmBENVTf?cTbR8<C(1I#5jn;'s>^(Pa[<TLjfpR>Q+>F%K=YL'%2pt#Gc_$
%rL4[)c>lf>/R/Ut0AnGFRZ%/o<'sd=Q,Hhq-ZfMNo\iTmOIf/ST2Gf92?Lb<oU1VnJYB:$gkUS;[%(a882fIjKfaN3@fJ1P?F6b$
%+N^K:SGFGS6MbHgUD46)KCJfHJab-s#:8>.@M1Z`91&UlkILk??HBj4EXPL%f-_8[2[-G,m\e=k,g;107'(BpV:g;J`hlKKbi"\&
%/?@ncYV]OicAN)''OFaikj>>b=^.*.M6;Bq6e15E[La=H&l!D_L`dJ.ic]Cjdm?=pXOeX':9$`EIL"!<CfNj/q:JKVn(5iV8OBO'
%N_EL5X\@F$`W1_@crhYJ"u7Y[$P<gU)8C^K>@sO'VHS=(oU%A*D5>r@.a^!Z7mP@BcuYiiTFX-RIJm&]#>!&Gf)Es-.2MBhrh1c#
%F0=It5q$>;&$&`DVIDG/84RETbVuUEb3^NkcQ9?Dq\1=;0L\$eCd4]^/S=)nS5XlD,a'Y^SMF@]B5R3SHN=7D>osCmqIFr?5o,Ub
%e4GJuFqJiNYR3f?`fnlBeF[6e!iA3g7S!r43)*H]3WRX7bEXBY$7guEP)k\N*&$#<osH/k.-\-UWLO7#G\T;)-sWZV4WL^O1&(3$
%iGc%ULLlM:"cEc33iq%H8-UILHd?hF9"D^+plO5*=+jJ/Ph?PcL8>>VMu&q.09fKP[`G&:phR6uV;&I!A;dOadcc4(Wj,j[!LOL,
%2'ti+8VkfIb`s#[Q^=_7Frinc1tm*cB-CJ^8QN:d`RTt`l[gNC3R(3DLlo.Z8'1OX\]SqT@7jHN%Ul%u&,)s?2`[5(3/XY0\P+V3
%1QE'!Z3a51TV7gR59VtpbKP<D*RL9Z\0SNNcjf9K&"mkcC96d`!LAS@,D*=j`7FCj8D0_"Coli,^+fed6_`(Me!\&/$CXa^`FNSQ
%[%JpE'^r=C_f5:V/Z#H]L1&F3fa!E^S`j6hLlb?/b,C?`oa7GPQ'JIVQT3<ZplUnj"9j$Y'9t1%9<q5,6`oQ==7L83ZK60[Y_XI\
%KWBaX,BtX).SWrH'5YE?.SFic'6eP_aooG!e=;;qjNY+nA5nQbOOaC4GD'%!lGUG&7+DIL,>'(g^hf,\WeU_>1oi8";`GpM^e0!%
%2%l:SRMYA>7`1dkIBWH3TP2``l=2]$(S^e)eXPJ>0A1lb+_VNq4qQLk+D@F$?o:N4gp8c"e#6BA+_f1P*F9CX2?a,+_ABV_<2%Kl
%5`8dgIY5OS&`8YW)@/o-FD3rq:[Z?CX%f?-]s$%F$5tdhYJdftCh_u3n;(`r`M4V<I#jTGW_p4iSh6H(h@7/8leeHaQpt+5ate:R
%U.?nh%n_LQq(@DUd5t6tK]cb5L*haG**j?>9]BkKmfe;/fsseuI>P]MLPp:O<tgmE4uDRp/@8_!pS]_mN>Ri`jq_f45[em5)WL0u
%4shlteFeGG,Na8%.pE5*D^Q(A9Oe9(CG*R0TEHk8"8^g+WFq;L/K:Hc(=<*fV%>"5Zh0>uKO(<5'We'gem#hXEINgS;oH$faK>,"
%-R6^S!6**/W#\-+e;4/t.$+TWSk8$/mC=\kL*#i\?l>VaaV9mOTt?C22-o3P-8s'tMRkhT:=.:LD;5m/h(Vl\QZ-0+e0=-j"t'%n
%ZV$%H7/))22/.$PB$CFN6GoQZRCj7[jqfJ:lEY)N&3afsLP-'C5?H<9O0]TR-HF*@?Jc*4p4TfXo5N@E>YYh<`7@+2\:AAfLq.l*
%Xt12C8ab;MBRRD0cJ)qChIA]d[ktSJV"`TH>A`1J<q1>@HE4Heh(HI_L>Qb7DtOP,nKPDf**Z[3Hb>a5*m[mEkT2s'X3YpLGIGbY
%e*2tC"hbC3YfFe?L.j^eM/o3bV$9$VR63-2]1EG3+->\aGL*8!on;.I(>j1NDa!-i=p+M$%U6&oXnKh![`^QjB<+ICTCoS9db8H"
%h.OK>[Ipt3L%e]2>HQ0MW<p2e0##A\hI^\E1X,<oiO@P<><RUc]SN[2a&_).MqYjG7;l,epF(L1pGit`CBQR9%S;[P<;G>49lK^;
%\,,;mr:t>Q":^XR4^kO&kMA@]ml@kdT(.#aJZUiJG4T1D-$#'kZH^,:C("mfRdRGb[T[0FmC%@X]WLnc<m,KpOh'!`h.F38[;iZ[
%_ct@IHS"Ncf(`:XrB;0MX$<i=F1B96LtYjiJf3pES1'+1"/&2Td-["1+P,4^FJb@ec3"`L4`k'YK(B6PF6Rh0RFZHa@CIR>dt\.`
%]D>K"'h8-8+mffQLkuk+W^qCA:kJ`cJ5UJmcB0:\IV.K#F<?(1>>uPQ&4RqI<>O>e/8.:G>?9RMm)*T/S6!'AFm47r]r3hq$)qA;
%I"HIHRPV4+5*d_>2PRP)[]EM7;8X(#LK&>oTl+%'9[1cW1.#>;%g01->=RFSf$I^'Aj(p$&oX\h/faeH>B::6<'jEs')`jT#29Uc
%m68?empV-P0kj9XQH[:dBc_"(6"p[6h,Jk+UOOK#8dknL+UD[o068p3(+tpQb`W:uiaT%7.&EY-e"@C-?KoBg7S%b0aiRYf.Tbk"
%FJ>kA@a-KZSY-ZD1NSZ.`VBOF7D)8#IfWZ*bc6I>!$hQ6<DF9`-8ePO&6KuiWE/diM$KA(`elY_RGgS:^jWN`%C4FuaeZuYG*+hA
%,g-F9A'+e%dZPa%6$?H:I?9@X.j^op'6HM]h5ctsC?c-gp#2n0F]@d>5BS^o7NcGFW[BUA<N=R2jf)94Nr$a$7Q+/s=tW(:<>etF
%Lep*i4E`g>ND32MoPmMHMPThUJ6T$l$$(uHZZ[auL/1HM1sNNXbs1f^O^(2qKcI/Q7+e;uDb0M[ndUkT=[&0/nn%7lXTaUAEnR;Y
%W0YW*Z(Vm;;C#/I+fQXj6A,*'Gn+k^daJR?P:Rot.O+H@-AssAp-"Oq_i!8)QpD"'_6fFh!9j-.QE'$\c+^d$QWG,T`;2Fb)W7,i
%FPo=9EiWg.VM2MElhbf$p1%LrH*R$Yfm4-F4gFE8h6ro.gWn%1a6WG_ptdfRlhTsZA[>L[eOV+Hb,e<C<ENg0P_fp<SkF5-W?cRA
%$!R>:&k7Ot+;CBS&G^;!\@-&U+Bn15cHn(RVsAYnda3A\j'!(JVk<5s\PF(N[D(aorN^QaD;U'Am+AGPH^c(d7q^VT?aa^DX]fM@
%L>/R5n'RWZFmM"tI#m.0<pDSSc0.P2W)U(#U:uE"mmBT=0[Dq7!0NpP]'Y.#U*_%S6i0Mng#S<qLsWpUcd/$kS(MHdD6oeA>$9T2
%ZD$1R5Vn`4*-<Do"uNZj=0nHL\s<J_Sm+m"#W8*5'_Wn&QgU,[!Fhq?:\mqu<[BY(\Vd[8^Fcd@!YQFSB]PFpW^3@HhC*:fH<sS_
%1k[D'&dBq3Tt$_^>%rk*O`_h@NO27DVEC5FK]Q1X;Bk'DVUc+Sdh`<LgrQQ](')%%q]^*.T`e8rS7M[R#^Y&?9IC\-@<)\l,P8C2
%Y=)c*)RuE9PqT+=pA3m4CbRfkTNWMC9h8"QTn\n)1NQ\9A!P,ai[:B3I]fe`A._Si,_!H5("Yj(2=@0Va-<ob!YNI0`EXDHlkL2g
%7OMNB;AVk_mpf2EOQ('XO"1tGVHF\;*1,g!@>-6>.Nb6"HK,Jj6#*&/;</IWU$3V&Dl[0ReUY<Qf%al(DREm@0m:%[`S2s-H`ZW%
%QMFQ#ra'sOY&CPpMn%*nf]o#DojbH-4@8#;L_t]\l4F&p7XEDmGBD>,PGrJDGGto2o:BN=GQ$C)e@0=RXW(sNB%t$S[r10lgO6,;
%fW%@-;`J!HdoJ>LO35Xr*)`E9WQJ(Q96)^3)6J;2.KiV`:qAA]"f>DH5nn?8M<-^t/s/U)Co/&G%C,ZuFA]?=,d8nEHX`+#!0B.Q
%<g>@%F]*>/hS=sW9-$)LLk2?%PQLf>U_9l'=?4kd_\<lCjch"`&j%pj_klQr7218]Vif=XK.aBD,Y]a*rM_AC_DG^%Ws)p,'fR1!
%Xa',u!VXs#JEBah&;MB%.Vr$*:j*nu>\=$fY*F$/(63E1Va%Zi.msoIYLSRGJps71bXCsJ;:VSS&8n3mTi*5>&+S(X5_Q<0$7LNU
%T#rXQk^hLuee#%7:l-r[h).KFL?^LqPVWH.f)h,2>`F)cnBBm3&HW`J`?G&mgcuog>[^%^!N^+-Bq/"UJJPEtde,)s&*oIHO=Peb
%1Hg"W61^s]`1ma>A;f_dmoHqc2d_u,'D7XU>TfK)+QZAN4-gd]ZLcGSMH7*QM+-Xb7%$ms;>.Qagsm/mVY?MlUkjW`n%h=C$,EM`
%]a#F%X+;laR(O-/Nt`:6)$IT:G<-m<XY_[V;cstX35So7OkV/0:&A2lPu7qbkQ@WBBo0k5"7RgH#W5!Z!;+hlpWl/ZJbt'k-&]#W
%_NO!<cc4DH"QPACV!ABmaL1:8)"EZLbu2soZo\tQ(NY=)=X8M5Xko:X_:q=>K6f&m[4L/_W4M]IejRP-8qHpJm:2pq;dq_#N>#G.
%8ph=#C)"*=KVU2&eN<HU9#>&#-&(k&&)bF/Q3m%%f7K/oO\RYUe6\cMbj]>EQ3T,RJ.[='Fob7![;W-[hakkrd5K?4VD;_M)NWqg
%JY+LZBgaspATZk)KQI+&:X814[-M*'8KElFE.;^g6he&p1uBDQNuIbc_ohc@5Z1?)Es5L:AQH=KT#[%0#r?^QFJ.=nkgDph3^qX=
%0,b^Yo"Y\[.VcP+7[mPE[!PO1X[`"bF*sJArWrp[bQ"Zj=7,s%9ub=YDrT62Qig8!4GHa)\ga%r3g]_i.pbq-BE`p]E#+=4ZSZ-`
%C;/ocJ._o.bG7U-9a>'raX\C)>I8].n!m=8>>a=4j-[VMdeU`hrqdI.#DX]s6W.ITRDs0-rj_i'i'/>TLc?,L&.7#=c7Z"dI(CJ=
%&s\*:>D03t^_TPZ/lf_$kid']G'K$9=W$C<;Ol>gm74p?<oZX(]MrFDei5f0CeuYj[>PSmOFErA!E*g^0cp+f06S5l1A&-:.VuH9
%1]^83EN\o]ZrdQs['Jj2N:3O]T\b3N/I4V6"Ih.[l7h_D*/F'<(+"t$@F[q[$[la<,D[K\[=Y2L7NWWT0i#Wd:p'.?j0L;uAT4,X
%N`U"J$gs)%fS1+u?=5Y+k1@9bIUD!*!m*CoZ(Bi"Fh-+J525AOZO*qJK's+gC:Ek`>JIa`=hlU`#<cY;Y>lPX+d6,hC7[KaGTi!@
%hDH^f'!Mba.'.nV%BEHfAaVku&f?T><b![GKs4ZFs"&nO5si'EW,R&.>G+crjJe,5nT%M:KGV+U!Rm8r6(ReOVC.b7A]"X=T\?^Q
%[l]^e]j1KTbo2u3f+0cHb:eDn0\u-IX-nTTo6(fq9ZBIE]Z=X'TPXDKQTR3e':DII?<P5Pq#Q&?0D(nU7cLjU7?]F`B-QPJ=EK(*
%`ZW/@i=W;&/Ag+;+:4sc((Rk]c<K;<^uL1eSVDf&5$'\N4tg05WZt=,\dI^*WMGaAnh>!f.bJ#5cml)sZ)\1c.4KO[A5hcOXg@`d
%"8eG.&/PM4EeQ=3):5oP)ZD=eH<]9)Ra.,D\E*"go'`-79Q'ZNo:6)r1f`CF5joJb8#(iFMTu_LKZ>$>MI3Je$GlAa8Y\ijn!1%M
%egh,8e4j3D1dF>]l?)EZ=hcbJY?'q(o-'N*bGL]kgghG(Do7"Cik.6Oe$Sq:6d3l:raj5EE5-X$N>tWK>K$@If;nGeX,+(<:si.Q
%B_>.`kRXEGrRREg:o.$sSu\fef@DaX[U8:Fo9.h'\5+@N*Rgm+9CgIhoiUK4#Vc=\9^?+1CM5%)iPj%H(mjOZT46I6<T.(r7Lfgj
%_kL9dKi4FO\X'3>p[h]8.`.,G5rGOIpq/Dfd$R,Pe=$#^Cl`?HVik$'F`"%W&&E?''G!^#cIS/U*.`)^Cp86u>2r,57Y="':?D$`
%GN3l;iTP#OWC+<L2/eG4REsZZYCVVKEAn/M?JM^Y)Xk>Y/EV`"q\4Fie(%WuBBF^X4t:KA:%<J@$m(ti#]09Pr?,il#Dsd.NKd7Q
%61CKH0lp5l#q,j2?o8'eS,oOVnAV8]*dG7S)*EG2=$EHB"5j4P8dp5cPD+-[UOrFkBQr-LV$t-KY_MXH7hno&N\qR3Ss1]0^/dU/
%"F?DPI4c!\4i>K3'1BVg!X6re[G_aINU+H7hXq>K\;3DF)VVa*$92S]V>4lgUR+r;$rDoq;qna4BsOS8p$YG#;2p.\37N,*7139q
%&HdbFF7!Fo.;G<p/Z=)[h7";d6I$3VEDq8>'8@duXcP108aAe2Ag`P]XtH["3^\20rQ)Wr,QA_^4hTj`0MXbM]lcl@`4AiKG`V83
%dh:Xe;,*g6K/s7eKe+:I9r*3'AdW%(W4`bg'jF-\Ce]CddtB[sGF6>4(Zgp*8cjH65sVgsMG@8!fcUA*YoQ?+(`;m!d;U8R[8Qhd
%;1e6L4^r@9f_Rm44\hB0YZb6A:T0@d_[DmHG-R'R>pt#eNW"IQM^O+OWcY)qnfb_Gh`t8Dh"8=Tj!/V":LpR:1q_2b<!],tf.&s2
%`)WSMRa-Fc0]G-HhTHeAX9+N47:R-8-RRg:kLIGMSihG)DZCO`YH5\&?*WY7[Hr^?I^Zt:Qk."N\,D\^?p,3*;`e]l@_=jf1=@EG
%"@X5GF)?V]p08.r8!`g?g`-A*e"*g4:Oc!"M-mU[QRMU)jCcAh?3rok\e5L&M/m?h'UoM@P]@d^$'P[?_O6G8:`%#N+otRTm/(B,
%*(gjQk1:*_H<dlHW?t/,?"O=O=TI,adMWM;B5JN?91>_SF/to\To^6@Y?Zs*M:%Ar4QsrW?Hik&5SsCu@PN(<aMK-[lC/IAXi^pT
%+69AY[[AjWB^;!b1P2@\o#7WWY[)%O]85W<V+;6gTEr'A=V-W]KOT!Xs'_Imj[%R;U=j'V[k+0X_C=^u9L@_'UVsGq$7JLJ6W.<X
%14@iK'T.^*:dm_@MR2Bt$q0t=<(j2M%Dsd][5sR(;+6-RN5V\,KsE*-4;[@cSZ6ps5T\V^MO<>e:9.,TE_j4Xoc:`!R(#ibp^Rr-
%buKt5f.,nk`XncB=<cF'A5mC/!'VkdVc,38P4_i>gbCls(LAo=#phqGa44q41N0j'Q*'lIcK"HqS'P(dXZES\e]mSkFb2/<%p!%@
%#Nf_X<%B-W+'op+!eXU!"bJjI7>QmlW7d'!#`,AVol=$lKo:qtVCU,9NB6>)]i$IX.cBLkjiUsW9S8KY/!DOm)5`/DO,D=g$XG!a
%>,dM<A)dmL+I^F]bLLG!PZ%tZY$79eYSoE2Akm,STs3@M`,_#@dh\4cs.o6!&AINee/M.YPpZdG*0E-m9I]a'-<lChEN'5Sf.@Ag
%FdgET]97/.7tNO^WU,h$$,eFU.X&CLKl%rn#V+"%'L.,a-H:po=N7a+dult=7&YgR,ZLm&bHaS'LK]<Il]VjJeLW?Bn5_<p<@s2n
%Z0>Dd1lB!DXO[toN%h9fV`E,M!OU]-LK9m0h.+rJ'Sk/DlJfSZf`rO*35EuS\cl,i_n>3QRtW;TC3la3g=GDjGuRm$0F\qS>J`oo
%,3i+H#[Rk@=1X0?eQ/&OWhsPPirTSO,p"[JdZR&B*uXb\0mEJWr<p7r`M0+C'>R/RX2gplER%.F5W90VH#78R#8UsA:/2Sjaj.;8
%61%6_h%EV*Z*"@C&taY3Do,MLS1&(D.]m2;#9M-pC-ijJeH/'LD6H*<!DZ]T@H>biY85BM%A01kGmGk1<c=@Sjohj`Ha_4e)Lgn)
%`VPP=H"+)]N;MBGMROAV#!B?3LKh)OR2,MA9V&l4]\3'F*t!?jRo.f8oc<R3bi;'cgaD2,::H;^e%%$paCFBn#PkOkL^c#\NSp8Z
%$!N6YaF>ue3:$8&mJr^3Tr(-g8%7.X%]'qV6USIUXNpfZ<4+0`^4L5B0#J'6fK.V6Pm.uI^.B(=V^_lP9>r8`*jZ^_b,0`3]s)F`
%\H"Q\G_D[uTrpf'Sp[@87SV[M1oqa#`.GatCXqr&3&A$PR\)&fKGS?!o#>t8`b*A@!-FD\!*9.#N!ag+d$Bao#4SGn4G%BRXf01'
%h`:hm:G\TRW$YP8Pj1<JCrNWGQbGZG]4"gdk0-U?2+]_kD'G]`5@#\T-;_ab[!kWg@82Ig(DK.#__<"p!1).c>mHfcVp]sJYRlZE
%7HU?=A7`O`)JGntadlEjaS7(<6C8^IY\TRXC&fg9%O@570=*_H]`rjT30?:bs2Rkb`&`D]11s6O7]2cg,TKA,8Dnbub;rU3!Yh_t
%7CJS=)ee?L1uZGq-VS6JV'@Q&%R)4@;7eJQ'tFV?0sbTa5X[_mg2,Hpd"AT.[K.0k@Gm@b9hhVF4S"d)nYV)U$p]4GKfHFL(6_1c
%1^*"J-CFoR'r&Zj`RrB'#"h[2WaafaXU<a9:4aOKUZ2b[M!1S\!FG$?C=OAj2(<H?B\Lg)34'^g)hb.agA>:YKlXY7"]-]m\k9,Y
%B`Z*\YpFAK*:LLG#GXD">)@+]rC`'/gC,fi1a1[;/^Z&(>DW0])HElnA0hA.s%:?SkEQO=6;heWPtcVGGaK@.]RI4sNM5h-]al.1
%JI!NZ!ou>]EK*\TANFt-@BVYaI_aL3gB[O"SMTR2'Mui?85)%uQk.55imX0[afNa7a+mejVOnKomZ1srr'1-UIoTQ%C$3A^@Fjbj
%^A@1<^Ad41Df:,JH%(*coB,E,O"^LCMgf[*QmAO'Isge0YAW6(^A7AY?[V\2(['uMYQ&igHUcWdj,<rfYPc'5#G4?AW>^'^<.hBj
%JR72e&5&J0kAY9=mTtVZ=VMZUQpFa^O`7[R,*Sa7k:kJQXD9;:0=,8Fd3>]Q9\\cB8cc[H$LIA!,h_DNjT_2qZPJRe^[4M*PB9o<
%kdC?"n"^@KWWA:K'EEk8YunIMatH_pDlO^$Yg.=L#Y<BCT%)%Z1]l]0<L=hr\FSLZUf)U)c-4[=ZFc=O)d-gMF.B?6>Tsiqg/4!g
%$M&J:1g]DA1]#Z,Jn@Y+G&KPP.8RcdH#N2.(m(+Tf52L.P)koHkS<msS^u1[Rp5MQF2c"hWu@>a@J^Ih!g+ON%Hd(De0bW.`iLQq
%:.OPW8%B?",)ot[,uQT^ObCc2kE*ci]i1R`R\UMS<1?<G.Cp6;E[a<<O">?OdEWeM6DuHD"FVh\S5OoO9]udJZ+>#L)lJoE+P"_q
%QJp+eXC$=O3jJ#_dhZ%MT9cGRC.PolK7?@sAbbcK_HF<5[Q%+t"uY(:C9;OZ!YhR^dl%PsAJ8_+L=!i<J&CEJ+S\Eento@.FiXXI
%oiOJ4e(/IA=f)?OBd?*g'?K)f2s_kqTVrMhLq>D74?g0iE2f0qbbupDUOp`rd1"-/Y;lc4Eirag.*r&e_^`gd>=Opk(.HOs<-</D
%(BKh\K)(-J6_$QMB&1^g`+jC`7O'oZ>ID9[d7@d;E]@!0T"73snS4h;_^k=@.4#\7jbm#pF3j]_L'RYu4Z:Eqe,HIp1_+2bhd&VP
%aT0T$i/;_BV>`6ld_=EuK&3.C#<+M[Dh`]XkY^mnXSN)<6_<J:$"AgPOXlhF(fNo;(b9+3I?]2<(q,k>]k[&ZXFt_e7\nM9G[/t(
%H-q-B'l2CG-u=E(Z-Fd^h>i$oTmGgLAXYJ6p]l3KSaAHF`elesHtaWRPmg)=8qlI<,+<G%bCYDu-PaQ&,[@'UP?BJH!9DG)jf6AG
%Ueudf>ofTlXWecKC2Ku^,a'BQkRa)WB-#O&(?nH0hF=ON(8LJE;BQb^("H/5/]U17K,2><?[jPhC7C4SklrdDQ;EqV[2MHT!R;sj
%"7pb-^jNd<fVf'SGI9r7g8B5+XgW#fP7h:O<-VHE<FAh+ce<+ls5h__\`?CqK5;'iFWuUdJ3)ob,f;lKQ]dngWX$)lH-%?0qKFl:
%rm8]qmDGHaLmWUZq&_fth%0-2hT8!1p$_qWlcZ=mb\+\t5P@VEja[4%oQN6t0BeItB>4*^5(E*\^Kk3[l2PkR+7&=U2t(Z<hU/\(
%f7&(TEQ.`tQWLBJ?LYR\(VfmmS(mIOoKTfLrbt1'p'^?E5P1rN[l9Z:?&TYi0E')IeU+k#]8OisIs:e==-GR5(\_RYjo9+ghs%>2
%YA_21q3CU;7t7;ihri%NhrVm+G`OM,oCWo$5C@\K[GUY*/mhBnpRX=;C\IOer,(Umo!]ukO.1(ecc,_IQT+Bj]^CjSjin%%G.cD8
%XNLC9\*nKh_:<K'f+)`+05C(OrS)8I?X:<)^Y![TjJP)b$h!W-DtW8TX4thPo+1'"nP8QJl9AQ\?0qR4=20%Q2l,oNleB+dGk_2P
%pYu^L5PdHq?!lg?qs3.3hk'f.!FKXAalBGOmK2ePDVptt]D2'RMuS+\pZ1aThSuaBd6RH=M#W;Jfm[='Re,N7ZT@pHBE!akYfD+T
%o$%D?l$Rm-[?&&S0&Q$l/iQ""]KNm?H+WYUN?::Z>CCYcrpBO#^V2l.iOd;)h*9Hm^=<nbRTDH"5MWo`]\R/Jr#?6_`leVUrQAPR
%I/DppUUR^nmr\3qT#BAV7rN=hM]BFDIJ*<JI='P)i2bbk>eW;rHUiSSM>b,Y[HHNEHTQu`O7(lPh)i2pGM_WKmN(,sT5oq>1N`@4
%n4nbtm[]#DjR@SCnX#07YJ*)FIIl''OQ:c0Vg4rqG<"I+2coH4E#9Xf9e?St7jibo@rl#5KQjo/Is(:J9?"X3m+0EGH8:uJ?dITD
%HZsc/k"Aj@LLNp6I/E<CMq]nWiC8-LEd0K(kk4ATrq02Xq0%7Mh<g'N:[(.ET(gP3D>8<>>b(inr<N&bEOS0oDVs,.V/Q2/lKmo=
%RlBeRcee$fRI:(D$'Jd/IER-9gCH5]/jA8H`t'9j/[*53,u!b&c.1(nJ,\bX&iA7g)Z&u=pV=IKrTJ101G7hGqmYISSR6beIeJl4
%>5dZHI$<ukp&DMejS\bt1\0F!iGA@G]ZYao!`&:g?KIAtc9I3rnqW^X2n,\',^YDnjMb3#Bhqab*UTPu[YI$rN,VIU4@Q:2JLg4M
%-;!o")-gJ(ro*576RLsSBnHXDZ$k4,B5]GA^Uq4ih*&5l8/gH,P,J3BeUG:1iqr^(f&#gJ&pJhfp]N7UZPi]>#@;\)&\lpNnq$Sr
%r$(CPcd'GuPolTN3#!V$[hiu_HpKRaN/aLnpaps/#<5&)55*WWNfYFall\Y+pe(E(./`'`?ba1_\bbma`Pm>q*4+O0]MRJ\ZQ/:!
%%_kbLkFg_+6nhqS?CgJT3]fH:s&fB:r6(Y!!8a<\^3m]mL;`27+)lPQ$*`I!H2WuYnBK]0^:Uqeq=BXPjI/3C$EE9ierImhJ!J^T
%ePetLp+q/OSHHuhU<O`UQ+,XtroE7[WUB-t4-[F-E/<7Yc+[G4GW#BUm!eLILkab(Xa+Rpq[_%pH[b[uh<iH_`'(?6]BW4QUk<2T
%puV\BKYp`+%p2q\%rchYqJ>>+p?l@S!@S8!jOa4fc=rMEhjqH+F)gm'`RVs'6\74?J,&fLYFSU:+8_4FJ,&eCD!.(/.-Js\0&QVH
%F`r4RIIZIn[q@oFcs_$Eeq_s>Q$3Mjd5O.B&.[iIh0m')q2p=7K^Qg;4+Hn'5OSBfr28@V-!\1)X7B)/hCC(Wr%6F=U$0+,G':e7
%7Q]tNZM%Nbls>/>.HjCtG2`B.$=I4ahmX-5FFAL]FnH<ad+&eWf!DElT)JG8o4OmuDU70'8?']'O8`I(0A)rRou53_^V7@or6+NJ
%iV:7gL15(>G.2U4p/taOqtB/upPm*-5PiQ.?,!j/gURaOr9W_H[l:L7?Z4s0O'`"!o4^)L-f"]Fr!L&RWqEQe+>NP$GE"oep>199
%KJUC"oTR>I)ETJFf,q#iR8_T'T-=9qG(,crW*eNO#nFNBM-Q4M2j`-/:IYe?W'#1b7ki0$qElY'\U\+3?Y"p)rA]C;p*AGjr4t)M
%cOLAi3sFH6Tj]"8kk=rDH%O>"Hb6Hkj\S!/36_3)K>TfZ@I62tk4pF4SW2kY*9P3P%^VK/n5.E(,91==(O75)kks,M@32X[pA@JX
%!!_R'_dR^qQ%u+*%MK=nrp8Ps%p2t]XrX)k*+nr!G:3gV;rrK=#L2jjDtq\]p-dg-&6T)W!%^3\KqI`_r-YRb#Oi=S^'AnWRiah.
%itoK+qH$@1oC^"q$dT6#qL!"+Sg@D4m\t_t-2`$<D>Fg8S>/RNBoTP@2;1p&*Jd2>H*&,Fg>AYpqj4ctnFpdo?-j9*p"=o[Z_N4t
%e7TlQB7JM;g/4I_P!1t]B1ICD'DcN?l?rQ7SFn[:CHK</-cnh!7LnmsD0FSjjmRKLm/6FpD=_tcD6eMNGK+pMqu6*d:p9+"Nt::L
%c.@HTr7f3@+0Nn<r;'iuJ30`_7t."=-`#Q87':Gl6jRg8>VH)1s#de-555)"0D^0jpHSEPs7?4#0:j+Lo13[Bdr7Rj2Xc);&sZb[
%m#WVpG!,2Qr$al/H;DYTiccaj3>/8QpA8+/H%#5MjdXHL'?a[@?C]jNl2b7,qSh;)`9`Bkp!!S"Eut`Sru&7NHsA%KO4W=I)cm!D
%!V\P)5MWp;>5J!^GA\%C=DHg2fqj,#TDt#<3m:R]K64t]!8_'kEuh2GG]l2e+(Zke]083$H[5MEou6=d3pr+%_T*Wmqek3V]W]',
%II2I_'MEB=(\n'PCOVE@']/T00CjZqSmTG)oo"2?q`_bc3qP6#E)IYtFo3;<4`i4T4Jn;Q+J&Ea'#.p;q3Xq6QZP"O:eE,@p\BGb
%lS4*@9HjF0YP*@UE#_ftGMhnW69_9.O"'.F3!RD;o"deMpH-NB9HbKVaH&\1na3gSGOGNP-lV&W9h7IV?b!ElGlRKlmY?2_0Y[,.
%O7kL=TaUPDc(".`^"If?hYH",^7st[LOHneD]\l-I_<2%](tZpmrrpMkO3<c^Rq#02t"tp\G<I$J'/)^aCj;3p\>!KA-IJ^kI26D
%Da*Wf`l7,sEOl#=c0'Se]XbV`rVZ'%ld'M+T"Xskc>S,i`Z:goa(X7\he`%^i>@a4j,i'$/aeDOjqs7CL?)C)VXBu>48\Kilh@k1
%BPog\"'kliMf%/CSM%)A?QKoqRXXd;nXa)nZ9NV,#M2lt@X]V`af->Q#INRLrGZc5c`">!Y]/P]Kq<I+b_cr-i:tOP+$P8'o$FlD
%QbWLGNOY$obONJuI`hhP,Bc<MdDJf$\BWLAD)=j0E>oAHE;8Q4\(Nl$O)^Y!gu]H_3Q>orELUInjqtQf`bkDpDY"PieT1g5m6_HM
%.s5]i;5gU3ooL;Yqd(iR4NTBC@MKqVc0-<kBO"j"ro*576a=>Bdg-IQ1$uY4Gi$pfca(1&mK<cAcCM6;MsNHJ`pP)p8+)>rft$G%
%q<YVh50?>V*hZ;SJ3MJCg\8&Ga?-eJBBPD$l<0aMLQgSEn?I<gnUi(Le-GHUc^[p@r9!=K^,p[io@IK9T7?b8?tDC)$QOgO\MHh2
%hbb3$IG$qGhgYIjig(Y^mD\ArXh$mQ:sTFk]lP.Bf,lt+B%5&^pA.4,h#0ZjI)>:NHeq8B*tH*,l\t#j$1,i:H(5So!IU!(CUSGi
%R?-bXG$U9g?$mJN2(_I+rqM&`[/2r`p%%bXi-9S@UVG35cTAnhm`4mZ:[f\U'QEgMbn'V"]3B\Z@ItRm)TSMjZO(@ta.UH/R_m+<
%`Za`FqHSUj]>)EAW3LQemP1ZFO.,t`e2RXip,/d7:?Lrs"7U,RlXCnUZ^lDe]KJ?k4hLRHc/nA9%J&O"B*NR+oLe_YDD,qS57jHU
%*?)Nc:R>,ni3-8]k0`)UI-2p)U"KCW;^K,&J,T8YD#a'VO#?sun\<W##:k.;SE%e`3KUs8H[##G[ho);ro22um_6NWYP*3F*D*7A
%M!X=rq'4@-5a4M$jj"lODJs^-7rJ$)COZ0Sk'HdH`"tX(?-%(5@sYqYFl[$.l.:8S/uIf"`H7n.HA%s=TAI?]k5A<;oS45Q4;*ku
%5UGLo]SZfJo0/s6lkjKn*q"9-pot(:dp_1TG(6-t7urWsmctCJ"Wp!SJ+rDP`/bpfRc8M!c]1SSK1StfGC+4AMOb>6LR+cU0AU+C
%pRfNO4h>u1GAgj<hU1:D3dc-YpZV)e*PP>6nEkV-+!&(j_m]l^nq]q#\pXD8o'OZfE-O"mcEDE`pl6EQdGm<7Hq07d!T$\&L*#4S
%hWZ^V^(^O*I(oW/F7]7SDpNUYZ?tp,4liph?,"4#q4960`%u0pZEqaD8Q[21GSM8lO1QXs`La)bkJVUbV"+A^(O6@'n-2Q&cUsW(
%chTXD)uKMo^>=X>\\>cBIYP3\s6"='cHa3)r.TrEIQ0F(]`%Am*tVS&GPgFNmX]_uqXG`a&,D0>ZC-/9hs>meddoC(r[3pna3a:=
%e93rF1$lFcpPp+\?TgnbGDP&T+4tT,:mBaVnp>OLf"?A0p=lqFMm(FP*b+N<Ie<EOrgeH\=fANAhRpH`qbY>KfeM4Yh>Y-_m$<ET
%^=@-CrRLoDh#j[3Y:-$ms8?J`o5&`jc(@/q90T^3p[_s5nSr2IFS=UYfC'fCR^;<%rUVX'P<rP[otNU;e3*]hdGKlVbu8Wlr@BkX
%Y:`t;T5#kQ.8U-F)-A&PWa\"3C[WKO,TeVP4gl3s4WeJTh>Q:G!;dl7QN-Nb+)]q?I)K6L+!-F9_`.UUp<q>pqRPshUUg$]TA_<N
%_FJreTBrC!o_W%Uru\KQT-FDb?^/FXjm=/8/jEm$*hGiGBUil,[DCPNbM2Kg0-8JUi/k=_ZUB91Cg2A'qr7MP.G!AD0Cf.@XSG<E
%50"k]s1jokMtk!b+s4T8bqG6?BBSgOr)aX"G^_j<q>&C6\F2rNmYZ>:O3ZQgAC$=^h+sR$d<U74kMa@QO'NZrK.Z^8^W"On!!fkB
%N`8D]6m!B`d@VK()LNqCc1>e;pJHd.rAOV8[(?.9hQP9%:cgHg*.hZ"fDa6C*sS_bT%87u52US7i*SJB^MSHUaf_hjJ(e2Uj74R>
%oWE)grY?IB:c-15/jF`<a7&':Ps!Gh3`(]ph`q!ahF@n<4>o"IZf1a?g"A-10\OJ[.>!2Ia.QfnD3@+H6f-a^=)[u.IXI_p^'FO1
%LD';D6o`&b)Km`u3u$N?0m[cq%0O@lTC\h_r?U.^5JFgUqs2G7cRq&]%siS0^@UaF2nRDR+TsX>Mk/<;r9jUaYV=_p2bur_p&<53
%*tLo34M+VeZFk-0r]\od^E2"['<X.kpS,sIHn'pY4$-D>rhm5<Dr,oS6PkUX=mu"L&qtgqG1oHP`>jLR:D"$2(l.&e&,H%8#:&EG
%\@VOiQ,;MT3Zk7O%qUkE$s)u_\G:d25Q/J9^[^aXIsLY>g-CcKPN;&eh7WPN++e3!:.5$A`Leg@bl@1cms`V<pn,:snbS`EX3Z7b
%`S7_;0&HQYqhl7<0=pNHU-Hisg!r<9k$EG_s8.klIeNcIIsU#0o2km/^]2Nk9X+c9]PoMkoWc@6LYDcL-"[,9qp,JVj$/"ZJ,-kV
%+9#%PrUiU*n_4l[n,MQW]V\!ppt86<cG+27LDP+'j^lTN^URlqGj47_ip>.b6A.(H3aF8QjBE7*FNa77S-LGqSL])ilXEr[>+]+^
%mp[+,?^:Tm&r(jf<9[#a]Ngn$1-k30Pas1AH+@IPkh6mN'.eijojp]WB^EKS9@>n%f3Z,LhkugCnut<l/B)3!I>K/L0AR6`9YTR?
%%/sg1/a*;<`;6q7!&:a?rj`F:o<Yj7]o699QM^";'_H$p\]GetQ`W8oK@jN]e0[+Il")G/5k=kWch!];TDHREnC#8q8@\FYL]#!b
%:nblOYKPo^Mmj&hBp\h+9AsN^04V'\?q\6Y2Yo?1\bi]l&siN[U$r&1W/-pCqP9MaLjdZ&I'_Nk^ZS\^f;=Z*j0[1r+OM0^KbeNk
%fBqSWU5)iWQ\G@K,THn#DZfd3?^J]^B49iS;"NL?A%qgCoqhDqP5&`3]l%oeV%5SihQ-H9pF`8$3G<kel!+2@4C9]4CDWB@S(SQT
%J++a[?\+fAp!Ht#A#lffP'`TQn%5h7>0?EoZ=[R<%=Wo:R$Q0$iICF+Xj9=IX0pT#^Mi/94'(`"e.p7f,I*;<g'sr2p9\DcC.#Da
%oi$`^[IsA?GZdBD)r$Usm5N>^Nc$kjb`ug\D#K[Cb?FkARcq>`59taMTi1`al^q.Jb*5]&&K>@`<$_0TBe-#L_U)auWBV#mh"#P5
%#$>E`d(%?Zg(G/S_@T%bd%s0aY%nrD!ZH7p<LN_*bXn[t`Os!tfU%15;K>?__;T*lCI*XP%+#/Y>$$ZB#&o"Ho`b(Vjsr!NT#%u:
%iqgLf[k%An>jPgslC7J8d(^lBgXLH+$i/YieO@3(b>m,+s"p^SWbqj0[]a8qNd\Ik=6M`akLR\tQ#q<2<Sr:,91^Dq=8([5Dr6VQ
%;FjrSZrYTJNO4,+qCZ$aJraWB,][u(HdP`uil\R@PeL0.)hXIUO`U'YqidHW`TPdHP+jQ]/?>,;IB2JD\2Pab:5/[S?;23+CT6eQ
%_PGTd(c*h]H2?d4oLiG=WnLHP%Bcit.\4C.nGVMR^h:9L2.No8#JMc?(+pb)9CS2VTF)DAp(Ut?a1AcPfH2`I[_WaFir$-$]C#-h
%cU9G/pE=,49Acr)/FH\bafMKXgX0<][`7Tf-<4'2Va#LYFkmVO7J1,^\*R5q"?L@OB^u#+0;p3ahH-cpI="Pp-ZOFbs/Po6k>6K8
%eA,k4h]_hs7K9oug8D"N^0Gc3\g8OMQnAqYs+4P!_Yu/f'LL].3FInI3f8PpRrJ^UD&e1g>*bISfUn:5TNam6%I4!>Y%\N@DAQ[9
%'c6=]jPos^!Zds4F4ubMiqfsarh*IY]7mA?d$4]_Rm^j\pADaK=t1525Of)/(ch%_i00Z@\UFOnfX_9#JWT9JQ[GOZc$dX]12!r#
%/#pra-1ju;`%53*p>T_ZI3-n</H'he22JJ@;L7]]TM$VUF!ZZs^jjL0#48IV/YD1t'lmA.M&$\F8m1@`C&@)mU9K#C,+[;BmIPe]
%=Qq*WXfo!Y7d1#:<qf22],7"GOLqA''=QQoXm`P@o:P,,(!ELji#iE4gQu1^lF#$_GO>7#)Z_F1[Ai9*qEpjIcY"#?`gKlko+KP:
%E.+KL<\(!sLa]]5=/B20aV,B:VJI^TEO-S2rQ't$Q=hu-X,r3J`RZtB1r\%brKX.jDC@O0[4N/"oR5!)%:PmSY,h&=8GhRlWTXG+
%qb7f8_4^b]QUMWFrBu+,?3\`2BNN#Fbhk_t)"e1,H'-k1"L2moL#'Jpqfbul2).PrdWb6kQNF;JBP"P>KqU+Y0"]6+""Z,DBG"3%
%53Z6Pg#;1AXW)g!SfkA=:0NqL6$\)8Y%Gk5%e$]P0UNk)mKNtBmoNE&Aj2P(MN,B$pHFIDn)Af3"oU,@[TE2(\kUrO=u*`Yk\F+j
%_h$:5l2l'CYj*)k65PLbQ_hR(k\$A$@I?=\c"p`jH=F^ln,'^]G`XRomRmN753nQ[To9#"'!H;;73]UO3q*lg@/Dt>hjfAuBV5Gn
%?D2;@*.j!)T!/*,6Z-Xc6LFF$i@=:V3f.@s-R_EbAleQ+L85#Chhc*kolDBr#lBKTDQs3bXtP]==sBGl?#Mg&c<6PTeEI#1iaN:R
%G%.q<P!5u$QsE"6e\N?.l0`.V!_Yms+VHjQS*gciDHsq*e3dSIM5N4m7Y'1BB,gggg[;_[QEI8.T8EOGc55.S?,t+1l7Yu`B?at;
%^nY:5L#7d+U%h2Q_QK=J4)nOhj;?C]V*e8L0!Z&"6)B<?>$+#]mh.,m?0%!sbTEm8_sZCrH%k[J"Wp`1,dAKg@F0_&@%8'ZgQ!^C
%^;r"llE74L0=$CdkM8+PT]<BU.UdHUEoV1SRh%sj[*=s$X1W6BNRr%.^dbaGH"t!>*&;#UMt8cs_A$5LG4[*1<?U$ENc14"fMOZo
%7pl+Ob)+GR2Dt$X7G)O5"]G0ss/G]p[f\B$;i'^MpBBARbDq846"iouHej)c@_uRaik+s0;F4S>HP1&nADSNkDtF]T]q%^HkGc]&
%DO+"$F;EVSQ@#kc1H'\,s"c9(&uk/4p%KqUX\[T<ALD0>4>_b?cqQ)\i[%%.dV*/9GCP*Fkro`[EQ3;[X5Q[*Hh;$K;eabL>dfpk
%V.U6q][imXq%WrqmEk,Lo\ot?roX<Vkk&joO>JT#XA0KCG2jsPc6!Z7=Y;\7?Ki0rM,2UBG,jO5U0jIC/55Qgjg\i(JWXdsCZB7d
%:>mO\d,2i_<+_ZP,kU+9i,#<Zm5B&gf`C^[f[cND#'p>o+P50JD3)Epe&i;;j><6eE438tQJWL(.Tr:"HtP<iU0QG;BOaD_9dX4+
%KYtBiV.POG0W0j_,M!UcalcbbbWFN!Y2llD"mKGQ-8^ZNg)ZmK[UEQ%H>hK.P;1ef1+U"r-F8tbnDs&*\6[nAM4Sm&%S-*j-c7rf
%6V(2+b/j"";W^no)!$[IjJKb+R-q)5A%Z74pS[De=B`<>'Y@J5]QP@m+8^WN2]W>G^b<mR.;@Va?UA"C0;K#OV`A!B3j]<@#L?.B
%lh]2QY]cZ,*`_KVotTT4Mk4164uLqQ2*p#\.0.b&ZN"*NB2ShG$JfI@;-YO?P]L#8gE3`u0?\Z@$K,HOTBHrE"4R*R(7k#6-R\T=
%$D01<iG.CIEM;gBPK&$IbG1[DH/i'8&B).7lCBr^a[mQ9B>5h?9;KW>Y;u35.0EC7)6jQ$95YBB].Ljn^/CL)==6V1Z5X^B-,h(?
%RI8TG?B$Z2do]K]I=if%6V\3tZ?r7k//gfdMp"Z[B\\25/2)ho%WOK$f".,II+?QQ<:T=d4dQuaL__om_lqg&]^I_rnk+=qRYm!W
%U(K?aZ>V>p@YAXurA1_D;lgmff.]ub&Gf6ITm@(Pd8P04M?g)#R#7<a[A0eg+@BL;r<]d,5r9RdrdscBs68F&@QWP)>1[Sj"PMj&
%>"hs7LV([o&7JppI_&R5XhTnAY]%q;@_!Tg?G1#!qM9id=@XN)=aGW4'LB*QE(Rf6*:`HG_30nF@P&t>7q[Y%_@iX#MZ+LZ9J[)f
%LK01G;Goai3'-+XU!lMKh*RG#0Kc-?Z+M[q*LdP4s+qF#nmW/SmAM2X8.%rJ7?mK)3TRhC`TKo580XO-/X$+DGZ3fb(+Z*5l'sds
%iD`nYY`!tjY,<j'VNG#;[gJ65lcN%rU%s4->ofPlrNTjIE+upq_88AM!r8&rWtGm.mu>:f3H#Mkg(kXQU9Fbp?T"Vl=Nh@i(+0Q/
%P>Db2AMl`\!P4,eRZ57.\U/2:l-?5)e]m@c\e=73"&CEpKVLr47#^KGfN)5/Um^Cr/=hr>>g4&grVJcsX-k9+UKbiWq?dism&+7a
%l`Wr)<?I;DeTF,#<TeUbnX?Fl4`#p+r44%^=!Vj5.*bJJ1/e(4cDrfa$[$kBH^4L!R.eCrMF6M3g"9&a3cSK#n[@sIeCu5[1Mp%(
%?1CJAkikh<3V+e^X\Yo8:0FdN"JpBIc"X"P-nV<I]:jU#H))Bl<`GU>.OhNb)@>Zj/+qMBL]5=?9ioI;rNq\U6Xhe083$0T-&NR3
%6F4V`jF3p-E)r4:Om^G`65XrmOUIt&!sot\BUg00B5L)]fWOaZdH/pQW%USl8L#U;4AA%?HjMj=I0D64ECUjhoF\C4lB&hNTd8d+
%BVHjjnRtiiG_U$Ag.JY5qr->K?qg8+fFj8K<4"c>R*:krJq$$6N5U;/ROoN1%2lpfUm@^CVU,p>($"2d;Y-k<L:k*^5!a-,A+o".
%g$mPj8POA4,H[Q&K-Ot#:/s2`gN\33C78ZZD6E)%F(n4H=f&K-?U/Vk$d`Tje9/1&eb<JGJElF+nekb<g/nA,QD8&nQMJ2&Fi?ZR
%[EAo)V*A$uMUd"[Yq9EjfaO7QoFN"1];EQ;'?g5l85Chn,dX"Cf=e8`MJ[";s!$^2A>rO($-]EsIEoOD>OF,D\l;fW*aMjFV.oq$
%h#UQ6J`&tKXlt4oK\,J)&BZB@>J*;>kgZ?cQ#983bDJ/O;Nj$[Z`<L@8]3TV>FES*:27*N$8WeT`b1@n1N<V@D;:S?WX'D=i;>:g
%JeefZM6mcWkuR'!?"m:A68qMpGcO^4Tf=YIY'iUW/1*u\7g6dUEY(g0O9:FUJ;KY]"r0n,5Xe/h8_\i+5*1rB]+@G@XIBJmS/6o7
%+>[&b75oQkX(n?W-Pg\'Vjth+(Z#+]HphF9((Q1*i7B+3Kd0__C'Y1[;t:S"Lm.%jknVdD\WJ*[&R$*'UZ(jPf^4o`cU_lmS<91J
%h-NNY<*;,L7Um`8Si?r<I\#U=6=sR4QlmMQ(3'ZA@9I^Zr5Vg5bEe);=bWBHB;uR6^9IKiP:</LM,X:'H1>2rJH3?!S-[BT-iuSP
%68;FRS[h$%BJSV+&mu#SaXK14-qCFC)1'FA,0VZJfl)``$+&UR&4]:sb,nR(GaP8qTS3<Vi_OB:&b;[2\)kS$iH(5N=.31\EXT<$
%/:H"1V_&guWYVC;-u<?iWXt;l#mIo2j*)l@m&IA]knL)kIA'K1*Z9dg//3@]lKiP]9cfsC>P5PZ+@KP;=J3tQ:eoTU-sX1GaX_L2
%,J1jDk"Lh`!/_/SW[r9o9KrmgO[[nCIEc19Q]P,0m\L89/KcXBd%rA'lj8Am`G9;PQdYqT[X!i_iO(Ki6ZI9,lPE/^0,cU6gm,es
%Q=eM7Eg-Qfe=\$'L(?<I0h4$'('pD(;\f\bS82$DH\@];-,llpA8"fi3.5F]1Ds=tq^_oGHAZ]6]RiCPbG(l(U2qYa[iTQV8o'6P
%kWBGH!M&caX#i"<=*D&Z1kmaB?^!to_U-Y:f7RgFFsSgg4)pud&cet!EIhDa21&?e`"ElFQ;to(nki=)f`d:aoM\_A-#C(a:5lQE
%dkh8!f#9T@ZE=6H)A\_i%K8aaY*5^/$p+FE'(#q7mL*>daGAB$_`-l#l8BU!)'r_M"C[c>i4Q3a?54?_DRia"`(3/e!B=l8dBOtB
%ig01MUr3B^[Q:o8-!#:9N^5'@<]"`4[j*!?M^"N1N=:`Xq&5J2>@_Wl$WBeO[lR:pEahJMDOngH[D\5Y%/<2o\O)UEZS/3T%qSjp
%chP']$'#1L!^=2_@<sFrI<AKF11K(@D-0D$#Gi[NLTNRW\sEJljhnZAc][VSQ+U4(34ZP&o:.RtaN(YN8/df(hFX6_C<`sUganuh
%k:FVRQ<T3s[67;].R@*9&*2=d):TI>=K)q%Pa#(:F\ZF6?JO7+4`TUW!?J&[86?U,B1e5$B!ohGR:Gh5C"$g&ku&G83V]&CFZE58
%o;79)&(?Uo!9VJN-k"T&4Fer2j,>+#?_;diT$SD&"NrcM)B\Bl!]m,bi0VF-k8D]VoKTC_O+c$cnnMl"qJsCAgPJO*XsW[.5(1u'
%+KHmOeN$?*QLPQ;OCMM./Z[?md<r*um0%lgV#l;WRt?sB;GpfR+-[7fIP=EK<kL]3fW(XCZ?0%R'c)nh=?15e12Nd5D$VN$C)3iR
%`gJJ%n6s88+sAZ)P?#ZFB#t\r$a=VO?h3;i+O)A)cX,I=<`1iWaR1#P-mrG\?X'PdpML$7?<O[qU\95\_ZETqqG"D=lGenB0WVfT
%-&eaRJe6^F-WU`W@B3>XbQih\%(i*?ME/V_&($18c=V!gs&"mKCX8_T_rA5#hgdt\r"Y[Om`<<UhhJSKTLU@oLlu2c\[BJbjcDee
%X=Nh*'PHh^jaq;Non^7*)5beA?8#"`jsa]]V&fggA,sR5dK.]6@s7$mF55gL1:>rDB^A:^)<[6DGW1Lak4r?#lM`p'jT!?OAhl-i
%`jMUHrT:&&-31#!%bN7;QX*n=L\4_a?4jg7(3A\He.Fdh!k"POE<74\r4!lX$7DFGI3]BIRRNlC>S[?>I('E5mHM5;]i`;j-m(>]
%)K:GeBNYDF\4/$j^02e5_U/ggR(@te.WCdo$"7%u1TOHuKMd&YUI'>sbX&FWdtP'b<=IJs@Fq5?NnaKD>415)5i%/A:mON.&`3I%
%%:[4pW>70a?k+JU1kRf?$T0Y.ND!%u%'enUC0']Y55U,=J,.(<gJs['5CEETs6m;fiYVXii]mG:<#6nsD-Lc1ri[8U.lg\<BdoOt
%rGef_/TCM(-#u0%$gp<GCoi(%<_8-a'/0/r&o0d,$3EO,4])?G'%s[kC2iq^2#h(]:HH=4@PaL>R>.6D9c,Ca3&3_;.HMt\S:H:d
%:5Hm`<UGsE-ck.@?f%@s>HJM_66\Ju?!+e2TalpYX>,/DCM\(RWK?,b*7-Y"qY>TVjao@sWV#`(0>BJ2It.F;Rp2Z%ddO8l9?7IU
%i.0@cMR,]f!eFSb8CT,*B@XJ_PJZURE=)lUPCi0W4UHc"FpWK'<%)QWB_Lgm!\>_)Ul,Vl75TNbaHP1s2^GfeaL[@hK$B5,IUk2\
%I]mWS!$+HK+8bt8`KuJ8Id7mHA@"qo[Hem97q5N6[>M@KKH*UDoi"kCi%F%ld8hb7a@mL;2-kN6asXJG-h"&^'KJrB64HpnJ='_;
%=F,D$FE1#p.+`/BTR@"sOg*/V=`jBh"C!ogl_-mDMc,%_,\n>fSJ#ZHQO&LW@g5-Elk0H)OSdnl-.a'6>..YV'Miq;L*]LdH`V0H
%E<uG10%[L7TIqHc^t>V:2(E&:KRnb.=1Xp%A0NET8nq>D;%!Wm6O)_+M452]G*TnR(Pig6QW/B=fbTg/0='cEoHS'BKefWLJ?mh4
%\Y`I7[Uh-`^OMBfkEABR<;S-Ni@#2SQ)`0C3/+T`p4bD8.;AEpfSGn7MkFPQq/Ea=6i.].@G@r,Bd=.I2Ha5qk?9^`hJ?L)s4F&L
%bj7AsWU&554["c,k)ZR(jc4VT58%&$Ps&u?WU`kD<0C3=AjerYUqn"a3s/3rHQi^"ea[M-Ms'BS/78G:M]Y,-^V#\elpsRe@P/&5
%"Ws7s9W@Kc.VmCM2/BO6'e9QR-C$,R3SF6ue_%AIaK^nm<*Yg:+L8fr6KW[(aapA/S)hOJX+=7N,f_m1E=+JfO.X4'4<iF?gQt/i
%&tlj(8@l'HZiLeS.;35%JnnY8>*"=l?IF@ui*r3#1@u;-nJ7>!U@\d9C(cN.7![Jb1-hebTd@jcBp+a)%as7!KaUar(7,<c``MqG
%\kJ"\Bf/`7^O1;FU6:T5^&%Z_K[6#6SC81Ro49sG2=@`Bj>ng:OV"+1jW\aqe*"did;(V'5guVm^5qP9FOZ#5o,q8gO<$I`*"(oe
%$BAY9J>Yh1o#ehN@L'jt(,F[TW98(Xh+'"^[sF!6ja(PH52#Ss\.+905mf)O(A$rt`L<NqKr'nJWgo:l`(5SRZ3a(cZS&:5"ch)L
%ZPUf8Kf2re>j2mn4BA)Q$TUV*?q,6<G9"8%=+Hhh_a[Rl*(46)4TQIbU+c?3Q`s_RP*j`"fSpRaXC?_ZKIUfG%.LqD982rTG_-*H
%'BJ'\d'8+7)>H_9Sd[m"OJI-:Wj*Wq;NfNM=eR`,)^"#NG9NZ6-'1koLsS`FTAdC#ChbCj*u*nL1GF3+9jbPFnf;S6F$0c7(?.8P
%?rBG+3fi,k=LTDB(<J3YeJ:EPM_7:JVUU6&;$5nO(0GZ4Qa6aG2=AnEnfApJa9BY8,!`]oSUni<L#i#%#bZOWjR?KV'H@L;/A_C>
%?a^?YcLc5;@V?@m&E9L>Rdr@]M7rH,+@T?\g7n:kB!W4bpjUB,-M>b)W[nJi1^"IZ4>8#QS@tGQk@tth9jC1AR!!['2*Xt@[f#Rj
%5NXEE%>GYKKOm+u-9j&_Io73M3[g_l-QbbnrSQG*N]WTWS`=gU$lr>^/K*_RGEBL35HGNM^__!F$$,EjI6V-OTLiQsURWM_Z#?&!
%ge=;IOTKp!dj<oh$32\VM6tlk##e1^o:k@2G@od^9gAQCU`kpihgbkr3IiM''X1C>0M#Fki_rb?LXdm)`6eY!dWMOW%:";b]>=AI
%I&_f%8_YQ.P,k'>EA/*Vbu`eNP#K4[]r^4A&LK0l`(LBS7T9K@XiTsR<6]nR77CRe`8,q3kA%)aoB>dEmM4J!G``hGFjZ,/'"ckH
%97C?T`Mq4oP5=Fg00'"G%?m.2eb=8/KO\p91#[YGM6Brh\RX)>0i`oufa;G%^AufY`Z1ai]u&q=RBr-:CL<TF"gZahAoHcqp%>[s
%qp&`.)X<O&Q8?Iu$`LN@jR4I.FN\ICa#8@nT7RFJk!-*4OH3\)VH`9IPQd1f*S%4KNsZtg@8@;:c\,QE.](kU+r>U2#-KeM.P>UF
%'OV,0:ZB]g/f=I/BY=rdc!cbc`2gE1PfDi"mZg6J[G7CGNtR@P>@3,T6=]SLs$N#,8<d&H*CZuMpk6B4Q]_>2j#3%YS&OI$l5/c1
%X)-qS-X@1dW2?sAT'EZV-*l=:HAJJmM*QT>kkh1I&-OW:B:a$D;=(f4oaoG:2lb[0$0aPT;^(ot2l+-PmloSRSqa*F#TGu%8QS:/
%IL,gqkCuq:PN/47LNj4j/GT7;]eA?*i],eD^B!/"S\thp%<V@:o^pdU*0@u`OUV>=j`2,N!<l&qX<\ebTDkBBT'Dn1,[']'itoaj
%g7ITA]"=!#2Gkt?CnqJ)`iog7Z7XL7WH9:bX9n,@F_=Nd(?D*L=Gi(f,Zf^IY;EGEBciGUCl.m5EYcpC;QDa=CF3Vc2N]L:eJ)gD
%=%oVshaAM?Z1YJ\>Vdg%GS@W";DuQBnq`.ia%bW`8_N?ta>K/*>W.^79MB8>,1fLdVmaB8jO&-S(8'@#^UdTO)H_!`[)P[oPJct6
%g->k+j]-*WB1kn#Y-cp)(&(lKX='&Y?0/b*%+`!*X%I/Q2<%q1hKj3Jko/D^BsgLt8h6lGF0>`DHLe#_<Sj[]XPQgNjm8tW=3&p=
%o!m*_hHFX$XQrKZ'6_=-*7F/pUInU5Di5pm?i9a\17[3/a%Wc,:j=M&K,s/RmU^u9hB%g$G+LgJ;7cmR[?b&PH$8.J$6_:+@tCA)
%8B]YLX<qkHae$/A+Z>;"H>6m)[kGJ8O0;s>ksgVlKO[8.W.Qgm4CJL#$^7CCQQ+"RZFuiR&P@1-P:-F9J/)i-jR"\t>E+0<&F&*Q
%ZpWgOYu?%PMHgTOmIsp268jskanC&;73nRSh9SEjRpNV+ViJc-Q#l2&OI+.hT=I6EbGaM;H.:0WA-7+VTB1i*5E/qBW78AL3pu/<
%B2k;@CSD`LK/'dr;K&]1jO&c:F2jnSR#G'BWH,?m$@2SfhF&EGCpbQ==](CK8upLWJQu"6.dq:/F[Z;+'Nq.WdH-6"am-?GAEbQ-
%E0H/SEm^3h;CkR6bL@9PPtL&1FpX$nj0s<kMoQH6VsY2C(!DmHh$sO]5(_9l+O>_1_[dZjjiCCOIfI7"CY8NW=1IG9o5aUhlS-5s
%OWoB&5Tt1#Jgd'&X,u>%>?-P>YRHY7T?JMM4iJdnXWC63Um-&$T&<G=PSPndkJREH$n+):_E&"+5i<T-K+qcpFp9O,U`+7X&3m`/
%P[RJZX32TsY"(Vj@fQ^(f1GaM/qG[(VoERo_c(d%ib$R>A7Y'1mTdAJ0nVklgkh?58]h40nT&d`;^fq)]IFlj2C,@=pk'*pU8su)
%"2$u_dut6iWL?W7_P6-+G"E,Zk,XjTctuGMHIk%>fuRKgC:TJ*0=p%U8/t>U6ao[`J1Wp9d_`^m$AhE^(aA%#p]NU;!s2Fp",HsV
%9@,6rL]I"#Ph8jmPU+>7M3uYAYgF,YJlfG5XPduEUH#A2cPhp=6f?l/gB;cbP$<c&SL384ZCOH4L=SX?0#mQ(dc?>%aJ-UpN;]H:
%;%M^fk=,@VYo!@=?\'kn?*XoC)18cH4Bt+'1oqA_"c<QN4KloYL5VG)9nNLtD-O:cA$%eS%9,'\XcRm6JHVjO+>iGd^S;u+"s9\I
%"JA,fhX^i1+FVbGP_am_JpgQf%Ri8D1V+(Cp_n:GCIp14a<AtHB-ju#(C^T%$c!\^+uiOK3b.Fkd!Z1"Z=a_Y_O&A]ks@qSL./+l
%JAb2/h<ucn:N-kh8di@!lk_*o)F^"qMD58W2N<#YK/QDcCG@R+mn+.YI;6SV,ChMZ<f-)_7mqpgj!@@,jW2%jWu78;JJ$GbYRs>?
%OZ8G#W*ota*orX0he0,p1JCi6^YuCse#mbHQJ(pb=4(%`%kr9tWQ!O*b`kkBcYUR1W!2K\BHe?JFu0OUBW'UPr>Vtt;Xta-C+G*,
%Jq?Thi;Ik=T]MRkLlt&Cnml&<JOp+ZSaHn[@(83:+W=G:)AjX:"=dSP1WJ=:\Cq]f6jZ):\m(oJM=GYme'4<1f=qDYZFS\Aa@Nmj
%OK-*hjb&f,L<nMW1!:2Ooc>O"&opc@gW@^ZR1g^VPkZlS/a.%ilQ`#)W57U-\P3Db@/'k%*P>N9&ZVP-C_$@e,4NB/$@M&;]%Da5
%-8?^KOBGpDH<VSV.,NAu=>7%4qQ4tD_J?L%.]B!AKZG>YW')0sUNiu?[dX0=[>AG$q(ADBO8poGe(ql%0kiq.JWhus..F`u9uDE+
%/]<1_\FsXtq)rR^c;'jp>K%psZ4$Lg"I`@<KYsa4Y?"!r8G=9.>(K@6gbL%,F;j,UpjkA+$&!2XMikB51daF[Rl^URd$+d.oF_Sg
%%1]+/QO8IM(R,.kD\b8H8&.M1k:_DQMB0mQA4bS[F/V#08L4OBNatPg!B<%Cdq&Ynkrto0BC-CG\8Wj/LoD[l7YPO''8fmk\V&G[
%e$oQe8*0WfQ?R8/Z[I\-G6R%YWc'2M,hHJ:_5)T;635nV=p4hW!a6L.;5It$*Z#C\l+,16PEnf,j`npgrPRndaA6^c)4;ORP%DFl
%F&:D8ZM.K8Yqm;CT[>&kjB.G`^-G=n4?T"pTZ:Jb!3@5,1^Aql)HI@Mj;[m5ENkII>-\fg^+9u2&q\)T:qTP]R0LeLQ.1Hm]gt8e
%T#eBX^4>M*-;,mW"RrqbH\>f<liKh"1AB"[337L'T&Oi2eiu,Tjlj?u_gNuA7EZuKHq7qLGuaK839:i8e9)N64OAga+,C592#Da^
%):1daT/=WJLd@aI=QX;X>>7fRS2hdo9/ougHAIm(5TSTE"G<lGi_!A;Kq)t(,mkn!/VI0"bQP[<q5(CM0UF8lFQTKMV$.j:lW;6+
%Xq+2(Weo7Ce78]I36!,YaMM48""70>W3^VT3&d=aX:-?]M2CNQ8&WnY7'lqZVk^Q8R>m,eHJFI8/u:<-6KTSo=N&-8A:;Pic:,Ka
%eb`0T+a#eE\n!,X$,K$][O]9S<b#fBplj.91sg7fPmW.gi\ebE0L0%*W3#bCoC3b>Lp"(N'OC(FlUVk;4PRiC;D^E9Tgh[U07ca6
%8oF$tYKCl&45QPZ1j_'=aZr[DC`q2-!@*MYI>%=/4NRmN`:oXON#jgde]%[Lfn>1od/o/r)3lKg:Tr#0$4eBP13.e_;Cpl/oM]]L
%bG_[&gSo==//Kn>Cj<m[]*;[ZM&F/5U:LGIRMBnoX_4>/P\QXAO6'Z&_m#Xf+r1gZQW;_?DGqd_+Bf.h,oX=6[ZlIrn'GV:fUJ[K
%U5;:!4^++&h)2>cA$E:U.CnC46:qk,>*UXd.u0;F8X't26M)EHW.[Kg12D%#/'q>6d=mki!*f*BP1VG.l/L+udJT#?ZF>$WhZ7W4
%GmjPGTW8:,Z]4&VTaSPTm7Q&?2`2g[(DAl8<EtR8K?iL6X,6raVd`9^H7RNY`FrI*WIY7rV[@E#!&Zb=30#5n0S4VsmRtp@PFKi5
%>0u<Z61cca&0OOkG0lB^mh&n=d=PCVZD4_)o;2k.<f%8pq8[#3]]h5Vf^!m%2Ja>L?LcVG-Mn#Aj:9Skd5_qb*;?g6jL6;404\H6
%dAV"Z5o-rT3[M$X7Pm8HKA3Pom1c/#P1R?K=A@(@d@4OVL:AecR`!Sen,T#6>(VLO,n+Qo;?@Ju?O?BX`"&BrA$YmcbPj4F.C"Qc
%*mim1@2La>6/LV$hcp&L6pi"@)-mje@RO.YL=e)CV0Hs8&9WCC',dbg$jsN[a<kE.,aXg-fXF%Fb%TO0l<o=IT#*Ts!R"Za?$TmR
%3&2)P0\"RRPZ>*L1"Sb!45Q@+B`lC\$`J8`5eRLs>>*)dWJ]fc!*o@o)'2PU__n2JT?r-oXr0e(OqFM/7+I7XhGcqWh!MSd=*;6j
%Bp+>:nIfiP?(iuR'V9c-*(sSOgu<D,.oG?G?*+qg.!%\/)OFI>%`a%"BU,<HZ`XOG$BYuC/QGqB?*:^2Hqj'r><itcnjY-@na7n*
%)A1.0N6"g/:`@%hNu$>.,;puOiYTpJ(^V[kN3G!u'p=-%M#`"VphM$S2mlPlgsiVZKgs"DI!%i;!(_9jMouoSR"Z)cCW7$7_$<)+
%!$t+QLmJDF[R[]fYFptu8U*LX""6k8rlDFE-E(2;RQTUjo]*6Q_,=iA2SB/(eaeg``\_!l>ZRG0]FZs29nih;Q`QB@M\=D=5nIBQ
%X8YgmR;2.?U8G@"K0fc9?tM)=]VUL',t,CLfKBRI&F_q32l-Ze?7l#8(lK%S8dhq-[]6W9dsCP2;FO8RCCusl-3J++`3b\)9ChH(
%T.e`Fdp45FPDP!pGCJ+4frJBHr&hS<.%,m:O?fPO/1nI<cPCI?&\/'Ib_6JLG2lad(mGdQ&M8f-[8>#3IT9X>`o-DX9NTn>8O[ru
%eAf_R\HAY,3+joS/O9k4-:YmV-4h=KXAu1:<Tuq9(eWqHBJI\?19?8aU5Kn_\-7LcOj-3aoL%]BFmVe(`Es`T4(1Sb&U*eCl*cF"
%85XN_i>(Y;1=s_ecqF%ETQ?&b.X5R]X.!.M5YVI\B-p&KX)B0!9qmt>Y7kC_m7^PsBjWIqPWK,sKnac?JTUsemHYN?%TV1gY<dgo
%e><siRo1,V6>j(f>==39<.Mp38<ZM2Df\0RJ7YO]o1V!k,`mFD7)T&+W(rGrFCm9:"<-mRF/YOO-%Z/-7P0sL4e@\).)hQ%R+Xl\
%;QO1n:8$us)6,j@ebKgX,H!r2j77;nasnfj4@iOe]m15iA.M4Ffgn[&iZ$)'WB_<uV!^V'auspXf=)h6S#eF32+da;P^"UqL^X_`
%<Am\_Xfbe_iRPltfauYDj=)*h/J;eLb:[eGPi;>qk&mmpf$nP)`1u*lQ5c8sPEI(i]32tUla$/7:3h\39h\B@NQKl,;D)4:@V4,A
%*_N\WCTFb;?cI5"$nd%@Zo0/&3aGoN?%U=,CSsfRVb:g'9;kXQekVQ.:7'O,N2E*t26i=H2;.&0CSsg(,^*t$92eLXekVQ/=e%*=
%3AF]!?(1V3Bh^3ZAWrZ;("]7ZbGbDNVou"a:5l2S26e'NRV\lpZI:,LW-gR16@HEj4'b05?':a2TpusSU]VfEJCA(/(+2R"Vb9ac
%:7%DcVb=>E-'Zk)g$'.7dj<]3'$BI%m)TIoFK(,YF@k#NA#Du*e&@Xe,MD>@ldI05kqXaSm"i."-/%PBldM]3,%"*3ekR#g:5mb!
%(LNdeD7.opZK90kCaU!%Fh/9-.&T^RVb8G995CFuW)"4^qr]u\kQ+GF:elsQPZ4PRCZdr_2VO!"b3;e;X4*mlgZ_UW/J;eLb:[eG
%Pi3,Fku*`4*,&&QLN6k2-JLn9\g0?BWj9`AN/DCFXA5+ND!+(.eP;(7"kDj8\$dbjqINo5`o,:C$Y9PQAjdk6i<,0';o=Lm0P;1[
%<u%X4j+s'XLu)AA47ss79pe:N7E'AoT&_,*K1(,4W[>4<\f,hm=e9P0Q`!dpiO#BeAB/6r,a!"sk)\/_!A#K2c@d,Y_Fd\EdNA'3
%g9jfVI6\%;SE,t$,'m6&b5g$kNY,/u`:Fc(Q>5[eB#%Y=Qu"Pd+1Y_Lh4(ZEM&p7GZQX>nG&sXaapNN;XcjS6]95n"-F\["TNiEq
%U0'a7^2d(\*6'QL"#+C>s+MH^k2`s;/H2h1RFO_e/o%**B(r&lN4r>0@1lMfLR#/^bc8W;-Y.N86&X<\"GYT7nqOGI1n:(a+=^G<
%-)?JkWC[g:qk-_m?tDD'GN$\rH=[k$01epTTTI_&5W2Nfhl%3.VlF*$=*\^G)+d<B.tY7>i#WFa"NrVCqO33U[)(NI8m09pbKD$K
%\3aa$F"f$'S0M2[>aH_cOu3(0#>@#7RKN:lKa]5A:30uQ'M&at'l(sK=A't5BN6s%."s1SKubjM`Frf*,S.&P6;QF9"\&Us"Q`To
%l[B`'PqffH!CK+UOq6C58.J]+02A-WU45t9Y=C@0T_D/:YAAcZ.3:GNKb@[HmNQFp9ah"%)j=d29_/jZXO[aj`>V:]"VAMCQSbI[
%=aC)C]Hl*ub2JP*/5$d=1NU$'<cP4]>S/kMC-b3)Lq8kWM@EV\X!UkW:m:8`VR.4#7A*"\s7*8#`LmSO6;X.bL`#*ZkTK8LfVOI]
%(A&2^6n92k>F)`YjD%C_[9Io"_\h5fHBi,/e+OUq$5C>pP0,=d&'I&=^cP1ba(>>EWih1hMm5!9C:6g51c&FSaT*UT7_rr$#R1Q^
%*gI0pi#'m=1*V$H9c,a)]T2bt5VPoB^'!%nQb-W8A4jd4Q:+D>A_SQ+"aXl2ZsEaPn9lItqiusX2#)sNaYfJ4Ks>9qR3eVaR)s.p
%Rf0r-0bP@56o7.aTe;TFi,fa@\=h?i<!6Z)7QNlr>/X>O@$`iJas\c`k.qC-e%tNA[91uE29Sp5ifT("5DZK]Q&V=-E5].2)YWik
%>_R_7=1Pd6H.2m?@e?J(UU#$WN9eV'>lH^V/@&EB%^:!5!&ChD6:Fp!j84^L\n,T-,IITI@lG\e.D3cl32*EaV<3^HWZE#i3TCR'
%Z]I9AK.!gM<3CCcBr\*]-:4M"@d[)rMJl&.J:g@G#d9psTG4i!!<PtbA`4juiei`)e:K<J$WU>dTGmL(-<=VQPLTi(M6=`=6Dd2j
%HK3u0Z#g!cTJP2D,3nj).r"4A^7gN7/SOf"*gJ$"`^[L288:jlFjskpL,#3cp/+0piFPL7nd*D#S(j5<JZPVG15cT0Q!_X,TOX](
%-![F2)=1RSlbrZO#st!jiOtLK4sHTg5.<%RUJ=-*cZ):r%Ed4a+P5q8)!F[:g@KtQFCmAQ"XIPcU7I90-D;n^[hcnZ<VMD<A0k0b
%iIHlo1VB&*bYqe)BK%<:?/T)u]:cYDP>gOMdbL$XPZM@?Ot)G,S^&-\2(BP3Wrii3iJ:Ukr@2h8#cqO=,:U#Gd4TF[PS)O:_1NK.
%4W]`<>ul#bf;sp;[".Z/'dC_@j0EOgRjG3pYmOkijK9m^$J3Q9P>j,1U>6M>p9'Z4rMmB1N5:bh)81]b3SOa:E]kgJ=&]_S<-3j_
%<4%B&%rNpiM=bDcHIVH?;"=mG&t;u:%E!Qe?:cG77-*=e].!fJR:lhaF6ulY@G%'J$l&`0M&g%cg"4=KK0#*Sb"<T/-*D)e;h#Tg
%==M?W5N?)#`+fEi1463[(f?^?8CL/]lbkX*hC[-la-@(dg402ViY8sUQS'T<nY4F4<S:EhQ9"LNJ`_[M8`(5A5p=.(RCG.!E4t<l
%^elMDkf(*X:.Y%Fp+eHa@\!^l>?7C/d?cZ':kQ?FdCACo_Um,=<hC#=I_#t9M7Ojkau29e?=6]S\YpIQQ`O62X2l*r%DCrc/9@]c
%k4bCU,.gHCcCrB9$)=f.3Z*3u.pf*46qSUI6BF-(;IUsA&J4$h1S,^;>>,KP:rKjs6*`q@pr`6]2/9d0.dL$[n`IJ$bJ]Q6]cpB/
%I"rJfCF,WCK'ZA_$O5?YeE=XTfs3t(C/*b1p``@_Fj!k5##/dBQ*N-B]Yq3)EXQ\(.QJX&Wob5<H$e=u:jI.aXf]a3IT9WS`^$i4
%(]5qsP2![4,&VskZU>"<:O2">EZ2!E@TXq[n6UYi]5Ra_[#h3F9>FL9i.Rqe;t=U(OSKMC;$/d.?NU45"#rZ)IZ3D/gm!W7RTQk2
%N6'(m6'VV@pN;[!R0dV45*6Gm3@]pe:@f!(U'>R;^''rY5Qa!HZE4:L<a8i:i#K.t[/eKL=Ti;:rMk_)(t<)O!7'-s3((f3crpE^
%j\6j73DEG7Q%9l7%Y0rCMMN#jJ9+[*Z'sfL0IF4SJ?pTgF.'Rn%!*p#3*QjM*-i4=)!'D5;2Mth]n,?F'4%]ZY_W*UNn+1:i2f$D
%GSVkt5Eu5o<Wb=Jb%dZ=i_@2rVFq+cAc\E5*LSheXZ=X\;*4u+agMKG2fAamSC#-TX=>_tRDkY'9^>=OB-Ea'!H4e=^g$(u^r/D\
%GeF6!7Le:W]EsrU#B3]b!b5Zu9)rV3:s5kT@mQOF9e[p&-%N<KG6m-.\J?&?Q=cHhi%2cOGnZ.Y&YYN<66bg*cgo$8A;JcR7]9lu
%[^DdPMJGp[-%N<KB4jlJE:"7%=gt%W!M":JX0SR/`cYi$0)KVI"<Rs,3#9;$jP\di+tGCaN>B&=85;2sIgb2!`$$2[MG9#7JGJ[g
%cAm`]ig?Tp"L0L,"I'2aKa,V4%8q"m#R80Ueut;Q5W4aAMH/4M6Se$o<N>\SQ[#oODd1SUP,?3pPm.YT4eW*\fesQB#YY-uib/U4
%ZA*>hDU4&#kO%2d%AH;'E^iN/2$Y#Y!cW#QTOFQ==SNNGabR>trDD7"_1CYl,@XU"1"Ts\*YT!u`=QQJ[)&XR.UF+q25f,98dYnB
%hDBn,9Ji<cR%,YRB^R*9rkeJT/<7nR"+Wb6.bbg<Tdq;\F?,%&Z\<ALX2s,(,o@62MA*0j`?8hr_4%!)<-#K$U[ILH$F-XqpCqX>
%SHPlgLCd4`a;g[$KTjUA<_\-nDtTU5h@KgJ&90"LP;?48[TP(!o^OP?f\3?oBG^Y&\W'-D"K!EcZm<UCENk\Tp*GB59Lc<(BBef.
%%;,sEcGZK3E:Uk:0eS`f_\)Yi`jI-o0HE#Rj"8;VJ\YDITO%euXefRm<5ill!%rc$,R#`/M<\:bdRcd5$<`3k`l/K\c4X,gLI/k8
%,R&P(HrhM*Y@QLSdB=*5hJ#Z$.347cc+*8?KN:Nq*Y)2)eV"p"UQSo$0fQ@-Rfm>dX!_nCp?/Sa/k[YA>Vg!GWBP6*I0$7K98_/1
%e>&I7otDaX,Sk9ga5@+gs+h9^Xpk'1V4YdD?B@hb&U-Hd"]7fORa4COYN`^?AV&[V@$Re2c69ahLg4?sV4;Pt(fEnEn`@*$b6@t(
%O5M^Bj:e76>V<tR<`Wh*p_,.PQ9_YS_a5M4Gm4`?bHU@ZOgDkZPd8Tfl'2U-8n11Fo\IY&E]('.SgLVuZ4;fCj6U5!ehFrK7V+sA
%e3LQSU6hqj?r4p.pVrl8K3ja,dk37l(F7SZKb>cbPV,Ls-SrQPKG7jX4^#,1TCdB4H?c(&<YopR[)gcPfs#Z.c]MI9P$s\:;c4>Y
%aMu>S'ln*3]\C_tAp,#BY!ZumL`,FJ;FuIEB`+6/9rjq%C3$Kqjc!dD@P="%'#%U0FB#^@W8bA;qoacEP`)%JQc9,hHe25-+_hd.
%??Pas8!L]RPTj?,4osD2m/X]2@)H_>,*l@%&K*=T;<+U#.!d+M8KSD9Hs\BGX=S'=E"8p9&(/O@.YJ/SY)+YtRq.)4KkF8^N9W&]
%elCCtr5`Ye<W?hiC`>c9cF+r9Po\jGlo\hLpsfA=/UB:Z&Q'PoPpd*7&.o>$Q)1%0B296P;i%Sj9+V-F"]L5e)GgND6F^6=Ri`DE
%.UD8_jY'^e8+.V5i?UH2\geVpO=b:DXdnq?+A%dL!`N<%C^PG!6JY7:4?ad=1bY3P4OiUU\%IS*WX;+6iq*61.trt)!2*^D[K0^b
%UU%uDX:&pi,@[Ime6l+oS5*:FX]MY35tRjt_*O@EqG0Nn!mX`taN;8D2CT&M*k_hB>VIo^`*K]IeuNi?!Tni)/9!H]R1kFP#N.WU
%:J7GK&g9,D^qF!K%T_]m+La1?%2NX?YWdJF4`b0n2bbB\9=><R"idhZIC\3oaT+&tR!M&s*S9a1f\3@)<S=se`cYhm0(1h4e^[N/
%0#;g`:5nBe1<cm4_j(P/["WMG@5Z#moYleSC>pBsRgK_5&K+d)4>Deb]%.;)&V9$*!#a;qAOJ=[]=qW%4)FTr9oF:P[J&&#4N1OI
%TF$G4X3/;kEl9hh5-ATc%d65Z[dVTIlW6f^`h4ZJ5@826\\:$,O;uR>:="oBJPpbmA0q'bXrN$*d01jh$cr&kG=uN3`J>a6'DU-H
%;7GK\6FEa9o%pZSGhAcqFl?tBBZhY,n2-%s\GIY#1I<rUVD5;0)GnM6Q*6ro+X02!Th12nXXo8i":6.NSQV5;#$>\Zr=f?JkWhZT
%;O3Gu$Q,gjn3AR(Cddut8AIOWCCe%IO9WVFed0$@Jf>:hM92a=k%@Fn$0j*8QiQo'4/C+3`Qhu2Ko]iYd[["@EMCD2KG"/Tg!Bo7
%41$NF>[/BYg#-IXVBZtd,gS+%6P-<1%Qgm:XH:^,S:"bL^c>DNc>J9@Ru(6>0PcZj[QWOs/$=TYQ]R_(/jS/+='l$Q8dg"MX^8ED
%.U2aLEEsFa)TU1TVf_&pc2H`">E^_T\G#(PqqcaLpMflsl[u,,IJs&6g%2mEV-Lcbph]pF*EL)X^\m5_Sm-+'5b/TiP.J3GmtX.*
%@j$1UM3C^^J,ZL<m*`q8o]28G%nST'hEl$EVSI>fg869-EYu2jU*p;N6dK$antIL6_\?lAEYAN,h,mLb($IoiWg]`CP1RI24lr4B
%?9KhHR1Q"/MmcS"$F"\f(5Qu9Zqc.aI;RKmMFADMWj7M\%GP&N[cYe2\WcYtp\24/J**gtJlh3C%<imOAqYsEK\F3M$mMlVp..l+
%W@T@.i-RS+e\F"n'pJOqP[<4b5@Jt3%/`@#I0$8[/.,2@bm&k,,/I/V:gZhSU59OmP[iCenm^hQ7&-:F(@U-rU2;59I1Nuu7NRQl
%d7'_!oqGdb6(I6$HOgR^<sKfmq<`LMY=9E8aYlNC5(,aE_bQ>pJi\MtZ%QVK]26[0"%n!,J@NpD,u/rU71mR.dH"/"1oa-]O.&_`
%aP5=dP=q>KKhS;8J?2/W=:f(/B4.EnL#apoA4Y]IP]DEZ+gh=p#:6AS)J5bigbag!B,tXTjHJ8\m3tOumO=Q<LeMQ4m?uaHBGtBA
%mQ)^U%B5-51oS<P-`)a6n]2BFB3V*kL.P8Tl)r^opP#'1a7k`)M24='8'm&?>+CR`"fXPEm#=NlXr0V1g\2DN-VHg`(t^D5NOg\=
%c^:a`M%dI$M3QTu'9;bA9"$&ip@@u"L^9$DLp;[km=s01a#1s8+GWG`&CpTJr7,)N],B"IX$UDg'*:Wt-8SmXGj?DU_a"R#K2B%D
%W2'^kajr%G.!^:oB2+Ta*M%i;Zg"fmF792XO/K@YP\)+ZY).(@*:d6qK-h:B+&#PDdYTUe(==+54K5c9olc![JG)q&B\MG?BZqUb
%><u:0aJ:HTKgD%"GL#*Gq/Uf-=U-dOEmajsj>O812b3S!p"!&h#KQO[a]p-*M$^7Fi@=K).4oLA)'DWpM1it/L88e8e.'p2aPP"+
%i0hjUN?Aii>Y\3k32qO/>TD=JbLtW.@SNYO5![q3a@Wob-SnAuN;%+-[iEDJhVZ$2_o[sj7=<=<[Yf@p)a7[TiRVe6a?[bc=cC>%
%.S/>?'1;8nO:HlHAXOJV!SCF?EPnLoOq5(UM0j]`%c<`oP<DG\Md0_L5p<^(7X5l=16f&4=Begja$Ip-\[XYEc^oNhb)=l-(QU6U
%B(t]GdLbZ%F32-<L9_Q"^*hT2_Qd*)dM"-]aE](dJ!%cc"2bsilWBk/:gdlC]81(DMQXI=O=$Ai7?IR!MXs`pYh*;N;=-M?.!uGE
%G!EC*,dpu9>s3L*m`\?7&m`Ao"%bE#A45Uc74N:9M*Yr.MaGT"W?E[%ZR@Za;:8aNXcVnQ$oZYS&m-Zfj!KS:!?$,B&rXkKlsM&0
%JT$`H,FB-Z;N,F+DF1mXEF&m\A2\Pqd':b,2)u4>4B]Z5c9"2u%:p6\cZMPZU0`.jmtpd:Yi&M*L5mjNJNsECgSV+9`>^QRrL@cC
%nPq3'TWjY*]r^%_8b:;ZiLSI+\VVqS?&\L"7(pbM0dr/c4B`k)Qc"b40J^*ppNdk+QJEfIIW#"rE]QacC>e-qa3IA+S_Pb760WgB
%1/6<:I&aSGje!kg)lb*qc+s&gQ_b+<XccTucVD&J,X0jJA(`J^&mZIjqaM;m6uJR>Q<ecl6/V581/K#=I'7;=d+l!:optmOkiX-(
%L1]To_pVEm<;F7pH'8Q='-K9.%%TrcXW/%n0_G&jLVPX,=0GT[M\d4o4'fW!Wps7NB+F\\@d;TmJQe;s%M_*b*MGo8<ZfiERrkEk
%!bEK`Qq/JQXp:*BM4D]0MkQTZVe8G28>83\,!1D!>"/:`@=(QG$'R6nE4?Dhf0k)Jcsg)PcXS5#A[sH$"3M*(dn0VQ=c5a&YJ^o0
%6S=c%:^N\c/Bdd`NalM:)b\cT5id;@Z<Qu3&<KMH2^YQn7#/eq_"Cl\LZ9am#uDCHPHtn6(,M$u.jKNSj(TX;*N)<>D=G7F^#\&_
%%MHEC%'T^n=k9dl2b;U3&Mh9ih>]/3b-d?4li[Du7k8*$)4;=e;A*%h`\>g)eRfr0kD_*gltp:=9=g43_'Z(cSPNG?Ai>R>W%]pg
%PX&@k]J<=B2DFNm[&Pj!2&]UP)Ucb1nkY>70R7or2-O&NVeDL!o+eGA^9.V0OK[f4e*8Vi%DTOaPDEjQedI=6WJW6ETr^u/[lY@Z
%^;D^@`"OOYlP;X,3-?NaBtQu^*K,:eaMT#=gQV$h/0/$Z)^QiaaFc`-mP+f(\6d9JlqAV!j&h@nW4L;i+4@JcP_?V``J]A??@%e\
%8ZT/0[Gs8lCjN:j#U1aTY8Y+5>J5n,=L"e_a;H?kk&q5[i,__A/6uJ&`R"YH8ff"`p2PhiiVnL_K,(1e<g0*F$'?N_U6CZY*#pGg
%aYueX-bZuWmW1iR#Jm#o1&c>/)$e:@6nr6uF513kM86,:4DL9M&pV2;\mdAO!!su28OOZbDcH<t5!Ye*Ja?9+S1#aRdKUi12*F-,
%;nHT\7r9nm1DG#'bNBIBRh!Jl;i9^",Z5k")8"fM:*V`F$m`I1Gtn.S0*K@*#6@?(7g^0TpRDn$Fb[K:keSPF2C7O1+K(-rg;W%<
%dbE0gc;)5A*O"[Acpq)JL*3T*?7rHKZl9>=kq!bN(9_O<]"A1.7$4@M[;=9]nKa!r$fKDKj_jldgSG]L]%Uqm`pc.'5k02YYKY-S
%QUN^uR%C\GIi5S`h[ZV9m7_\VO,*K]AF/D\E0`Ra"Ul9R&R!%r3[+>@+X*]fP?A%<Bqr.8>$'j#Lc[a_CAWNh*ts"8ZR"f-G\OC<
%fdnXC4ol1eP'lX11Ll5PB<[GMf_ueE^"N&I8[at'Wfkl@0k(F0>G?]3WeP6_KVo_;ou6F?>[+]`\XGg%c)Ik2A&?jSkEn\=ScN^T
%obh3hf]I@c%-V0d!MX&+qAG&!@%ZcdQf,^;j(Zp!BgE9eXI=<nG:gFm>53rcK*qcB?#K-N=Is,V4#5"]YAXpBknPI/D3@:$,lm*A
%0!B5>7o>"GefO:16&M,@[u]gY8<MdBkhNrl`OXfGd$RN`$u="0-1a3*H^6I>fQG?q:F8B"*I:B<TX2F6I5#F:MM)k&gaQ+gd]K>:
%LrOsR4d`<I847!)/10*06[nStM<-52cBB5f:PfPWN3XJ=E*@uhGL2A+N,Q%/R_^*PX:=>%kb3iAru!8dJ`R$N,Pe7:A5S0V82Zt&
%B[L?[K]0kCVqE]_7!(S)THKn6?R<5Aj+YVO*[[U0@u.2W&K.l8a5AUR'@h_$LsguVjd>%#`^$j\RqOuG:GSjJ"l^lFJi'PT,DQiL
%UEWA@54"\ORuk-ofT0A9g6c`.goNLeQVl*ea]d-!MArTU92q2AaAg1[##3Qt6"lBYc=P#&i?YYeo0U5@P)G$&qi*llSj?&)#MhXU
%RE8]BnEsLXWtqjG^_j.HL5Q0`HCYIR?hEWc=B0Shne#LdE/b(]>OEH2XEPt7=\F8cXmV7]"ishb:69n)#9sIM6`o20'hH[kbRd+D
%B#&J<Kh)iI[i1R'2:5UWk9Dcr9r1BA/HBX0_4q2#+3)_3c;uQb"=5B1n]_r2]tcA0L:tgREo=l\Uo>P[hlNb*>u>>LU(@ls0OM^H
%NA9ZL<Kl__h4Rk>-pruST<gCCGk=1uqDDkXqZ4*F0%,uj=1;Kp]p`PHR<sKIE/#m0'jHH[7@-'F9so;C&6lkO&<V('lsE&[6AMYb
%A]ODZ'F"Ru7(Fb8'"\_i*)RhK6-dP;Na4!;$=+LQ*="_m$>9#u&LDb$n<nslk&bfokV!hJPuTe3<a@(-i)M+._tAPdD2X'`]20>T
%#[)egUWk6W^+E(rX^6W`7c3Ybgmc7*KtSbV,tQ('3%'>e0]`d=[I]a"G=cAI!ON%r#-p%ZH?a[sMbIs#\N5!C\kjum_<_BR'QL/^
%C")B2XCYZ%Y'ck:FoWI.ok(I:6W[).,V0f`o`^sd<qS)/2<!Rl<jsViqE#6W?d?RmnD6Q8a,o)o6WV?Q\16QQpaM'jn=a"&:=C@W
%PR7D30F1)rS&I@eb:"eKXm/;9BFV2R!Vg-(X3\3dA.fQ((6fXtCHs8`nP%4o*C63\2>%Xq71U\[ZRqB6prBof/5g8QTYsZ=-KnH\
%hTXAnJ-PWL^,W(.K*@3[5S?DUDtI@GpIN:A$'8$(J=QJ11<:JL]uUHL-@dB'Wdoq(Xa$*aF9RSWTu/N9\ZFb`a1aMRaB_?PTBc%m
%9R'aPOm0k9W+V*gEkrlp";,Q#j?1OX1]3SueODs<&OR,.3KD2Gg<_.i(*0kL(SdHf<7!G8ZNpX7JG'?,JSgJtg..6lP2I=<e;FY&
%A<o!5jCSp-6Bag+)*-<YK\9A7o+"\Q:j!*:\`@3*"q'!U31ifab@tfC:A$Zf_aj.7Hq%X/HrU!Y!;IUaUBP6dGH`mMM\90%koLDd
%GcGstZ6eZT&*4dH97%H3nQ6e1H3mC-kGnXV712k,"fqd+==00\%I,#!@1aVf$[cmWE0OaB:?/CI4*ro/Fp%(f=IGFF)E>_5[=sI-
%m:Kaf<S>h?4;2XCl)]H.-8OV=0@\?3\mn*fYSC!A=KT+/VQ=tPFr6A)$'u?+JTk+;3>+_'.62+>hkZ'G9Ot]97+'D.-PJ!=>/>i%
%1@Cuq1E`Y9MJkUfEL.RiQ3/ujk[D+_BZUtYHmY0pFbWU"oVOgno1'Y5.a9S0S[KZ`o:"3aJ3cd:B#Zc=f+J8sb[oj2V"fQk^s_Km
%'GJBV2&@A3VKdb?,d5(DFd,IY%baM:K[G\C=7V_^Ed\9#O%C<UUh&%`%E,]AgSD?1LaZsn'LnmlaRHlX8Lkn@AgLbJD/](pCXbUk
%3o->Tg?!YbckCm>nbm29Ct5?E)cl*:/ZGq'EYHn@E2&TSXW#al8W$U$KUe3NOf0h+ZDu7<%3R]GhI[qB1+H%ciUGpU#?iuf*>6?>
%]QuJ.&.LN?=p*VDdaX"!X$t6ge1L-U(hD#GJ:W@ES)VdBp*T4D;nTY=>A;3ClF?XR+Gr8uo7SN)4>Bi1Ya!)!QAZ[;*COYj=R5JL
%0O^0W:8\rKR[mN9`LiT@$`to>>A(gHCQf6NUG=e$[f1UC?,S$TSe4ZI_=!g7>;CbhM+:bNm(eZdMFoH=_Ud\7_h$C_!9.]@aiK62
%o];2.H<F!>.uVbT#>F\F1acJY34/j0Cb79_BNJh>OC:sK<ji%>Wl:CgV-LINJ-)oF>h1u:-Es&Y.jeW3c.Y`k%c/_-<@>-[iF>CS
%M@ea?QJ3%d,(<YTL/O1anmN\^Yd4J4Qu3@lI''S.JaR([0uO_0A#nAOQ+!aDGuaeX>mGC'B!Ei"be^t9."!0*5$:Tn*_&9+&?-[+
%^d!\IFGPp,/Dd'$_HI^c,VcDi];@E9IBL\H-;#j6W[l"QN6+?9aTp>3l41bR"C1qf,[ZI9aaC8ra0$Q@-SqlI"Yk%bHVp>hA3Q9#
%rtG&V)$FG#kr2uqmpIE-3#&8c(1#B6fH?"u%,#)AVNG--7?f^UQ=83C.t8'Lblf*tqVF[a8UMscZX1"pVg=QR/L4IANSLJ$:rb'4
%X&Q`L!o?#GhF0I`(8]?\>J>Zpk6bV=R'#^bnoBSHh6Y$&f2O]mBRVnFB[[i^07!6'@?[d16kPMTXQ)InMV,lD&JX4!e.d$6UW)fX
%Cm&M."@Q.E73=gYKQTN?&C_HA:H8fPd9BjTT^7!S<4N4eL=b!AL9E)#Ypr[5bVINI0jB(&d\0`A,<_^oYGFmRG<<EC<V[Cu5W4j4
%`tc,)@:rFF,3ab!]]47?ZBlEj+K2l9BWX^M"C)q@Q_DbqAUNo'kqXEqb@/WP2ru'XSj)LfL?aCroO9>E&$NC?U/W?"2[B.DaKI-g
%@usp;/')T#h[:[a;qZ/qWP^C-WKA--lI$/G4m!-^n5_/Ng]nd#1-`3>%*>k%-8o>Df6.H:8/_V=AL@d!&dH%#89TN@M;D]Aai?0Z
%3p\FA2PjCC6%.amj#c:u7-b+U4.TC69$/0!L@X%@Gn($\SNRClr'3qXa\\Ij1mJGb,AKe4&G95YOKV/2H/+5i*o07Bo<bAF&LT]Q
%5L>N:Xr<;1'_'KpifpmG$Jt,hLMr=u.mRI?QH1DheUiUO0BBgFJsT*0^Iorc*AC=MIm]Q1d1QlNYBkT%F.]#FEi:q%3',D"=$;:/
%E]"W-Y?n:>_7q?*!q,hi73\akLl*n<87KpNbOR"RCm&cD@nsN`1emY[b6g#M_AA$mS8p?`ODINu;18-q9a(gG3M\J+6>>1G66AB=
%3m57=2X8;?63C:#d3oR:aqCdWbJofIcqD$`\/3iYL&sHtUa9(hYB/&lDN@U\B"M)?$i3h#Ig:6>1u=5q63n>KR*_ng+OS]`Jm<dV
%QNr3taRMX#<r*qOJ,H85N)0ZO;%@HW<Fc3&-d.;AE]FM'-)HM>.I<QZCo#Zd2N'j_PT)"7@RP7aE7(_;V-HgT5FnCsm%&?QD-cX:
%NL$$-\&Va;7#l2bAPQ5?FB46b?q)=Th?qW(&HfSO2sQV1#%BIONK6m<1=UNZn+"C@c&_;>:9GO?0J5D#D-!GT/h6UTk_aZ9iIW%4
%a,o5#[b6I)FrcH0Ff9KG,"=uj#p=6A/"Ah.UW*-Q4bjJ[d?Z_.%*5'Y"i]"HP(QdOm<a8V`Whl:[`$>V+9nroA4,D"V[oN<HD'sc
%3Jf5rB5F'=mb\r,??9,i!#VX:6Yt#tOc7EQ+JlB'LXfK@G!olY*Z0iah'mAr,#u`:^7.s5C]oeF9aW(:TRbt*6jHQ>#U;4NO^^l[
%.XEnZV%,EtdR)VC0hVe:kc8Y7,^#:6p;f>B6^b'ZNa1$#iZ9a&=(S[Y)F2*L21;D9<uGjq]Zq'CSRO7/aq!%S#-NjE,i&-K,H]Zg
%b1YL7kCgu+6HJI5%!-a`AZ$R)SjCWkXIecefCSJRF:h0;F,iboDCh?'q_R;gpi)B45q9p.Wo71hk/qk2V)=top>JE'F,#*+/0,n)
%Ik<G?[;&F^5nC@Q]1LREG0qVj6^`u"J8?)S+(S>]"@qbH:3E^-A0!b745pajA/O9_FZ1"7C+GZXif]GXEgMe!a[-"QI>a#?4R9t`
%@X0<FcGIUEH6<^,A13$-BBZJOAgMB)a.$1W5dj+BUfB6T?@38=e?3?-j#tR$:Z0MDo0uRN9:XKUc.T(k"@-us'6X>:-YYKF(*.6W
%?/s#MkS;CUJUq*lGG;]>A8816(7m*c:9i>1,L_C2i!Qo]CUSbZ5t?VUYlO,kds&3N?Hh0"+4]kNW)kC86SVO3;)M[CSH:,I,-,3I
%W9rW][@/e#otEcb]n<d'?p'jYp(NJe)^]kV2JA!.JS6gle<E9+QL*-2aI1J9bk=nAdTp_L(O\2g3Adlu)8P=c_aB>Vr;7C>kDO#&
%(*'/$CW!G#d+j:\='$X'>T@<&/f!aPOl65dW=)EJqMlT0'klYBS)MmD!YHSlSCH/>T@'j4Wl1Rk7+8O^</(Nt6tE-VfY^piWI/*N
%U%nMp^=<EQOi',3N1HncVnO#$]6YXpPpNeSMoSZr;:E;Mog-8p[,_]lAWOOk,$^_X]pS2SM"JIjK0:Nd+icUQ+7u^Zn<2rCDoIf'
%9CRBY0&@'b+L,GMn/=qOZ;VnDJF$Fl;M9_K)["LOnsTf,R:^XTYE\$,-attVS0AAnjB33>2rJ^T`,)3O.L<juJ4d"g9KQ1"^ncn9
%&W#al`JY%H)MkIilsgkr]e%_WCEA%-e@)<E7#lAq"SRSb9S%-_kik6^MF>0+h!_a*:QB+Z@Wh`?h?Wr7+XW"3GoEKIj8#&1,Jpo>
%QpT6%p;"[ELCX%B1h)Nt7F0r&3+W[fjBJtLH)RT"H:QIZ%+s,G"q9ND-b@S\.H3K5"bE5bec>bA)YOTO]38@F\Oli5L)W\saKO.@
%4rrL9j9$>`nr!`+d..khci>[tnHdbZ>FoL:[LRP2$9;c-ZF.9?p<Zf!;k]!pGGADiI:MjBni3<(T\uF.cL9Zsh#o]3X/1B`pJVe\
%'LB_U#)C5*HW$?RZ++*o"'`(\gJD.fHSed9@bA8M3!kAm"b__`JU#qR5J$8711oa=:DUuM\^ID8>Xi6TYCrqX7r7ur?/N701jC/k
%8c3CgW'S<m:a'AdYn</O(tITtH;GSMalQX<glhoIOu8thmsWgPp.,trd+-F`ah6Cj7D.^&r1l%S#l!kd20E3dH;=`UM<o518IppM
%(8'^%/.iV'h2SA73F1)g*V:5d-eKs**`:0.*Y(scop3OT<<R.-Af-A)b\BscJllL$;hMWh&p>+c`8Ml`:':EO1afbN)&P,<W0b,7
%/8V@P)\_dq4@EjOpMdqp+f>?&)7T2eS<^2'2"fia?".t<H0EC)WZI$53o/LYpmR&,'GJ&Hl"MJ&1GY`h66r;(m3nj1bp>uoOS*K\
%Q"=)h'JP;Vlnl_g8k>)`]n5o,lDm5k<R4?YD]p8Fe>j%U8lSFDiF^b;eCpV4^fbO[;ARp`[Z%.qNA)i+/WQ%FJD^pk#<$!MT^:sU
%O\?T-;8D\;U1nQ(futSL,2u-NeL/-pBCU+Y-oB`KA^tpSFFM`AD'_PbfpYhE,L!Npp,',cEhX>]L*eq9dL2S"C,E2==74#YKTnp*
%NU>]/`/:CcnS0WqXt089KYSR*=OD[%Kp>,*EA2#.>(t\-!iJo^<+-N8dgctg`0G79-qXGbMjOh14TJ1t!fMCV9u_#^'4KqFM2-N8
%"-eo[mqfRagZ19h5+jj#7UYq5h^*2$dDIj,b6A/&4*.[S:"'l@]:Bdl8]<,.(a<^"DkjkYn5>%%Z4Y^O)i?!K,+49pWUe]H[kLZ:
%mYTKO\^`!]*,#3GDD[6@TA4\>l<-VOJ<CV_*k^Xo-"oJ<1^)C^%bnEFNh.9NqEr<,gt,_+eT_e;$I?HieJ9#d'f<<kfJ5`Y,`9-#
%U4X+Y8=cWX&oB+'"FFrfZKK)e.m$s;#1GrT'+KULD"$&]Q]Tffob8<Z)WY#Ig'%M."/5i$:\T%Z#U!*-cub._#s(pXQdp*daBK#!
%kJl,&.\n=DH[\pA"]B;trerJ9oK%B%ld%NLO:[9[G:Tq"@f%NY[&flh0#Z`sd$Xc#@TV3W!/Q*"c?F5KBRDO#+V)6/>WaQFoa&Vr
%-6_.\e1JWj[-GMk!I.o'6FjC0R>X/)Vj?eP<7DPg^b%go=tb0.R&ae>pP?='#E[@;LIa%<=#"&EKcFK-NSZLEg8Z]=$@FKV%@Jpk
%0#^-kIi3A[l5\#??6'+*KEE#+&ulTg_(R7[WdgikiH@`Z6ih&P-&jE"Q7N-aG]1)<$IV2n7CphI\3u<AN-c0GUI<!Yb703T*G%2p
%,5H6I/G>[!fOVYoi+EnL;2m7VGr>eq[,/YO9.%j=4?eRP$91)ZHDE1W!V7GS(QtP-mWDDaA8,j:lZ[9''_7,<Q%GHB3IhR"pSG^#
%YrsCPT4-F$p_"?XNb*UK`Tln0$=FC:_og(B:]_Xa8qbcc]X&rAQO&[hJ?i<0HLqJuZ8t($MdXlo@.JfW7;9P-Z3Vb6GK<StW-X2M
%YW?d/NcH(m!'s>m`Puj!H8IOJ/+"J=<-Ka0&Ia_sYrQ*ds!:[H$gJ-/="eTQDM,f7_HDlqmIe;%>j>I/CoGki.*G`kS/fJk1ZD3T
%lP>&2*2Md0p8X]?X4-a1Tb.>'FLlH>rGSS5ZY'%i7R?rmpK@X\f@Qq<rs?Y[q"NK2nE/=AQ2uHE_EqWG='H$Ki[Tk[1ubga5t9j+
%$URs#AP!GgM_BrH^OA*=s"hW4>:8PdMVgnbL'?[5QEW1hO1+"3'*]f0`02=W?g>L.lmdn$GK:60V\ikVCsfV)LEO88mO/dSTqTqG
%UPHRS0#(P,D[q&$fWe&>G=-@[oC-#TR`H//*/-iQNQ"-q*4+Q1O\lo$`5t+[Q.X+!=%TUqhVs[NcUN&2SOH36`kq*XJd-ZZhMJ*]
%(RJ0#1HEu!.6%=0D@*"Im8o$0-p+%(eS,%DRICs19@QD/iH]!LGXnhDTPU=G)@DWZNYHZuB[1T3M;--o2'n"qh,!;T;REadDFhQ-
%9mBdM:^$ml[DKB<1l^D8P.BcWp:o/O^X`$`YI7(FU2-)>%acdX7QJ5dZlGLQeJ=sb\C-P)Na-9qi[hj]ZBQ6;b/+i&='D&#EO!JC
%50PsW]pCq1eI*i>gTGuF,RMcWe]:"%#J-lkB[!=,nP%nl3IND7B"e#f\e;s:-[;f!c]U:,W:HFo(.3YR/tl[ANf[;.\iPRV]-/C-
%RoSa.oM8(0mo>VZkOm]e9g_JROju%:4[=RQ,AtOn*=^9l?6b0B%lUFd,ItXJ7s??h;q-N'fI1(*,#!E[(r+D5fgSp8?EF4UH//On
%ZHnqffYa(L[NG[E<lc79)B&+cdej-<Qk[>='d]rq4YV?e?BDlH(j-StUr]+1E9q?',/ZD#euH5E'^MHS=@N0"q?ipOm,Tn%;l:Mi
%]`J>@Rq)[IUH7iBB$#A^!JX57jM=3cj$Y=/'mUVj3_oW<)bCd@7f<Nt[&c03"d]@G<:$=<m?+G;eas?e59U*&Y6*u70_gL_7lKL-
%iP\PYQF1DY1o__n9f]S-A0p2[1ecA-if,8)gWGNY"'C!ko>On(nCP;cfNgm=DGFDePlRGj#-'m_^+7$0Y/B:P'@hr;4ZPdEJ3Z#n
%*'70YZL<U<YLO-G753V,E3;Z0QOF0)!%(%F<0LNC[,%Aj>E(?mA4B9N0.[6Q??!E#%DH;$C7%R-Y),t<%7`9kY[o4J7@cm?BkC]9
%=9Oj9g[uI9;$!F(AR*5aelY)r9ud)^9q0@&VbWTt\[-J-N.FHT2mRDSc=<8MeH/,:$!!sB.SaV,`aWk`H."JuEcqP-/bL;(G7o/1
%`a\K,%I#G_l7s5deMeV:?t(>S[\D^k6R]D>OGsHB(+_A*eX&Nl-GtLiam]US0PML>+O/%\9\?p;>V&04Cu%l(EaV$,1-#rT*3uS&
%d23#04\EP3X]>Xn=[(h,E(0%aEa*I)2d,^9hA(OsVPF^pOu&,TS>0#lUViO7%6o$l;Hbm8AL/l^Z)t/FVl"]6AmhA*d;2^&NGU`O
%XqjH-YFZqs-6[>kih#Vg2,.NOfX[#D0#Q+Z?%K,@R4qE:+\J+K]:iqT4:uuLE;1&jONgWZ'QF%f5&YOkbailBI*8ftI'!d.BgTBF
%33nr&53EP;8IQ-n-p)ii8W:Y-BP_Cu?_;K=&m5[#4In&4A-,*O1?OlmJsb$l`R!a_$X59G1OTDK2I0;sXc/eJJd#Y0FgUKeT5f_P
%@h=oiJGR_E#b1X,M9iSS+ZEk9Pm5TX/ufR:m%[NHi,ST+TLCK;Wp3MS?l&PR.@`6$P`-hB^ZNPQ"?('&#0p&]Pg;Jj=R=$sF`/9\
%;qj]nc6TK;,:AZVfoeE/1ltfR$/iE48qS"*H?0kc4AHB4XWbcsf]/FC+IIHT7Zu4._?q:BCV734;Y5I^S!'t2#`0pu'So>SkYaki
%W<](Lf-=,JK`BtI+TPi&TcWiTbb!i$GT$A;ad+H-7&OH#;!_<($dq-S4Kt"=TTb'@,T)q4H@R-(AB-FTqe1cGGd`pqm;$cNI/1K=
%[oPd8oQbm/=GO)]m)=Jq\Fc&Z*JD=1^`A*GQ/E[uij&Opo)4gr*eX]2*\?bX^uC&h>:14<=h;7+`BMQBih67s0Gc4?JS^m2bk\CE
%W]J<?6t*#H<@ilebgH^6BbCbIMpt`t(V:/*6Fq._W!Kb>Gep=]hZE)r1Bs\h\os=91D-[*k_#3!$KRAg6u.G;$YO)Smr_L52&e*r
%"^"Bl%<d.FU-A8%!EO`ijWQ.-K-<nZ%j%PPERB>)Z<2>@;=^.fA'8!D;UED2_Jqr*M.nmnb_e[83riX7\H3PaKtfK5$k(lW[Y67r
%*(!n]c2`XCK4g!,lmhKB_P'>=2r43?^h`JgT&:br=P2,3N')/"cADq1*!6K.3[GPeHmskCJZE#8*e\F4\e;,d3EkI6,U9kFQYF.b
%e#J%bE6+,*jC!]"H]l&$i76U^n5$n['EDu:\#3H\QF0#`dHLn7Q?mP!'d#$CJE54[f,*nA_I.V]RQm.)"ggdPUog]s@5\7hc=H7R
%cIOtR#mWps7-4LqpS?6.Ep.Wp0\^9ZZE#B_/ndu_`5'`WQM2:d(T/%l]G%A^Y,c8q742/[q*BED]96$QI#&tKN#hR@%Qt.D&r8Nc
%W.d6Tqf=9iT_t$L!U2]qXdE1F8O,YF6Rfi0^,/TA%K,=M9$i=9A!MS^(!oPq<3LgR!Z"j&/.iY!_(7$j_kg4'd"j41Q@QrNO\:AD
%Q*<osiWA<i?Wi"7L0oNu^&inC/_S<WQsf5c!Q>0Sj9djn3..lZA-*O5a"i4>nHrqV?uZ?4'0,np!RV$$/rs]J;rn`j9n^KNE(u#)
%Q&n^Z]=U26#qgFla@TY:27f4'9bPfI'GQ`N\m;'J*c-GErNMXI&j)WP@.e!ZX#-QUTSDE+VaQiqK`t4H"VMAU!FG$K8[\gI7;T,.
%!D*k5=+X!U()0\!n7Q)$cj_^eL8;"GKeXjtAIFb,8Zo2T81)gSq\l8:-^:]N#bG?9q#]UJRQ-_C&N))d2depTe"Eop3d6O_dd"!9
%;,t9X6^hMM[Z#inJ+=,)WtKhj6q`rPK^;STEG96U_W'#-0#]L4P5$Y`_5.`M$B*):]G(jB7X5#m/)\&S(0<bI!K1Nj(XT@Ifi2'Y
%-+><_>Tp_YYdd;S;fK65L/VN#PoQ^[E4INto(A:=S:\]p17\c1ENW6:_0_NC+Q5[Qf9<"K1Bh)n@M_;*jr.G`(N:Ln,to=c(WofX
%M_J#bcpXZ;@UXi5Kd&Z@(n-9epOY7_=,"U.ZEAeqjn#V^LFZqB73essHPNZmD"^j[Zks]L9kiTT%]o-L/Hk3R-;&a'7OG'-Ve]\S
%+\UBSm+!gWdteaD0"RKSp]_(H$3AHR!SSuGlBHjaH0.dg(R/H&50h!pH;2qgC1<5#NYi`=33UO".P05X_Y9r6m>rS+o;YQ$d#S=f
%r1JnU[Z&1EC!m>?e=BQC:u*uT+lGtg]!XjOKTfG[5RcRMKL/Y9'iM#c"tTo)%4id>Q=Qd[I;KW"BHI*hVlg2U.j_B1(7.d'.h0!d
%!aBBSPu?6AM^p*Y'c'kC@k0+5P/pZ`>ToB70Xs_1>N'P+FLGOjl&-mq2;XZqBo<>%OOP%UFG7*1kfDj!gS,9]88S_M=%I4e'mocK
%[bu+Y"Lm$r=%I<=(0=%I$UJri1q1>RZFPfXgKAPf:,CkZjWV5GpdRj"^^=IN=L:(Yr"-7):p[H=%I]:!#VLfukSs,sQd&8-+Lapo
%N^5;@#k/FHd2,2)@6r2?i_Q89\`?qGPb?\VK`@Dr!.gt'DAjCJ-@<>2E.X!#_>U5)?kMK``ErO-e5rg0.dS,L(TP+kG@Y^T?BZHJ
%*P#(&?lZCPa:X@u^@..0=@!;t/Z;SV,!_b7U`=\\F=C1k)!Y$8MGG@o=!NOBL=usV?ksS)A!"[.+PkBl-RjllJ=-21"*#Ve0j%[A
%=g9]kA@c6`W*CKS0fWD]AMGef=%HLG/2!6spa[kCTu=o`h%`g(K>eRg(YbMMdclZE;*HqQqE]sT#,3%4iF#&t!H?<'6KC/i5jkm4
%>bAhk(lK-)2Y<b[/T<^__\?%>YQ3$`hK9hOpsOFpY31Fn<Rs.`kY+Yo?AkCm>omR]kThefl`UBfOnH9'GSR>hhC/GmBBsR17`[j>
%!uN3qJV8f*_E-1/YX#RTSt@J91K$'iR.->R[59h32Sr\l.Yj7alp!)r*S1$45c1[EF1*Hc8#Br=bbT-c9_?mAFH+m`H#7!+HHXN=
%BMK4`Y(\O9"+D!OE%NX#)@/c?Ymt\l*AHM7&4^EHOMdM,n7?O"R]jP*<=]hiaP=/6g=aSZb?1RCbo2A?[g[:/c&0h]^?ghj2be>]
%0-c#nPa5".%g0r&7j(BjMb]n./NLgMmnUGun_LN_V^1GBq66c:QcuA"QB(#]-"CUq`!"u9ZEc0#4!Z98r0Srq]N9S)p*KIp]#:7d
%J/YhR9(=IXFue_be-M3"o*(oRUgLZ!P[9QN>NP\2&p5.ObGXV0Mp!L62Z<F4drg:sk#\B$o\o6uB.A^3Mj?*E[1Fhl$NC,$=\L_@
%c1WQf\+Wi"fnr3PYZ_&\B,a60/^SA[C_41B.6f3IMm<D=4.!7/N</28.5u$u9:<i:iX36:_4leGHJ]Gp-Q+E8-Ht`%Kug3TKigCq
%16SKR@P(J/gfu%=aYMu*MHIDpotB4X3O?8n`?_2>j>K]n2*'%"iX/i8_#jL><Ui]BX%ek&QD.?aO5OE[^)Xg1o8tT2RY\7-R=WbO
%Oe'=^l_69s3.lr\aU9].L+PQE+9d=.a-P/.i>g;2//4fl1qkN_fJC;L=-Bi+b1fBr&4VsbMEC7=p<BR<$5$POKPRkt'gqM16>=GM
%Ff?X]EW??`q-4$->rZpX1@r*60G;"==QMB])ACQ:m8&O]Rq$5V^l#O-!.%uD3lr:GZSj<r=R^>FhU,f=q'D`(airt?XQQnVHqIBh
%(t_N$l]Ym;Q^]hp&dAR%)T6[KmH+9hM7lcre)\ak3^UrA_D*i7,V/)EEG4_f@sD3$ZJV'B$?%%BbN\9-JpkQ@^u%YH<]S68A;l43
%94^ORXBOSq`E!/,*o;7*RK^iG"oZ."a>-fo##tC5"F@:SMc[Y7fmXeBhcTM1hg"62Z1B*<]+Y]&&;2O4.DtEBgk9SjFek;-#UV'r
%g73h.hQGr$O]tQ$J=I;^r9ocETrWuBf`6uMC@6V[=U*Gf,X=;M66__ohj3?268HC)Lup_*H<jt2M:.OFW>1,r3OT(]&C>\l_K.d"
%*0OLWrf34`1%i,4%(;:g.Y=i!#iO.V/uQ7o+(``Bmr_RPSN\io5)t-$'hH0>al(]2(E?VSa6$ZrJJ\qE]f'NEkhnP"q"K(#4NcoZ
%KDqOP2MSU.LlOjB+\&?oZl_Kb?kU0Gg'HU05g#2C^CWO`Q,Gj/bm'"_Yj`S!`(;t`@^%n=&*o)&_&49h"d5Cdg(3aP(R-L4/E"A,
%,Xts9V>#_'C8ooEl`dY8\1:\XlrN0=l"%XHldUoHM>XFTMl<<joL#irLgF_4jGGJGic8p<+VGBR:&;[P9>fVC/<(F4886R"E&G[5
%!)^d<;ghdcb%jh$m?U*e4!^[=*!mhOY)ZTreIU'>Ou=A"W@5m$KGa>TLn]5m()/=<^'splL<-/sm9eWSPsEH3T+E^l?ej-Uc$E->
%e4Jknnu*E#,,ksh;?\nZL*7Lb?q3fNNFXOg,6YI1YGf"c13FhB)I]ZMJ2UB!V6eN-+ieFW\3BDO(b@_D<N"B,=<D1PErkZN8/BP;
%[B1fES<-8C?tjX^n=[]rAguqL]]\L`dLS1/0@:Cubs!\s!:h(."ibb95q.mb1odQbg!gp4X*F#)@LUV0O[+SE(Mi4!d*#ka/U41g
%7q9o@+uHEI5e$=:d<D3T$;M>s>PsShQ-O[Y[Ic7INfj_a(';[s5?R9'n$:N28o.Gicn`&L((S6g>?S!nRf0sIVm51m7"Qc18kaA$
%=K@J)/Hba'9Rm6*.(N6q-6QdFYOE'cP6F2+d($%bV+V;&DftU#@EVc+B\AnR1l(DDJ?N;7#r%)Sr0UT?)J0"E@_,a<3%1Yda.q`4
%,+iib&)cLnPuAnTfSs-A.\=p\'lK2'`$,,gPjHJ2UmrKCfB<a&E5X,];]>)Z"&[s']k08Q*(5'H56Uc3pR7YE+VXP=5i>V=0BpX-
%-4b*AZVb$MED^,9mj'h^!Y,3<ZoFY^&hWnT(ep^E%iU$e`/*&cLlQTa^P'S[oO)GJM65n['+Q:fH;u"0CDgE5,4HuHIAbe6-<?.+
%oRd?a\7c20HZdFDU;gI3N9OnE+P!6QF*&k6K1."rdp4op#eVd8)e@Kf<,ZQ9_Q?BP-S3iGS(j$lDC(,[=KJC4>FQUN9ccGZ44Yb7
%>EbUr$!)Aq3$\rj<eN7T3`obB&bL,pXj2/tI;J#TCNEAhS1@?kilp=\f7bQ@#2PUOPLLJ+OuJ>XP]VZmZ+c&@9;=3=O@?9?U"QGb
%Vf5=`.8LDC$[`L3'NdW6b$gm4[NYduMf#_>25XJp$%=#tJu2e4X4[$`!c(\a5H9e<[S@kL%HKBIiLV>K3Ej@[Y:DU:3-Z+F9InN'
%a]ID-ROZiifFMd6]YOXJLl\Bj)n2onYeZB0+Ih[ErLdRrCfAX%!,Y9XYZ9<Ui]r$1CTn#ujOX:IPKELPpV!'_bR]`rVh_mJitp1>
%g#QPT4*tc6c;<f>iW$e[?bS]$Mp(sPe!$!KipaeKao:/Um,!-[ph2C14^1nIJTC6,nc&CQiU5aX#>aO[qY*(XkBhtV\c-",r8qPU
%`H6)T\M;d++!/^N:?IJDY.;Yk6@esqg?H"PT*h#,_o7$C3*6bi:0\2UdZO1Q#@fNAmgMNl>63N,gScs7fV*-01Kh4JBbD`aLlBAK
%O6!?:@aFWOBoho;Jq-1B5*_YtF26]Ya:Y0!^id3=l>A.^TCdAVCf]huE%fl3I8$L[C:kI?JS3C:@#B&t*c(>[OYKhilUR&"Ofhte
%f5K#%m^bTq27`DTA?g@RHuf22S_H4fV[&:F-W;L!Xcd%@[L!/ugFf5@_id$ID!fPEGE56e8(Pq[CQ')q\:G&WilL5b,o"2;+3'5\
%%u\PJ>"jmnmj&[GPs?]^Y]M($fH3:%5]Mkdm/PiVaCi(,B8rD>\FV;kZAEG%N_ga6d,^OW<:ZtbQuOi`mm3if8%`im)Y.@\.95GW
%+uc#e5inWH5s4!jm:IiFl!_!*:RN$X-%$^M1r7=lj0A;/K=EZn>M&:*-/?Md%M,HBZe`ap`H6<B2@,g:^;\"Ge&ZmleF`2kc`c.I
%'7ckD1l#QOM``<UajD3_mR"0sdK4Obb6.Vu9K5MZTCZbi02&ljhq8n02m^B*4f:3ApTHX`(]U9IFU3KFO`k<G:7hCjq>?@eiQeq#
%P6:pYT)/*O>+"*U@sJiaH7mQAEr[>`fYXskoi.H:PqC]48fA+Y>j.Ns&me7JCDW)9W,14M4B7&7gtOgr<Zo8M0eafd>pIcq:ukC/
%pkl_djC&]M6l'$`.I=B`.W/Hf0X/T-lLhm82^_bOFPlcV@OK5&A.['!GTCCD=WXc;N@VQMa@^=a7Fj8,=n7qA[aW4*gtU4SjuCc[
%^MT/_H$Cp)+uKjNr4MkEEG2A<g!GQunP&+oX1.0[\)^,Ochga$dI=HPoBlEhbHJ#99-,3-rUoJPkD'S'6gA2AVf(9$1*8%>&(a!.
%U0k5(no4VNq"KE=rtoW&f<4#fSNiZ>mOV+o?VEYO*_r?R(6\u]h;Ki*p2:W?EGN/#^Gd^@UDJ8=>4Td_^40qH9TDjpO6AWJCJE3c
%-8u,EFnnGen*NnH-L8g8M@N_$Te*P&=MacbQ9KQ_C:ZV^at2,.%h=RZQSl*_gbSn<2BNnKQcp8@_S[+.s5i>3c=68,e,:0,15h,6
%/9^1)rS^q*D`7MQ>HG#Y=fhG_ac!jMZ^Z(*FB9Bt/2e9UIlOh4LbI#Bq(W7,rQ00OE`aeMB`=X=34f2u9F%.NoDL\7Ij,odgNbfi
%p"&3$/D=NtO-]-V]_"-VmBFN?Sad>f^X9XQJ)pVu;S'3'HF]J]_+MZurR3h(-h0DNXM=@abKB"*LVF&Xl0tJfrm;d:kLDI`"$L@8
%R.KehC<$!)dUha=_iaiO3?<8B4a"<V40Effl?.O2T^L[H@%Y3WNNd;M%W*-m/QsBOKZ5l98e)q;r2g;)8#t_%KLa<pH'<&^eWOIu
%fWt"A[>`&m`b*13[TOm>2moKhKH??lp"0G^Sd4sMYs7$,A,H.?BQ_g@*4tWo*P:ie[]rj.LMbT:jQ&[LA(0/CC$a295SDtWL#6(b
%o^^2Pr5U1gpLhOuDZ/O5rllVdA[p\/4([l*[QiMpCNAaiTtQY6Y2-ZPgjibV:u^&lC@pr]m14W1Dl.l:'.G&'H+r(^,4DW1kjcc:
%(n<BH\hcM+gSq3@+7>`gSST_QhR1J-LSX<ArG_P\rn00Z\,;r[o92\NSb[6(hPD=YF7&qeioqaKH-36"B?qpn9s.3n)\^Xu%<^PG
%f$!RR4.b8V2*62i]1_5Z-JX\Sh3CWmp/:p%`BJP?m!*\?/+:G]gl(a>Fnq#G\iJS.)WkAWfhc(RX5Nj<o35#a:A/>`NEf:Kn37CY
%Ni7GIEpM+h&Am$0p@f&QE2*MHrp9Djdh")'k4-Q&rc32E!!N;mre#oj4`?(O=IE[Ila=Fp=n"<pCcbO&Z5`&6Ae0eBX=aRh]EkN`
%0%a<p\pL@TpOBB%)uT6LQ'p[)mQPtUaFfINLVrn=e)kSWR$L7kh*$)+XDR9Qd5&Dgr,`aTDtWlBrj-$M%]fCiB6F2lD3!1Zr9:B.
%/2iV;]1A]>1N-TliO`6cs-r_Si3^N>CRACt^*C2\^M3]S9RB8NET@JOPMX[@FMkIEs#Gk^c/rJZV<,_Rfq0;Q?K"Vqhj<l2TRmQb
%9?I5N%fb9_5M]&!`Le8L7#;SDCbk0jg0+G9f=Z'Z8'(H#m!hhWS;SlW32l=NVjtE*:>joqqJ\/RRQQ$Rh49&%10*t9r3UI@7\=&_
%;U0XUl2Dj8RPO&7qHhA^s7b+@!R2X_ibg02Jd/5r/5<^uW#kEoZccJ:d":*<ioP3]?Hj7ueNJZcBY(\"H&rY7pJ2TDeIR]9d<%lO
%E+aBT(HXjI\F7.YBn,O$h1*[m:8nj'"+Rqa*j!r4jRN0$a\P`-p]F(L9BlMl^#]-+W'"dp&f_.Md^55Xf+A_fs5`'Lq:D,ir,g#o
%(I?ZC/*5crPTpHiAO5L/F?t,UOnnFagtdU\oAa>df'MiGrZl;'ho-'&#J.7)GEldhG%W3L^JBRZPK!1`pt:%7Yd4;rQ]9b7qY"Bf
%h^$e[^/Ro%j3dPYG\=TPqtTK(;t`Rcq;q5E([%*uH8o-qbRRE<JoWSm[QiQW^D[]pr:]"+Cg?ePr7+W]_is,'*53EKHPY[=4o>)n
%g%30V\3uSa7sg"%kBkCSQlb\@&,-!`-g8RK_N1`)8%e(U5<V-302mY(#@$ep4`0mjs$*^arrYA`J$=nFktn3LY7L3-+(;ANpnst'
%^f-pMj>]Y#-1i9Z0lfm@n)+=c<_cJ@mKm'"aiYLT[?ij?J+E?K+4fNOT7=KJGe,l%+24=_c1gt1cY#Irlc&n\:uB[JnJsj,/2fbs
%'GE.t]T"$3n'>!m^gAHZ5PU0'HWPEEp:K4^s'G<Rr)_0joA;b!l+_;ns6I.@pKorLq0SY*s86Z/\/X?)kNR*Zl&5\<ru8/,oWA[W
%W8cH-Qf;OE!JOWlJlMSQhUOhe2^9VVi,7\`]'97>]@dhL%!C%r[bolbn3-S,r]n.jPV&>NfppI3k.>YuqltO%#c<H*R<\+:k[sa1
%qY5!)$G><4Hp<hphfir;TgVuK3f#E'GuiD/a/o:4+5oH6_+U^tI.6j?ffZCm^WEj3T<nAYIJ/0,_rK&FFaCWKo%30KnTaN\B]#C$
%b8q1ToPY[SK\*TclRV\f+;IYO`c+c7h8A%]dWfY7jMU6]Cj9T6,9B%^ju)/hqO\i=^E0!u(f9M$1`'L??X'C6Ham#Ijn]cHp.f37
%O`86nOWC#_F\/kI]e"0EUS#W^mJ9<mO$;PkBrgKrgW(s:e:rd?%gKQfA2YP715h93N.0P//HUAplsWC=5ZrQlRNA$fm-Gb<[7!Bj
%a-\m0NTIuQk*,VdMeQHF')sl2,Q25<XcWN'1b,-sn<0PfO!g!#]1]oe:QJ8C^=N8t)G8.C.J;Za_9ko5f%+3pLW@:O[g\.5QQJs5
%O'h5oQ;KJ6MqR0lg&D!KS'n&%lYNi84$V,"WZS\D:<8t$ph2BH4dg])R*?,]Ks\>(TC-0u]C@PHcs$DHl2L%*J+qMtrVc0#Cbac'
%XaamDqX`b#[&V[aE8u3j#ln?k4e1<\5FnJV<[N$:lh,AtZ2F=coUG+%hU70<mH5kSlk)_(Mj*]"SJ<!urej&fIC`\'UVMYkg!PJA
%Da2D-'p!^"g$t!Bp2lCf$t"WB^?WM]rldjekdM(7-SJdJT@AclIsNq7IQAEOAdb[]Mbg4rB87k?@dalRO)3Zs-F-o)fYEc@N=_Er
%i;npr.L1c\4"lnf:"[Ens',!2(Su,4:M-s3@04OS#q*V[<_J,S(DcSZEUd]RRnq-qIjUZHd_lBSrV5L?MeFF&ir&UB_sWs%k6Lt[
%64?=*e<8hf8,MnUdsVu_Eak-k/@;[T^b7/hQ9Q2oOjOuQ\6/`H<KuR@Y@YU(IlH*$r4`h6hPY/TWckTgI5g"lbMTJUJ1PoUSn7im
%LUTKro&/!/';)nYBCtl3XtA$TRa0)be<H$&kisrD=g'2ujl>lL`8okt4-FUSIN+5tmG[Q:0,^epoMs`1M@8;[fB!A+@-&$;F^>8Z
%@>l=#D#PLW8PPi&NrOAcS(sA>57HOeZ+%X72BU7@O(Sm*nSC1!YA_aacedB7?+P\Z\V*0oQ#1EG%dSoAS^W3W%XpB#R1dRYrm(:N
%U\cD:rQA!F5Fq8gf)GI$jSHV$p()qND[[GBi@$`M&cXG;:88Qn6a6=qpfF;8?L7(J/nPG<MV'*M9)gqtIA@F_f7/'jr:R,LVXn*t
%93N-[2<CCNAVklKTcDa7'YeaAK(&WlO3Z3_h[Nla(DrZN&0K4n53634It[+8n,0\D4IdL2C3&.FrV=`3``+t-D^bE%:&brTn'CA!
%L$!MrqK.41ObJ;Q9`@+joQOYJGcOcj+*eT"pNB;m:Z_mHXsEoDf&=6];pn1_R5]q^M_<'=I:!D"q$Aq?5@Km"5PsRjHlE%+gYd=+
%Ds-"`(:Qku9raiYVQRY#O_Wl"1Q7J]Xpk#g%#bhdSC=Z[p3&IgrS2:)_&p-f:#F`JI<Y*q]tR$u?N8Zk$"!3fT$s0Y>tD3tfY+PG
%L/$KK3^4L""P^7q-P$u>_o)!g]itBs-ZJpgfR#_F?0of'OGWKt5Q6F*lGmeZ_<b^D45>Rng5c/imJ-L[WZNk!\uNWB'hm:j-4^p!
%j4WGBD";-1YER)ah7]$:e%P^n',;H-;/BLiPTI`MkO`Gn4["1A3dj2]4IdLa*pLgPg5JbC^-A(Sl3kk<J-QL@0l#5.dJROSe9$19
%Q[OY&\U1]-;\(cS$I/;]f&PNZ-aulIk*&<aj-/._U[3_Dqsu2Ah7_9iaeRPZI/d0j<AoBn\k''F-aU_D63c^c;Vo`;1l`F5aihT\
%/P:bYkDM>)AOFkYTbZ%?g#OT]O,#(G:mB&^g\:Te-`$0#8(a202.+Z;2u;OMl,h=Ls4Q:/:$O)re"`Ula*S&hqc-[a?rPrY3(WXS
%3\93[f0dmXG)+NG2]HZb.Q:Y'4Io7a]+[YTeL:h[jGd^t@H]okp:3VaMjF-)AJ`]!UmA<ND(OqP#+So)C;@AkXTA*\F-C7FVN.nV
%k-&BT,>pTEY:c4=K=PN<R[aeU<EY[!IsLqj_s(W4T>S#X5<aKV/D#7?J`S,Fdm)&_0=>@jr8EG*aH^9a3SOENR^'36GJlMAp1OCD
%HMMqj1<3s"P)dY_K"D7`B=eZjo4NFI1Mb1VrHNFc4eD%j4?XQ?jS!t6\ka:6R"&Ie"BsKPk1SbnLNU`8k9on8UKYt^$lXt2Ar]r9
%_Pks#0D9Qq/GCPnlTo(ead,/_:2*ZTgTstfrNjN[;gceQ/eEDASW*t0G`Ua,`L?5:e*6l(E5r+]Xifm:BrmYL,"BiA-\q<!+t%_m
%P)emrm-GOQUL>p6i%nnVh0CWb74W+G=4F!k7BI9S9P9R0o`2NsV4Q=7WQ1*YLk*/2\I@>cHLOBZ=A"'r1c*Uu>ntLpM.-496HTW,
%RQodFG53Ate>NUFP2INsf%l+B007``pgU!MA^;CbEO#2s/S-Osi)9L-NjsK0XbL*8^,5!8C_b)%VR>81(\:j$7uNkeo9$>MDCAN"
%SNUO#hc+R`@(9Lugn-_siG^TKZO<DLp!1r_b1:V@01n<Hk\p1X1dmoa\h7pA@2XN;\@48!2mF9f5<Gr"9<4S,QA03sTmFZ&?o;Se
%]5sAl($!9;;MoBTS'1_>rq,@@m!/!piH01@>$I()f2I)cSQh1OPRE_F*^AIB3LCkY>u\rtQM/,eZR:et*)5;T)!rtoQF)mG9'jb4
%#mu28ok3oe9%nR^<4kg]Q<ik6S1dDaS29S4nC\rIJ<!Ht$Ho:@BWHE\=Z9UOo:'AF<%[]Vj^PZ'MU=H"leHNacL0`_cI)X:l`ju)
%/[KMCI+Elkb+&n75!2+hpMZFqrTV`*j.PMZB`$3KK9nNPL[*@eg$UksNo=f"m^hN>@Zr71kT\mm$iYfE34(!m*OSWV;UO=R1HOd?
%Ebg*@LVB>6\Xg_;N#g,2NX"IS8$3>7(L'iKQfh@@09iB``UOi;=F)[BbN]YM5iIp,9BVRGS0Q_-V<]@>rS^5b&#P8Oa5^3-TWkj#
%!bJE5?_DMsl?.IGg#:&th>O\!WK]DH4I[Fa,tk5inaQ66)8BEGD*&fY`SMbRf?!K$Cs_k<bT_hKk>R8"4L<D[nloj=\`)I.4Ias:
%hr-NZb2mQ@h!p<emVFU>A!Eq=m"F4mLI9g4@b,Q=Qg3.m,6'^83I6$le(0df/>'h-mp0#cq/XRdjn+5.'EVp5P?6l!-27/Z&4f0>
%q9dJ*U500sT.uI5@/'<;kKOn(HMIF)S&o,`EI@c%_PNip*q#OQq,0[(<`f@bS0n0Yo^EDqbjn_;.4+0,)(5/EFi1e>pN/ACAs<+Q
%*t0g3l,iE1\bG$W8%1j0G'aE?7uQY%\P=7UAVQ,pD"$kP-,b1!>IAPAqQ('..6&.-@[ZC/g>T-qcM%WLD-.";pZkF'a!^b+&/.RJ
%2-N.UZ_u-VHs&iRq;u@WVIKSp_MpV1]eFM1#PQ,?Gr7]TlK,=NN7Mlm03.P+)Ws"N:5\o6S;6P/[EJ"L8t\4.I"'(C:pK&IHUku%
%rpYm.6H'_XBs]jkbrHm3R3cQm9M]9dqY0m_;fW,VGjj3@qBEM\8l[VFoKp.co`Cc^naOGC?Z4?*m)/WXLZ3Qbr,E#.:7ht;hkrF1
%mAKPWoqAb,h&!@6V":Uhe>@`J45AZ)1cBcY>#InMqtp8gI%Qr_-Jtrt\?J$km+ES,mE88UptOo@3c!7/b>!V4ep!b1&*H#-(A!/]
%WOL+#qCB`lh_+YImEOkSqW`=f:f@HS%p-D?e(:bK[C:@-.sVfr%3OJ6S:!,"]\G^J4gFOh46Jb22LbJcS;5,(&"hc;oBi_`i)pI*
%U/V'`b^1/?JjoM/n?RI'4kZF@T&H5crQ0uV\&i_HRg`ANM4Rb3JMm8X+&BUr0ftmF:L?tWVMC@=!720e1-Hti!,rEJR3hOgjKi?.
%3W+6Jm.L9uE\sjQ$B,ilJUZRXL#$eWQ/3H[oZh!GbW\00St2(/3O.5):%m3V17dc-?^$%bH??O/[j/c\piP[&2=LP'LTD1@Co"MW
%@GXb7f$0hPlM$;dVhZoS-M6H2o+>YH#M(tp]q_pk"=X1Y0spDN)t;9,5H-3Hk6hr%R@dUrXWE4fL[!cF(bj&*MtL5J87,F"rCfd_
%m%/%e4MN7f8@>\8GPLb,Sif3)*puc>AP>%$8*4"DqX[?E3E'WI.f*hS1V)^$VS!MeYFu65$dOr@+Xg7%etm92US4\8MnK588GgBm
%g^^;siN#%go#/1PcMV'0-gmV+3?-dCmaN/[NCAUK8M.G;8bDKHr+1]%l1P1IS+`ok(L7*6$ps$[H"!4EqHMk&`]'.Qc.NQdE?)IS
%/1EHtD4]6)A*rl"@5V:4^6h(^HuJ`'"n.fD\o;8jC!R3+N$g8R&"Xh;p\'Y,5Fh&]>BQJrpOoW.S\&o#D,$)0rG$7op6quS*-jXd
%Su<k8M9/C]fh+`+HZK\F"g7:miQff(b=VC:XhTbC\\C5qg3^8`BB32Yd)QB*`KiS>4=l7#Ep),]-O"s'Gt8])KlN1s9t(69Or51Q
%?/oKm;s84Iqsi89qmlZE7Qi*$Du[9En7DOU_;Bb.G(9>_GPp(Mp)j=o+6A:?:2Y+K;`a^&Df5LOhRr`[EP'b6++HH.=tG."rmTWj
%*.@\\hu065rb_Z02db@Q2uchSr9iPtIra/tr:!MV^3XhgrS-f0pg;qH%biqNhYL_EDLV,r[m0Zckq.,Fm8$(HbobhkYPI+uadis7
%ocLmFpud^pT76RZIJ$hA28&neU\*Q*\!iB8J)ePN?Ti_qmGGYUbo:THr#ad?kJ]Y,?[ItBpMMnDrU>U:O5A@n?CWje4aQEQ7miJi
%J"TN-5.[M=qYT_Gi4e!ZFklt;ps\8uPp/TqNq9s%-fKCOeM")=3K00b*]tj1>5[LWGog_GVf2V/UGmW>O2LK8@%0Aq^3K,0c\B2`
%Zp/s8eVEA[p@2V^hXR3RIspeE"*Z7Z^<UTW8r$TGg5l/=ig2=,hcX1J?_?6OG[mR!r8Z?IRjritptMp[^DL]'=0%U8HKVE&Is/36
%]rofDTDpM!fi74V^\qYdq"[ga<!ubHhtlp2pN@U*ZEDWpl/1C3rp)Lmo>]\><U0"_%t:jYde*-<jS,8=]TUn=21G37GONYE5HaD<
%cgDgeqrWOE:EHX?oV8&)\!JSprPI+alM'''P>)/Wg#=YHiV-=9>:[VgdEfO?hJ>u:21-2&.s(RT08A03C*3H?=%fk<T6)1BF/?cD
%H?sd?l!G6VrVYoT%@+[)Fo0k[o38'>CN!8(rp@^h:H)>.h0Sei=6hC8bo:RQNo,9^G^ZD!]>"f_kk\TLlg_0-qj$&8C&?nl?eq,u
%[(au`emI>6c$K[q:PW-==e2ucs(=CkA6l&"hB2`AB1&N[kARf>rEr!h?[Y)=jEpJG:Y,74B-7*3rEjHg?@92idZ=Bp5Mn<1+91oO
%)`M+pV0Dt1o%pUjl2gn;>K=MTh)da7^L!o3j0'!IJ,];c%@)*,bEZu&s7EKukuTgH0D4tkRpCC4k+>8RUV?`lNnZbmA%02#q`d0e
%gL'@/[?Wr.T7'ro*Tgp<m2p6FoB;_SQ2^SrpNZS-Vs>l36h@eSHhT^K@pPqK]KEa>GCO+0++KHFr-_M?+1feShtm#2DVt6bPMNEl
%r>o$dmEOb,If?hNO#L,9q=WFm8"2",`-lXcK0/BK^%USbmG57dpg%3BXW?=a^%:<')_:m-c^nt1fhgp?P5FS;mr*9D[)SF.qWVX>
%0Ah3Lds'ADqR=4fq=Va"kHb]%5@7LV[5Y)=:YajrDL]0FJF@pKJ+i!G+7HD6FKtW5`m;'@Vp/F=S*',;f681:o\,d`qQlBH`_u'W
%`G)[?W7#lj.Xggcomcu.m[([-.XcfO<9`0+cG+Zq.t-+N\l:`3A?,@JB7KoK*9H/)=8r2$5Wj(25Q11D<9]Cm1\K39^Gp&dHT5!9
%Fg=-BGOPOk-<Eh2ErGDf9;:oW]5O`LC4>^@efVo+E;'#&q9qQ,V70JU9lL$trNAEaGc:9/Dj3kL>50EZmQ>_;IJr*[5MfW`i.&u.
%^\^nYrSY$LmIBZU'Dmh,F$<NX/(DJ=qU]\,n4%Zsn>Y7s<e!@4jVuJ4_9r*dj'0Euq/&4Jo]osg%%lmO?cUSMIeD(DrQTu,o)$R8
%i(rgRmGBdPIpEfYJ,6rt5PcM*qit7RT5M:.h*7]0?Z3JNhY8:5qXq"<Y]KilVI.)]O1/Gek_QA?ro\L\j3N5S`hm*]\gP8is2BE^
%<ntp%mh>=T0SC;^QY2M8,W&Fd-QrQp1-h3^'>ek;g&Ki?^QN>0\S\h3h0[tafD/JB[9]q58Ld:X<P=nSq_ds<`in.jfA-3XmbQZZ
%-gLG49ssBUmu9Pt^ZNKdr:Ik\s1\-$kZ=M2VlodQ62%DHm8r/"Gb\42l`Tu%1AOiAlS%_M_8ggqZ(Bi;-f11sh\OCac+KgbLI'Us
%:VGf`34$B^GjP2p[-)Y-P.+5!7J>8]=n:nCUfa*Mg+9)QkrZ0AB&Z8$gLjUIeSkJ#afjlKipbRFFRcQ^dGO[/+5M>rUR6PC4$GIp
%iYDFWc`GE0]>$NKDf7jGQ+uH=T7?TJr)*7KQi.XIeleGkb<<)_oCiW.=1>B/g6;M=\G-iIdMhW2`EJDiWLV-Z@d<4Kh+VJQrKH<(
%I*)&B)ir])7(pjj>5PDM=^0`ci;VK_WB]%-5^ncBGqta1=-0d/qDk1Lk$*;&rgiSF+!9:5A:+I?q!F37rKi_k59HNCJJ:gpgno!j
%Frc9`1Z?YBhHc;f#l6PTbO^ca5L@`eb'aueKg$Fs*meO-5<?&p^0LM3noIDe$DoEM3@ET'j'rN/^K,`(CFNa84eJ=;Zl^U[hg@8R
%O-5j*#`R@76iGE757W5lB)+s7G7X%1_&jBYdZ9Racg7nZ2cd<b58Sf+4T&1T;'>>(TDN;;MA$i.s3ct&om^<Ad>RRVVQ\hr3;/_$
%<jF/H5+6Aa9lXG3d5STrD+uV^S6T2r*M@m2:1*7RrSlu]ep'qnIGJ'YL3'ut3N4V.DX7R\*5UID#>]^/;o_9s:>W.9%4@F!VQH-Y
%VdaXA/=QTdim'S])i=EP9@MLH^Y$>+dt]m'ah-#'fY*<)O4af$pEH&pUAs/)Ic*]"qS6mqRs"B%2X-?/m&;kMRVhHZ!\cd6rc<+q
%/7oVLdt.r<Ip*X-?Z*@*E(u\8HJ4`as&j_p-#'-&0s-K'#_3.A%KSTOf9UnkXA@f)J0CP0c`=ZGO3%!jUf30jMt0)iSt[VGp]a<=
%?VU+BPbl#2+o0ZBj4bUC5<eqigYD]e*ZrWLfZ>e)Art?rnbp,g]_#oq`cl!k37)Z4r\IY3^5!(Rpp9&nX.ll<@@1>]7C)gAiP3cZ
%QM4*I**TqKljlj:o=[>Ne#G\bD[9hNF!FangK-Ds"(,C4kBt)7>sm.p2EqU[M`&>&rCln.9bUkLe*_2FY.?Q,IA-Zhg/6e8J9Dm(
%pW(J,G-P"=a/2*O!>R]P+c!K_R2_T_(PgMs`GU$+mNrWE)2>bMfmcuME`@350"W3BGSdj(57BVTs6L(9V(sI]oW=\KS?;3Qe,"(o
%%OA?Q]Ta)l\9sS80(/G!($?E/QMsH1-Z>R4%agZUjGSLN;KqD59E/R:\_G%FddtnTUg9Sh)6id?/fLiK>G;9s2Z5<'CHH.<-.@_N
%;-fMskVm,0G=Le26)V!,[9;$+hQMX]IX0g3m8%KsV0A<1h\94%<DsN:pIr]toS,h(]5P["[]\nH;'"GX/PFN$Ce[p`N-9ZZnldoc
%/60qIpVl(\o.=tQ?tO`gf$j)(giBU)_oml/piNqtbFNSICEKl!`Eb74_>dV_.IYbskuqf!Y'U)3bmtNerLhTCR&iH#"U:Nl=H+3B
%&^.dG3Spg[%".NO\?TBWqZCjSO'8U(g]_8n`ai$*B!)Y67PWMt)j4[f<b=RVN+/a7#&[,R[<*DNDY;^EY/J2Z.=^aCW)O3`Z&ZS;
%Qb%dNW?,-8G_+_k*L?)]N_SA.cr.Dtn9\Ui;Rqd6+?PiNf&J1)Pu8uSn8P:0b>AJtW&RIHJ*OXoKm"0Wk.'5C-Sq6dCb5OLK%#ik
%Iil:#heO\.LsZ:TIi3b`Ibg$gH0O]g[FjY*_j0QI"mU!u(8\<Y]drZqBj9"[1=C(l;3u)Y)g_,A3G<u-NQMMumK4b$%KFW=h`a>c
%<_e(-$-9=5rQL;%/o`NN3d!AA&d@beVZ=m;rAk;DfCQQ\T[bEQjF=^EQt`;"$bJgm$ZJES>9V>#b*L@pm??5r4#+MDCGRn5b.294
%<'P+*Ulp/lQ02e!FmJYld)7,+_,qV5GQk?E"h\6Flm7rJipC%a^O/<k?L">oH9Y4=>m_XS9M@:#-!8mS[IWlWKqHu8WH]UtR%Sq^
%UjkoNL*gNt%]r_%?bQf;m(\&'cQB:sDZgTVCG4jP<WkD)XJZm(Q2Ra%"):OFbnf?1S8I(EmdiiZ\Art6Y0dJ"9[k`HQ]H]^6u61/
%`bUH2!K/eAVXhb!PEjt9S1u$HfpeuR9Ir-!Xh=SdEK03KB_Q%59GR4)^=%*HgrWd;`>l^\_,>RS\)T)oK+75<*"C0ZM)WdR[NkUe
%YDge3;\bh:nn-Z_q$%eb<*1[%=/c1CH<.XaZF"?Y-F_>:&uNg;ea#Csa'It&W)Lm*SUiFicIf7$aiPPgB5<14qn'';mtu99MEJVq
%R.o2"Ab4Ht7,SFk)_BiLe5U3uB]2=P&[c_$-*Q=0c-6a9nTOWhk(f3AC1X*;'tqB>TUj'a]uf^h;*.Fq@fIb?*];KNAR3g?WL01@
%[5SWQgDpK8O6)Wrm<BU-epk5Eeb$JXB,-n"`HuuEoY'j:54-tUM.5U[Pstkr-(:$fr5sHld$5N(>Rc\$B/NlG][Y>Bqc@nt>5njj
%2E%X+1O^W,2?Jk]q`>XGm,LS5!1KjAa*P'6#17,:$I^-C^0&j-g3%a@^@t7e/=3s@b<N-F*c!AX[KUp*)Q.DFC/]q**A/.3.4W_<
%M$ePko0'?u7-dN7rsdTjr:%?q#r-5.^L_Sm?bMS+Waq%]pS"k3<df8.0__8_n$T<e3W)srQYuI0B:LiKehj$t:pWBnBeN[>F6;7k
%:]GSBF/YW8$+<bkor)%&AQ)&(CZ^[XY(e;;>7:87n789:Hl=AIh/kOP:cJ9Mb2Yi2CGaEiiac_=<;-:Rl_:ek+9l&pBO[]3bba/G
%Fu&T."KNBHP2EM_[%.e>&5bOG84FnGrr0^6+\pZfAN[O!C:H%2Qs1"3.lRQT*c-hd&3BCHY#ahP9uDM/([iVYccR8+LQkg^bBDdY
%<PV<*Oi49)Yu97u21HY25/+"-krS`?:9f%#c6^]qr_eA"[1^H+:`6j1*+?-6CNZX(8+[(RMHf3Y-@bF@E%/7MojgfS=I*tf<sOL\
%$WEV?[F\0gIZ0U`8'AlPQrQ376JlI<Cg1_Wf$[I#GN2^2X2[WJ`+t,AdrjZlKmNnb1YF__QLBZs#lEk'<Uqa)Lsdp/\0Z9t4>:#%
%=4OHdhX]h!I'I=Xk!1!-o(pDXTDau6ouZh&NQph+e"b1^X1K<>20@@`FEsp*cl+rO#LlsDB2<F_Y(j*jJrY#T7o2QS>sVOi/_IRf
%DP=@fc;Y/]=[Q9];,onp[H2?bFO_+J[T[X[)S5L#@Kg%O[:$lj]'9V`GP29FTrY>h1Ne(4f$IDud)cR8n25=<'m+76H+'n$q.[Mj
%fqli(;ft>/3UjZ0f@@tq[C]t$"(e&`=?Eq5"5OMe=ir2"PKP0GT@R<F[m-G+,JC]Fj.i<3)e(;>;lWKggd9nfBBD0YqW*t%1-?pi
%V`$aS221?h207=i?U`e@Z!j.7Q?K9H9gNccH7L*/RlPnR?J;7TOfJgM\[nY=a]qW5;E]atg1Z]X;Gpf4nbI=,_qc^UA:oKR2'T^k
%_T#(beK/S.::ppgp3EsY)ce"]VbBW4G,pr<d\ka"/7)RGdYl(^[5V?2+XU7a\ks[iV!j$?OJO'7`-N3,*"h%p>Kp"/dn#tcBe3?3
%E9^flN/1`C\;8IHlJtnD^3U9(Q^F@<*)EpK1U1[/RC^8E=^Ah!qdL"^H]1;fbl_Sg`SA6Pg:E2[Qt-R2ZVeW1W3KiT^/_GD3H\_X
%X2*/q&_?Imh,gdN:$VNMfj=84B]X?Xaap(0Hr4&M;o=iC9%0e\i*X5N.+'TLNTui4hkZ:94FCIZrbNV4rmK/QRAS]KV@(oQqMgd/
%R-0nn<<Etqor5E77PQVYMWM2CLS@m)*6$^KY<4#W8TjmDh9T,GbXR]m&d*KmJ'kD7p:f'tA^sR6RcpYg8@CsHb/`u*6T]Y7;S%5'
%=1Yg,>Z+#`A@f@'<rXLIDqusrMO?)l#d28Il=^">:i9pABRMU)9kfGg?ZGI+N-mhh!9E?N)EZiVPBhZ\$CaEcnlDRH=$E$X^WG/k
%rg2C.G7E?O;GMtcZVf@aJFY[+bJW,cnqsAliLLn\fWXJ5Oa*\MFFSY=*hA2*4#nX):">t:Zg^_(jJo:>Xut-/dA<Fj%.j7/o;1eO
%PDDnTKjCI09LY<Ef=b53ac4A(^<9#WYU$2T(3I6GbiOa$&Xe)NC;GOff`sl7A7TNS`Q/\f/mjP[K*[2Ic8H1qjS$MF?OS$=_)]h1
%AD#0uUGB2?S)Ci59O[o!MbulQYW>Q5U6QVPrCbCt3]2e9.TU*3=C1DQQN->Of:cB)<Y<;+@sM_^F2OTN]UA&OWD_?q#bLB/je\`S
%W?sp%SH7%GF#Y$A2`HWbZ(BI!r;'<pY-.$"@D2PI<*)#1)TX@nE&),#i(hN0P0(#>AZiPG4:'YBH;2%H`F)P5cK'1I!UIW3obP,k
%G9],OYAZR/X%?(B_"DXMH`tfKW9`CHc;8@W%p+me3l63Qi@@gleAKh>(*'=qNp/9!&NB!$30nXYI_\j@!\qpN_f7?/EN)FpHFR!a
%79k:JL964eS8;p?YTg5i4^=Ub?X>BDoW!Md>N(rp]iaZl88,)#3Gje,F;AugM&+`Gq2S4&MQ_63G-%]ZQ1es*6M>>qf!-"@41s('
%lTPh?Wa[3e=XD\VJ7ju[H5<(:1Os8*'BFh.U=QC:Gqn+Lgo2W.^#TQg"qj7geN%#K<M*.t($DccRQPXs96/18Q-%W[2=hUlkHlA:
%Tt*%@-%hsP%@Gie:(27q8dL24]7\h:j\&[IF[PQG2sj6IH`:HIH]FKXGM6"rFp![V(W0/D@WbuA8r"=#OPUb=0/V-f+%BCqqI+I\
%W?4T.Oo"m",Sd:f@VI)&WR/or.T3O:;,j?#4/8`F`VQuga$:GBYIP<YrTg1`dJb"VGqhFqkt1;1bQqY1WTNllY\kn[]8DkSlO6o'
%k=.tHIdOmI$<MK_r5_LhC@*8V>meXNb2,OL;3f#'Y;A;;^0)miX3QPJK9a;._iVO_;Ub.-[_b7EE$Dr"OUq$g$4g3>pH*j;@aFIH
%c)`C2m(.N?LP:e3CqM$DN/cZDE7\jX0SfHkL'QL=O<n_V)`S#!BiU_LMopFX@`^-'*(j#UJkkFQqJK>8V\TMDo=d\,HPCjg?PYj&
%p-D$SKB(eGh=7=`l$.T)kFi`">^uWZHu]2Mh>$""q>9^XpWm=Hf.K8=).2)XNmLE[pmnAFkjd2AhIXCPiYK/N<YW15/pj,.]';uF
%`HaQ:i/1lll5%"VSj%Dr];4k2mW6p$ECW[i\t:Kr>DljTHo.F:b+eIGDF]s,G$F!(d9+q)aBLTYk+h`UXGWM%*fYYhCTMP&?uMXN
%AKT/3]06(upT!;Ld?"+$+6NTg<S3"\LK2<2hn@I!HCJ9Mb:DqVIP:/^Q<2_0<.&f2>:KO7c0b6APIZbF$G5iSPOVrsJJY@VqKt=_
%V^S]@oQg;"T)J<3rH\("lFGN1(Nl==Gl;mBc%IWno&frH2m4FG1%uNZ>&`HV`S'$e>()]?s-29."hQjER89#jj/Fdp3a`uQ^XB>b
%/o";E*il3h7lAo_P.W74Ai->nV<?plS?#NC,Zb[c._R:7cV8F;Vf$+@=jC$d]kDh4*6I=8%=*dMVj#RDpFC#a,$0,=mX`F_kJ66n
%o..hI:Cf,GP)PE%FfK@8AW8=)[d83f>^\YU_p:bW1,hiAVn3F89ioh3<foG;C:Y%8NOYF[a;QYFMf[6[\tYnkS>n;c2-j'2?0Qh"
%^t!Od.N\nuVIS(cU<USDXc'7EMOY3saWmg_l^J&@P%qS6'm[1:FEO>/_cP;%e^DiI7TrMfOkV\/C:[aF3T$j<'-F0AY%[bfk:2Fl
%R]]2h(@I%i<DDXu8_)7okidi&l&'6?A2VCUX6GN(c].RWU7/6`QEKT*^VQu8#2\<U<)$Gh^2aA,F@ETZ_c*Y_h)W_.<kFg'Qsuhn
%VCU@iOd^caeT=4h[&-;u9iiUp2EEn!C:^-C\r)\"b*qNm9iohpX'nIp9ik:eQbW-3phIC7=uo1I7oE&_<.7bd$;Ds0RQ5o/'+Wh!
%%:2bql]QDkRoQ8q%cGKH:[u`sHD-2SB&(ofUas'SZF%WMd(4JYn#jeQq9*\<;n(9l=r0Q^=''K0=l"E<qVP@U<O9^=`Lch9[B_]]
%IcQja4t#W[&$>jp[&cn8q3En@WiOl#RGC_g$#Ns/Pm_Zl.;'B;l?iDE@@)9t%!3s?5\7O)MZaQrhojRmd^=!RO/P#;W(n22oU<B]
%fh_cXF&u3<dX0AIUO5IBB^2%u@:C&GYITis"+;f5)^6+DYIPT55Io?&GHG$`L;R>=LUT&3^$)W]@CG:LguUQ,<Yf0)C[N+2$O?"7
%jFGIiesDqieQMh)a]0+AeV_p+BO?$@Jm+b:>.GLKMB9h&fAUbPER*l\1q3;tdLDb!s)4fZXW39RrN"B3?%ddY8HtDc)2$16'[?>4
%b'5l$i!Z)c.:&G`(LD78['2()a+aiEL*E+:<7t)IrBG+i3`\ES/UWq1?X:TfXRR4r1p*`/Wd]PCL;)DB[aH[UKA;[Cr1_;jHP/hI
%=K=OlN&AiQ'\<8pkd-UT^[1:<KibIlZG2*KNQme>ZdP<i8i-4urN/L\mRAh=pV#^1W:tYJF:i:naA?(=oQ8`,'sJfrF>k')NUd:k
%]`AWLaN=G\e^,+4e$Ws[Ka^]E(rCHb(GbX>!C?+3U7QELIsUg]m8R>mjlEGMqMQL&8;7(,^^`$M?G0eRfWb$:l6b*1474"&G*SHd
%/;L%((_1N&?0T&QlAiJ"QVM\@h=-\jF`+^iF]7/DogJYR]V3<KnqOc22rtKn_d1)11X7"bN>c:UTVd$eDRf#Gmr]n4(6kV(VdXO-
%#0'r@P&tL%oK.72)llsH>A<6`3'T58%dgh-[4_l&0,dnU2D)!fZ+bTI_\^mQaLTm`pE]HNVu@i>jkB8mjgf?TMO<noaaA-RE:rT%
%WAP^=]@a/j^hSbcnP*SCAV2`b<>!fhLl!N\=qPp]*klFN[M-W/e4:CWOc5"mqHZ`DCL"`!d(G16e?;!KWHA\VFV3*FCn'#/Z?<ob
%N@T+MZA=@.2dWi1osAAPQ*<luYZ8HXFm\,b^5P_]gdbFjn(Vf,G4$JUY4]"VY0^;4d8Z,8e$$daoX=R<O6%&p1d'GQPK3&qe\D/B
%Y(r98?EWS(<i9\Q7.K90,Oe`_=/2+3$brV%TR2$,j53!r7=$Vm6`f[%O8jJd^2VYPJRs6MWpOR,h<Y16Of*9V;u^l1dr''Be.%a?
%pE$aLIjHVUk&+Y>2-!h7GB<el]u536^#naFs1S?M\_Q"e0J?1dfZ1#G^L*`-UYb.B=78aGg7"HG094B$CB)S[mU9=Ha$/dSVVP#H
%\7"uK.$Y9n=0E]NR^)#?iTA:@n:804bAWo'g#(#dZJ*'<o"j'Rs/<")mn6YDghl9-agp-?Xi7L@V&u8=Qq`$o(#cPn5MDQXcZWqn
%a*Mg=[lRjldIF,AQJO]EHBII<e%aBh[&2tH+3uTU4?7V-J,-SBF7J>adDj#ggiI3h_0Ig4U%hA7P?><cq,u#,e.J,%bFYPOoDU)7
%NqiU3?0Y&B`3-LOYT*4K]dR`<YZo=pB/WCL9SF(Aq,3^^dsA@MWq%cn\a,i^3,#_MB(]k#ol"GFYE<!g)U?TQI%SuZV,il0aYe*o
%W_/a6Ffq06V=hCfTU2:.R\En+2V'!HX)`TApUcZ&%p"t*29O@!/sTIW54"c!?FNRup8?<ZbJWnh<`<GYRiUgpX1;PZFgTOE`a!t*
%b/O^IUHMl+hu,BV2:BM-rG#\cW`@XOhAF?ecf*<F.5al*>B*oK;1&eQ!!h5`G-c(j$?4Y=1=cHf&+&Z)*N_i!L.=.fa'gkuo<`8P
%a8S)"htC.!]=2kH?hXrgf$Q0!S"oS;:P4Mh0"#H_H=KWfd)3!nc@Q70<?-a#,@m.!WVfNkTn[QjQ,s7J#>XsKZ?BI2.;-o.Aa=-@
%d>_u88cegZF3pl*lEnYn#N[n`:#rn8cl.,>jG#as$3A\7>YtjllMJCi3QY/[hs,RS:$kj(S"_[/S7g6BZ$t5/]I@$H.iR`#Mb^C'
%iOiQ.rHZ-F+D]Kte8MGGc=J5Xot=/!$,nA$dX'&i9<H,&)F.rUC*8S9:(<jVLLd&-^q)CRIB;s&<IgAheMVkOilQi1W+S)8TIN4)
%%i$sP]sjAod:AU`oh;LO5ZN>N+fMICm&@9>--%\ulB13N\-fHJ5_Wc:jZ[^U._l,/A?TZGBTM6^&,ls'o%=u8rgT8F<CPk9G:?m5
%'Q0_5o!N3_NBXb'Q0([,:?$c`;EjihV#T#BHo92I)o8@uI<+79F=A<f?b(VE`2.j!QS&WA=6ekEZ9S:[K.HB_X7gRLS./Ka?GHK)
%>beg\:KDLqmVJi]Hi4jpgCAJ3?hLOM".]m$E3EXAJ;Rj@c0t<US>MF=%E7f/X%kJ8RlOaF?GGc1.Ae\P]%=.6@,Dj@rF1#T?b_t+
%>mJ.@?GGcQ-7@DkD=DoNgnEg_EZ6-==a7,W21HCtc7m>QIRR7\,KN^+h<S,o\5i3e,J!`ie0L'Ur2B6g^]*t/f"9P;>3bBSV%%K/
%5jke+Ja`7^lBbfDL8a5o3NdKZ=,m+PC=`Mghs*.pqtU"%J(D>pYKsn2eZGd=OeM7:F1[[?c7@J3c0t<]P#HV+?iCJ.61=KI/l.W"
%Z/P0E@r#-H.J:=^H`pfLXa[ijB\7\1CoLBrkrq@4>+[Mcfb)33Ab19IWc.PLJaCk!IW]h7LVMHE\eTQ6hsbb!jgY(D^Q3;pbIR5p
%*52+C%:8d::M)4CUUtg-6hRR1jo.oZHi8]&8um$:?aVn4.Y`\jf?`hchHLu8)DAbTYIQMSaM!$KXmBC(mCi(;rMj)$E?F'\@[Lqb
%GcX[DXDTaaq5o)JSZ#J+YMV\.Xa[rF,F-4`V>'gDY"BY`ou68u^Tu#YVYBpegJ!#kD5qlb?`j5#C=M4n\OWhSRaq$o^;2"\4nnIU
%IAU#\Xa\"MnI9rN?brmCNO.*'hWn5`f?t9+@INk>Wd-'r`J2%W0/ptBgKnjEeNim*<P.Y#&`)bS]pm+l2UoEhc:mrel<!(KQ7/oQ
%Hi4/n*c-#'?aX;j]qjWUorBhV:N%tcG80fJX]F<D8"R[*me*X;Yp!n1"S_amDO=jTm7?[<>HPQgceV54r*I.D88$Vt/VDmF=5G5s
%b:gQr\+ul((HqYSK]Vchgb-d8U!FmZhRC1`ja:_XYe2[%3Ju=&=lOk4Csh4>J%6C39[7OrqLe4KHsQNjM*PVRV?H0pibq?7;`CR[
%420q6goS6gq/lH#d>MW]rUA+)=e/Zm8$JEhCO+e*T%o9#I9r9^a&(.XbgH-Fnb2!McP@S)?=sY,*kjdBGlRC0Q++$gCY@J;[C"q1
%m^u]s2QqRQ]ra6HP1P-]lIbE/If&QHrc@VIHhT;:]_Ba%mX';i5JDF?hAo5MrmBbQn&*TQXS6^SDpJ6#3q:oc3]d&u*PW'O]W]/f
%N;*#,m$jK6RuQO!gWrq3DskU%rL<]EFS9l)R7;hem2]5Nc7JoVhgW9;.f8p]s3&IOj7C_u#J1MpLO[,)S(`;"oj[d<n#;/#D#)WJ
%jI`cXk@$:IqXiCUqP/=A$93LLpb.$fQ)6s8]fk+ts*i+;E,cB?mT#qb;=i3>D$dnc]u>TOmeG5a@E>U%<;-[$XHa?4,m88D?[H-%
%*R3Eq]NSJe*@ZF`S3'ht'[/]42V3-']ZkA-0>+F=Y:a`@O5a*>>od#(>J8lqGauMEj=P9kO(1oD)fK4N3MpTk]]I`]M`GLWihPgG
%3MXi*g3>+eRU(=M-#bc>a6+MW$HJL!BD/UiG(';)HFc5Q3;<%o@P>_;hFtRs9k!#J/,\YRpsQM,I!kJG_=m[%od#Lhj>p:']m5\9
%mJ[1Pbm.^l,9D#WSh(6hea_+Dh=2GQSBVNCAIAH`pJ3>hs1Sj?g:p[.IW,&V7%<$C*b:U]Si>D1VE[p,cDlBm\sS7s[cc^oS_n%^
%(\#`Sp#jKa')oG;rp5B>!RLml)eZph1]0l;gj=3ie\-C>oARS'ciSEZlKDt<B7Jha=FIitIQ2W"H)uMZ/D2-C[?#Z1kQh%.lLSTa
%'A-XKTBUQ+$hM7J9\@i:DgC[=]Z'Z4[lTH6#PR8]kA=BQ([#3Uqn)pr9[<H@DL^K[:N$F8)*HRkLHg!Tg:!'a6j.=I&KdDG)uF*(
%ZjA5!'Qe%J"a0GU-?f.V1.IQGBs#$s!5KX54"hsoH1t7Ar:8\4!8`/8jI^fVM8([Y#MPO$nmU,_k,\L(=.&dXj3mepaeS*cmsf!D
%2BQdh^DJ?aEm1Y<2r&C)g+`-1RF[iBc/op]:"<oXCKP=pmR?t!9=HgOc<S"hIt"Q'WJ'd^#gLK[rIsp`WVarnmH;go\Ne,uXXR^:
%Gj$D06oa.aG5?LkM7!Tl:B&,&HcmZ9n?2piS9CON_7r/?C&KZV*r2kiF!##]oH^)ZRAb^@"$:nX"+K5:^rU-j"n2fto`G0b"D".s
%^uG%%f>S(>It-nW1_+A'q%KEqeM(<:b`aTp@f(&77SbK9cS(XZMFJXE&NolnEO'jPpLslO^5_,7.kfVh\G_C9cJ.q_]#DUn^V9>S
%!@7O3U7MgYI4uH;la5&%3KUs3r+F=-ajK6kEGu%;K4[;X$dBV5Zf*GRnSR`BG'6<tnHo_8<brbX4OVm27H1RDZmjj<"0gHj$KB7r
%l0l#E'7Vs[ikLM_ro2=jf;fFtop/M]8jRtjJ3*8O!mR1G_b4#;>-N0b=!.IKl(5i=;*IIIs.%B&04[g/4FXbZm[[/P?,*pqHoCBG
%0P$,)g5ujZ4mmONT8(ns,7LdMIAr_2g=*k9l0^D[Id+PY]Qs@Ks2)nG+E[POiMAFLDYKY'&<L\F_d2+eFL@NT+F*n-2XjK!.BL`^
%TF!B8'#)WN)1V'p/O9l;'jF2c4lkifKq2Jp/+!#K!mY/[Yd&\^NH971clIBR`XM24rE$3_SVr8!5QNKRatk5\%AY*.AtOJI_i.[.
%XB(o.Z$uSq*/]9U0P;'mL1BT4KX<?Ah30!oot85,&!FDCY6qHd<`_O1@H>fKapJ/*kKtok:f%$?>[MFgn%V$qfRTh?NF1@fbN#1?
%qjk@)HI4FkO82R1_5Xm)<^b5.V@-"pHdm^,Orcd!I&lY0\HDb<ZJa;H*tu#!MgF3JP+P_f+kib+&Nk>gkLH,Zgb^F/?gc"(P<V_S
%?[*5sY?r&&_=j&E^mt\ZIH%*:OA4YIGf00)lB0?@%b-/jHW6.@`_nf*Gqha+'45dmcUm!:L+EZjb@t22U)cDQTl(>Kq366Op(4sd
%dpbP%O\H[Yo=!9.SXN@QFe>/@Kk3`u^:3oem7m+"-:##00<.,Y1G<,'<aIHu5M>@GD/\WD:,2M1=V^<YFBUa?ce4r?2AmfKX"UNM
%m."Ldj<``qhpbG8mNoqQ1n4:Ic+O7cq&B/:c+Se]<-(9t\X,RQ770;5\X.g\C[*9(pC\n&gX&`0mNo6;RemE9]``H_6k_dnbt]:Y
%%rIZJ\5]Y_W@^:,PDL*O@2@)$(lB=&:)g<JUsA.-r-d7#5bI#]"BZcZ;ZFU`*rgjW'/GMd$$mC;\QYE7eoLG*M2jYaWU,?]_-5a2
%Oe]M?9ccmN!Fki'0Ji7RdF6F]TV"-sA0%p7o)j'5GNLH9`F=!\@u5@E38.Y'g#%pt0,BV3$a"PpTS[3/]CY^iZZB+3J#'3\o\fNU
%rQ)$"@u.=FXmSTH4:pT7XeuP?_n=JB`7t=(g.KdE(e\At\'m0.`g5N=s1,XbIIm(-cbEtJXbX%?B?u:aqg3e"H#muqro/Frf!!Be
%0/*=]NNJ-k5C;"-r]H1k0@$`G0?+cugFHD0eqk4JCMAmM+61P*O-[Lt?6pZpn%:TNGk-(Eci1,s[BD7@4F=O3=+#;g7-pi;PNVZZ
%Xf;!=p?+*IEWm%`nf](6HF:3\/_g-84o+gAandsbE0Y\cA:`))H[h#0[V^sD9oUeIT77bdoJbZecYhXW=:dHVp7:hYgpem"I2f!,
%D+]t\Yo6D\maj[@?5ueV4(#GQ*lP6Ck7\OZICafQrie8fR8*\;h>$Ir3-tA)qf`cEIIR'cG!(4G]PS[$g1(p,^Cr`(lgRG@p<13O
%,oWZ\$I7k-[W5d;SP6*3Tjm!B]32KlO7/<P7I:uk0/6*H^(P$),L?CP"&",q')co>^8l^"F.)Y*I:_0nHp%#</=1Xj5;>C`3<.5#
%Yf)%<1*EE)RK)o_oA.&(fFM2%f=8c5Rci>[m&:S]7K14!nD*rg`ijn1!5@i!:TC#RV+k2<?3r'EgJ?\cT5Su/Vr&;PZ>UN?,A.OM
%'kL6m[kG_jD!<Z8?>l,Y>QB*Mm)a<J]PgcUB5dLBfmp1lgW)6O1+Y/h'V\oY^VmPPPG\p#a1kpWe,DQ2D"m:#GCAZMpcFPmO_Jhi
%475:3;*N'i5I\?%W4LYeUTLM!c+`F+[dk<lm68&4qXQB>rp8J>K:a))cZ_MlT<OjPJ%7diWYV)AUB'@D03'/?_YTJ7Yg!EP2?!2,
%*E9KiQB`MO5![l#?SJVVK@$[>#7<LtiP,Hi0.5f&M.G@#[T3At4rYo#PqT>EAiDoT]nH''D=5`p/gu?sHYpZ9^[G/&7`-VX0V\^$
%cdE[dN:\fIYEURZr0CA6D;C?mMUa?n]@4b2^"$n'>P^P+MMf82\NXnYIYrWX/EjUhp7bhdiJi8UU$Xc*>%7_9Rk,*.jK518eh:kn
%QgAjHB$ea\c$0>$Fr$"0YJm71pT'G:H+!9eVMr%Qd/$)m*]_8&D6=&V5@2pgWikMRV`RZ]oK`o0p\hL!$EJq`Ua,'`q0l'k<8XW#
%Z#`]AVOi2R.C$,o>&GBt*(;44o-SZZ-Ug(7Q[$a</D]Os3o/';RO33)K22#Bm;VsUV%.?JbnighQ<pl\fPG^J375!UEdVWh_7C)[
%oe`n]bSh%^#?uf1Dm-.uqW#Ir>+Lt/Y3p-<LG&U3>ZiAEf%Bu0`XZpQJ%koo&3P40kUXVPK.$Q"Fr]Ajqc/8:>bjkk&18r`\%oWj
%6sQh^?Kl1MeVe@&J$b+b6V'^p5e06aJ#E>3`4&?J(n^Dt_(Mtu(GtZI*F,U&.\e)lV[qX5L*](>Ou2DP^[:9nM(,B[333C6d=$W>
%-6bAXC)+Vlqj_P5THGTVg%2cU)E;YccCX><I`&Dh_D$C'^LCbtEO]G!g.TtlUc<;S0IRa2TF'i"5K<S.Xj*3<+jV,sFhLVP`B>A+
%&$g2h]MNta/jB$5j4TfB^;Z9SF+p3J:nQIq?F-7j3aK)T?u_Q4d:@N9Z$C@>I'rt(Xj2k#T>)uk:=O1VR/_I(oEcVdb`B]=R.iQ$
%Is)VLnir1ua8F9PO&qTD!k,\!C10&Z]EH_<:&Tb-?39Lo2tRcPHO5BIEZ[N>\X*;'C$[3(pC]a/2"hTOHO3*FL42I10;18RgeVVO
%-%Il0fM?2K-0Vq)-@Q"KGu:?-A_OEQfioNjc8%t&cee5kGF$c3Ec,f@e2tjlaZY!os*(mDYVh-.WT/uQk<(<GR[O<=h8S4K5C=S7
%?G$"3o5FBa58Q710dcq`_>j#>8N%pnFNfdip`i,4HeOpbB?.sG=;TKAnaa#U]Che/G<`;1T%s6VC^$MbQef@<lXMGTo%@Mtp>OXT
%oYrtIVr=O6N.i9>&!'rOfJE=&KE#ZA\*!.Q#OCm2l^"IFn@Re]rkL>iJNmJV5CNY*5@`[)bHXiM]WlO*rGB`=P'3/0nQ6W=m3%:m
%YtMr%j9HId!Z&2m,RH&W8/+Q3+eJ-k*(eo382,5<E\J)PZ"cp?8NR=^6#UA,OGG!)#p=4LML=;*B@JRF^;cd;g5u[%;aH^[@r+8!
%3tAT9XA^gm5HSiXr:Q?tHgMqIYf.H6Q\IJG^nAq?@R1:[![JP\:IsK!Z&;"i*+J@r('[Y(]uU;%r5X488E<.#nDrd13"]XqV[1,4
%VetXTDm:p'^'NA4L^6c^gGf1>QEVFOVS"aOY9aMI]h9&s6A:,ELl)+F.T/T$&dO**rs'=%Zg3COi(o&D5D\EJ;'m7cH5D;+4bicp
%*0#NTG*GU:ncEVhoO)p+(peUhOY\o))XFt:OoT,UQtXN[9T@"T1,Ju6TLS;,]INt$O+FXdJ3=PH!t!XQRLm5fm7_0rB;e0b8L%Rj
%$tpc=QNTl0Z+uFac.GfZeQ2#Z4q'RfMGaY:K0ZnW0Gp"H2\Q^j5U;'`&<b$mo8"YXUh1#0;EgAb@4:4i`Jt-F=]rOsTFf4!n1UCu
%Q*pQA$`G45bW)7DN`=@B8uj%tjS-`"(F67^)pWapqDcT[\Zt7?G;hbdINP%b>C1MtlM0bsh$H7pe_t<Eh9%i%rbi5%U&XG,kM;2W
%P8gA`I6VGD=eZT8ciaL/#Jgs<.[/4H%1\3`4X$F)5ZA`A(K-nW(:Rca<6cR%PKEl0:OFTT5tnC.Eb5RX8Z&p]&;)6o16%Okj*$_W
%0p=:VJl'RrQ9ubV5>7TFJp*['MY]UQEWl"lc8r\;0pjm#ie);_0jo;Mm$MVFk6tbp^t=<d.\*F/@$'7YjARjF7(b3RjHG6_:'KIp
%LlD8&7A5XXTE?1>UU58[8prXc^l9^KP$KKH:]8),5/=)uKk)q/.eYCdPUm#ZPl`Lme70(C!s!QHO[2O+B4OgEFpf'E-.V9(csn8^
%4TO='F$rl2^*YQt4'dk4pH1+%2kqWq$n6daF+Ze)'?Q9gVf42\"=!Yc)T@U2KcpI5LiUUBU4iTWXIj/u8W-shrBN?:#$;e^)&"km
%Z7nt?W,Y4`R`2A,ED26.[[nd=dK#(Z^$$q;!t9VeXJA;+%N\j3&.sa)*D$WIF\7%q/qtf+i*!uDbp$3:%)sR;@Tq3aob](!W`n3`
%Y)o?T_Ke\5`<_nM0bZB<(*dIHE^n>6U?.>D>0\[rjU<(=rKPDAc$L'`Ee`CBUWAQR^dO>29[Ia+BVnoMZ;e&[(4!\V.2PLI?4%GO
%P;J2"8M_3I1lH'>UXk]!.V6\AK9\:B;u;e#N>=AiZKF<Teftg&&iN$F/]`Ku$68\]#br`AemP.:7#E=-6mbV6$3Xl]btbKR+uD\F
%Ji523XU3#ZM*+"e%J`<2&bS0[T#-)&(e^I*R,V.]4cY'X51jBX+f5bW_7$SC*+OWkd@TNOqHTqK$J+E"*s'h0ln"l,!;qBUPK*M;
%-SgmX:!c@@M#%I%c=#of?&jJnLa"iUeN1o5R<l:P$9=k&K5D=lV\8cH`Z*>+,IN8*VuABko\?fi7[L$h),SA75n&>rQ.):Sb!jI'
%op82t:(u&[EN7S0^le]b83m(a^4_=5R2D++Yp>XO@"F1;h3PlB(T(]DFjR%SODW)l.,^'Y<+0'miL6CY/s_&\5aNnhcst6)8Hg_'
%$'L-YTb(m%n^6o'q,>#7@M)0Ep^*'ZA?r$W&=Iht$3JnHF;4h56Qt?F6Za2*&qsYfhG[M`(-,4jO,KiC.bfir2^K`k6J3.<jieq$
%(@'t24k1i0E*i`b(AkCWE!7F%+nEaP'P>GqT*u>UnefGk`o[[kmn&NUC$,=f;m427:i(4VK*$.b=Mq'BrA""g#rnK?:mXNjONpMj
%)!LLS7dNQp&qVZ*M)d>`GY]L8]SHK,BJIV0=VSg@:!74]FcK9?3X#RcY4t9e?jRSLXJni:D;a*c^s3N)0as&T76q-?&=18MlcL$%
%@u7$'qM]t"$+[\3eG:mi^_@5(HZ9HFT[\B^pqX.imSeR&.L1C:/0lJ@=*BPq8g.*+VI:6E9Ia#IC=o"`q'6fJ^t*"#krBsc,ZCb*
%`%VsX+e:hM(4ZcgC)nk%O9]08+'8LIW1##Hj9/k">l@+8hpf$2erbMD6@J&3bYT#jLd@P8:d1gV)$b[g8"OZ:!$H:hbkqPCX)6)C
%h]d7C3@<qH6.GgR9[5kO/gbp>c_BZfSc/V",tKh)q>nbP_-[V(Fr>G_*2+um>J`FeEKJRo!*GI`qoUMq;\cqQ11djN*MAs^HC^JZ
%!DkQ6%PKBrTKG!kIV*7g>6Jc_3$[6i0ZJ\aP=uVIC+NJ/&!9heWPa<RTYm._"T_8e\0)teTYbfNFbW^7A6T\qII2&K.&@,=O9L6(
%fKboSb8>hJ!<kXR`lP%dQ%@C?%!L=7J=hGCSKH[kY)>mA`7^3hP`HB$,]H9V%%i*l3i'TW4%adC</ZI($j3kQk!`q4U)ChWK2amM
%i'NQ_"[!0uj]efZ=<QVI@YjfN0;[.8d("^a<5q9W#(hqjWG9Ua!K^cL[2u$f/B1d6'QV4jWj"*a+aF4a9d!cB`E9Ro&F+ma94=j(
%Ip>[,aL#hSSYm8AW]6`g=8lS39*8'(`?UKH8cD/F0QJr]"%s$V"""P4oR\;RrF\Y@.Nad]$*M`0K"g!5q\6SloXuqP=G2t6M@`3X
%&VV!!F<r0`^54ooOj@6E8-49T\jf9mBEc:.aloUE,7C@Z9T!d]@6fheiM;4FGuN2K[a#F97m/XbC-f_X&HtWA$W+W/8<$E-mOhq@
%ha>?a!nW;H@f_Mj(n_as6#urbTVe>IEdmLVI`g^:]L.#="8$32aI.Il^t.PP%g\OO!H/tihfi]TYs>8(Kn4%J4InHn93doo;kP,j
%,[bC(7d4W0@4N=\9EoI[;t.L;W;qj;5otrWg$@tu,fU^`@>[K-*Yg\O"OrKbaCRW1L<(5Df94@';maGAAA!&>kS;BN\AI4ag>s/0
%lI1[*Y6.KJ&LJ'\0YeQg1K@jk\]SPMVc5jC"N25:Sr$-pS`1np'-f6G[P:IXD)fWY?_ROWP#SsW5.L38kF/!P]BP"]IoFOC?2#52
%`Ni!Kb/H-1kXlVghH8>o/d4^VV%;Mc6_RV>;!n*mXNN<21RZ/A&-26!_)Fjb&Rjg>Nf!gK0rMJ\UYm2?e$hCf'FE]JhAeBimjda>
%q0@cI8qS9""_ui0_ghbXJ88]e$j1]?25MEt/9)K^[Z/J=ODW/N.,^%]=[?>F&o#[]pL4kKa/4P,E^Y@`[U^NGjrYBA(Gm.BNLKt3
%jr)e4^e;$XMh0+e6Yh5X/8]PT&m1(p%l@7_!rKK1L]D+ga<G9!!6GeK5'mWu9ZTp9j8f1'#*tj,8OD?`UsM1+PjOs7CeBAZK1J<u
%3qa,NBGn"7UBH8c1#\8($G7I59#.^NHM9Gn>subqeQIf=T\i"!N7%F&<i*'u^8$%SQX7W(@06N^HG29_,)N*P2Hg[)R,.qs,F#V?
%D-\7ao+e2],)]\OOt+_m.&!BY0d44PC-5>X+$(sO$^h9S7Be@k4HA3pdT#ZEpdm$!,fm_)eu!1EbQQ0`lmn\/Cdt$FPt@0=+\5qd
%^9D_KVc)I6:iF,o&NF6sKje<Iaa*A%nN8f56t/BE.n1K_Z0J5W+UVHY4GkR#@J!S@`XNOL,@[T29Hs?mj%G*E19a$](EV>K[=bl6
%9i=`6k:,>c-rg&)jqf>h2iD+--lrM\7G;5p=J1gUdt"DY#DpQi@$')]lag2K-3H,sqKeKuAjC:5&d!LG'I\Qj*=`U*4t0Z?MRF0S
%>f/q>%25F`F%KIJVLdG``:+uoYu'2L13k,YdV:PY)8/Oe<R+O2kG\n2+(MI0`+gNf^'C]P"q+0;KN?=.&rW$KT>h_J"@NDUZr%'a
%1pEB.R"`%G_-D^I@58kD^<'8:dL\?'n<l+rcbug<=+^-/Oii(u09t@Fk=)3A"!\Y=p_cl\Z';NJS:Gm!)Y0e&4uH,mO8ut*L>RU/
%VdSH$Bk"^(Q'ebsK%kkW8.(ikV&=N-SnfULkg573V$[E96V\=+qPLunVRT;#!Xf[jJ"6Xq6!!VVkd?`\NZXk0=@LBF:[EQVj71\F
%9ed=,k?]Z/Zla0?l\BOTHHN[=m7l>!=?kU7eb\6TJLVH59h^Ehn&)NX&FG6Wbkg9<;^4'"Ro/A57=I4V88E_BKVbBr[U=PD?ssgk
%59(7g$CDXL&ab<m9_r0-U)YnJ8RDdc88sl8H=`HpDJ+gL@lSGdE@+'4p`=Xs3MINKK/#$8A($l)XW+$7GC`o'a8nTd3^J:A*fk5B
%b1joRU<WY.q&-FR%_<GB/)LYGJNo#pD^cJI`"L'bpihrkM.J[P;*r2T,=E#2Ci7s-K##*=7#:NbL_+$0*!H16&BD_5g1H-R+bgjH
%E\K?le%-E<SlTAW6Z6J.,H=Xp!eDkW$M5_Y64=Xke;=e]6J<q^KH*C:OFrZ$\VLqC#9tk!n&aE98T9!P7#8iNf!L\c)L:8R#fI#a
%U)I[#&g<09&TTSbEmqN6"PX#/6Grn%(31!20(J`ANhsC*S0:LXHKSqjJZL,6KCtHh3]+Y^HPOHG3YX8X!_===8//!S#cU0OU3.m)
%U^hMYV*d6ieJs$6XoV]@nm6#NR_[qM`;sTO`'f],_Zp`;%%Ys*b.?Rn'VS'/Q0M`m@$DO?Jm#(.af$aV'c[S)+GdQqjenL<lG`ZM
%@,?FSZ4(,.=W69\gd4WV;QPH<q5&Yts)E.j:MJ(6$:b=OiLu4[=%fQ1S09qRAM=n?ZC$MZV7<:fYUEN:Bb0&'Z;TD+A\g!lD47D6
%//cQ%16lFr,$>+[OXuO78/BKV_"Xmc#quk+ac`U6!)=?G7,S38NBe>lE'u?r4^q>9QNLb(#9N:5APA.j&gh*+7^iC2#;Os8+=&e;
%@c^dI2C]7B4t.`ff9fOZ(D(KnO\FI`-<L8f[W#=f+f[M@*f=H72&)_daq4shaS-*4[bW#AUXVKY\muH."3j?gb>a-,HNXQ4Ab)67
%`jH>3RmaN=Lk[D#U+sh]%RtgkM3i8]N[,Egf+ZmGg2WWDl5_"K/R\#N1)n_XGE-A(DD97&J`kcA^0Z3go2IPQ0"rAj+8B[BjbR5j
%3@5PL#>pC4`tT'CSoU'754`iB$_7>/*O,mkS>V2=MO0P;j/2nc8mkPT(\fcI;2?pb#\H%"3b(fl'RKBbPt%OQ#c"d^]d\Ou-$E)r
%'+dBg=ZBBXjG5XQ`d%87_9fmA0LS57NTeH`"]Q:K;\IPbm;abS=\!ut=D`)aV2RaFWBeH,fi)8eqM?bEnN\oj@OYe@7N%+uaoEUe
%0B;(#JMMcq(J\A:'X-J[1%K&8"G9e;h+5EH^DU;kV#0tC6$f!)96%g.Tnd!NKq$5t?BR&<(Kn9+M^OqLXS&CFR"2Ju[?-OD%>9u1
%]=nVVEJ1(IB.X?]JgaW9)(``LN75?n93E?q4_so:lretWUkE`Ra!dtsOXuGj\3J!KYK2sR^eG568SCe,hO$ngTF>CFb4fF7Otb,%
%6q!hc?U%(J(Jn<B%'r+i76=%l4;<&QZe5nHFnAaM)ij+sMdq@eeK'IaQ8O\''mN6W#7>E2Wj"+n0Lcs+;'(@$-`1=)b#@7Zhj9Ri
%PpdQ54Un\R[$Vah,neojKjIl3HfHr(&J(XlC=IS*$,Om)7?V-]DXLHhHB#d$.fuEJD*,n'6:f%G1',q$@f!0cjn]fj;ng#,p]>pJ
%g4u"j)+G!5C'6m<m5bCp2Yt'Q9J&bI8;\,t$%\;BS5i_2TJ7<.QZ[itUV2;1Z7c<jJ'&<EaVh's]>;?@Q&`&ad(E2e*3^t^KLBf(
%pF7pl1Gsu1Hp`J)NI<9iVl@]LUY0mF9[i2>N):s_#Ik'e7g1N#(WA6-fX<5<JVkS).A4V#!Fd5cNd0X'S@'=bOkPCO"AJK\gd@Yd
%kb0i,EN6ZMegHZd.K^k\`\UXECdPZjp<=.)^CoCLW%nTW(M$Gf.4cI18'<-?;/QKpMc#e_=96U9a6AC?+D3SJ@DEuU0\9Ai7?bb'
%S:)"7D*X*.c?P[cfFqW_;WrfifcRjefd4V&$9@-&X0=4s,$bZ;?t>YPOL&&#*QJL!M9%4lGBp"Vg8BJKKIR/p]h%irk/Ce)5A'/(
%Lc.Gn@iuPbRGrNY)uPrtT-\Ni1K,1aZub=O!>tBR#?53$?<@X@RP#!/Ag/e(1<5uD>,Vt=_2B2d*n=InmnnA!XDSqbR'<k"7L)l5
%5iEO%HEg77<-4%hM@pY*PCTBRVe%"_f1>`C4TbBXX'@LNJE?EF#In>u]2#<+<Sfa[RbVf&[,R!TYR_<XWF?1AF2O(J[tDt0$qmBf
%`W7a`;N0!_&#!U0cUGJTJp#3M9;$bHA,-DRfLIJYUVtH[LHE'39kmrXBrLm$]KZgEl.QYN>E-?g(eLS9Gj5<U<M#"W;o\P5)b4!u
%HA$="gHL=K.osRXaHHf,n5T3T)McaRMraT5Xt;m\eW3YlF0V$4p:1mkjB\EQiE4^??uVGU&_<t[HL"[B.ZaUjM^;\!0?T*G;6Q?d
%5iloX0ma3X(,7=!O?9O8`0E4I\V>+B)J9'C5],(E%#[LU?Z4M1/5&.:3ueO&7EBG4/q7[<)&W\]kF"kD'<$6Z+d(+ZAGI&W8B>M,
%ZQ@42!Wc8ekXSU<jT(koKdqDA0N4Cu?rT3R+U-"3YXF>H[_ndcn;gh#))]5qNZs7I@%^F>M4l6u$oJKkHJ7I_/9:fQM6fIcS5KCM
%-Nu+_I;,"PVgR:uP"NQK_b<K"#Q[huXfGq8C0<EY@@3dJO\%>o1lJ*\-&nf8C,fqSdR[mIVGV)s1^m2,/%qBie3Sft_d@EAW`IJK
%M8G3d`QW<jCSb3g/q,RUPp&W))GI24"rPn5+-NW=Es_tTdUYFNld.C,EQ3mdjR,0s;m7&mB.\*A8)=li$Sjo8OXDTfAjn8qPg8iJ
%FPX8ogDILm0T0f6\s+mA<2AA7"kkU8FWhJj#XbiM,GWs&M]#g`@)sW":bAe$IY,mW[(XZ*VD:98,=jg&,"<s!YW$!^KIWd\NAEgk
%-c88RHIq6q##2ot66qSuXb@\q8?4#W!fLGjTLVo;Gq,&P3?t)Nd,"m^X_[21AF%>S,R_>"RKY>O6Vd.!e>5e\r<.m.!Tqc!68U2,
%RP##qeRUh+1[5N2\td!c3<#'pjUi?)&<#+nY4X$W<0sjG_Z;J#JJ!7h2NMtUV,C*&]7bRm^_=q27-@n.H"up`]kuI:i_N!bU^]58
%&H`7MR$8oS;cp+oAK?_=G-#i*+KQ*.N@5@sYSN3%CLN'Z;Y#]#R0>s*Pf08iK#4UPkEo6>7&tj?G!u""KUe7Ql)0"lDB>Z8`dH_Z
%=QPg$<loDJ.s[$j:;ZLfLqJi8@)P/7ph1[A5,q/U$Kcle^_W(?R/a;\YOdQ\+o"e.DhcM1Ih^<[@*hbDJ</YVg/l'`=Qn]i@Bs2V
%0b"$VlECBo'JhEg84)Sla2/C#_KdVjI2<275L."[V*RLF8M_6G3:g]SVONF(]*"]Wl%fbdW;%qeB8a4P,$E_Aq"d+J!9;(doh"<K
%,SEZN)6?(2cZes+&IP(d2;NYuFuZ`7M6E'NiB%YYA[*OV[$R]lW[&=C2F^fEZX!Z)R>e'4!1+lc78EL+&(L\h4917B3KEm(TorB4
%%=>'BaGn%:./ou/UQPB[e*jtHO"_&CFs+c.&BGKLqA<U(-HWh[C5!5P<9?]M`NUd"Ei-Fb`&Cek@^RY*%3hL<npMWC;^W"/;5ZIA
%QAmq:H\1h-<,jK)B2IbiQ.r;&0&&-aKg@s[VPG:O,!hh0U_OUm=ZsiD`.,&K`'rP&BEcgMo-i/^90N[c7:e1S-Ba$X.@q*LQkE/0
%ROPE40RV_+&42V%@K>tq;Al=@,]0-pO<956P>$[^P;nfWp<oB!ac;RmrI3u+/eTGD$%Qeb#-9dN]:+McVc"\i,'DH<W:eAu.uNR+
%+d,bQ5c,+7VokJ`mtH'612Sg8n#KVCPiln+Bmp]&Y)52r'L]L`Ua^#A()=4CQI`:=O$361"_7n5,``sRD6M!t6<*<PPr6S]#t_Ku
%&?27u10dQkVEth<]f#S*&h6;Ym0,8H7O",>i1:5(#(ku_>/[.'@8_4k-=Y*gEk<CE5,ni17'3O^.!*93;^'YXp)TgrPaeY."F,t6
%?[g,&i%Dd/?r(u4]r;f+FJI9;J5g_XmGsWP%%rr\YIHl,ekY-?XlOrf!B+c5H5YpV:foBeCJ@.`6Q0+U/_e%JM3&N4PX.?J-3`kh
%f14"lSGeU\0kO]gArEi5Oq:D!OsqpH[$/]M1*KSp@RHqMl6o>08a+MeS.ej>Lqp%Q>=@VPa;Qf)<+=j+.;mE*PX@d0+TreiR?+'r
%+j\Ju\LlaIX5deiRAlu#=0g,_TFdMsPK8#,:C59%Qt7>^/01*1lkH<%q34L3KZV;pn?JA1+(M[1WUnNDYt-8N4$*UF2ojZ\mLu1<
%L#3&C7VY+tee/9U-=k\,X@,Ds$"HJ:U@pt`U!6>Y$Ia.W9_"Y.dS<br3O1VHOn;s(s/AEo!@s#:hr,]^KF7C@_D3QE>o*kslcle2
%Sk.(P!(\#^C2-a51RUn^`fabI5f-$m&BTOP,r#r+1)*=;%u'(U=`[B5T^mSbG-#N//G!G!=Xp0H[#'ue7%.'F/Hqh]-aCfR;ck/P
%"OsmL;IU5qs7T4XR1Vn>)2Y2j*8uGXQQ1ooR1\Q=dpX$3#u33@+c3aj6eTU2pQSV#5g3b$01Ou]+mO,(J(\3QQ7d=9DA?UPY2S<_
%dkPY^*N)QIjG"aia@'&RG_qSg3oc#@<#U&5E\PfIF;9ADPd<qUa6J0kg2<Pn`1@G,b(><!<so#2X]2\>4"!Ju%0^=#1'("Pn6.Ib
%nu2n]Bf1)8L1Vug#;A]nA2+gQluEO$aXEHHi3HP6KR)oHZ=&clE^FRr#_t$CpbBZ)*epW^anHJbhuYH^5n(Z[HkAmn+nt!#W/mlK
%?@W)68,0qd>o-C/F'-Lb76F[n&8KH_-\!:rPK^MW)-*'F!Zh/;VF=%s(d(NkhWIT]I,2tVQ$Z.QSd\g&#du:JX$.Rs/*&]o#/Ue*
%6uEEeqA`,Ma3=0q-miL]_l\5<A<.uk]:<&]n@Uc>Gik5YNep"V&*m'n6uSNBDN#VEmDC(@?4o_!MM0(s6e^Bt79<U0i#m-QOc4$*
%%&Pt?FB%"&&_c-pGcL=@6b0%GlP-NFQU,Hq(W\.c,aK]Lq2rT`_pE$&'Jb%aPC`+"OZe1)1i(*nbabcS0k0u3_seLO5Eu7BlEX,A
%2Y5"Q2RUu<8Xi&<>U*0lKj]`9S>;am-m%lu`V_!H3rgI]A5\hWJUF/c-Q5ie&Vd!u\h<-E1Uo!%@aRb<4;K9TJsT6kJg&.$1162"
%[2nPO(;j"m,L`SF&7$4.K2<qaL0+N).H%X3$6gsFT+9qdP%ZR%ML^f!C#f]?D4Wc?<Rsa>.M(&lK-cOl`+77><Yd]m"cml-#]lfh
%-RGY\mZ]R)^9@p#,`RW$>pj\+3_,Dk1<`:aK10n;YL(hPMR=$>Q]t&dFr6O:Le4AF26)cpMHZm6,E3n0lBXRJX3+coN>AeIa>#9+
%"uF\`H%2!9=rQd-ZD3:Ck(M'Q,1B07)O!-a`/:=B.<0G`&k>@&<!Y!f6t.5si0cP;A,*nQ7uh;'[$VV!%+Zb>`l&JL`La5^<T8i)
%BQ>ZJ;jbE8BGHQe8Fr9`7#GJ-]8]?$kP+%C"WiD*l#HhZJ&Z)ET=oRNqUNSfkN_?Yf[e<hJ&]pA]fGl`Ip54/@MhId7.;%F9,F?7
%&d%@f`W-YT&;Ys<,+u+gqZsDS<^@TF/V8MuPZ5[`MA5t@7-JGpK7Iis,B[=p`k$i&I7WsAUlrf9lZc<1-JUeXq501:<'A2`m?!B_
%!An3;"c7qi[/R<<^=o$!1!a?+J1&oFO=j5fnP=t^dg$IVA:+X.U8'tJLquSdH4_=&*FcAg@r`QGYU[03@TXu1X6X4/*jq!fL.:Cu
%0&UH2^//*3*R3;p^eFtgQ;!UPYQ66WHB8D\;P:n"#78)2Yr<9:k]C7hG_-7(Z-rg!>F#k0h+pFP@p]b#"#Sk0Md_Jq>o/^SZ]/`-
%Ri^3rYhdfmAV[!-e.,S(*@;8d'CoV-6T%.Jl5Y(,LeAPZOf"g9\PEk``=Qo"3$^jbWa8EO1t:\WB\K@Fhic5&pt+ea00<qd.1pR@
%h\7OKBNl;Dnd)-(=JR!L]Ve)&S6uT>!'P0'_rrt4YIbb^UidEJ`o+gGE:DKm/3Td#O$L[(YR@&Zo=tJ1JWl"P@R,I&ZXT#Q$Led\
%Z`U^klpH#PJgV.t2i0qb03_2*HnA4U`@bRe$+r9(*uVj.@GKZ_C2h7l)Ip(q1!/@YhM![>TL6_(;I[1&_Sf"l'Np9NeV,>T<q0!+
%`FMG=E>(TWQ$P7%UR!+\\;H)'>mTLD.I/CJ"(`>h$Nl?lC((E$2JAFe^:Z"O3^o>kZ6X>I-?qKs3?=\R&.j1"8`NA`.SR^:q.;D]
%R/*?7!n(Hp:u"[0M3s&rFED(Z.ZA?d"U%:k0c>C5mWP@-;;s3K#3GtiM8b)snZ[%gW3LIPAA,&"4$:/]Q5_,jpCFV2?5Gq41E$?c
%,Dt!jUW*AJ%u#1s_aMWp+sEN&(rgUR$[Rc`oE8-U*Qpeq#YEQl64%?bMl;$?:<R+6OH57I?&jUo5Lm3&UW6;qD'&i/X)cD:oJF>l
%>\#HCRQt`cgG*L)N6t+)h#_m?I2[Buj2+n8-lHW['b".gi9?#QX7<Rm5j9lFebCA77Y[rUU$Q".eJuq@D(r$V*K82Le$cMD9FmM=
%@esf?(d/RCka:lq'+$=WToD`X,"7@J4o;,0GCb2I\G(X-_oRg8$5gn8bYtF@#!u?W+qf2gD$T(G$:?L],Y?O5&jnlKm3#Ua6u`UT
%D!PN(l;pY$_GhS*LZ?cF74NXdhe5JhVUUQmWOO!U5V<)4QV?7YGp-6.r%]tLXjr@"<Gh,4W"?;B"*D!S3jfb?$EEq10LH-5!t`Wm
%('[H0`91gc3f%9LE\)amqI%YB>KA5X>Un3K\"t/S0nU#rk-/j['LeU`Y=V.Vah61Rk^0eHC!k;&]>&_WU<j!RO/X(76m8-?KL`H6
%DHO\r<P?@@A6NUj&j@<JAd<u"dG?q]Qpsc9e6AJqT$r_+6*]2Ldo6'eKK?GpO%6!d4&'ocs)#?HhVk6WD6qXbWoff\#A_L,4A!\E
%9-^<(qR''acP:Nh[Bd'j\ZpbtlsJR+H,JIXhfHAaDJ?(-277f%rSme#aj30f2m)PX-i`@=m,[VBFRh'`_(T<UD_>qrY&5l3DLYpi
%%jLM#IXGmFj7R$MrrF0FL(=~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 3889 1842 a
 currentpoint grestore moveto
 3889 1842 a 0 TeXcolorgray 0
TeXcolorgray 8888 783 a Fo(Lev)-13 b(erage)160 b(based)g(sampling)g
(for)h(classi\014cation)10464 1310 y Fn(Julian)91 b(Kopk)-16
b(a)92 b(Larsen)e(and)g(Jesp)8 b(er)90 b(L\034v)-8 b(e)91
b(Hinric)-8 b(h)91 b(.)11564 1579 y Fm(Sup)-15 b(erviser)121
b Fn(Lars)91 b(Kai)f(Hansen)10101 1950 y Fl(DTU)62 b(Compute)g
Fk(\001)h Fl(T)-16 b(ec)-5 b(hnical)59 b(Univ)-5 b(ersit)g(y)61
b(of)h(Denmark)11223 2199 y(Kgs.)g(Lyngb)-5 b(y)-16 b(,)60
b(Denmark)1222 b(Cop)5 b(enhagen)60 b(N,)i(Denmark)p
0 TeXcolorgray 0 TeXcolorgray 23021 1553 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 23021 1553
a @beginspecial 0 @llx 0 @lly 309 @urx 37 @ury 3401 @rwi
@setspecial
%%BeginDocument: images/dtucompute_logo.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: DTU Compute A UK.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Thomas Leibeck
%%CreationDate: 1/9/13
%%BoundingBox: 0 0 309 37
%%HiResBoundingBox: 0 0 308.0235 36.5889
%%CropBox: 0 0 308.0235 36.5889
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                   
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">DTU Nanotek A UK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2013-01-09T13:32:13+01:00</xap:CreateDate>
         <xap:ModifyDate>2013-01-09T13:32:13+01:00</xap:ModifyDate>
         <xap:MetadataDate>2013-01-09T13:32:13+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>32</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAIAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8APPy98ueXdWt9Is7PSWmt&#xA;I/Lkw81o0DpaNqCNC1sJQ6rG9yrI5qKtgSUw8lW+i+TYvy/8w3Vp+jtNutEu01G7igkat7Mts6+t&#xA;6asecqRHjXrSmKlNptG1y2/5xy0nTntbkTRw2LanZQK/1r6obpJLhAijnX0SeQ8K4r1SPzf5tbRJ&#xA;bKD8tbiTTNFa3M2mWen6aZIdQ1U3CI9tKZEBX9zSvT51FMVTC9uvzMfWdTtrbzJqVvaxahq1pbj6&#xA;tayUjtNPju7Z+TQVIaZih33GwoakqoJvPPniPzbY2aa3ePqFwfL9xHof1aGSOZb9GbUVciIPDHEq&#xA;8geXw/iqqu/njzTq8MuiPf39tfRaZr0eoqkHoyfXoJ+doiSGKnIwrRQhrxPjiqXWfnH8wI9W8nad&#xA;petOmmPpthLFLfR1jvZWlKXsUki27MXjH7tRVSoAbc1bFX0VhQ7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWJWvnK7treyutZjiFtqNkL22a1D81NYh6LIxNWJuFCsD1&#xA;7DFUWfPOkiIyehckRCVrpVRSYFgKiRpKN0HMH4eW2KrrzzvpFpd3FrPHMJbdBKOKqwkQyLHWMqx7&#xA;yKaGhpiqxvOkcVzPDcabdxek0Ece0bO8lwKqnENsfpxVbF5/0aSPn6N1G7CNoIpIgry+q5QenVqb&#xA;MhryIpiqha+Y/K8V/PqtvZTLcahHbDUb5Y9lRJpbaFZjy24SLIuwP04qmFh5qhnsNRvrq1lsoNNl&#xA;kjk58XLekaGgQn4v8n8TiqFuvN1w81lb2FjMtxPei1uo7hADEvomc7BxuYxyXelK9xTFVXWPNY0/&#xA;zDY6WI0aKf0/rMjNRk9dzHDxXvV13xVuTztpcYkMkNwoBYQVRf35SdbZhF8W9JZFHxU616YqhLjz&#xA;tW6EdvF6caqgmW4RhIkpvYrVkZVNOklRQ+GKomPz3osgfgk5agNugjq04aUQj0hX+dgPip1r0xVS&#xA;k81aifLV1qkNkGvIr02kNm2xb/TBbKrULUeh7GlfbFVGw8/RXl1fSR2rvplvDDNbSqFEkgkZ0dqS&#xA;Mi0V4yvXqMVaufP6MjPY2MssRtI7yK4cAKQ8nAqUB5eI/wBb23xVFSefNHjiZnhuRNG0yz2pjAli&#xA;FuFaRnBanECRSKE1rtiq258/6RBI6/VruVF9QiaKIMjLCoaRlPIbKrAnFVXUPOljaS3EAtp5LiG3&#xA;kuYVAQLKsahjRuRK7GvxAbYqpWvnRJJSktrL6sot/q1lGoactNG8rVJYIQFjLVqNsVTPTNft9Rvr&#xA;qzhgnRrM8LiSRVVQ9FPD7RatG2PGh7HFUHJ5002O5ubV4Ln6zbPGhhVEZn9WT0lKcXI+12JB9sVQ&#xA;9755tRaFrG3mlulFZonQAQUnMDet8Qp8aMBxr0xVH3+oaw2sLp2mxwAJAtxcTXBc/C7lFRFSm/wE&#xA;1OKoc+dtK4swgumXY2zCL/egGdLasO+9JJV60O+KrLfz3pc8bMtrdqwC+mjxBWkZrgWpVKtTkszB&#xA;TUjFVaPzlpLx3LcZke0hea5iZAHQRyGJkI5U5Bl8emKqP+NbeOS4iuLC5jliuTawRr6bNKVj9VmH&#xA;xADivWp7jxoFUZp3mS11NpRp0Ms4jhSZZiAkTGSNZETkTUMQ/wDLtiqW6T5uuJLP179Y5bmSVLeP&#xA;TrJH+sRzFGd4pVlIoVVCeWwoCcVVZPOtpbPcpdQys8c0iJDElXWOKCGWRpKtxqhnAPE/KuKqn+N9&#xA;G9SSqzrbxmVTeGP9yWhhNw6gg8q+kpb7OKuuvOmn2iI13a3cBaNpnjeNeUcKEAyuAx+H4ugq2x2x&#xA;VT/wJpz2iWtzd3V1HBbpa2nqmH9xGjo49MJEiluUKVLhq0xVZP5LM0yxG+lWxa2nt7rgtvHJKJmQ&#xA;lCI4FQIVQglQG98Vaf8AL3R3uZpzPcASvI4iBhCoZpknYKRHzpzjFOTGgxVMbry1aXGom+eeYM0t&#xA;vOYVKen6lt9g7oW70PxYqhJ/IukTCKss4eBFSF6xMV4StKG4vGyE1kI+IEU7Yqrt5TsXtpoJJpWE&#xA;8UEMjgQxmltM86ELHGiAlpSGovT33xVV/wAM2Rs9Ts3lle21SSSWVGKfu3l3YxEKCN9xyrirrXy5&#xA;bwTR3ElzPc3SXP1tp5jHyd/q7WwDBEReIjfYKBviq2+8qaXeyX0s/Mz3xjJm+DnD6IAT0SVPGhHL&#xA;eu5xVJ5/I11Np5Vr1mvlmLW1SnowRvfJdP6dIuRcrEPt8t9umKo//BGmFmkkuLmWaQhppmaPk7C5&#xA;S65EKgUfHEq0UAcfvxVqDyRp8ELQw3VwiBlkt+K24eFklEqlJPR5tRl6SMwpiqNt/LtrDp31EzzS&#xA;qbsXzzOU9Rphci634IqUMi7gKNsVUdY8o6dql39blllimAhC+n6RUeg8jqeMiSKamZq1BGKqCeR9&#xA;MjhhhS4uVjitxaEco/jjEvrLyrH1Dn9mmKr7vyXptxeSXqzzQ3UsskrSKsEg/epEjJxmilXj+4Uj&#xA;ata74qqS+UNNkLFpJhyF0DQoP97EEclAE7BfhxVDxeRNJjuZ5/XnYXAnDxkxUH1lPTkowjEnToCx&#xA;AxVcnkuzR454766S8h9H0rsGH1F9CJ4V2MRjNY5SGquKo218vxwaw+rPdz3Fy8XoUk9FU4cg24ij&#xA;jLEU25E0xVAWPkTSrOZZY57huDo8aMYqL6c3rqtVjVm+LuxJp3xVuXyRp7yzSR3VzCbl3a5VDERI&#xA;Hna54HnG1AsjtTjQ074qmN7oouL9L+G7nsrlY/Rd4PSIePlyCus0cq7GtCADviqBg8mafE6H6zcv&#xA;HAym1hZo+EKrcpdlEogNGkhUHkSeIoCMVU7zydEbSOOxuJIp45Q6yuUPFXv472UiqMOQKHhUU8fH&#xA;FWn8iaeyyUvbtJLhZEvJVMPKcSyeq3qViIHxdOAXFVa98n2N3cSXDXM6SPcfWkoIHWORohE/FZYp&#xA;AQ6gVDV3G1MVTDT9IgsfXMUjs9x6fqOwjG8cSxAhUVEFQlSKUr2ptiqWnydbtdPfPqF22pM8brff&#xA;6OsimJHRQFWFYjVJmB5IdsVdP5KsJpjcG6uBdGV5mnIt3JMscUbgpJC8dD9XQ/Z2PTbbFVV/KGmS&#xA;W0lvK8rxyzzXMgqi1ae2e1dfhVaL6chIp3+7FVk/lGK4eGafUbqW5hRohcSJaSMY2IPFleBo9iuz&#xA;ceW53xV55/ysH88P+pNi/wCRc3/VXMXxZ932F6L8hof9V+0fqd/ysH88P+pNi/5Fzf8AVXHxZ932&#xA;FfyGh/1X7R+p3/Kwfzw/6k2L/kXN/wBVcfFn3fYV/IaH/VftH6nf8rB/PD/qTYv+Rc3/AFVx8Wfd&#xA;9hX8hof9V+0fqd/ysH88P+pNi/5Fzf8AVXHxZ932FfyGh/1X7R+p3/Kwfzw/6k2L/kXN/wBVcfFn&#xA;3fYV/IaH/VftH6nf8rB/PD/qTYv+Rc3/AFVx8Wfd9hX8hof9V+0fqd/ysH88P+pNi/5Fzf8AVXHx&#xA;Z932FfyGh/1X7R+p3/Kwfzw/6k2L/kXN/wBVcfFn3fYV/IaH/VftH6mVeQPMv5gave3UXmfQ00m3&#xA;ijDW8iq683LUK/E79ssxzkTuHB1+m0+OIOKfEbZvlzq3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq/wD/2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:071375695BF311E2B11AFC9AE838FE45</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0713756A5BF311E2B11AFC9AE838FE45</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3eaa6051-bea9-4c78-b82c-fd2c950c844a</stRef:instanceID>
            <stRef:documentID>uuid:231626A527F4DC118CA4AC5F379C6F50</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5080.000000</stDim:w>
            <stDim:h>5080.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.609398</xapG:cyan>
                           <xapG:magenta>67.578102</xapG:magenta>
                           <xapG:yellow>66.796898</xapG:yellow>
                           <xapG:black>89.843796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.250000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.093796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.562500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.890602</xapG:cyan>
                           <xapG:magenta>76.562500</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>26.953102</xapG:cyan>
                           <xapG:magenta>81.250000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.796898</xapG:cyan>
                           <xapG:magenta>97.656296</xapG:magenta>
                           <xapG:yellow>92.187500</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.390601</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.296898</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>98.046898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.765602</xapG:magenta>
                           <xapG:yellow>86.718796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.687500</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.750000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>97.656296</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.828102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.218796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>85.937500</xapG:cyan>
                           <xapG:magenta>17.578102</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.906298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>89.843796</xapG:cyan>
                           <xapG:magenta>33.203102</xapG:magenta>
                           <xapG:yellow>98.437500</xapG:yellow>
                           <xapG:black>25.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.781296</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.609398</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.531296</xapG:cyan>
                           <xapG:magenta>14.843798</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.109398</xapG:cyan>
                           <xapG:magenta>52.343796</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>98.828102</xapG:cyan>
                           <xapG:magenta>96.093796</xapG:magenta>
                           <xapG:yellow>3.515601</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.171898</xapG:yellow>
                           <xapG:black>24.609398</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.218796</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>1.171899</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.765602</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.109398</xapG:yellow>
                           <xapG:black>10.937500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.718798</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.218796</xapG:yellow>
                           <xapG:black>0.781298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.484398</xapG:magenta>
                           <xapG:yellow>20.312500</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>27.343798</xapG:magenta>
                           <xapG:yellow>39.843796</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.843796</xapG:cyan>
                           <xapG:magenta>42.578102</xapG:magenta>
                           <xapG:yellow>52.343796</xapG:yellow>
                           <xapG:black>6.640601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.390602</xapG:cyan>
                           <xapG:magenta>52.734398</xapG:magenta>
                           <xapG:yellow>60.546898</xapG:yellow>
                           <xapG:black>23.437500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.421898</xapG:cyan>
                           <xapG:magenta>60.156296</xapG:magenta>
                           <xapG:yellow>63.671898</xapG:yellow>
                           <xapG:black>41.796898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.656298</xapG:cyan>
                           <xapG:magenta>38.281296</xapG:magenta>
                           <xapG:yellow>63.281296</xapG:yellow>
                           <xapG:black>1.171899</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.640602</xapG:cyan>
                           <xapG:magenta>48.828102</xapG:magenta>
                           <xapG:yellow>73.828102</xapG:yellow>
                           <xapG:black>9.765601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>35.937500</xapG:cyan>
                           <xapG:magenta>57.031296</xapG:magenta>
                           <xapG:yellow>83.593796</xapG:yellow>
                           <xapG:black>22.656298</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.062500</xapG:cyan>
                           <xapG:magenta>63.671898</xapG:magenta>
                           <xapG:yellow>92.968796</xapG:yellow>
                           <xapG:black>35.546898</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.406296</xapG:cyan>
                           <xapG:magenta>69.531296</xapG:magenta>
                           <xapG:yellow>96.484398</xapG:yellow>
                           <xapG:black>48.828102</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.656296</xapG:cyan>
                           <xapG:magenta>73.046898</xapG:magenta>
                           <xapG:yellow>83.203102</xapG:yellow>
                           <xapG:black>67.968796</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.781298</xapG:cyan>
                           <xapG:magenta>98.828102</xapG:magenta>
                           <xapG:yellow>96.875000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.125000</xapG:cyan>
                           <xapG:magenta>8.984399</xapG:magenta>
                           <xapG:yellow>45.703102</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.218796</xapG:cyan>
                           <xapG:magenta>98.046898</xapG:magenta>
                           <xapG:yellow>0.781298</xapG:yellow>
                           <xapG:black>0.390601</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.437500</xapG:cyan>
                           <xapG:magenta>36.328102</xapG:magenta>
                           <xapG:yellow>33.593796</xapG:yellow>
                           <xapG:black>1.562500</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -36.5889 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 36.5889 li
308.023 36.5889 li
308.023 0 li
cp
clp
[1 0 0 1 0 0 ]ct
91.8145 33.0176 mo
91.8145 36.5889 li
0 36.5889 li
0 33.0176 li
91.8145 33.0176 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0.91 0.72 0.23 cmyk
f
75.7744 7.8418 mo
75.8818 7.83301 75.9893 7.89258 75.9893 8.01367 cv
75.9893 8.61426 li
75.9893 8.78906 75.9482 8.87109 75.7432 8.9082 cv
75.0088 9.04297 74.4443 9.11328 73.501 9.11328 cv
71.8301 9.11328 70.6807 8.17969 70.6807 5.87695 cv
70.6807 5.45898 li
70.6807 3.66211 71.376 2.24219 73.459 2.24219 cv
75.5654 2.24219 76.2119 3.70996 76.2119 5.45898 cv
76.2119 5.83594 li
76.2119 6.01172 76.1338 6.11914 75.9775 6.11914 cv
72.0039 6.11914 li
72.0039 6.22168 li
72.0039 7.28516 72.4307 7.96484 73.5615 7.96484 cv
74.3486 7.96484 75.1846 7.88867 75.7256 7.8457 cv
75.7744 7.8418 li
cp
74.8779 5.07227 mo
74.8779 3.91211 74.3604 3.37207 73.459 3.37207 cv
72.5693 3.37207 72.0098 3.9375 72.0098 5.07227 cv
72.0098 5.15137 li
74.8779 5.15137 li
74.8779 5.07227 li
cp
40.5557 8.77734 mo
40.5557 8.9082 40.6514 9.02344 40.7783 9.02344 cv
41.6494 9.02344 li
41.7822 9.02344 41.8779 8.90234 41.8779 8.77734 cv
41.8779 3.81055 li
42.377 3.55273 42.8213 3.37793 43.165 3.37793 cv
43.8135 3.37793 44.042 3.60547 44.042 4.5918 cv
44.042 8.77734 li
44.042 8.9082 44.1387 9.02344 44.2646 9.02344 cv
45.1367 9.02344 li
45.2686 9.02344 45.3643 8.90234 45.3643 8.77734 cv
45.3643 4.5918 li
45.3643 4.26172 45.3408 3.95508 45.2861 3.69043 cv
45.7373 3.48633 46.2188 3.37793 46.5498 3.37793 cv
47.1982 3.37793 47.5293 3.63672 47.5293 4.60352 cv
47.5293 8.77734 li
47.5293 8.9082 47.6377 9.02344 47.7705 9.02344 cv
48.6113 9.02344 li
48.7432 9.02344 48.8525 8.9082 48.8525 8.77734 cv
48.8525 4.46289 li
48.8525 2.92285 48.0869 2.23535 46.8799 2.23535 cv
46.1533 2.23535 45.5273 2.42773 44.8896 2.75195 cv
44.6016 2.41016 44.1865 2.23535 43.585 2.23535 cv
42.8994 2.23535 42.3389 2.49219 41.792 2.8457 cv
41.7822 2.56641 li
41.7764 2.43359 41.6709 2.32617 41.5381 2.32617 cv
39.2764 2.32617 li
39.1436 2.32617 39.041 2.43359 39.041 2.56641 cv
39.041 2.56641 39.041 2.51172 39.041 2.64453 cv
39.041 2.77539 39.1299 2.88477 39.2764 2.92773 cv
40.5557 3.29492 li
40.5557 8.77734 li
cp
66.6846 7.35156 mo
66.6846 8.81836 67.2256 9.11328 68.458 9.11328 cv
68.7041 9.11328 68.9932 9.08203 69.2568 9.04102 cv
69.4131 9.0166 69.4795 8.94531 69.4795 8.83008 cv
69.4795 8.24219 li
69.4795 8.12109 69.3896 8.06738 69.2275 8.06738 cv
68.5723 8.06738 li
68.1152 8.06738 68.0127 7.98242 68.0127 7.35156 cv
68.0127 3.36523 li
69.2031 3.36523 li
69.335 3.36523 69.4443 3.25781 69.4443 3.125 cv
69.4443 2.56641 li
69.4443 2.43359 69.335 2.32617 69.2031 2.32617 cv
68.0127 2.32617 li
68.0127 1.05078 li
68.0127 0.916016 67.9004 0.839844 67.7842 0.859375 cv
66.9131 1.00293 li
66.7764 1.02637 66.6846 1.12695 66.6846 1.24414 cv
66.6846 2.32617 li
65.4082 2.32617 li
65.2764 2.32617 65.1738 2.42188 65.1738 2.55469 cv
65.1738 2.65039 li
65.1738 2.7832 65.2764 2.88281 65.4082 2.92969 cv
66.6846 3.30469 li
66.6846 7.35156 li
cp
35.6045 9.11328 mo
33.7764 9.11328 32.833 7.89258 32.833 6.14941 cv
32.833 5.20508 li
32.833 3.46191 33.7764 2.24219 35.6045 2.24219 cv
37.4326 2.24219 38.3818 3.46191 38.3818 5.20508 cv
38.3818 6.14941 li
38.3818 7.89258 37.4326 9.11328 35.6045 9.11328 cv
cp
37.0596 5.20508 mo
37.0596 4.09961 36.5908 3.38965 35.6045 3.38965 cv
34.624 3.38965 34.1553 4.09375 34.1553 5.20508 cv
34.1553 6.14941 li
34.1553 7.25586 34.6182 7.96484 35.6045 7.96484 cv
36.585 7.96484 37.0596 7.26172 37.0596 6.14941 cv
37.0596 5.20508 li
cp
63.8271 2.57227 mo
63.8271 2.43945 63.7188 2.32617 63.5928 2.32617 cv
62.7451 2.32617 li
62.6123 2.32617 62.5049 2.44531 62.5049 2.57227 cv
62.5049 7.51367 li
62.0596 7.74219 61.4883 7.98828 61.0137 7.98828 cv
60.1504 7.98828 59.8408 7.63867 59.8408 6.50977 cv
59.8408 2.57227 li
59.8408 2.43945 59.7334 2.32617 59.6006 2.32617 cv
58.7588 2.32617 li
58.626 2.32617 58.5186 2.43945 58.5186 2.57227 cv
58.5186 6.50977 li
58.5186 8.03613 58.9912 9.10742 60.6045 9.10742 cv
61.3438 9.10742 61.9404 8.8916 62.5615 8.49023 cv
62.5713 8.7832 li
62.5762 8.91406 62.6826 9.02344 62.8145 9.02344 cv
64.9063 9.02344 li
65.0381 9.02344 65.1465 8.91406 65.1465 8.7832 cv
65.1465 8.7832 65.1465 8.85449 65.1465 8.72266 cv
65.1465 8.58594 65.041 8.45508 64.9063 8.41211 cv
63.8271 8.06348 li
63.8271 2.57227 li
cp
55.3896 5.23535 mo
55.3896 4.11133 55.1221 3.33594 54.1641 3.33594 cv
53.6953 3.33594 52.9922 3.61035 52.6846 3.80664 cv
52.6846 7.91602 li
53.0518 7.97656 53.6279 8.01953 53.9658 8.01953 cv
55.0713 8.01953 55.3896 7.26758 55.3896 6.13086 cv
55.3896 5.23535 li
cp
51.3623 3.29492 mo
50.1123 2.92773 li
49.9658 2.88477 49.8779 2.77539 49.8779 2.64453 cv
49.8779 2.51172 49.8779 2.56641 49.8779 2.56641 cv
49.8779 2.43359 49.9795 2.32617 50.1123 2.32617 cv
52.3447 2.32617 li
52.4727 2.32617 52.583 2.43164 52.5879 2.56152 cv
52.5908 2.66406 52.5977 2.8457 52.5977 2.8457 cv
52.9912 2.58789 53.6836 2.24023 54.335 2.24023 cv
55.9736 2.24023 56.7129 3.39648 56.7129 5.23535 cv
56.7129 6.13086 li
56.7129 8.01367 55.8115 9.11328 53.9658 9.11328 cv
53.6348 9.11328 53.1416 9.07715 52.6846 9.00488 cv
52.6846 11.1572 li
52.6846 11.2832 52.583 11.3926 52.4502 11.3926 cv
51.5908 11.3926 li
51.4639 11.3926 51.3623 11.2891 51.3623 11.1572 cv
51.3623 3.29492 li
cp
31.6309 7.8125 mo
31.2041 7.84863 30.3779 7.90625 29.7178 7.90625 cv
29.2021 7.90625 28.7451 7.76367 28.4072 7.41797 cv
27.8936 6.89258 27.7998 6.16211 27.7998 5.04688 cv
27.7998 4.06641 li
27.7998 2.92773 27.8994 2.18164 28.4248 1.66895 cv
28.7607 1.33984 29.21 1.20898 29.7178 1.20898 cv
30.3838 1.20898 31.2373 1.29297 31.665 1.31055 cv
31.6768 1.31055 31.6885 1.31055 31.6943 1.31055 cv
31.8447 1.31055 31.8877 1.22656 31.8877 1.11816 cv
31.8877 0.40918 li
31.8877 0.270508 31.792 0.220703 31.6592 0.192383 cv
31.3057 0.119141 30.541 0 29.6992 0 cv
28.9248 0 28.0186 0.172852 27.3643 0.806641 cv
26.6572 1.49316 26.4111 2.45703 26.4111 3.98242 cv
26.4111 5.13281 li
26.4111 6.60742 26.6455 7.5625 27.3232 8.25195 cv
27.9814 8.92188 28.9072 9.11426 29.6992 9.11426 cv
30.6729 9.11426 31.3057 9.01855 31.6475 8.93945 cv
31.792 8.90625 31.8994 8.83789 31.8994 8.68164 cv
31.8994 8.03223 li
31.8994 7.88281 31.8203 7.79688 31.667 7.81055 cv
31.6309 7.8125 li
cp
5.33105 8.19922 mo
4.69238 8.8291 3.72949 9.11523 2.56152 9.11523 cv
1.67871 9.11523 0.637695 9.04199 0.283203 8.98242 cv
0.102539 8.95215 0.000976563 8.85547 0.000976563 8.64551 cv
0.000976563 0.46875 li
0.000976563 0.265625 0.102539 0.162109 0.283203 0.132813 cv
0.637695 0.0722656 1.67871 0 2.56152 0 cv
3.71973 0 4.6748 0.277344 5.31348 0.893555 cv
6.07129 1.62695 6.27051 2.63281 6.27051 3.99414 cv
6.27051 5.12109 li
6.27051 6.4668 6.0791 7.46191 5.33105 8.19922 cv
cp
4.89453 4.05078 mo
4.89453 2.89063 4.74121 2.17383 4.22656 1.69727 cv
3.80859 1.31055 3.22461 1.17285 2.56152 1.17285 cv
2.05762 1.17285 1.71387 1.19043 1.38965 1.20898 cv
1.38965 7.91211 li
1.70801 7.92969 2.05762 7.94141 2.56152 7.94141 cv
3.25098 7.94141 3.85645 7.79199 4.27637 7.36719 cv
4.76074 6.87695 4.89453 6.18945 4.89453 5.06445 cv
4.89453 4.05078 li
cp
17.6182 9.11523 mo
15.6758 9.11523 14.4248 8.17676 14.4248 5.74805 cv
14.4248 0.319336 li
14.4248 0.192383 14.5273 0.0898438 14.6592 0.0898438 cv
15.5791 0.0898438 li
15.7061 0.0898438 15.8135 0.186523 15.8135 0.319336 cv
15.8135 5.74805 li
15.8135 7.20898 16.2227 7.9541 17.6182 7.9541 cv
19.0127 7.9541 19.4209 7.21484 19.4209 5.74805 cv
19.4209 0.319336 li
19.4209 0.192383 19.5225 0.0898438 19.6553 0.0898438 cv
20.5752 0.0898438 li
20.7021 0.0898438 20.8096 0.186523 20.8096 0.319336 cv
20.8096 5.74805 li
20.8096 8.17676 19.5596 9.11523 17.6182 9.11523 cv
cp
13.0576 1.25684 mo
10.834 1.25684 li
10.834 8.78418 li
10.834 8.91016 10.7373 9.02441 10.6055 9.02441 cv
9.67969 9.02441 li
9.55371 9.02441 9.45117 8.91602 9.45117 8.78418 cv
9.45117 1.25684 li
7.22656 1.25684 li
7.09473 1.25684 6.98633 1.18457 6.98633 1.05273 cv
6.98633 0.3125 li
6.98633 0.186523 7.09473 0.0898438 7.22656 0.0898438 cv
13.0576 0.0898438 li
13.1904 0.0898438 13.293 0.180664 13.293 0.3125 cv
13.293 1.05273 li
13.293 1.17871 13.1904 1.25684 13.0576 1.25684 cv
cp
0 0 0 1 cmyk
f
306.953 18.8848 mo
306.953 17.5264 306.437 16.9971 305.378 16.9971 cv
304.344 16.9971 303.767 17.5859 303.767 18.8848 cv
303.767 18.9932 li
306.953 18.9932 li
306.953 18.8848 li
cp
307.795 19.7988 mo
303.767 19.7988 li
303.767 19.9668 li
303.767 21.3975 304.332 21.9268 305.438 21.9268 cv
306.136 21.9268 307.025 21.8789 307.578 21.7949 cv
307.603 21.7949 307.614 21.7949 307.639 21.7949 cv
307.734 21.7949 307.831 21.8428 307.831 21.9629 cv
307.831 22.3721 li
307.831 22.5283 307.782 22.6123 307.591 22.6484 cv
306.905 22.7803 306.243 22.8525 305.438 22.8525 cv
304.056 22.8525 302.708 22.2031 302.708 19.9668 cv
302.708 18.8848 li
302.708 17.165 303.659 16.0713 305.378 16.0713 cv
307.134 16.0713 308.023 17.1777 308.023 18.8848 cv
308.023 19.5342 li
308.023 19.6904 307.938 19.7988 307.795 19.7988 cv
cp
301.337 22.7207 mo
300.94 22.793 300.399 22.8525 299.834 22.8525 cv
298.198 22.8525 297.272 21.6982 297.272 19.9307 cv
297.272 18.9932 li
297.272 17.2256 298.187 16.0713 299.834 16.0713 cv
300.388 16.0713 300.94 16.1309 301.337 16.2031 cv
301.529 16.2393 301.577 16.2998 301.577 16.4678 cv
301.577 16.9004 li
301.577 17.0215 301.481 17.0811 301.373 17.0811 cv
301.349 17.0811 301.337 17.0811 301.325 17.0811 cv
300.796 17.0215 300.423 16.9971 299.834 16.9971 cv
298.872 16.9971 298.331 17.6348 298.331 18.9932 cv
298.331 19.9307 li
298.331 21.2773 298.86 21.9268 299.834 21.9268 cv
300.423 21.9268 300.796 21.9023 301.325 21.8428 cv
301.337 21.8428 301.349 21.8428 301.373 21.8428 cv
301.481 21.8428 301.577 21.9023 301.577 22.0234 cv
301.577 22.4561 li
301.577 22.6123 301.529 22.6846 301.337 22.7207 cv
cp
295.612 22.7686 mo
295.036 22.7686 li
294.903 22.7686 294.796 22.6602 294.796 22.5283 cv
294.796 18.5723 li
294.796 17.3574 294.386 16.9854 293.473 16.9854 cv
292.968 16.9854 292.402 17.1777 291.85 17.4541 cv
291.85 22.5283 li
291.85 22.6484 291.741 22.7686 291.608 22.7686 cv
291.02 22.7686 li
290.899 22.7686 290.791 22.6602 290.791 22.5283 cv
290.791 16.3955 li
290.791 16.2637 290.888 16.1553 291.02 16.1553 cv
291.621 16.1553 li
291.753 16.1553 291.85 16.2637 291.85 16.3955 cv
291.85 16.624 li
292.511 16.252 293.052 16.0713 293.761 16.0713 cv
295.204 16.0713 295.854 16.9727 295.854 18.5723 cv
295.854 22.5283 li
295.854 22.6602 295.745 22.7686 295.612 22.7686 cv
cp
288.277 18.8848 mo
288.277 17.5264 287.761 16.9971 286.702 16.9971 cv
285.668 16.9971 285.091 17.5859 285.091 18.8848 cv
285.091 18.9932 li
288.277 18.9932 li
288.277 18.8848 li
cp
289.119 19.7988 mo
285.091 19.7988 li
285.091 19.9668 li
285.091 21.3975 285.656 21.9268 286.763 21.9268 cv
287.46 21.9268 288.35 21.8789 288.902 21.7949 cv
288.927 21.7949 288.938 21.7949 288.963 21.7949 cv
289.059 21.7949 289.155 21.8428 289.155 21.9629 cv
289.155 22.3721 li
289.155 22.5283 289.106 22.6123 288.915 22.6484 cv
288.229 22.7803 287.567 22.8525 286.763 22.8525 cv
285.38 22.8525 284.032 22.2031 284.032 19.9668 cv
284.032 18.8848 li
284.032 17.165 284.983 16.0713 286.702 16.0713 cv
288.458 16.0713 289.348 17.1777 289.348 18.8848 cv
289.348 19.5342 li
289.348 19.6904 289.263 19.7988 289.119 19.7988 cv
cp
282.229 22.7686 mo
281.651 22.7686 li
281.52 22.7686 281.411 22.6602 281.411 22.5283 cv
281.411 16.3955 li
281.411 16.2637 281.52 16.1553 281.651 16.1553 cv
282.229 16.1553 li
282.361 16.1553 282.47 16.2637 282.47 16.3955 cv
282.47 22.5283 li
282.47 22.6602 282.361 22.7686 282.229 22.7686 cv
cp
282.253 15.0977 mo
281.64 15.0977 li
281.507 15.0977 281.399 14.9893 281.399 14.8564 cv
281.399 13.8945 li
281.399 13.7627 281.507 13.6543 281.64 13.6543 cv
282.253 13.6543 li
282.386 13.6543 282.493 13.7627 282.493 13.8945 cv
282.493 14.8564 li
282.493 14.9893 282.386 15.0977 282.253 15.0977 cv
cp
279.691 22.7207 mo
279.294 22.793 278.753 22.8525 278.188 22.8525 cv
276.553 22.8525 275.627 21.6982 275.627 19.9307 cv
275.627 18.9932 li
275.627 17.2256 276.541 16.0713 278.188 16.0713 cv
278.741 16.0713 279.294 16.1309 279.691 16.2031 cv
279.884 16.2393 279.932 16.2998 279.932 16.4678 cv
279.932 16.9004 li
279.932 17.0215 279.835 17.0811 279.728 17.0811 cv
279.703 17.0811 279.691 17.0811 279.679 17.0811 cv
279.149 17.0215 278.777 16.9971 278.188 16.9971 cv
277.226 16.9971 276.685 17.6348 276.685 18.9932 cv
276.685 19.9307 li
276.685 21.2773 277.214 21.9268 278.188 21.9268 cv
278.777 21.9268 279.149 21.9023 279.679 21.8428 cv
279.691 21.8428 279.703 21.8428 279.728 21.8428 cv
279.835 21.8428 279.932 21.9023 279.932 22.0234 cv
279.932 22.4561 li
279.932 22.6123 279.884 22.6846 279.691 22.7207 cv
cp
271.454 22.8525 mo
270.612 22.8525 269.987 22.7686 269.458 22.6846 cv
269.254 22.6484 269.229 22.6006 269.229 22.4678 cv
269.229 21.9873 li
269.229 21.8545 269.326 21.7949 269.435 21.7949 cv
269.446 21.7949 269.458 21.7949 269.47 21.7949 cv
270.023 21.8428 270.901 21.8672 271.454 21.8672 cv
272.897 21.8672 273.282 21.29 273.282 20.4482 cv
273.282 19.8467 272.933 19.5098 271.839 18.8369 cv
270.673 18.127 li
269.566 17.4541 269.013 16.8408 269.013 15.8789 cv
269.013 14.4238 270.06 13.751 271.888 13.751 cv
272.597 13.751 273.522 13.8223 273.979 13.8945 cv
274.1 13.9189 274.184 13.9795 274.184 14.0996 cv
274.184 14.6162 li
274.184 14.7363 274.1 14.8086 273.979 14.8086 cv
273.968 14.8086 273.968 14.8086 273.955 14.8086 cv
273.427 14.7725 272.585 14.7363 271.888 14.7363 cv
270.648 14.7363 270.12 15.001 270.12 15.8789 cv
270.12 16.4443 270.517 16.7803 271.431 17.334 cv
272.536 17.9951 li
273.931 18.8242 274.424 19.4863 274.424 20.4482 cv
274.424 21.6025 273.823 22.8525 271.454 22.8525 cv
cp
265.432 16.9854 mo
264.878 16.9854 264.374 17.1289 263.772 17.4902 cv
263.772 22.5283 li
263.772 22.6484 263.664 22.7686 263.532 22.7686 cv
262.942 22.7686 li
262.822 22.7686 262.714 22.6602 262.714 22.5283 cv
262.714 16.3955 li
262.714 16.2637 262.811 16.1553 262.942 16.1553 cv
263.508 16.1553 li
263.64 16.1553 263.736 16.2637 263.736 16.3955 cv
263.736 16.6484 li
264.337 16.2275 264.891 16.0713 265.432 16.0713 cv
265.6 16.0713 265.685 16.1436 265.685 16.2881 cv
265.685 16.7803 li
265.685 16.9131 265.6 16.9854 265.432 16.9854 cv
cp
260.115 18.8848 mo
260.115 17.5264 259.599 16.9971 258.54 16.9971 cv
257.506 16.9971 256.929 17.5859 256.929 18.8848 cv
256.929 18.9932 li
260.115 18.9932 li
260.115 18.8848 li
cp
260.957 19.7988 mo
256.929 19.7988 li
256.929 19.9668 li
256.929 21.3975 257.494 21.9268 258.601 21.9268 cv
259.298 21.9268 260.188 21.8789 260.74 21.7949 cv
260.765 21.7949 260.776 21.7949 260.801 21.7949 cv
260.896 21.7949 260.993 21.8428 260.993 21.9629 cv
260.993 22.3721 li
260.993 22.5283 260.944 22.6123 260.753 22.6484 cv
260.067 22.7803 259.405 22.8525 258.601 22.8525 cv
257.218 22.8525 255.87 22.2031 255.87 19.9668 cv
255.87 18.8848 li
255.87 17.165 256.821 16.0713 258.54 16.0713 cv
260.296 16.0713 261.186 17.1777 261.186 18.8848 cv
261.186 19.5342 li
261.186 19.6904 261.101 19.7988 260.957 19.7988 cv
cp
254.837 22.793 mo
254.597 22.8291 254.284 22.8525 254.056 22.8525 cv
252.95 22.8525 252.421 22.5645 252.421 21.2412 cv
252.421 17.0449 li
251.254 16.9131 li
251.122 16.9004 251.026 16.8291 251.026 16.6963 cv
251.026 16.3721 li
251.026 16.2393 251.122 16.1553 251.254 16.1553 cv
252.421 16.1553 li
252.421 14.9766 li
252.421 14.8564 252.505 14.7607 252.637 14.7363 cv
253.263 14.6406 li
253.274 14.6406 253.286 14.6406 253.298 14.6406 cv
253.395 14.6406 253.479 14.7246 253.479 14.8447 cv
253.479 16.1553 li
254.777 16.1553 li
254.909 16.1553 255.018 16.2637 255.018 16.3955 cv
255.018 16.8047 li
255.018 16.9365 254.909 17.0449 254.777 17.0449 cv
253.479 17.0449 li
253.479 21.2412 li
253.479 21.9023 253.647 21.999 254.128 21.999 cv
254.802 21.999 li
254.97 21.999 255.054 22.0469 255.054 22.167 cv
255.054 22.5879 li
255.054 22.6963 254.993 22.7686 254.837 22.793 cv
cp
249.679 22.7686 mo
249.077 22.7686 li
248.944 22.7686 248.849 22.6602 248.849 22.5283 cv
248.849 22.2998 li
248.187 22.6719 247.646 22.8525 246.937 22.8525 cv
245.493 22.8525 244.845 21.9512 244.845 20.3516 cv
244.845 16.3955 li
244.845 16.2637 244.952 16.1553 245.085 16.1553 cv
245.662 16.1553 li
245.794 16.1553 245.902 16.2637 245.902 16.3955 cv
245.902 20.3516 li
245.902 21.5664 246.312 21.9385 247.226 21.9385 cv
247.73 21.9385 248.296 21.7461 248.849 21.4697 cv
248.849 16.3955 li
248.849 16.2754 248.956 16.1553 249.089 16.1553 cv
249.679 16.1553 li
249.798 16.1553 249.907 16.2637 249.907 16.3955 cv
249.907 22.5283 li
249.907 22.6602 249.811 22.7686 249.679 22.7686 cv
cp
242.366 19.041 mo
242.366 17.7783 241.994 16.9609 240.804 16.9609 cv
240.298 16.9609 239.733 17.0215 239.396 17.0811 cv
239.396 21.8428 li
239.794 21.915 240.419 21.9629 240.804 21.9629 cv
241.981 21.9629 242.366 21.1934 242.366 19.9072 cv
242.366 19.041 li
cp
240.804 22.8525 mo
240.431 22.8525 239.866 22.8047 239.396 22.7207 cv
239.396 24.8965 li
239.396 25.0166 239.301 25.125 239.169 25.125 cv
238.556 25.125 li
238.435 25.125 238.339 25.0293 238.339 24.8965 cv
238.339 16.624 li
238.339 16.4678 238.374 16.3955 238.591 16.3477 cv
239.229 16.1914 240.07 16.0713 240.804 16.0713 cv
242.595 16.0713 243.425 17.2373 243.425 19.041 cv
243.425 19.9072 li
243.425 21.7949 242.56 22.8525 240.804 22.8525 cv
cp
236.462 22.7686 mo
235.885 22.7686 li
235.753 22.7686 235.644 22.6602 235.644 22.5283 cv
235.644 18.2715 li
235.644 17.2617 235.175 16.9854 234.55 16.9854 cv
234.117 16.9854 233.612 17.1289 233.144 17.3096 cv
233.216 17.5742 233.251 17.8867 233.251 18.248 cv
233.251 22.5283 li
233.251 22.6484 233.167 22.7686 233.035 22.7686 cv
232.397 22.7686 li
232.277 22.7686 232.193 22.6602 232.193 22.5283 cv
232.193 18.248 li
232.193 17.2012 231.893 16.9854 231.268 16.9854 cv
230.835 16.9854 230.306 17.2012 229.801 17.4541 cv
229.801 22.5283 li
229.801 22.6484 229.716 22.7686 229.584 22.7686 cv
228.946 22.7686 li
228.827 22.7686 228.742 22.6602 228.742 22.5283 cv
228.742 16.3955 li
228.742 16.2637 228.839 16.1553 228.971 16.1553 cv
229.572 16.1553 li
229.704 16.1553 229.801 16.2637 229.801 16.3955 cv
229.801 16.624 li
230.281 16.3242 230.895 16.0596 231.556 16.0596 cv
232.073 16.0596 232.458 16.2031 232.759 16.5518 cv
233.42 16.2393 234.129 16.0596 234.755 16.0596 cv
235.837 16.0596 236.702 16.6006 236.702 18.2715 cv
236.702 22.5283 li
236.702 22.6602 236.595 22.7686 236.462 22.7686 cv
cp
226.265 19.0049 mo
226.265 17.7783 225.772 16.9971 224.642 16.9971 cv
223.523 16.9971 223.03 17.7666 223.03 19.0049 cv
223.03 19.9189 li
223.03 21.1455 223.511 21.9268 224.642 21.9268 cv
225.76 21.9268 226.265 21.1572 226.265 19.9189 cv
226.265 19.0049 li
cp
224.642 22.8525 mo
222.874 22.8525 221.972 21.6865 221.972 19.9189 cv
221.972 19.0049 li
221.972 17.2373 222.874 16.0713 224.642 16.0713 cv
226.409 16.0713 227.323 17.2373 227.323 19.0049 cv
227.323 19.9189 li
227.323 21.6865 226.409 22.8525 224.642 22.8525 cv
cp
220.851 22.6963 mo
220.345 22.793 219.876 22.8525 218.854 22.8525 cv
217.376 22.8525 215.68 22.0596 215.68 19.1377 cv
215.68 17.4658 li
215.68 14.5205 217.376 13.751 218.854 13.751 cv
219.612 13.751 220.345 13.8584 220.874 13.9434 cv
220.982 13.9551 221.066 13.9912 221.066 14.0996 cv
221.066 14.7129 li
221.066 14.7852 221.042 14.8447 220.923 14.8447 cv
220.91 14.8447 220.898 14.8447 220.886 14.8447 cv
220.454 14.8086 219.563 14.7363 218.866 14.7363 cv
217.688 14.7363 216.774 15.4219 216.774 17.4658 cv
216.774 19.1377 li
216.774 21.1572 217.688 21.8672 218.866 21.8672 cv
219.552 21.8672 220.417 21.8066 220.851 21.7705 cv
220.862 21.7705 220.886 21.7705 220.898 21.7705 cv
221.03 21.7705 221.091 21.8311 221.091 21.9629 cv
221.091 22.4561 li
221.091 22.6006 220.982 22.6719 220.851 22.6963 cv
cp
210.026 17.0811 mo
209.63 17.0088 209.005 16.9971 208.62 16.9971 cv
207.441 16.9971 207.057 17.7305 207.057 19.0176 cv
207.057 19.8828 li
207.057 21.1934 207.43 21.9268 208.62 21.9268 cv
209.028 21.9268 209.618 21.8906 210.026 21.8545 cv
210.026 17.0811 li
cp
210.832 22.6484 mo
210.087 22.793 209.354 22.8525 208.62 22.8525 cv
206.828 22.8525 205.999 21.6865 205.999 19.8828 cv
205.999 19.0176 li
205.999 17.1289 206.864 16.0713 208.62 16.0713 cv
208.993 16.0713 209.558 16.1074 210.026 16.1914 cv
210.026 13.9551 li
210.026 13.835 210.123 13.7266 210.255 13.7266 cv
210.868 13.7266 li
210.989 13.7266 211.085 13.8223 211.085 13.9551 cv
211.085 22.3721 li
211.085 22.5283 211.049 22.6123 210.832 22.6484 cv
cp
204.339 22.7686 mo
203.762 22.7686 li
203.63 22.7686 203.521 22.6602 203.521 22.5283 cv
203.521 18.5723 li
203.521 17.3574 203.112 16.9854 202.198 16.9854 cv
201.694 16.9854 201.128 17.1777 200.575 17.4541 cv
200.575 22.5283 li
200.575 22.6484 200.468 22.7686 200.335 22.7686 cv
199.745 22.7686 li
199.626 22.7686 199.518 22.6602 199.518 22.5283 cv
199.518 16.3955 li
199.518 16.2637 199.613 16.1553 199.745 16.1553 cv
200.347 16.1553 li
200.479 16.1553 200.575 16.2637 200.575 16.3955 cv
200.575 16.624 li
201.237 16.252 201.778 16.0713 202.487 16.0713 cv
203.931 16.0713 204.579 16.9727 204.579 18.5723 cv
204.579 22.5283 li
204.579 22.6602 204.472 22.7686 204.339 22.7686 cv
cp
196.823 19.5703 mo
195.934 19.5703 li
194.479 19.5703 194.094 19.8945 194.094 20.748 cv
194.094 20.8926 li
194.094 21.7588 194.503 21.9873 195.2 21.9873 cv
195.753 21.9873 196.246 21.8184 196.823 21.5059 cv
196.823 19.5703 li
cp
197.641 22.7686 mo
197.088 22.7686 li
196.956 22.7686 196.847 22.6602 196.847 22.5283 cv
196.847 22.2637 li
196.271 22.6006 195.669 22.8525 194.995 22.8525 cv
193.974 22.8525 193.036 22.4082 193.036 20.9053 cv
193.036 20.7607 li
193.036 19.4619 193.793 18.8125 195.934 18.8125 cv
196.823 18.8125 li
196.823 18.332 li
196.823 17.3213 196.475 16.9727 195.536 16.9727 cv
194.755 16.9727 194.178 17.0215 193.696 17.0693 cv
193.673 17.0693 193.661 17.0693 193.637 17.0693 cv
193.528 17.0693 193.421 17.0332 193.421 16.877 cv
193.421 16.4561 li
193.421 16.3242 193.505 16.252 193.673 16.2275 cv
194.166 16.1436 194.719 16.0713 195.536 16.0713 cv
197.208 16.0713 197.882 16.9131 197.882 18.332 cv
197.882 22.5283 li
197.882 22.6602 197.772 22.7686 197.641 22.7686 cv
cp
186.723 22.8525 mo
186.278 22.8525 185.412 22.8164 184.823 22.6719 cv
184.667 22.6367 184.57 22.5645 184.57 22.4316 cv
184.57 22.0107 li
184.57 21.9023 184.667 21.8311 184.787 21.8311 cv
184.812 21.8311 184.823 21.8311 184.835 21.8311 cv
185.412 21.9023 186.29 21.9629 186.723 21.9629 cv
187.505 21.9629 187.913 21.7588 187.913 21.1094 cv
187.913 20.748 187.696 20.5205 187.011 20.1113 cv
185.797 19.3896 li
185.063 18.9453 184.57 18.4277 184.57 17.6699 cv
184.57 16.4199 185.509 16.0713 186.747 16.0713 cv
187.42 16.0713 188.058 16.1309 188.622 16.2275 cv
188.778 16.252 188.851 16.3359 188.851 16.4678 cv
188.851 16.8652 li
188.851 17.0088 188.767 17.0693 188.646 17.0693 cv
188.635 17.0693 188.622 17.0693 188.61 17.0693 cv
188.189 17.0332 187.42 16.9727 186.747 16.9727 cv
186.073 16.9727 185.628 17.0576 185.628 17.6699 cv
185.628 18.0313 185.905 18.2598 186.458 18.584 cv
187.648 19.2939 li
188.646 19.8828 188.972 20.3994 188.972 21.1094 cv
188.972 22.3359 188.069 22.8525 186.723 22.8525 cv
cp
183.199 22.7207 mo
182.802 22.793 182.261 22.8525 181.696 22.8525 cv
180.061 22.8525 179.135 21.6982 179.135 19.9307 cv
179.135 18.9932 li
179.135 17.2256 180.049 16.0713 181.696 16.0713 cv
182.249 16.0713 182.802 16.1309 183.199 16.2031 cv
183.392 16.2393 183.439 16.2998 183.439 16.4678 cv
183.439 16.9004 li
183.439 17.0215 183.343 17.0811 183.235 17.0811 cv
183.211 17.0811 183.199 17.0811 183.187 17.0811 cv
182.657 17.0215 182.285 16.9971 181.696 16.9971 cv
180.733 16.9971 180.192 17.6348 180.192 18.9932 cv
180.192 19.9307 li
180.192 21.2773 180.722 21.9268 181.696 21.9268 cv
182.285 21.9268 182.657 21.9023 183.187 21.8428 cv
183.199 21.8428 183.211 21.8428 183.235 21.8428 cv
183.343 21.8428 183.439 21.9023 183.439 22.0234 cv
183.439 22.4561 li
183.439 22.6123 183.392 22.6846 183.199 22.7207 cv
cp
177.331 22.7686 mo
176.754 22.7686 li
176.622 22.7686 176.513 22.6602 176.513 22.5283 cv
176.513 16.3955 li
176.513 16.2637 176.622 16.1553 176.754 16.1553 cv
177.331 16.1553 li
177.464 16.1553 177.571 16.2637 177.571 16.3955 cv
177.571 22.5283 li
177.571 22.6602 177.464 22.7686 177.331 22.7686 cv
cp
177.354 15.0977 mo
176.741 15.0977 li
176.609 15.0977 176.501 14.9893 176.501 14.8564 cv
176.501 13.8945 li
176.501 13.7627 176.609 13.6543 176.741 13.6543 cv
177.354 13.6543 li
177.487 13.6543 177.596 13.7627 177.596 13.8945 cv
177.596 14.8564 li
177.596 14.9893 177.487 15.0977 177.354 15.0977 cv
cp
175.046 22.793 mo
174.806 22.8291 174.493 22.8525 174.265 22.8525 cv
173.158 22.8525 172.629 22.5645 172.629 21.2412 cv
172.629 17.0449 li
171.463 16.9131 li
171.331 16.9004 171.234 16.8291 171.234 16.6963 cv
171.234 16.3721 li
171.234 16.2393 171.331 16.1553 171.463 16.1553 cv
172.629 16.1553 li
172.629 14.9766 li
172.629 14.8564 172.713 14.7607 172.845 14.7363 cv
173.471 14.6406 li
173.482 14.6406 173.495 14.6406 173.507 14.6406 cv
173.603 14.6406 173.687 14.7246 173.687 14.8447 cv
173.687 16.1553 li
174.985 16.1553 li
175.118 16.1553 175.226 16.2637 175.226 16.3955 cv
175.226 16.8047 li
175.226 16.9365 175.118 17.0449 174.985 17.0449 cv
173.687 17.0449 li
173.687 21.2412 li
173.687 21.9023 173.855 21.999 174.337 21.999 cv
175.01 21.999 li
175.179 21.999 175.263 22.0469 175.263 22.167 cv
175.263 22.5879 li
175.263 22.6963 175.202 22.7686 175.046 22.793 cv
cp
169.058 19.5703 mo
168.167 19.5703 li
166.712 19.5703 166.327 19.8945 166.327 20.748 cv
166.327 20.8926 li
166.327 21.7588 166.736 21.9873 167.434 21.9873 cv
167.987 21.9873 168.479 21.8184 169.058 21.5059 cv
169.058 19.5703 li
cp
169.874 22.7686 mo
169.321 22.7686 li
169.189 22.7686 169.081 22.6602 169.081 22.5283 cv
169.081 22.2637 li
168.504 22.6006 167.903 22.8525 167.229 22.8525 cv
166.208 22.8525 165.27 22.4082 165.27 20.9053 cv
165.27 20.7607 li
165.27 19.4619 166.026 18.8125 168.167 18.8125 cv
169.058 18.8125 li
169.058 18.332 li
169.058 17.3213 168.708 16.9727 167.771 16.9727 cv
166.989 16.9727 166.411 17.0215 165.931 17.0693 cv
165.907 17.0693 165.895 17.0693 165.87 17.0693 cv
165.763 17.0693 165.654 17.0332 165.654 16.877 cv
165.654 16.4561 li
165.654 16.3242 165.738 16.252 165.907 16.2275 cv
166.399 16.1436 166.953 16.0713 167.771 16.0713 cv
169.442 16.0713 170.115 16.9131 170.115 18.332 cv
170.115 22.5283 li
170.115 22.6602 170.007 22.7686 169.874 22.7686 cv
cp
163.634 22.7686 mo
163.056 22.7686 li
162.924 22.7686 162.815 22.6602 162.815 22.5283 cv
162.815 18.2715 li
162.815 17.2617 162.347 16.9854 161.722 16.9854 cv
161.288 16.9854 160.784 17.1289 160.314 17.3096 cv
160.387 17.5742 160.423 17.8867 160.423 18.248 cv
160.423 22.5283 li
160.423 22.6484 160.339 22.7686 160.206 22.7686 cv
159.569 22.7686 li
159.448 22.7686 159.364 22.6602 159.364 22.5283 cv
159.364 18.248 li
159.364 17.2012 159.063 16.9854 158.438 16.9854 cv
158.006 16.9854 157.478 17.2012 156.972 17.4541 cv
156.972 22.5283 li
156.972 22.6484 156.888 22.7686 156.755 22.7686 cv
156.118 22.7686 li
155.998 22.7686 155.914 22.6602 155.914 22.5283 cv
155.914 16.3955 li
155.914 16.2637 156.01 16.1553 156.142 16.1553 cv
156.743 16.1553 li
156.876 16.1553 156.972 16.2637 156.972 16.3955 cv
156.972 16.624 li
157.453 16.3242 158.065 16.0596 158.728 16.0596 cv
159.245 16.0596 159.63 16.2031 159.93 16.5518 cv
160.591 16.2393 161.301 16.0596 161.926 16.0596 cv
163.008 16.0596 163.874 16.6006 163.874 18.2715 cv
163.874 22.5283 li
163.874 22.6602 163.766 22.7686 163.634 22.7686 cv
cp
153.399 18.8848 mo
153.399 17.5264 152.883 16.9971 151.825 16.9971 cv
150.79 16.9971 150.214 17.5859 150.214 18.8848 cv
150.214 18.9932 li
153.399 18.9932 li
153.399 18.8848 li
cp
154.241 19.7988 mo
150.214 19.7988 li
150.214 19.9668 li
150.214 21.3975 150.778 21.9268 151.885 21.9268 cv
152.582 21.9268 153.472 21.8789 154.024 21.7949 cv
154.05 21.7949 154.062 21.7949 154.085 21.7949 cv
154.182 21.7949 154.277 21.8428 154.277 21.9629 cv
154.277 22.3721 li
154.277 22.5283 154.229 22.6123 154.037 22.6484 cv
153.352 22.7803 152.69 22.8525 151.885 22.8525 cv
150.502 22.8525 149.155 22.2031 149.155 19.9668 cv
149.155 18.8848 li
149.155 17.165 150.105 16.0713 151.825 16.0713 cv
153.58 16.0713 154.47 17.1777 154.47 18.8848 cv
154.47 19.5342 li
154.47 19.6904 154.386 19.7988 154.241 19.7988 cv
cp
147.495 22.7686 mo
146.919 22.7686 li
146.786 22.7686 146.679 22.6602 146.679 22.5283 cv
146.679 18.5723 li
146.679 17.3701 146.173 16.9971 145.392 16.9971 cv
145.019 16.9971 144.261 17.0938 143.732 17.334 cv
143.732 22.5283 li
143.732 22.6484 143.624 22.7686 143.491 22.7686 cv
142.902 22.7686 li
142.782 22.7686 142.674 22.6602 142.674 22.5283 cv
142.674 13.9668 li
142.674 13.835 142.771 13.7266 142.902 13.7266 cv
143.504 13.7266 li
143.636 13.7266 143.732 13.835 143.732 13.9668 cv
143.732 16.4443 li
144.31 16.1914 145.055 16.0713 145.571 16.0713 cv
146.847 16.0713 147.736 16.8047 147.736 18.5723 cv
147.736 22.5283 li
147.736 22.6602 147.628 22.7686 147.495 22.7686 cv
cp
141.339 22.793 mo
141.099 22.8291 140.786 22.8525 140.558 22.8525 cv
139.451 22.8525 138.922 22.5645 138.922 21.2412 cv
138.922 17.0449 li
137.756 16.9131 li
137.624 16.9004 137.527 16.8291 137.527 16.6963 cv
137.527 16.3721 li
137.527 16.2393 137.624 16.1553 137.756 16.1553 cv
138.922 16.1553 li
138.922 14.9766 li
138.922 14.8564 139.006 14.7607 139.138 14.7363 cv
139.764 14.6406 li
139.775 14.6406 139.788 14.6406 139.8 14.6406 cv
139.896 14.6406 139.979 14.7246 139.979 14.8447 cv
139.979 16.1553 li
141.278 16.1553 li
141.411 16.1553 141.519 16.2637 141.519 16.3955 cv
141.519 16.8047 li
141.519 16.9365 141.411 17.0449 141.278 17.0449 cv
139.979 17.0449 li
139.979 21.2412 li
139.979 21.9023 140.148 21.999 140.63 21.999 cv
141.303 21.999 li
141.472 21.999 141.556 22.0469 141.556 22.167 cv
141.556 22.5879 li
141.556 22.6963 141.495 22.7686 141.339 22.793 cv
cp
135.351 19.5703 mo
134.46 19.5703 li
133.005 19.5703 132.62 19.8945 132.62 20.748 cv
132.62 20.8926 li
132.62 21.7588 133.029 21.9873 133.727 21.9873 cv
134.28 21.9873 134.772 21.8184 135.351 21.5059 cv
135.351 19.5703 li
cp
136.167 22.7686 mo
135.614 22.7686 li
135.482 22.7686 135.374 22.6602 135.374 22.5283 cv
135.374 22.2637 li
134.797 22.6006 134.196 22.8525 133.522 22.8525 cv
132.501 22.8525 131.563 22.4082 131.563 20.9053 cv
131.563 20.7607 li
131.563 19.4619 132.319 18.8125 134.46 18.8125 cv
135.351 18.8125 li
135.351 18.332 li
135.351 17.3213 135.001 16.9727 134.063 16.9727 cv
133.282 16.9727 132.704 17.0215 132.224 17.0693 cv
132.2 17.0693 132.188 17.0693 132.163 17.0693 cv
132.056 17.0693 131.947 17.0332 131.947 16.877 cv
131.947 16.4561 li
131.947 16.3242 132.031 16.252 132.2 16.2275 cv
132.692 16.1436 133.246 16.0713 134.063 16.0713 cv
135.735 16.0713 136.408 16.9131 136.408 18.332 cv
136.408 22.5283 li
136.408 22.6602 136.3 22.7686 136.167 22.7686 cv
cp
129.817 22.7686 mo
129.229 22.7686 li
129.097 22.7686 128.988 22.6602 128.988 22.5283 cv
128.988 15.3975 li
128.988 15.374 128.988 15.3613 128.976 15.3613 cv
128.964 15.3613 128.964 15.3613 128.952 15.3857 cv
127.233 18.9453 li
127.112 19.1855 126.992 19.2939 126.691 19.2939 cv
126.139 19.2939 li
125.838 19.2939 125.718 19.1855 125.598 18.9453 cv
123.878 15.3857 li
123.866 15.3613 123.866 15.3613 123.854 15.3613 cv
123.842 15.3613 123.842 15.374 123.842 15.3975 cv
123.842 22.5283 li
123.842 22.6602 123.733 22.7686 123.602 22.7686 cv
123.013 22.7686 li
122.88 22.7686 122.772 22.6602 122.772 22.5283 cv
122.772 14.1836 li
122.772 13.9912 122.929 13.835 123.12 13.835 cv
123.902 13.835 li
124.118 13.835 124.215 13.8828 124.287 14.0391 cv
126.271 18.1631 li
126.319 18.2715 126.354 18.2959 126.415 18.2959 cv
126.476 18.2959 126.511 18.2715 126.56 18.1631 cv
128.544 14.0391 li
128.615 13.8828 128.712 13.835 128.929 13.835 cv
129.71 13.835 li
129.901 13.835 130.059 13.9912 130.059 14.1836 cv
130.059 22.5283 li
130.059 22.6602 129.95 22.7686 129.817 22.7686 cv
cp
116.874 17.0811 mo
116.478 17.0088 115.852 16.9971 115.467 16.9971 cv
114.288 16.9971 113.903 17.7305 113.903 19.0176 cv
113.903 19.8828 li
113.903 21.1934 114.276 21.9268 115.467 21.9268 cv
115.876 21.9268 116.465 21.8906 116.874 21.8545 cv
116.874 17.0811 li
cp
117.68 22.6484 mo
116.935 22.793 116.2 22.8525 115.467 22.8525 cv
113.675 22.8525 112.846 21.6865 112.846 19.8828 cv
112.846 19.0176 li
112.846 17.1289 113.712 16.0713 115.467 16.0713 cv
115.84 16.0713 116.405 16.1074 116.874 16.1914 cv
116.874 13.9551 li
116.874 13.835 116.97 13.7266 117.103 13.7266 cv
117.716 13.7266 li
117.836 13.7266 117.933 13.8223 117.933 13.9551 cv
117.933 22.3721 li
117.933 22.5283 117.896 22.6123 117.68 22.6484 cv
cp
110.549 18.8848 mo
110.549 17.5264 110.032 16.9971 108.974 16.9971 cv
107.939 16.9971 107.362 17.5859 107.362 18.8848 cv
107.362 18.9932 li
110.549 18.9932 li
110.549 18.8848 li
cp
111.391 19.7988 mo
107.362 19.7988 li
107.362 19.9668 li
107.362 21.3975 107.928 21.9268 109.034 21.9268 cv
109.731 21.9268 110.621 21.8789 111.174 21.7949 cv
111.198 21.7949 111.21 21.7949 111.234 21.7949 cv
111.33 21.7949 111.427 21.8428 111.427 21.9629 cv
111.427 22.3721 li
111.427 22.5283 111.378 22.6123 111.187 22.6484 cv
110.501 22.7803 109.839 22.8525 109.034 22.8525 cv
107.651 22.8525 106.304 22.2031 106.304 19.9668 cv
106.304 18.8848 li
106.304 17.165 107.255 16.0713 108.974 16.0713 cv
110.729 16.0713 111.619 17.1777 111.619 18.8848 cv
111.619 19.5342 li
111.619 19.6904 111.534 19.7988 111.391 19.7988 cv
cp
104.501 22.7686 mo
103.923 22.7686 li
103.791 22.7686 103.683 22.6602 103.683 22.5283 cv
103.683 16.3955 li
103.683 16.2637 103.791 16.1553 103.923 16.1553 cv
104.501 16.1553 li
104.633 16.1553 104.741 16.2637 104.741 16.3955 cv
104.741 22.5283 li
104.741 22.6602 104.633 22.7686 104.501 22.7686 cv
cp
104.524 15.0977 mo
103.911 15.0977 li
103.778 15.0977 103.671 14.9893 103.671 14.8564 cv
103.671 13.8945 li
103.671 13.7627 103.778 13.6543 103.911 13.6543 cv
104.524 13.6543 li
104.657 13.6543 104.765 13.7627 104.765 13.8945 cv
104.765 14.8564 li
104.765 14.9893 104.657 15.0977 104.524 15.0977 cv
cp
101.578 22.7686 mo
100.953 22.7686 li
100.833 22.7686 100.737 22.6602 100.737 22.5283 cv
100.737 13.9551 li
100.737 13.835 100.821 13.7266 100.953 13.7266 cv
101.578 13.7266 li
101.698 13.7266 101.795 13.8223 101.795 13.9551 cv
101.795 22.5283 li
101.795 22.6484 101.71 22.7686 101.578 22.7686 cv
cp
98.1387 19.041 mo
98.1387 17.7783 97.7656 16.9609 96.5752 16.9609 cv
96.0703 16.9609 95.5049 17.0215 95.1689 17.0811 cv
95.1689 21.8428 li
95.5654 21.915 96.1904 21.9629 96.5752 21.9629 cv
97.7539 21.9629 98.1387 21.1934 98.1387 19.9072 cv
98.1387 19.041 li
cp
96.5752 22.8525 mo
96.2021 22.8525 95.6377 22.8047 95.1689 22.7207 cv
95.1689 24.8965 li
95.1689 25.0166 95.0723 25.125 94.9404 25.125 cv
94.3271 25.125 li
94.207 25.125 94.1104 25.0293 94.1104 24.8965 cv
94.1104 16.624 li
94.1104 16.4678 94.1465 16.3955 94.3633 16.3477 cv
95.001 16.1914 95.8418 16.0713 96.5752 16.0713 cv
98.3672 16.0713 99.1963 17.2373 99.1963 19.041 cv
99.1963 19.9072 li
99.1963 21.7949 98.3311 22.8525 96.5752 22.8525 cv
cp
91.6328 19.041 mo
91.6328 17.7783 91.2598 16.9609 90.0693 16.9609 cv
89.5645 16.9609 88.999 17.0215 88.6631 17.0811 cv
88.6631 21.8428 li
89.0596 21.915 89.6846 21.9629 90.0693 21.9629 cv
91.248 21.9629 91.6328 21.1934 91.6328 19.9072 cv
91.6328 19.041 li
cp
90.0693 22.8525 mo
89.6963 22.8525 89.1318 22.8047 88.6631 22.7207 cv
88.6631 24.8965 li
88.6631 25.0166 88.5664 25.125 88.4346 25.125 cv
87.8213 25.125 li
87.7012 25.125 87.6045 25.0293 87.6045 24.8965 cv
87.6045 16.624 li
87.6045 16.4678 87.6406 16.3955 87.8574 16.3477 cv
88.4951 16.1914 89.3359 16.0713 90.0693 16.0713 cv
91.8613 16.0713 92.6904 17.2373 92.6904 19.041 cv
92.6904 19.9072 li
92.6904 21.7949 91.8252 22.8525 90.0693 22.8525 cv
cp
83.2158 14.917 mo
83.1787 14.7852 83.1064 14.7002 82.9873 14.7002 cv
82.8545 14.7002 82.7822 14.7852 82.7471 14.917 cv
81.6523 18.873 li
84.3096 18.873 li
83.2158 14.917 li
cp
86.2334 22.7686 mo
85.5244 22.7686 li
85.415 22.7686 85.3438 22.6846 85.3193 22.5879 cv
84.5381 19.8223 li
81.4238 19.8223 li
80.6543 22.5879 li
80.6299 22.6846 80.5342 22.7686 80.4385 22.7686 cv
79.7285 22.7686 li
79.6084 22.7686 79.5244 22.6846 79.5244 22.5762 cv
79.5244 22.5518 79.5244 22.5156 79.5361 22.4922 cv
81.7607 14.6641 li
81.9648 13.9307 82.5303 13.751 82.9873 13.751 cv
83.4316 13.751 83.9971 13.9189 84.2012 14.6523 cv
86.4258 22.4922 li
86.4375 22.5156 86.4375 22.5518 86.4375 22.5762 cv
86.4375 22.6846 86.3662 22.7686 86.2334 22.7686 cv
cp
75.8857 14.46 mo
75.3076 14.46 li
74.7432 14.46 74.5752 14.6279 74.5752 15.29 cv
74.5752 16.1553 li
75.8369 16.1553 li
75.9697 16.1553 76.0654 16.252 76.0654 16.3721 cv
76.0654 16.8408 li
76.0654 16.9609 75.9697 17.0449 75.8369 17.0449 cv
74.5752 17.0449 li
74.5752 22.5283 li
74.5752 22.6484 74.4668 22.7686 74.3467 22.7686 cv
73.7568 22.7686 li
73.625 22.7686 73.5166 22.6484 73.5166 22.5283 cv
73.5166 17.0449 li
72.3506 16.9131 li
72.2178 16.9004 72.1221 16.8164 72.1221 16.6963 cv
72.1221 16.3721 li
72.1221 16.252 72.2178 16.1553 72.3506 16.1553 cv
73.5166 16.1553 li
73.5166 15.29 li
73.5166 14.0029 74.1416 13.6182 75.2002 13.6182 cv
75.5244 13.6182 75.7168 13.6543 75.874 13.6904 cv
76.0059 13.7266 76.1016 13.7744 76.1016 13.8828 cv
76.1016 14.2793 li
76.1016 14.4121 76.0176 14.46 75.8857 14.46 cv
cp
70.1611 19.0049 mo
70.1611 17.7783 69.6689 16.9971 68.5381 16.9971 cv
67.4199 16.9971 66.9268 17.7666 66.9268 19.0049 cv
66.9268 19.9189 li
66.9268 21.1455 67.4072 21.9268 68.5381 21.9268 cv
69.6563 21.9268 70.1611 21.1572 70.1611 19.9189 cv
70.1611 19.0049 li
cp
68.5381 22.8525 mo
66.7705 22.8525 65.8682 21.6865 65.8682 19.9189 cv
65.8682 19.0049 li
65.8682 17.2373 66.7705 16.0713 68.5381 16.0713 cv
70.3057 16.0713 71.2197 17.2373 71.2197 19.0049 cv
71.2197 19.9189 li
71.2197 21.6865 70.3057 22.8525 68.5381 22.8525 cv
cp
61.8369 22.793 mo
61.5957 22.8291 61.2832 22.8525 61.0547 22.8525 cv
59.9482 22.8525 59.4189 22.5645 59.4189 21.2412 cv
59.4189 17.0449 li
58.2529 16.9131 li
58.1211 16.9004 58.0244 16.8291 58.0244 16.6963 cv
58.0244 16.3721 li
58.0244 16.2393 58.1211 16.1553 58.2529 16.1553 cv
59.4189 16.1553 li
59.4189 14.9766 li
59.4189 14.8564 59.5039 14.7607 59.6357 14.7363 cv
60.2607 14.6406 li
60.2734 14.6406 60.2852 14.6406 60.2979 14.6406 cv
60.3936 14.6406 60.4775 14.7246 60.4775 14.8447 cv
60.4775 16.1553 li
61.7764 16.1553 li
61.9082 16.1553 62.0166 16.2637 62.0166 16.3955 cv
62.0166 16.8047 li
62.0166 16.9365 61.9082 17.0449 61.7764 17.0449 cv
60.4775 17.0449 li
60.4775 21.2412 li
60.4775 21.9023 60.6455 21.999 61.127 21.999 cv
61.7998 21.999 li
61.9688 21.999 62.0527 22.0469 62.0527 22.167 cv
62.0527 22.5879 li
62.0527 22.6963 61.9932 22.7686 61.8369 22.793 cv
cp
56.665 22.7686 mo
56.0879 22.7686 li
55.9561 22.7686 55.8477 22.6602 55.8477 22.5283 cv
55.8477 18.5723 li
55.8477 17.3574 55.4385 16.9854 54.5244 16.9854 cv
54.0205 16.9854 53.4541 17.1777 52.9014 17.4541 cv
52.9014 22.5283 li
52.9014 22.6484 52.7939 22.7686 52.6611 22.7686 cv
52.0713 22.7686 li
51.9521 22.7686 51.8438 22.6602 51.8438 22.5283 cv
51.8438 16.3955 li
51.8438 16.2637 51.9395 16.1553 52.0713 16.1553 cv
52.6729 16.1553 li
52.8057 16.1553 52.9014 16.2637 52.9014 16.3955 cv
52.9014 16.624 li
53.5635 16.252 54.1045 16.0713 54.8135 16.0713 cv
56.2568 16.0713 56.9053 16.9727 56.9053 18.5723 cv
56.9053 22.5283 li
56.9053 22.6602 56.7979 22.7686 56.665 22.7686 cv
cp
49.3301 18.8848 mo
49.3301 17.5264 48.8135 16.9971 47.7549 16.9971 cv
46.7207 16.9971 46.1436 17.5859 46.1436 18.8848 cv
46.1436 18.9932 li
49.3301 18.9932 li
49.3301 18.8848 li
cp
50.1719 19.7988 mo
46.1436 19.7988 li
46.1436 19.9668 li
46.1436 21.3975 46.709 21.9268 47.8154 21.9268 cv
48.5127 21.9268 49.4023 21.8789 49.9551 21.7949 cv
49.9795 21.7949 49.9912 21.7949 50.0156 21.7949 cv
50.1113 21.7949 50.208 21.8428 50.208 21.9629 cv
50.208 22.3721 li
50.208 22.5283 50.1592 22.6123 49.9678 22.6484 cv
49.2822 22.7803 48.6201 22.8525 47.8154 22.8525 cv
46.4326 22.8525 45.085 22.2031 45.085 19.9668 cv
45.085 18.8848 li
45.085 17.165 46.0361 16.0713 47.7549 16.0713 cv
49.5107 16.0713 50.4004 17.1777 50.4004 18.8848 cv
50.4004 19.5342 li
50.4004 19.6904 50.3154 19.7988 50.1719 19.7988 cv
cp
43.4248 22.7686 mo
42.8477 22.7686 li
42.7158 22.7686 42.6064 22.6602 42.6064 22.5283 cv
42.6064 18.2715 li
42.6064 17.2617 42.1377 16.9854 41.5127 16.9854 cv
41.0801 16.9854 40.5752 17.1289 40.1064 17.3096 cv
40.1787 17.5742 40.2139 17.8867 40.2139 18.248 cv
40.2139 22.5283 li
40.2139 22.6484 40.1299 22.7686 39.998 22.7686 cv
39.3604 22.7686 li
39.2402 22.7686 39.1563 22.6602 39.1563 22.5283 cv
39.1563 18.248 li
39.1563 17.2012 38.8555 16.9854 38.2305 16.9854 cv
37.7979 16.9854 37.2686 17.2012 36.7637 17.4541 cv
36.7637 22.5283 li
36.7637 22.6484 36.6787 22.7686 36.5469 22.7686 cv
35.9092 22.7686 li
35.79 22.7686 35.7051 22.6602 35.7051 22.5283 cv
35.7051 16.3955 li
35.7051 16.2637 35.8018 16.1553 35.9336 16.1553 cv
36.5352 16.1553 li
36.667 16.1553 36.7637 16.2637 36.7637 16.3955 cv
36.7637 16.624 li
37.2441 16.3242 37.8574 16.0596 38.5186 16.0596 cv
39.0361 16.0596 39.4209 16.2031 39.7217 16.5518 cv
40.3828 16.2393 41.0918 16.0596 41.7178 16.0596 cv
42.7998 16.0596 43.665 16.6006 43.665 18.2715 cv
43.665 22.5283 li
43.665 22.6602 43.5576 22.7686 43.4248 22.7686 cv
cp
34.3701 22.793 mo
34.1299 22.8291 33.8174 22.8525 33.5889 22.8525 cv
32.4834 22.8525 31.9541 22.5645 31.9541 21.2412 cv
31.9541 17.0449 li
30.7871 16.9131 li
30.6553 16.9004 30.5596 16.8291 30.5596 16.6963 cv
30.5596 16.3721 li
30.5596 16.2393 30.6553 16.1553 30.7871 16.1553 cv
31.9541 16.1553 li
31.9541 14.9766 li
31.9541 14.8564 32.0381 14.7607 32.1699 14.7363 cv
32.7959 14.6406 li
32.8076 14.6406 32.8193 14.6406 32.8311 14.6406 cv
32.9277 14.6406 33.0117 14.7246 33.0117 14.8447 cv
33.0117 16.1553 li
34.3105 16.1553 li
34.4424 16.1553 34.5508 16.2637 34.5508 16.3955 cv
34.5508 16.8047 li
34.5508 16.9365 34.4424 17.0449 34.3105 17.0449 cv
33.0117 17.0449 li
33.0117 21.2412 li
33.0117 21.9023 33.1807 21.999 33.6611 21.999 cv
34.335 21.999 li
34.5029 21.999 34.5869 22.0469 34.5869 22.167 cv
34.5869 22.5879 li
34.5869 22.6963 34.5264 22.7686 34.3701 22.793 cv
cp
29.6807 16.9854 mo
29.1279 16.9854 28.6221 17.1289 28.0215 17.4902 cv
28.0215 22.5283 li
28.0215 22.6484 27.9131 22.7686 27.7803 22.7686 cv
27.1914 22.7686 li
27.0713 22.7686 26.9629 22.6602 26.9629 22.5283 cv
26.9629 16.3955 li
26.9629 16.2637 27.0596 16.1553 27.1914 16.1553 cv
27.7568 16.1553 li
27.8896 16.1553 27.9854 16.2637 27.9854 16.3955 cv
27.9854 16.6484 li
28.5869 16.2275 29.1396 16.0713 29.6807 16.0713 cv
29.8486 16.0713 29.9326 16.1436 29.9326 16.2881 cv
29.9326 16.7803 li
29.9326 16.9131 29.8486 16.9854 29.6807 16.9854 cv
cp
24.2686 19.5703 mo
23.3799 19.5703 li
21.9248 19.5703 21.54 19.8945 21.54 20.748 cv
21.54 20.8926 li
21.54 21.7588 21.9482 21.9873 22.6455 21.9873 cv
23.1982 21.9873 23.6924 21.8184 24.2686 21.5059 cv
24.2686 19.5703 li
cp
25.0869 22.7686 mo
24.5342 22.7686 li
24.4014 22.7686 24.293 22.6602 24.293 22.5283 cv
24.293 22.2637 li
23.7158 22.6006 23.1143 22.8525 22.4414 22.8525 cv
21.4189 22.8525 20.4814 22.4082 20.4814 20.9053 cv
20.4814 20.7607 li
20.4814 19.4619 21.2393 18.8125 23.3799 18.8125 cv
24.2686 18.8125 li
24.2686 18.332 li
24.2686 17.3213 23.9209 16.9727 22.9824 16.9727 cv
22.2002 16.9727 21.624 17.0215 21.1426 17.0693 cv
21.1182 17.0693 21.1064 17.0693 21.083 17.0693 cv
20.9746 17.0693 20.8662 17.0332 20.8662 16.877 cv
20.8662 16.4561 li
20.8662 16.3242 20.9502 16.252 21.1182 16.2275 cv
21.6123 16.1436 22.165 16.0713 22.9824 16.0713 cv
24.6533 16.0713 25.3271 16.9131 25.3271 18.332 cv
25.3271 22.5283 li
25.3271 22.6602 25.2188 22.7686 25.0869 22.7686 cv
cp
18.2441 19.041 mo
18.2441 17.7783 17.8711 16.9609 16.6807 16.9609 cv
16.1758 16.9609 15.6104 17.0215 15.2744 17.0811 cv
15.2744 21.8428 li
15.6709 21.915 16.2959 21.9629 16.6807 21.9629 cv
17.8594 21.9629 18.2441 21.1934 18.2441 19.9072 cv
18.2441 19.041 li
cp
16.6807 22.8525 mo
16.3076 22.8525 15.7432 22.8047 15.2744 22.7207 cv
15.2744 24.8965 li
15.2744 25.0166 15.1777 25.125 15.0459 25.125 cv
14.4326 25.125 li
14.3125 25.125 14.2158 25.0293 14.2158 24.8965 cv
14.2158 16.624 li
14.2158 16.4678 14.252 16.3955 14.4688 16.3477 cv
15.1064 16.1914 15.9473 16.0713 16.6807 16.0713 cv
18.4727 16.0713 19.3018 17.2373 19.3018 19.041 cv
19.3018 19.9072 li
19.3018 21.7949 18.4365 22.8525 16.6807 22.8525 cv
cp
11.7021 18.8848 mo
11.7021 17.5264 11.1855 16.9971 10.1279 16.9971 cv
9.09277 16.9971 8.5166 17.5859 8.5166 18.8848 cv
8.5166 18.9932 li
11.7021 18.9932 li
11.7021 18.8848 li
cp
12.5439 19.7988 mo
8.5166 19.7988 li
8.5166 19.9668 li
8.5166 21.3975 9.08105 21.9268 10.1875 21.9268 cv
10.8848 21.9268 11.7744 21.8789 12.3271 21.7949 cv
12.3525 21.7949 12.3643 21.7949 12.3877 21.7949 cv
12.4844 21.7949 12.5801 21.8428 12.5801 21.9629 cv
12.5801 22.3721 li
12.5801 22.5283 12.5322 22.6123 12.3398 22.6484 cv
11.6543 22.7803 10.9932 22.8525 10.1875 22.8525 cv
8.80469 22.8525 7.45801 22.2031 7.45801 19.9668 cv
7.45801 18.8848 li
7.45801 17.165 8.4082 16.0713 10.1279 16.0713 cv
11.8828 16.0713 12.7725 17.1777 12.7725 18.8848 cv
12.7725 19.5342 li
12.7725 19.6904 12.6885 19.7988 12.5439 19.7988 cv
cp
5.07617 17.4902 mo
5.07617 15.3135 3.96973 14.6885 2.52734 14.6885 cv
1.96191 14.6885 1.58887 14.7002 1.19238 14.7246 cv
1.19238 21.8906 li
1.57715 21.915 1.96191 21.915 2.52734 21.915 cv
3.96973 21.915 5.07617 21.2773 5.07617 19.1133 cv
5.07617 17.4902 li
cp
2.52734 22.8525 mo
1.61328 22.8525 0.6875 22.793 0.338867 22.7324 cv
0.182617 22.708 0.0869141 22.6123 0.0869141 22.4316 cv
0.0869141 14.1719 li
0.0869141 14.0029 0.182617 13.8945 0.338867 13.8711 cv
0.6875 13.8105 1.61328 13.751 2.52734 13.751 cv
4.75098 13.751 6.1709 14.8926 6.1709 17.4902 cv
6.1709 19.1133 li
6.1709 21.6865 4.75098 22.8525 2.52734 22.8525 cv
cp
0 0 0 0.56 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Thomas Leibeck) ()
%%Title: (DTU Compute A UK.eps)
%%CreationDate: 1/9/13 1:32 PM
%AI9_DataStream
%Gb"-6CQ'Q2FrhuN`J6u1@I%?@+d0@D1t3#[^71N&OV'T@e#7VoC,rm`%o:N76a%9mR]>,u`MlA6\nYhi%3)MS=;1oEQM@\6fH:U?
%"tU^d5T#djQinfT,#&#u!WSlg$+9s<P-(AS,Q70nER'Dsba\@`][bh<pXWk&HD^O<An4#!SB#hKS:'_3ai3rKn]CTjai1aG)!O.)
%Q*hO`]H/M%A?W]?;^_%[T""/+3sR^[NT42H]\AG3>Ut%E*ue5=F1W5Yf4VG]X7n5"Nb6V0:G5Hr/t]m5HMd1<&._8q4$,U=piJ>Q
%4ZrR#HYqpto4\0bFLH[=H$4EiWlI-JMXo0UqW.;DSa3VCAs`!rV3.i#q8U/J*1D1`jF8NI>N\MSf>k5lTZu0[>A*HkkP,G^aT)0W
%G'*sUJ3IB8VJlM$f@$f&Q*2ihj8IYpPNQ#6LK>i>kMLZXgAYK'p?_G@C)1DQ_-d1+hZ<]M^O;cpAlKNjCMW^]3<">rOP)!/ZVTHq
%]f2d=I.5_d5#&l=jjh84Do84TND9<MdVn!W5+Pu.rVY`6]"di;:!^P%EBH=2@oS3GpJ2<>Lq19Xpg:VkK>Yk[ZR]/)MplG]h&@Rd
%Dh(DC3;dT9).2n$Ze>-Z(I.<a>.OdTU(&[B8<!u:l;:iT;;qElX;tH]mje84$>L9E^]pTG$T%f(XMqf<-VmL_hfqstA!fJ<H;MIS
%AaLJ>f2jS#Ng&S1j#jgDaJD,[gY`Bah&*aJh1cfW\sf2]0S"qUDo];:Fl.WRS_-"gSmIrGEWD$12Lu#r#AuN7GXB.Q5Ps?Rj4DUj
%5lTZ%hRS0K:X65illH*FpZT<>C\ZF]/haB"]lj>L,5]g6n\n#)d<gXM:P$]%kJtnU+#/cS3MImOH>rGsN+h7hP@q'PD=<,#_]sEn
%khV;KDK^+*%l5C.o^M_<C::^ILIX<uQ_V[ap%,)V%k]J06iWUi$Jf6uVrIZEnW*AA"6]-EdnJ*&M/R(B$22N]]`mh1r!)rX-FZ0%
%4?YiQEd@HHl,cfS$T`_YhF,+_j(5I805'g#s%iH?&%;E&m%]KfPNQS@)\^A@LR2'i8#N\KT09rXSZQdHGP2l\<\eN`\p+.qm.B:?
%d`Fa74?jncbi.ZiAPM2?4[(kjL)o:JF.C7.ZY-4q7h;455+DB9?9R-=G<YB0`i"UTLR05]%o&en!WE7JeeC\D$]UTF+;e&)pY`k#
%R0`Y-Eh<4./!l%3-Qm<a(ju^>r!ZnX54^o\o'9F;)3rBYEh%P&qhZl]aX?luY2+IYh_4Pp.*=jk\hHPVQRuH>(H]U3Qkm<Q?Eml"
%APnbi.WoIJWjH`UZ7^@D8NAAHbIt"4=1Ke[WKbg<bSFcT;mk=V'/`e%C/=6_>SjsS]0gA/.rD]C[GK:E4k7/j:[ae.'W*_0BOa`$
%)/GbAc&S3ZWS'.UB"uK^CLs=l?(%^mCuq\.g8QFL2#Bia&m.nJeM+@PE&9Zp+:Z`f&8@4]9L$lXe2$(3dWcdn=%3U.p-Y-3bHPR9
%13=R"%R9RFQPklFOBIZji0g5]<A:B%_kNDhf.J)r1_)(SHi5]P*nlj5`p;;83*B<"?3[0g`Q^K!-]@>XR>1?ss"%ri\B1#<Fn8C@
%`TX^"P=l`19QppZDd`q\/4Kq=PNVhI:qNrBPC1C]+,N[g?he!E<Voe)i?l'gT&"8=K'Z=M9mM+>bdE&!/535@JU;QkO!ZR>2,&E%
%bFi908m%N%QuEQOCC9C9""WSC/Lsq'%BE^M3p3a0Ha*4m%+nqm(r?;h<59[rR&'qoaao6@J=!.K<AYP193R8@EJpMbB[o$kbt>n%
%1cM"[p*Vtj17^Cub&]U\N%g:c]Cj<j=(+of/:=q>H-1&kKreHr:8WF?Vj2XTd?+6BOW/dMrf[5=4'M?bhpn-%CVR-lerDL9DJg*3
%,b-sXQJ^H$]<d6^%[*:B<c_b0AQBMs%=t'%QIoJI]BGUsR2;8/R@A;A_Ydr(.3d.u9kUF[:Gc!*=6XOTq9":O`$pV.esNm6^U;&?
%S7'Qc!_l$;qFQ(^)6"CraA-M?A3QH0'5(kGI/"S)OnmXFkWl?JZUL<LmC'ILNaH(VBGCqWj+^"E.&u)!d2P:poW.ISqM"hsrFOEk
%+0059Y_<b$3_cHVa;DLnBS^O=^NGddm<2]S?:L4Rk8RPfen*geZQH6BdWsq[mYWFN[b!bn7a@%Z@Vi-_a2#05[-hFfkO9fo<d6uG
%@JBU??sT;C'ML5^VGJLCO+C9M(Tm@pIh,5bTdM>XRf%\3j<LM@Ks$=.MS9VrelCsl&r2=WYk/%e?m.HFFpsmXA*\Ob^t&Ud;s?%)
%%6p=/Zo.mL4u6E&$X5^M<,)2(X?=ESE4)HF_"^pD/Z(AmNG\F%+53=Q#00(nJo6pLjYi&)n0d@4ctFlR`;]c8hYusBFFUU2ZX<15
%ICikRRsb`HD[A0FhqR&CgY:PRmS3Cup?FfMBD8Dh"/`4&#u\RYg#(W?h;+Xi:3Li)lWokEg>-MqltS4,9+XkoFFUk\h47<=PNgB"
%T":nl<`:g)?s]0B_",VHA8eb8R8,)mSOkta'0E0?#&J$3.7$Vhg!9TBhTkQ7FD%ncZW$>&*P58;(pHXJaKkrVm!cWLn(,s6;X`+X
%m:oj,[Ac%I`"I`7me5J.gN?FREB=Z(2.p4V$s;ti_dL7JgHE/aVflNnCi,`N[^$)G?j3:2!,8ZEm8^dK'YK\On6-fV0,8^d)C/l#
%dNm/_5.ESai9F"Ojf-)hZ).ReBX)DeQWn[e,4hsuFk8<X=i=lW19Mq6o-!FN4`JI'H+Ki>!mFcn^VXp,^XloDpT?0AS^'^n"6&`+
%omR_T!d95(rbp(c=L$-db:NKmdE="kGH>#OUR5Fs]!a1Ej"8Naq6_0cYNRK\).:)0S.2@Y>fLJeLdgL[]?f\(M[:TF1d"GMjCEi5
%DqdWp3r`><.'Y1-aS!mAIK+FpJ(R_IM]Bo?mT[6gar8:QU._]"9Y@\'+"]!]d:JeKbOKY$ec+:mf>LH':>;qD3g`#oI5ld;KfFoK
%NB!%[Pr+mgSTP,m8oolr$M+VV^4.dS;^FJ-+OFM95dXN6i'7KuVuom(64Y=sLqd4,Jft!-<lH(WAnV2H],H%tgl6eu&>2*-7R;i_
%5huOY\drs,>,3J65Hk;""Zlg4X2[@c+Hf%OK5_%>Ok'?544/.%6#n3Q@%b]q"U@qR#Gh5"AGe($qRrGJ0TZYRs!9&oNO&[9_1HEP
%p>E@c-jrj1)<d'.0_*Ku/jYt?S2qM%L$mo8G<k1^61]WpRdPM\o<[Fh-CGgCS^PhZ3^;3A:NM9aE/)"_?_BRL</0-fRA&?\d)=6A
%cHfg4IZ0m@S/p4MSUKrE'H,5ViOPYMfa0I@+(g8iV$cf,AgL-.T9@FELs/G\OaZ^]cuga&>%qBQ$J+*cqVHc=VP)6/G5":Q(80YQ
%"G!d:0P_F.<+iEt':@0QYR:*OBgJ?uX9F5TMYr!1"D\(1hqsLo5ePn-<O]-%`\g>j.J_]H`1*!,0=gf:eW:[=:RPH;A*9%tKFUbD
%>ZJ:M\6QQ/E:(`3H20O1.6J&Wg2:l\p;CO;/'+jFXnW-3F2jlF>_]F3>a@&$b'lleJ"/&%W6;>D_R:b.ZfUbdo3*V]gO-GelPB(6
%?WdUi/n3$r`"KhIpa7C1gKN9-54=uZ?]i+A:6.mEcmA)ahJ1*2#5:i[EGZ??A;t7"41p3"c4]nlhUTd=adO2;=@(asq0Lo3Nm61]
%l+D'm:P0GlcH5"7/9"@M3?P:AQi;q)477pJF]"k28sj`]17ucccah.5JQ"<_?IJ:drRpLVm<2i>M_K!Tc*o<@Zh`OTEU>"fm#__V
%_j>.DQ7i2<SjD<hduH_q$pd:#cqeE=Km/@1"DC\YNCKES/G=Un2C#/;A6sX4nYXs2_Ns-VM6)L$L=X4hd+5rcmEe1`Bhg`9#^gsc
%2Qs2n7a2fL*@B=LBpG&f=i8OB."Cj:*LH$#5aZ,>/N.O2fhVFgFkUSXAPL(EF\NWVdfgO9PUnQ]Fut\tq.kK5Q*%@(g/HdP-%E4@
%eK;3cU'MeF`=lXP#n9Qh_%"l/#82\490e(C-AXp<LC/X^(>[[-WhGn?&N;;"IOmRcVW#HGEm[ja$O^iU7R!pKC#2QW*AqlfC3J-*
%2`>eh':1:\Y7:H=`,eQk>&n>"E8[Hp95Y_1Eo*)Qc<QrdD[u_+o]XAo6a%!u3qVdc[j1>OrB'Z@p/"6U9jW'?:OG=tp;#S/]ZZ(*
%T>QfOGehNihf%fY5P+sM;!<gBn@kQVZ$DC,H`n"Z6LSfE#knh'#7^T"_Oo>/-j``k;5Jq1'Ydcn(RN!A9)u)qKkPV+ZZNHg!bsT#
%Xc.6O@Fl^>(9.jFD=_Ip&f><(#\igLIND"8.*HMD&L,.+@>"bmaVl!hd9oZfcih3!VK6"A(haLX!I-A8YiHk#$P?_gKY]LTOa(l/
%nm^[ubd1bd`&U!q/kgMO\PROT`ISm]+S4J7mT[bZb<5&IrTH.-GuJ(]_lrM!W)oX\bHJ".gYED;A-@"RMn[>.n$o[R?Mk]XCn5C!
%^OMG_P'%UNCKq<in&5m+`g*ZcLTe5!0_4n>3Cr>0Z!LcA>a#o/I^eu_6?94QhU+eTg6bALok<>+N-o.AI<ahJJUOoPO!ajg+s9Sg
%UdjB5@#tAAGT7tt6;f?[77/7?OrtrO!fEeX8-DCsd#!F76u4-C,7u#+KHs2U&qNUu:a/_mJ0b8`GeaG>"sYIHRFK5b8uhq>"J#gC
%6LY9^-j64TLdEd&!@c1O[Y7M'g%U"(`P#RlcYC@#=U1P+-DK#nZncP]oY\&%TNZg/4KOf"^pOq$>@#l^Jo7:NYihcmD1&CDE&BAQ
%']hr,Y!!3M$Ifg<S;?>B/+On5lpO/dp05(+0.:DpV/G0pDlaa]nCl.l=8LaRj3KCKg5H6X"`("N/9f#JAJPDM/5)-6k"cc"SZud]
%6.6iaLFc)-j+JLJ3q*4Xp;TAd,_j,S:)V-SIcu=c^b*014&+=cSMQY.X<R_:L;;8700*][(d&7\VkJ(uV<%_>8-@l<WGr3RiMm&o
%XT9JR!C(7l#Q=1FQK+8__%><A>`'c%IU%INUhG>faDllt;lI6d?2$Tkk7>fg5oR$DH.^<mHbTr(aP%LgXW/7c-?JWdJ\1XXGF+k^
%_bNGIcJ#oO@'R!>(>DsmMnqZb^tJ>K_d6a;#XGa>Lj<)R9/p.#>6c:F$Q**ag)9L*'9n<W6tG]k:<^%g_Vj)eNsh:E:/CXJKL$N%
%aa%c0Ja'.AAGL&p1$9?_'X\o*1Gkl<I37qjj0Ga?jd1uCq[@(*fsnF.QXJ%VAlmh\3QJ/*KcF*QiT,AcQ"'tKT-PAZ\s"pr@I*]i
%C.u"S&30%?]VZ7MWlMUi7nSi5.N0bLCHP&S=Ya^&)OmJ"@+*&[eRcL`DEgO-O[+7j.!bku@`p4Ib2QQMkV>n+Hq3Wqed6hTrVZT_
%Cj%peOp:25LdUZQ#_!9"cQW'D"@%\"k7IP2JtGF"EsR4)_9X;"3<VR%i9([L*.jeMn8eka%`-J.D".-cMjrV^&H!N"T0r*h#_!9"
%cQW'D"@#+@_9YGjL-L6Z*`_p2n\-rCpO\5aok#rsb%N9V+bXJq2+,:3'ZG/HaaDC0]V3(g]!ok*%OK9,'C$T9ZnI_>PDX&-8!usV
%8/5+>P3]&<+E07R8t0e%8u_5JEC$'e3B)g+MCm(RP])V`]/=uF7GccCs/k<<G.,>A>NE]HH#`2fGpb61nDY3'b[05JRHE2h/Fhc!
%*8Sg0B5'90RibDo5+A/"r,?uVg%6gYS1Z,`+rdE'-k%P+)Q/LC'&8j62+nd004EVV]Q0hK@RMD=Pc4[h7Dp\[d8ErHgP8HC"5cs)
%4IbqK8@0(4!3Ah'8IudJ[Ss:(<]&+.pV*9F]8sA%W%&nA=.s_@q[ED.]3\;ll>G:R)mXH9>S(O$ofB]mqCZG;5p!YE!4q1h?);!s
%=?g"$c0l"rG6R9p,4\ke%,Xo.VDG*`YY7aAWYDeD<X`@,`F@890jr@@C!@L/l>Z-DCD*da\9='O:TfZL*u.r'k6mZZ;nd'6jmqbL
%(,&#c,[1iHlrh!&&`rXK7i$]HBo"Qk)ejP<2u"8%#eo&h1mE2:Z4M'.NM97C,ZLfe<3mQDUDO^@_c^V$W'5p.OtojJ'r\3:#&;Q&
%Y?Le!Mk?7TFmJ4VIl.<2(<@9@Y$]EV$eQS+)"!o-KN5,3R3CnUL0";m@WpsCLoeQ-#uB?X3`stoMtop6HBn@CTTe[EEdIr.ZB\k$
%K`TWi9XF.8kBt-L8((O1m4u2W7EK0M'@==Sd"2>bQ\s@bN7ODYQ8OraU>f81Fg%V%Q.S*5Oc8Urb=j3oN\/7.N,@E2lLW@1=uN84
%Z8'U%Uj\C:=7\kjZ;t!MDQ-HbE48\o0PZiL+DGVVVHs:+Ou7n!e`?0B[+<Z3c$,DS-rBLS)"SjDBRU+0(<YNE"/mX.LG6A]BU1Z^
%KAeQp-H^ccFtU;;jJe$rYT[;PcF=G`,^]c+f8%Blo.S]Umu<LFR\@76.qJgGVQ'>@)A]CB;s@@5c?CL]hQ>2=r6>oUSr3$9f:rn<
%@[mUId-i^VLpPtY/,Ge:lG]:&G-6t#G4TE;*eqrCM5Kh;`C]q0!2^G1=H8S'dg%6DI;l@l.#%K><a_a9/IcqR,GmI?m:?P0pa]kH
%<4@j^VHo^Z7h#PL[>r3oMFNd/1/.Tu9SD`N<*E,d^SBLIJ+b4:)('_M-@Qt)#QD0*SoGdb'16Je;kF`-b@:bMa;F5]\]1>QHLt!m
%nn$bB]].JN&ram;i4)*E;#)1qR*+oqL$iDI6l9cu<j)$.J\t`p5/<Yj`r>a*s1W:nU;-(>rTcT<@`h>d]B*eQ/V!$A=`<1KmY$1/
%^KBRnVI*&tZNX]:RK%/f9adf+/^l$dd53GE[U[cI%+\h8hJ9n9WPR-mB_43R,'GW93?)=7BZ*#Zh"tQn<d1/GWgi1(3*DS(b,$G,
%Ln-D]6<B^,j_=6pPpP^8EW+pC#H->B"]:noE-s`QhdltQ1Tl7uMqN13@\sMEj/`8!0.LWrLDnLt`W8*F=ugF34r+-$ZCrNcb+m%:
%,8656=>HVmFZT5_ojp/Rc*Nla1u0KrG&r>6)kb;jNmMkM1tg+cRVk%.)MPc?;H;P&9]HHaY!9:f3.[0S#k9)Yh4'+d:PdZb4LM.a
%>hP7`6D(MpI@HC)89o!/dL.'5dp;3R]A4Q"HRW1go3G/%UB#5U\7ngRQ9lU%bSZ9Z20*GJnUneH/Tq#T^Fc2)a=8n=PYG@XW2'O[
%NU<Im9sVMI_]9MO/W`8+!f^V8&jW/VQS7YD-Z_nbm*_,0_^8#Qp6TgU@=u2jY,mi"fCR^g^To[)d<Tlp?h<IZpeN5$.,DI.E`J+B
%-C5*A9io?6;K>LK2<AU4>^I'.8C3,STQ;0*aBB]S'8Ea-<GT0]b8`E0<!i"D]`M6n$T3[hJG&1erJ!o?"d?t#9<s6n0SsE_-)#*(
%h_.RL\sd!iYS(V@c]bb#@$2Z"c*)2q^L"d5He(erCnE4^MRn!\q(-9+3l&G">J'&Vmb5M1qO;]nc7Q=CgU?oj`I?(o[d2^\mG+].
%I2[9Cf%?k=6C;_@LG%5M=kK<SF!c64G,B0Db]I4;mE-tOW_E0Jga@g<pLD6]oHDOm)Y(2>'?drT#W8rEgL&$Q/XV54\AH7'RFkdL
%[PtCr?scFi>&<Ng"Hlp47Q$[bA5K$]9u]#XdL*=.d#LRGg7nq_OHVmc3&J.)%;t*$Nh-^:qDZ`U#)<DlYJHs$!r:9I=4pt37FQ9`
%622TV$Anem@Vh8bUV_sAaKm-.@@a;Y&n(s%Y?e<3HBdL4LX/81IZ&!t#@@n9a?*gf]UAQ!,)N.e^To+hV3.P$SWD3aBt<5EHs*X8
%bIKr-Mpj2_\_P>N?=c3lZCO[W,Z68@Q0QYP>*^3K;OcB39^SpG-'>128?Ee2l!cK9+eANf]<sZVa\8U8XQefCo:!t(D.Ie=NHq<[
%oKXa/4+*@*p)c6$*n[PV@%]Zq.ECBTTC4ApX4'H+FlbB>8Ap/3MBV?j-fYm,=sYQ!j!WA(=n5S#oXek_0<;KXlg>++rj6gVnG?r.
%^Tb/VNa=LrB1ihoQdjqfJW<J^ZS-d<&dla,i$*1naQmVn,hYMcU`8?1j!JhLB@_YrRj^lB8SOnJ.In?2Q"eeUJ0lCP!e[p9QADjm
%=A-YAb?S@S$PX?6KqK657[r>7jKgZCdXkJMC4S)g:tgXr$'o"--4>WD`(VC@'4K?:E10*N"P/5:5\G/q3A*\\3(?cS)3fN"rON?#
%>e1ld[U?OOmk'JGXF_e*`XZ2k8a$CSAkQV>jbbTY3tG,!*RTLNn>'4p:VokgGlFG@Sp,YTHl52;,m\)Y^%9A$=n)6_I+JiB+@MWC
%$`'<rYVHYqE>ANh6#7nLUaZ;-KcoJP"/JndJ'UE1TQ@o@_Yk><a%1^T+SQ(l7/*Rp='is[e^^[,pX3f>X]pj&AWa604gLDN8h=1m
%;W@uGq,uaMh.J[X*8cI*2mQ1\@_o%''aHY0kg#KadYNZ7"qYihE+j4X"udUA>^/mta^0j6jC9la'Go^^%MPY\7Z./%)sPjQ+4.@B
%j':nr9rM$_U84n@VZU5`CtC.q[.b4e"HIZV!`>?MCm-Y`0kn=l7,K5K^4"3_HgtUkbp;"ZSR]s@5?;FX2c"ChkI90epl)&h>^XTP
%h+:@X`Nq%/mWboDI2WWqAB>.C=HC.$Oe$-:L@cYp%<e1qE,]2fk:qVOd.h!:j'rD?_9'8`P!_4qWjRU0MsQf+f!YFV(PZZ"h\N:R
%#AR/e&RRODIc,hJcL?OGE"gh9faX%AJ>+s*RXf(PN+Q6]1W=B5,^8Ks:pT.L.,>a.UnGPC>LH\kO'>jdM,Umu%[*sl4@iW%`X(U<
%^K[mhG81>$_npV1/Tb/3Z>.'54WrJ'BjJc#;Eq"'/4YZtE2n(7S?$Fs3fTUj4^lqk\)N7n<)1Ii:[+jVVQcX.f+!;%/XG$p>J'*d
%Q#b.T206);jsOq<d3N^ORKo+8+9^_0V6^p!.gtoe=2J\1jAi:GffZ1%MT%Tl-q?aqh_FVapnBQB/Xhfmer3#k/tJ%_,E(a&ccD$g
%8&oo"CltSk]<1HF"h^#E-05<^kXt,cl0tbC9.>?9jc8=RPP12$@leMd7'99`W@Tg%r=PbPU$F+tg[-U!?F;9a@X-[tQ)^LpD<$fF
%bs`;mfhi3EVG/90lTN6fp\5_C?<ZG`&EG.=M^)H:(b8O`O`$fh>jEiEZa%*48ri5FcL!&</p*@Z7d0YuDdCI^<:#=8+6ZBJT*hr8
%i+s?:n,!)bV;_T8@*mrjn?ZikcSL;_pR0\A>_ebAqU5#,=F#^0i+a_[&`!Pd2"$??pUgHZgkj<t]"4;D&^SP<oA]?h`l6Jq5;V^G
%)NA4q%>E@an_1FgMo>;PdV$2FS4_7O(3o[qRHTRIU9AVqK@W,G]VK/d9.UpF/bqG&cf9h>m.=</E0$7&<M4J1i-5iY]I)LiZD/FI
%mI7#aV([`'/;X47*:TJQcOK8!,+\:YXEO4`-E+B`Me$m3l=iiJk'<)$@?pPaM"kM%f(p;IDABdNKYYr^c)-lGSt'TA6BEUe'oeo]
%oXsDEPi=fS<n^F/q6MpJ.q6a@g1sZW.@nTsS>TLh1c^#`agG`9:OT\[JYZjB\kgk`&'q\EcXoaWj;ZUT$:VVF+kj$d@IG%<>P0/)
%j`RE^@M)aUr*_meTcl5'_[.esRU4TCb-3t@0%Mc$3YLcpQ8)X9@RooZ[\/.ZeWjh"&,>?!47l2r?QC@r);\ThHU,hkq8[l#&44Q$
%QuQQeCf/$PZ)s;Y/mTX8,4h"881\WFdos_:_cuM1eR/iq&,*0rN.6VXOt'&ZMblsV$U*p%qhs-RSJB+o3daGApl=e3*So[9]#/`6
%L[XF:hpEIYUH<inGPI2959+A3Np`@m:WG>?8,).N1OM^e-*ZCu*So[9]#/`6L[XF:hpK,]%Bf?8=,6HTijBX5%c>YS^8!c;8%4I7
%%,]GQ^8!c;7sF`gmf!*EY3GjZJFT6<#j%*`6p;An.j?0?)?smn,2KM`AY2d%iL+gfqWY$NPEmU&'a<5@N5Yf3$3'XRLuK$HSWMkN
%^I$HJ.Z;a>='7)NOuk:.+[M?+"QeTA^80YC.F^2/&p#I:!RtgM>Dc7dC[<_POAn,>OEWY^D!ZILGNb&O_V$;c[l@VO="YugRF'CC
%Uol6aAtNm:D5.9I'+7IO&eYYnaa.o$r0gE>F64<pEulRh'VX<`(t"7eV]C\*F!I.ba2u/fFoO"N<[N)eMke4]#Gt]f'c8<&nd3np
%T/7Bq0l(=5b$?kB,*XHh#SLa'Cefe.1Vt=:;C1MK4;26s3,;iJ1g*'F>P$EX_>m_:l'n%>'q\`8j1s?R:s1%YG<%"S,_"1$F8#j5
%42Bfk4qOtEQXa/.8)lCiX0W1<q1XaU$a]Xlei]pJJ-EV8-)k2XX>CshmcQfPeGBQX*.rYQ')LW#$2M)!qBbQYpV3(qe9M)qW,#R*
%4`Wk5f4GDlT6]1h95A[;4kTn;B5`p_PE\2pPZQO9RqM^nFA[,H1h@H7`^R=8F%ti"SqbX&kN(3#enOk8^FhAC$-ab<(s;!8o%lCp
%D](.4K/u]!CnV$^n"\rbL/58+nnDmLH*aEb4P?7\e!kQm=XWO>HeMg]9^J>tpN2hIfpq0Q<.$,"$.RBYI@;^OFb>PLXeQ&c:mW'L
%>rZGAERctZ1`.NS=[2d(ek`p/B:CV">Bl:9dqoFF@>K2P8=1Q)BEEC7OWL)m`ibMpB7aOj[aDOoA@*Vs8#9SOFY*g-OVtOE]ZCpl
%3^!nA?3\Yp,A(q+4'4%:f5ZTm-R%X>Ph+.$)V^t1rGB:;_=^sY/gS)slPJ0_9nZuaYg@5r,unE>BRtiR%pWCOhG.87R3%Y,,'A2@
%9.AZr@[9pJBdqS<T/;NL2=:7MD?TC>lEWhQIZH6sRig8L9&&4k4SBk\[U7:W<kI>sCRf-E/66YMLt:r@onf0`a.dMK;:Lan$sYiJ
%Ad-iRqC66@RpUtUX3MpSPqSl7H[UEg0ji.G#4k;Ba.^b1]P/KGE_/?[)L9:<cA`F6\nt\*_%YRb!8Burh!*,HLVW2c%tV,Q"kG/6
%RjD\a7;pU77S/]$k<8S'bU9#tbZVfL*5tegVq#fieH`K1YXMXk;ho.dED>T!/Gu`<+BU$!\dga0_hsB;O@6?-SQftI%bZHq:2Sri
%MnPGo_F<$8aLc,b="\T"kA7simtPD6MqhWJc"C,tX.(s^\%SlKOON:ED-VGT.gnQu5&sp5JS0RPZG?N5lI@F6=2Sj:"fnK#m`8/-
%aW"h`b91L9iE6F]07t@575IhOS1Bl#/t*J/DAFnn.U'LCX+sj)%Z@B9a$1nUa`hJea`$Y;AYJ[=XSptX!?SGdP)F+/BAnWB?ZoOg
%F>(ii=op%RIu6'eQ0$^EH*t!RlLNu[CD:AdSb,$o(2`<$FV#A>FR=4)DkNm4etHCMVa#i%(Bo9t7"n#73?r';Q-=_$I2D2Tlu?3$
%*_p:f\KOP,W'Zr+j8_ae&ENq4_??]/A=O-/o#B-%.4@o^T_&O^%\iS<AF'KW_nL+.m-LTV_d7GJ5J-I;Y]4oXgmP$`2A832OF+Uo
%WfonTSnY%.'#.M9HW_4b4m;rb=/iW)0Q$4`.NRdHLJTcjL!$fcQBf'T%\h*#hh6@24(3Sbc0s#>6f[c9@:"u<Mk>8LeWGX@-^um.
%)9EZda5D,hH88dsB8<[Z5C-+lHp<A#T0OK0#kB!:3:g:tFG]lj1F/AtH^qN>Qd6k=GO<bLRP/SVA34V<nD:!f.&(QL01n8+l#[8p
%dOAg(kDq(LC!q3op3kDSI\6U&rtY.."RoG!Gh/#&hjqt5P/)o-S&LB**blV4Mu;V,Q%*,=p.r-h6sjTo*u\82oVu?tR7.(dL'bAR
%kdJ$JHs)&6c'RL,)M</6="Q66Zc!oDd+#]_\-S'$I^i9c2#Y!jo_9s*Vdmfn#O;dnT5G?KUV%i?JX^CjF\sHi^@e(%kC[P-M!C*Y
%R'`.>?JX[NqXAptC0uOOd],Q0)V'Mppo,T0\'@o*KMAtV$_%-2)KT.6)^WAj\n1L=K0O/(qpEt*<dnN72nqhfi'YW>K!1QfI><Jd
%kCQ;@bDK7M]<Y3&jQ9Op=k08,U>\XHVeKDIEN.O>r/aVt31Mkl1UP;P2#lo#Y%cpbaHcT$m51uWFa4?t_HUf+T;tb'B.m.(]1];>
%98^<W-aZS]Wt0>!K*\H7SFB!bCp&X!RBUHj8!lFcbegKiaK8'U!CHqK$/$jqMA5;f/D#5dRH+CcUN\?9hn)!2^H+B)o&)eXOO@KH
%ml\MF./M28LK@Q`bB&bEe#0OIO$P*I"f,+eJk</Ug*8s6+%64Q,qnZ,@bPg>@78^Rq%ToZ55`Y)o;hB@cN3RbOWM2!qSkJcdBTU!
%pceVZe`L"$iat[c5\n-88`YX;k1`8O\UWAGpqZ)"r)\kAL&[HnDCg\?Al[&<]V!tok3nP4j]9`5>c]_\Y[jWQ7j%VW]\cZ&IEhL&
%HYVkd<Rit@*[S1Crri=%G0H!a.d2AJ&.;n,W\/\>X<+,l^d=aQ)gRUq@oLuZ9#=3$i#_Y@X_Nse%3D3-k^"fn5O)QIm%uDT7BV"_
%[(Q2&JmOFf.t$-f7$tPWZEWe*eEK5[<oTGRdT<@6936p*>W"HQ7H)6Ko/n;r%J4;7$eK2rLhR*Ogqi((FP;,#W`!oF``pkO_@1im
%O1j529N#1a_`/6.jZM?pMCF>cNJ1N77Tt.fM'RlPmKJE,31Y4lg9ESD%cdeti,c9dV:*Jc*/"9.nMigKC)8qa?BVVu.l[M%N]nX+
%=e(>%-B*hCeqIGK]NmYV`@a-9]#&Eenm_^n'ZSS\p9X0MiCVTY3eU:\,4Za5V+Q!/9d=!7cPe[e5C/@7>2(YQ7Ae'`"7s%.aj\=^
%d`\ujgPb](YT)"N%n+`B[7g@q4D3:hD=KJ+dcQBdF32;3j3;1@kG;q;43en]%JEtqG[h[%H^\uM.`Z$=7@\W7pUL3Fg$F->7\0:7
%lM9u6C4>)pZAlhgmPVEUG0u7S?0gX=M#22N[RD)_!UN]u'9;1G45N#I;a?s</X>0HPC>K:6E?R@,9&+<`t!)$Ul`u1R2/e<K0u!,
%*MXK=_s-B^$o&c_#SU"7b"..R`:cgP(q%"C]&]+rdTO=Dp]^=Sgi&R@3qtsB-tO3_UibV--<Orq9=8ZAR_6)>#891p\Hui8MB^`,
%boS]$f$u4S//ipB=sWLRgj9qQ3%#[!&lhVY[cHgbSh;AUg8\G*VFsI'$.CM`mmlD&.ATOl!!d#K6(-kAP5:4%[#7fICMjMR/MObL
%j5mA\6-pBB2e]$/QaZ%]W^oLBig\LG4:@_kog)UKN^gdZ^O7ZEO1SHm/0uq.^c$&$F^"_83*X9_>\%OlX^Mfa>(2MG*S,I8Qi5tM
%i2TOUVsuY=Wg8fCp%BlLl=U=Ee>55Ph)095eTI!T=ZVVM?mgfqFI"L6gq:2Q7I.1h;UXT)5pm>sWO08HL0j"[A:_\-BJ=Tj6`IS/
%dlIr%p:Q5%&K,\Vd(5J&.`L(YYJCC!XuOV9F[\Zo[:iilVS,j]#"*,n/C^mUg75Fq1-d$6,R3%,f%)3olK5JH<_nqKZ&$[FDD"NI
%Sg?3MV%CjA`G$,_Siu:N:Yt^9ClcAj^%5`g.;jfn3;Un\o(r/\Bd]R\KmPu+7m$57_b[US\/GWC2nn7uN<]eY!Uq%a03uCi%R5tn
%#%UeCXlDGg+10*C$`YU<3Gi:-3AbdE]D!oZiFm2)XKLWjIha!Gc;=qCM"l5oQ,J,>/dlo$o9Dk$j^p8KkNV7jn_@XS$\V*%5Q!17
%]!gBTOE7qTP:`e/-C43pkV0DKf;;pg.+Kc]9foR8k\[c8TbB>+=ln@X$fLt4,'mdsZWBYj]7i%qIt<uFF;M9MR%/dY-_dap[qlf3
%'1=\@8eBCd-Co/Z>&,0LKf1Hr9UF0bjR1;79W;eR/9WIpp9-Ok187E8G.nP2<n8-3_FU(3ed2+8ji9XrbFFori]H0g>%t87G4(Yo
%@t1lCo,qu\cPVD-['iBB(^2LR.`[ubkJk.O$Dn6BO`.B"gaF8$i>YF9+-U!,R#ErY!KTR@?-#a)eE%#g]$g)[JFu(QlPq86"r&ph
%"+U94aH\Z(YE>O?F_m^OdOL-R,N""QZVS]V[\+\?Z)_Ph*WOki*Slt'TTG[J+Y-j@]iJ;#;'G<AWg&j7nTc59UId2;p@lEtkJHu$
%i<DnBb2c9q2Q20.on8D=Q""4jU]YmNKZM&a<cuM'Z34TubPlH<D%B_TI#;T;:0S](JQ`m(4\scQ5gEpgJ/qqd]uj>qD_3eOjLfJ@
%Ri$T\_]-tIohrn6l@?at,UqDfQ#*YHW(Qhj=(-TI\s*Z,/!1II0Vo>=.Pst[!3C4oi%VL&'9Q7ZI`DI$DO"WJ-7[rR+FB3$Uk'rY
%$o.k*1gJdeS']H6-7W"BK-6n4+K=2F9"ShSF=gG/S;jY&74Kr8DT)geCiP*kJBY.q[M@,*75*-**&?Io?:1G))llDLTr+Lf$nQ*F
%m32nRM]626`JmnP+-i-2AU=F1ehREKC12eL<j&ji(3Zr7@\`RC%5ZpQAhA"8Z4dkUWSo9N`3SC1/IcZcQL1@\m0$6?nfe_mA.Z\f
%0L<KX<Jo;.nfUY,&?sk?P-@K['7Bj*,Z.kqr!lD/=Cg^6"APdg&=LgX&HoZ\8IYSNIfG<BX7S_G+m7plO+E0VZnQPQ,=!mT&eD'f
%B6)O=5begNh#VE#+"`5m.oCa<]m4-Z%QatRKA7C+K-(1-?.bZ"#O+M"_iD"-Q!Hh)_gi^bY-mAM7V7bm+<!KS+?;!4o*.(8U$$Q[
%L72qB$;W5V_8Yend9?(U=E+.\.td^pF?r[m\8q)E\kMMqU'3/#.T(sLCO?4TcCHeB9$2>d>aGd[1VVVk[^S/./n>+u;RT=Y4\-<R
%o<(KP.l345&L>4SC>*eQYurG9)se<hdfo1C=(?GX`Y>q#"U[AAYI</#O1I`NO9U[+26Ta$C+LQj#b94u)LC`Igk'VSFrP1BhG/2'
%m[F]4[e?3$cFm)p0/L<E[>3%KmSs;6dISd#S`3k]=)&j^`d!)mhiBN,M&q,3:0A>ZSu`<.%\kU[iW^[6YmH0td=RPCR<<s7e-3k5
%Jl*[RKD3r5dK6su"h.]E!(J;?eW-,tb)/n)N?@U9U90'a,dIg":<V.c_?4"5"s;`[*Mm5W^cB5qdkh??;[M=saMCemTN!1dH$U:8
%$A(%AMJfUSJ2s/_^SS7]EbNU#<_&;MWG+I=^l[$Bm/5p*E"-Md,aq&aX36L0=p/Eu0jA?7assjA]h9)b&ZkFd%.4qQM'=caST'1T
%=,#<8r;j><('&h54DC=%n<0O!7+Np:phmf)(R)Bt.E-MRI3>HJN"dSQ9S9)!km+ZT=*^$_LgWI:4BL+R7E#sE+a]>H7)p7g4![-,
%/%DTYZD`Ij8qYJ?Es;JUo`4VC`e^UFZ:NWU'%'iZd#=C)&l[Y$g@],G(_MP=U-d@G7cDk/\@o,JXRr2cZGj5=diR!c@:2]3,^3,g
%.X6K(>Sn`P+H471YO\Ds@Vo\i_!WYb](G_4Z=,HACdc^MY&`r272"F7W3B^Ch&7P?/HW&SXl=\E0!a*82A<K76X,dPoT_Fn(jUCh
%k;";g.2JDMcK/3U=Ss_eYdk>Pl[@SMYA*68<NO_E<&Ut2@k5uk$^$oBYD%dDGZi!P`8<#EidFmC!7t?,AT&Lk^C!RJX<MDeU:"B@
%aW3<JOQ5D5_uZN*@#OVUfAJtN;4$i9YWhNY*%VKbUgH*D6nFkP^W0<8#\JQh(qES:0,#+S)<*f?H7fJ:Df[*W:OFg"nAJ^<U(qi'
%K1<d)7:@a6PBgBaA/8&FCp!ccJ9*7TUY,ADZ@F+WAZ1gaZ47=g&r:pD<TIM5(cJi8OTdY/pQ95n!A1n;=E;HEQtr,)b-6"p_ecYr
%(3VF$'J?$`VIZ0lVRC`Bg'4%Bb!kiGeU,)B<TNBk5U%+T_T(:j_o+$,$4<%[[HmXq(1HR*JP$:d.e[tT9Dj!0PQo96VOODB)HOX]
%_,L_/nVS?48CRVXU-Wned6a"?6[>tY'co!/86m<n7j?#O;[$bX$PJ7-_(euL:a?9+k3WVH=-M:A7LUD8%_rMNp#[h=_/tht#^qLK
%;q4JFgGBL)$t<=/p)"75,Y,rpY_`K#n`V&4c";oh06^(rie0cW6Xeb<+GYrW^$%tT/S'$P_b?;mSY0Rq,rRPp%^asMVBs\(BmIM&
%Zt<2%a^HQCQ-WK\AV:F&>3.iRg_j2F(1S)DJKd"Z&M$;t?"kWd<ToZ&Crdh].!9B?gENm6A&Zb:'4#!J<5R_VTZ!0,pjjU9,,uSO
%999U-6\U_P'UcR2!CoFg`bR3rBnQ/7o0TZHPm=Mp%4f8ROR-Mh8oX"IHh3Q$pgdp$3W*3*-*k-NX[_`NTEPUjakD7M=]>uB,\-n&
%9k-V?Q$FOuC'5c>g.&h8HA0'6l57\.i.kCp<be.<OfAJcBZ)f^AO4W5J@3>t%foS1Gegm_A7]2jjTZp]qBiHYM-'tO/$Ho&f<@o#
%)X!JGq=f#L"f&"Rq=cj]1(T7.4cO'8aM/oA>!N:q?H?/t#9\B/Lr^jqJHe2+S7<qN6h33'EmuS#'??844X?Hrb+^d>@NDOQT/JqD
%jD_:3ie&(DeS$Lk[n+]8>b]5dUP,P<>oC(W0$Bnm@SM-'Qgg60OUL53&o+F=4O`5f+Z\9%AO%JjlnO=;H%?s.j9/gKkS/q5V&eob
%*hC%65o4>j@>6e$q(.V%#JOK$l=ges"-nBg82e;([WMSWPphFg4EmIRO4h-!_1_LtfU7hR!q\YY'5Qj95H(mCm4$"Z&^/J;MP=[6
%\NSOHN#R1.X%-NCIIuLE1k,!]`P(m'7S%N!UsW*qhg/6[6B8_]NYZ5MN6=9a2lQf)DD5o*^fG.HBb5ZSI*a-cK>Dg*Qo;7#*#gnF
%-f!pT-rAV_b:nY$B\tru)ko@:qEPB7dM*UV25M$HqZV1)ZH\6-BGB)I=Em6P0=;Ft6Fk\CHI#jc$n=lmGLsFaIXue4c"GoAMj>:p
%(!0%Y="3#^\.,[E$bB7Q5&a#&K1QP@2J"'+.W'EHH-%n8&*IXq:5Th-!k*!lcP(L)&NCPG6VgZD@Gj+RG*L41G2*(@;0-C?lRT?,
%k^+HT2eE;NVK@^mjUHE0F@@@D"[U5s,$E$@H/H^W]ba:/4P@M<;!m$?p*lsAA&A?e578<OY+:^[S.K+fdK>X\Sn_4W\"]_D`&J&e
%#4.1Q,?"hd^81k&W(7B5*iGDl58ci51ukO[Lfg!(F')]d5N<U<;&(ap&%kcO5fTMH8tq#47$!*:&MqXu=R2\E0SSJ&Sf"b#JZ&l>
%TI$eP<sAg^',b?R<#Z%72:%ti]GKi`1-RoER#<OHU1.eq=gk!d_4mmiH#h"h;<,S.&`kr/J,lE&5`h6Yeof5*msQAl*-balSnhF;
%D?,mo_@dQ*_(10.)o]"]bKtnYcTGC&D03*p[QW&5mBT3Urjl@gAIFaVX_C"GHWg2<=JR<F7[D'HWXS8q>5!#;j^i,W@Bp"B%nrcH
%U;mkE$#cI<&Z/nag#]%],Z'tK4(,?!<oTnedBNtY8Mi48_(=jO8NS-60')Gh_FXhjE32XULfioOP+'Eq(*FW.+f^.&D@(-_9eFR[
%USYK1%)GoU&>^_;Nd=o557*^/Bl]V]'^eY:15)r*)UM*BbSrU7k4K/1Hm4+hiYSHd9ss>9,_M1iZ6QNg@m4S$1`HGpV%bY\&-Sa4
%%!@]@N[+'!7'$nAHpGQ_1aI/%CeFkTdZ&Uh8d'uS(gg_6<Oe6>JDW?m%J\^0C&jHlOGMc$[5,"<W3pFR';g;4mL:lO7$p]:0%((t
%dn6L6&2"$iB6@ssG&je-8J[.R`/I#kH*+Ht!*[Fsb.YaK5VtN8S!)hH&A`=fG[>eJLF6+k.DcV3Anff:X#-eK,[o7T%DW0OPheVS
%Ps0[`G-W;(;kg#up']&-+G/!J-[h]n*(=ReCQR5$`)?;e5M>S5ra&i)/\=40G#88'^p(NT$;XgJW4\qrmnu06mbB?VY:/5:WI7aG
%6-H:4T`Lc2_IG"YARH^IAM@Z9jM<7M(%L8tZN/ca.d;IZD'U;bH`\_r*XGW".$OoUV?'1Q:\U0#f\:Z-L$l&6LAmnO0Vg.uOR&>E
%<I>h(11UU=:-+,P?Gs]16G#-X/;7mMCq"@m)mI%XAMBFFH)*.B=^*VA_UOlni.LmlnS00rb``A(JYuOG`X,@6f\SmeYruFK9(Ta)
%dZmK8)1L4'WFU!'Q[p%Taf0nn_u5#!A;hE_\`/b9?n8#A-bBhD3li=WauZnf[98k39O@8&V@p>8(oes8XmJN[Q=XaFHXsBk82S[t
%5;dTO9d-71>Qd+OFC?)?Roj:B<q:W;m?K#pLlJF-5i^Q8P_-2Z$8)!].0jQ0(SVAmVd^3haFV<Y8F(fJ[4Q2Oa,gMBZRf'2M*rme
%=`U.79?gM%B[p?+\CZUP!3_KP_/D)d0iba1JBoF48S$QWJH\_*nO*pZdOh(La@%anJ6ZLcJ/]W!Nl86%Ug(A<_)N$*hN!p,C@-3I
%[``9c_G"sQeUUcE&2<^pE"<Y\EY7""3<1g.Qf<@?H5:WrZ'_bKS^FK;fJa*5).!I/+aQpp>lj\W8W>*/fHnNJ#j"Kg^rQ>?'3PCg
%PcIQmASVj6L#tHs+niNW6\U8Q-jp^).,n8^@tTTAG1$J(D.l0bZ+@jp7>Qh[C:k@F:EnLrCRJ<[:)&`$OP["a"0B>Z%BtD=Xk&1;
%[2@g/mH]WKn:L`c,%i1&E>!&M?Fg]3#Of#W$QgXXED_)XQ>a1bnuYn;H9@7EV%&Kl_SjK1$L2lANuE)K$>KT+OAtealjITYfTU#\
%)4E.rAOP\?fDGJgRVG?E:DX0!e'l-?e;3kMr-$Bqe>,UiW6'o6*f6^IE>^#Lp55Y^ZhmjKJK&!,*$J<lQn];q\idND'fVfF=MZm,
%YK2iOiu89j(5sK?@'e%^#T"[]$U&D8#eX);J_b&S)GjsSit._iV1N5(gV`)_p1[KB2Ot!qR]pFV/W*Ml2K:)f;:A#VLc*i.J33(#
%R&JM7&K7U#M-CA#KhZe\:LqXrXD(P$bFh:!@h1PT7q<W`;T3^0.Prh<K+(;X3fI+('p?sKpLGptM.h$BcWhBEHd6[F2.4?Qo'B)f
%5\!QcYbLnrRSVZ.<YQbf@f]'-\7S9#,7#m<^h[g3HD`&]8SJ/u<p>1phGs[m-+aZ%M'b=3VdYADCJcS\BFtiY'$962l4_Rq_D02i
%84R]cb9@Y5a"2rG;s@"EO0Psi$6,%IH&1j9]T.dR\?h9-SjeH;maSDhT`NeidK"!)m0%OLQ,S83&UcQ1e._I:8+_&5Q/(\$f<[a)
%H,7]G,H=KTiVBK+![^@%^33HaJ`"G[69ebo8J*X"NP7Yc/sJ*r9_R@[@9"U*=J^[\'nN>&ogC*iASN6Soc\N[$,i>Nkpf,DG^G[2
%\J'h^%sIgS9MTjdBa5'&?S,a81/rsqTnR=:W%*p7LZ-f0r(MrbZ7m91M[%)"6$=$<W!nPu@3^Eg-F[/]*c5=W;u%JjL$B<t@h4I4
%oE7TjWu1,tH!rWOM*]R*`#GNX=CXjghFVXN%K_dS%M$=@,1J-J\M-#-">oUj)i3^!,"[%U9M6KX_(ou68do_ck:1:0g)`f78p\9L
%KMge\1E._U)XtRiH5Xk_"")X9o(9Er&ZsM+q\ZA(@P(6EF)D@C@"g[_<j"p@6F2YD[[]XN89thq+G8m)Yc(3O@i1c8/(o25XFctd
%frZt-\=cJs8_S%;/+#)NHgt$-f0Fc,fGNd0#'#-,!51I.2qjjt(pFNN+m+SZdP6Ir4kg;8lME)qj/]D'%t_ODm%!kmKFOp@o2pOA
%BtG9N8)>3)Y;$).M(M%')#W6A/;1(c?'Wi([IK\)9#W*N&T-RMU'!6!hH31_aPJ]m%)PmNV7(Hh#eI9]ks"30CElcnL&_k.3Y2<1
%)CY0f`M(q7$Q>ZJh'tiq7qBnEFBjX2N_EM2aX`*Wi5RM_[\'RXn9bh4#c/s^0kb"!)u33#XNrZCZiJ`%dn7O`WPQgME[HmCcK3>P
%F?7#oKp;WC_M7V:ho2Gm"c[BAe@?eJ@tWX0$_t,6K1$i<k75E9#AE0h,5QBQbhQZk,.WTt?.V3CJ0_"^LhAO/i0P:XeYW&BEq"e)
%U0^"+:pWp6Ce,nR_77uaA'`4UJLP=`.lcY2X&A#aAl4IH3.aSFiCH@@#&b`RK0U3g,m]a7"gG&&F)1'Z"f_91JL>4`Z6[Y0/KfJ4
%Eu(OY'cN"9>1!sLEj/=JpAg&Hlu,L6ou(OmqZnE(:gi"bb]Z_MTMPIt0VE%1[ONR5L3Mch;$0sCTV.KnBB<YGncU/a#(1r"JN^PA
%Gu.p[q>-9pK%AHlnu=BT=*bcC(K,>1nq%giR[VIZ$GF^B^K<3[/$.hZP/N\c5b^lpl%Blok%HPZlBIHkkl!f]\!59D>$%BmfGCZ*
%Lk=Tf6!%fE(b8;u*-#m/Z)e$E'1?r=agr#O3ac^>)5uqVCeV2F-ueF-,%0%E#F_iZ_"P/%DBq<S<<OZ\>ooeU6+Rtk_,p53L)N<f
%:q"#JSQ_FLPXt9\&+5+-oq>f.^d[EeZYKls>)PiV)Z_7om!5Y"3D>$.,gBAHm9MGO#fOfTK#h#YTY=m-;$3+>d:j#pN_Z<fF[9t'
%''jYH\5T=,$uCf&i_!RSKucIJSb\1sGK!uGC=fbMW9IP4[;.'JLCI5B'f^r?WgXE>`SJ<=W(JU/5m&Tk);2A>K@]1,hM.nn,>7fS
%,P8Y.#^c_FY&0O/!dJQ70`fTkFid$ieZn$ET,GaeBua?ZU'WH2-""V=;UPQ&(r<[A_::[*[63kY\NPHK\5pGJZ$EWr/Y@(gEZkJ+
%A<Z"\"'/C*V/Le!5,4b_]=5G,Ll>8S+Kqh4J<"1Z[OY2tN[Ia`WIuW2qO]Bh*7*7FG[D8m"OWA+nC*VWjWcfC!jX`^:kLl?-PD5C
%H-,b0<.$mp<8L.]&(_2)$G58Tb$\F_bZ17d@=o?4)27/3e.L?>R$9!^NCqTB^]rtf`'<+J$cqA\X0O1+=U,V[kPg?:EHu4_g6>^%
%5;4Joi+$Oq*\Yo'O]QO]h3J\)6@OnE:f;QJ:DT_[UAbcm=u(JQ`A#s_,p1J&A.Es4NXlReS4ioFC`o._+u\B*@.AR7mK+K[k!>*M
%oDT"VFWg7*$:[iX`M&Y9G;l"<rnF\eFPD=J><FMj7Sq'KP#W,/_O&C)5'%u)VEA1=r46,g5_(?\>IFNX\t\C7HA;7V#tQI3dZS2#
%WQYCAAbdnt'L\*"_,<i?%o>u:O9cG'Wu-T/o_)[*qfS*X25@5VAYu9,Nc:>EQ9^S*1<JQUJraT1oa):V.q:']-UqC",^OuOXlWk\
%%BqnGks^DY=A7$`\#9S84;,QD@UKD^KqpAfN,0Z";<f>2+!Z>^0@_@/!07uXRYAE^q@^l`ljmqSfdDM226T.d@mK[!]NJT&'AD!%
%J8;S/b6c6Rfmm^t'o&DmK8/K?m06[i$=LQdKBogklC:*bMa>K>hMOD7Q!8NE@\Nk5Ui\d?)1#=O/;gCs%+>>&.$AfY2Tm]Q8t.N=
%.e-49Q1s`F/N_9ZF?1i8ChYgHC6Ec@7-A+.)<UWO.UL1?IGS![Y*)(rManDN&IX@&3c$X']X@Mgecr"p6\#XcX_W3K-F;JLcPEdI
%0K:m#=@NioCD-eRdRnrP^VCe"'ml$em?IhK/`oA)pD+>M+`j*CG8nYK_j3$&N3lpXYKtX+/28Oi4<^aOMTrAe`M:]ZGN=uV+P%\j
%.q*FU(o9e%MUaF&8J]K<6LL/c4G7:Ak?U?,Oqi%IjO@.FcP,UI=\DjD"j7q,&1f0\M*NICX.SgEE#9?9'#u$]eKUbO.`j?=?o)[3
%;1"[%=)\6R..I`L8]BpA=L?JunqK<QBeM*K(=I_2!Xj;NP$<o*0.-j2[rd-A6<"ci%;(1l"aFr/VPYL"po8l1bL%)$AiLMg@StR]
%Udu_-9<W.TXK3W_?k.=`h\6H6N-88':a+`NEc*-Q0H6UeMsu+rA[XRfZ&Si?k>MH#EX;1B>>#<bpD9(,b@sg_S9j1/Pt6]Bc,4-R
%AlK<mJ&(-X.V3>ifWllGHE<G]3qSB+a9BPU>or!@S5h62ioF@JQsuOC(DS..'t26JVO/eB4X6@0)_s>m)TYVnNit,%`,ag\3rsFc
%DAg#"U;)kiO$*j.QfC=32Hg>ua450'2?4(.\GaTe!,<ndmg9D1dN/Zsk<P'#Nb#+MeldtqJAeZr@Y+rKD=AB20=rDnoW7MDLs[!+
%e06#K81pY)U$.^kl"GIEH[quFZX\Walq4;Bg5tm.8-11sUKTY.YVCN6;]1.c`=X^>rc)$Ecian;&q_Tk5nTV)PD:951L[j?WJXDe
%UgYO='<TFP]QPG5S?n0Y=&-%u`E`KglY4D;-_pc$"d9'C=/9O=$iqPL9,^0^6a!)M,I5I']f95tN]AV7X>JR+4u#>=_&(TI4m>LN
%+YbrXi^,WsU4R;#&uC-FbG4VPONlr&+d,Ph<cg6ZPa(AfTLMB;]c\Tc'XtQI9q4uN:..CAJJaBBWX>>2MkK,NmnX[+1%Z=d(;g>)
%Kac'CQGRu9VO%"Y8?;o`PNU?r*?r&uW=\L"X'<F\`ta\T0=F4YN8RdC?7Fk^B`UaU,c0%HH_gfkC+]]SS5,5;K7q&p?oZ+=1*a$q
%9l:"SP3R,9G6j%]c6PD2hT;GR&_N;#;TDWE=4(>kQrQED("TmG^]cX9Udt&qIkE^X)\TF*P(RF9Q26^&+X`[$#CO7K9dj=-hFX1?
%HPpX@(G&+L=/\-u$BLAUi5cWahYa@sOH[nX)c'IgBXD/kGUo/uUR9GU^h!/Er#hfcR(b*pC*Zh8/rqh[ZS=brLkOo3p!bQOam`%W
%C$E@)J2Eq$N2tkJL%D5#"lrRTJNDl$q@msa5gDH2DeWUeA=n."RF2OmRWpE0eZ=jp`I\C:ARUQQEd8TJ8p&K6(G9fW_BP'L(C!AV
%GF_[7`L,FT7$qm1RLUm,_HfoR\WBqVZ[V#K9[7o#\?$id];T7Ni!"fj)KNn-RgiN'P*5.o1or^4YkXTNgd[pP/.JhRp?CDG("6l]
%o,)ph#Wqns/(-],ONBp4ee/ei);d8V*kJ.@@7OY/1a#AV:;@d?`iJpbQ\Uoq=;Bda3Tu7Eo8+)Mi="cXj+1S`@^[0e3V&3KW0V5!
%SjY4f[Hs$eORn>Nr=BI(M2`nRODNt`@sFCLkJgadP(K0SO%2'RJENRN$7;/UcA",eNfHf;9]74MiO"cS<5-\T3VO$0Nm"RS35OKl
%Td!66c_F$pF+Q:FZqRQ3htg#A(/biLo61tT#J-.!l(EORpC0UnF;0s/c48QIo$,?b>p`3;];)*QPLP9,`0;+K]-?m3Ls]ZeU4Rfu
%&XIMcjQ@mY9a[&>dGVjnQlM%VY4dE[^i0ESgeY+S90)C\:)X\EE1XlNk<oJ$o:X97\<?A8!g\ZA9+H&VY+dA3f7ciN7:I=`[J6ab
%_:Q-4LcWJId*jglQI])oZP'pO._AR3[EL3T4a1[/(:QO%>";pYmQ??/=dR>bCEZ(]8-f#t+lWK1Lg85a8g"UP&;o&s^t?@&U0&Cq
%XL8-!38#PaG'Ca9quLAa-`_#T,=1P:MEp)6%#"7$3Dej7+?^ZM-E//E$0G:3*d7Z"C85='L8,+t)O5H09NrY9NtN%epP:I]=NS'>
%l4ZLuN;C$i?)_cY%@&tA'8j(E\5`i>@T7je%ng4U'#EDQVNOLZ&MlFZBIU>HKEq>BK9Pah4ReJ/c8e0^`(g?Q8<#010%gG2Ki[`;
%pOLQieZe/P-&3"ub`4*3K!R!_,j_n$8`29S(=FV,fmoW%<8#V\9&U:V'W/.Od_eUu:0YZbiHL-/F7'[$_2oj1,+l-J&rac=Hr]]a
%7Bu:0#YHGURbVCH3%1R)/uCqa-/$E<V$C^"cIQ*T>TPTP&"Uba;1'WMjr3asY['F?m#n:\AkfL,a/C-nj1Zrf/7+'`C,Uf+We)40
%HCk)V.MirR)nqi`J2qY9H,G>dJ1iM7Gf<"F)kCI'J>Ep>6nJ,;UCD?jI-++f9*5eP1i,K5H\E.WFphP+qb-!TB"VT>0;e`U)T['Z
%/s13=b=K/"#6C-tWg'TZc[2DkCcIf"K=!R;:b7_jHsW=aOlbeP/\tY(K7.-"14aZ[-)oHsU*5tAAePZ33%H*E6S_.OWE583RL<G\
%X<C`nBNJ9j5fdHR`+3n!]eH+-Y@Dh[lTH\kq:2/4a/&Ml-tc0V*$.ol\$[DR0S2U/>cYY-,%m$CbN>`_gngPep,P=Ec9uHMm+QE1
%-=ihqF)q=f>=!3AhScdJ53s,E@T2!oOZh_LImgY5VEfaM8@0S>o8is-m2E7"b(@rX<-"!*HQ\)4.bOBfn3[roIUjpPJ]\l,'aXkP
%j3RfeEf,_I,'U90YSG\0:9,d(n3GIA.5lFV-MAqQ.U==S^(/1pj=i>)"KUVu&kCk"(S[&Tj\.e&"X:pC`3PU>Yal_o6$]kE`<H[d
%<rKfn76_='"M)G^&`XeJo<#`1;'dD]c6q_Igjk:fG&f'5aMQGqciE6O3@Ec[4P^_l"j-L>FXU3U-'8&bWhq7gd9JY=1'\9$%]>h>
%jUr(pCjfk@Ps4$sGZrS=mdQ(s&*Vee/\L>-[g2ml1e.P::!R5,iH%$dKk-2H@'KaT,"+ei,C!d^n<Q<$5n+r!-#,c,<L3W7N,6I2
%947r`i+k[`1f(Q*&94P2ENkQ7Ff<MlEu@9NS;UPnA*b$!:+Z0:$YtSlJ4)TXCQkM0^,V9(H\p!FX]5tqN5b[W_hn[1;oQ#ME%\Fa
%NYin$+l?s$@08+fe"F=W:5BVu6j9IkaZAUmp$iP9gK`;QeEJY0@\gabV`beb@L#eYLgF.\OrKL`@)cTBk>I4Ek-XKF$^/u>_Ej+8
%8lSJh<?tTGR'HaKbmhW?H#?'Mj=3Ct2WSc:"WH8LUe8eXBU2Zh1'/C[Z4"+IGj+aaLOP[a&g:AGJ-TZ-V33eec_WLB&FQ65\%W[h
%[9Vl$r#SdJ4PEtpS'Td_5"m1JRdB86*cSM4LT)C>2nGg2\e*PJ1F&Ebma9pRT$1J-@Rq%h+ioNM`)LORV#u$Ja&FZ:<g$3k6AgL*
%B@_Lp[#tW8D'a,5(0J7-!Z>10Uop38Ii=Qn<e<'"'.W'5E0Q9:N'_d!>U8Q]]*J8N,"tEkaQ+5&b>M4f8g?'RP-h^ECT/ULU/b>&
%dDS9dgN>^5`Q>fV_dA'j\+pM-6dOC6PIqUo=Zi9`6RVGdd-IbH*2!f+HLWg5Kr$'9+<erqlFcmk&IBPehTm4[,Qh,kf]XiE9J-[o
%f#f:1_<N4TKifL=*[AWs`F5)mAs/A:kcb<2Af2b`J%bJ)VQ1Ed,m8n&KRi[Pn,'uK*."S0r?OkoU'6,#5Y+ns),'\tL/\4opu=Aa
%9TKNHs0PSGErP-m`&RP`aCOr*+n=0>puINE*n#<s3cNI%#e-rd.I;c'5QQ#Ij;8Mq;k-sF+QT06OpMP"f',J&CpoMi%@`P24gHPg
%]_N',qP[XoeThS\1>aKD@npR;J4X9!jX^7)#Mk@Zp`b5A=R],"5f#\$fL8s]Ro[",@FH>L8'+.(8IJh2pc*\(m/=$CVooJ314Ej6
%JYc%"0+Tf/&pN8:PO/'8aXR+nHj\S3"KH:%/Jm,)boX`+G+N^L62tB?@cWaK\TcW&L>upu@0.>6jO<#m873@P=c7)`\MC(Zns.J;
%R2h1Q)/n47nVD1+5/3<:>Na68l/2EqUJ*)U`AE=r%!^KhR293Z`1sE]^%C/8OL3QK5p'Y[q6e/Oo//R:hXJCHCnG82EE:H7@BK^o
%5Z\-B.q]9'F.Xph*\i?Cpl$7lX27=]S`2qG7ljZ!^Z@#>r&[YKUe'E8rp?.MKI#o[=3B^=*lnoVA.P8-.>=i7?hW&00Vs.`/gXR&
%q,dmXo71%o"k1k?L9L\@UP8MTXnabqP4.XF9\pVhkV,Dt3e&!@b!STc*t6T1!b1?=00jkjdadV"dc(RhABcjiKC89W]TgPDreRN\
%lTrjX]2tcP;!HE)9,r25nqqEseIpcejRf8feT>_/E'"BW9(1;Po[4E7!$`gLck0"UTs[9=i]K1f8no5&Fn)&9)j6AOLZl&cl!+P9
%6=Cfb7pYV7BrFJcm9n,35\ceIO:#Q'K"uI9NH!<$]pDT5"E6pAG-U%K);fUV_.'!-a>m7C46RaW6)1e>M>COYB)??mekksD,-rEA
%eIqETO%0n+eAK4@_anUbYXlc5DY@\*C0f%MSU>Ru!#VV2-MM7-!n_0D&fWuijJ98ieRVqVF)[@<U7/#1Db#@EJnV6A3)UF01<9mM
%.Q["Y9+DcBUnp#KYs&0U4!7u\[.(N109a=S"%t24Di!VpRtT0sV(p.$&F^Z,Q+T4VWelu<AN3IB+:_u^3EI81[%'cT"a=26&qEoW
%!:G[')4l8QV'lAq*MTnJALJ&hl[&+\\3.dMfofH0#>7J5o1fWSkV>-_b/rU_R&a%NNpA0@U'L^Y(qVR,TOK>jX(&mg^Bq0*NRWtS
%T<i!9!^[j+i=9B7$?'W/j^!iULP6oaK09L]*G#[8*_)=X2+B'u@KO!8J/40"Z1T;$8EVK];)"gPBn8=CO7[[k<4n$.JGpi=:GRe+
%pmNRg",/O(7D^a&[*DmVi:pR';:\i(b`XhQ9&&ma@\U%KTRdJ)-+OG#&/YUma>q<_=US`^li]g2[#T)Q@`-!deci;tH/#ruATJeu
%C44'(@`aqP:c#4_ZFMrS38'!L4d$>,(bd'M-cAp`1fT)FP(Y_t/La&aG1&We.7ieEnCd(JBed"@'cP#/a=>$+-A8@?aFWTV.Z\IR
%cs-)@o<(u&_q>p'*AhIo@\Xho;$VrMN8IrJXaE>#lAVq.<Qfq2'ARNW,!PTb:0Z>%qI&m)G^'P*;G#9VKZq5/gAM4MP+l,3i3=Hm
%;]kL"$eCo3]-X!kl!/:5d,_/uT72Jsj/bDrf'topmKq5*=d*S[=o"^^[M<@c[E.T;(edQ^E-O<%D'U:&Y>!%%]$L&<7bM_5%Cfr=
%JL5G0:-6<(Q"eKj_Mm_?,op2X:)iGhM[I5RD=\N]<VX*^/s+Yh,pEfcj\iCIjQV]P$0p#Nm^#>ur(bm6bUhsHTTJ_V*XL-0n3ki.
%%[+r_B?gE7#91cigO%mm(U23_qflfG_cXRB""in/8oF!.//_"K^[>s1G%<a-CQS>TSW!+6/l0cr:<oIoGX,dmJC@k9ml\MF'KQ-W
%iD4r7s5Xl_ahAaD*5.J_q89ZPhRPV;iK(Su7oq&SkD,Cr/c3MVUG%&]m.;9Ho`2RGH1KAUea3+tUE@gr]Q8@DfXg,,l,i2[jm3t:
%?]Mkuf(i>D*WG6eZY))lh3X!]J*lpVQbRuuEWkHYd-g^nk,k6qSmKmZ:M2%NSmF"`)c[F*%"48mIsdI#o]aKfe^NABik',W7/b0t
%XkmR`ejb_\Zeja;ljh%?o@B\-dq;Ge*u04EF)h\5Xr%K%F6c3(pupmQ7otn4lgnWMgZ2fI"2tj8p7_t5]mAO^XW#O`G`NGRMO;&f
%^AR3kFEW*ilT79%B[:sdpY<T`qMs`ZpAFco^[RTEDgb=B(D!]EY)ZQ(oJj#:rpC:l:1sOY\FIeFO0It4[.EUiGE8m:5?VK,kp*[@
%*QGYS41:1[T?m3aB0UkTHa:DhBKam9!\G6[Z",!5Jj,<eZO]rRZFnLV<agWW`Q@o_/ksk;hL"S4p@.)<nn@`^bJRsg:QG8^CQ23I
%_4Xj%095,Qg$J;!lJf,DGiAgL[VM`VB?r3%T3V'B1p<VUhKW3!mP"%S*fo.t]Y.#Ze)9V1juBffgXCeapUTee*a]t?&UaH#`Q@_f
%h])L,48/Dp9:bJApNj_iK=a(PH\8ph\9ik?\!Cg*n"IA&`gF3Ph0VuT(Pcq"O_h\R2jo(L4+6nrnG)"l<tXTL*cHj6VtY`1MrOZu
%oQl3@gce6,\!umbl?IOHaiP]LBFPb+IH\smK!-/#5C\-&GWqf)g_O,*pY$V](Q6=X+W("dUq`cf^'drKNWe!VBm0%AnakGaj>LQ&
%*Gt[tr<TlG_quj83^l[`1EMT0:+n6Wq"-#GA3G([B;b]:;82qY8,3#8m-*9k(&MG:/:ua#'[Ns9+!2QK*Zc?)ZWN3BDVkuk4ZHR!
%ldNbpl,EJiX2FQ.lSee$*Q0kf*Tc.eSm@l4DD96.i&:BX%nrShStca=Sr7uUZ#$lGr1I;-/DokYQ>bZS%J&ApanaHfK4K1W8'W1H
%<]siE]LDP@NA-#[O"%/E2JfsqG>G?6+\8nQ_P"C&p2PQgnF9ciJGoXJr<K(b?m*-_ouAS;S.;@Ik^fg#ZI4<fbnnBhY:T-R!<2WO
%lFk*!<Sl=#l-.&gPH1ToZ`F'UosrVDgZ'ff%hl.[rU+>Bhk"+;RGghWOV+t'kdZ[hn`i.hU^Z)/UqMg<6cH`3))Al1[,I\@)XOoc
%OQXnnO/<^0Vj#<Wm+]4kA&C;=m+p6a'.Lr7cXL6&*hQ^3T+\^5Nnh!gQ0d%N+NOEcEYk4NpHZ1+bre0M4m\e6Y`19tgD?4&SmIpn
%4S`fO>a'L_f'\MOl[L0m_hHdW4,>j%Z],Z2&+30[m2Dnm2I)!=GFW-+Kimf+$lQOlRJg4#=Z1]_pU2P1IbXV+O13&P\c5YDH7)'u
%?PS:Ogc/81\953d,4R&6;<oOchbhu')DZ^#1K*Y'B'miS)m<CkO(;HOlhe?tFjm7DkNB2#LU5I_d5o@ar.DI#r9><?]BLI$+1sBm
%[!VBAg$.JCltgiop%I@N/Q,&NLX9#h:u4*T8,5]YdG0dOj2\m/p-84/rT*Y]QBW>l^"+^7\B3I*pIM_%%[uD)hmZ%%Cl>r1K<mIa
%O7[U&2h$h[*m(imGl:D^hbN-q:"arUf1LaCHuaPE:<(ZF*N\nll)0</Xfr6Qr-NR2\J>:rrO7iIocDTPWoW\,89TCtY"3L$Ecode
%\@pO*Z1@\\iiN1*nMf@>S_fjR5/NAXouAEDmTUdZjik>eI0Xn>I!fsWnk"=T.R%eVTn)b6j#T645.b-lpQ1CdH/oI\CRrc]HQR_t
%3]oQOqr5-cf]!"BIpT@gD3:ok]`&p9KY@iHI-Q_sP/HmTZbnjT%D/`bkT75W).pcK];'_:%+B\OgP1.caY4Y8pTCc(2LX?;Rq.oc
%,M<htkPcjHoWKdSIG$<l2^C=a1%ht>[j)o*%4T$]kqMj&\)*TrR/S>`(>V$I_[Pc`S"bj*#O*q]k9V-\%@Ouqg?[Uk_t5%m[K/_L
%R1?P-B5RJd\Mrb,rC=.F(>bpb_eaGmB7$q0f%>$/$BI8P_elIn\4.OtYR7RM'jb0'OY'[g=4`!bHMR7ND;9F&dB9Z:nn:2IX-Z,Z
%4Y!Hr=LKMUMsb0$m%I2"+OSc%B[u9KU@fT*+OLCM2Ft1aQY:`45T!2%6(i)+5arpl%e=FtB78jo@%[u"Cli:^4PP=1Q3MIQXVZ]+
%B4A";i'0^d]OBReff&Qq]PVs*Ib6Qr[X%?&>I2fQ:(KR9[,),):!@(WbKg@JG(#3pA9qla;HMa_,CqUq@[eY#jm;>C<I'4jf#oDi
%H7A]Win40<0DDTM822UN/Fu_Ii4o'nrk8\'_uJVI?]=DWb4`sQna,efq+:V5alVmBm-nb6%CSs%\FoA$2.C6(>?3!2q(o)bds#og
%<$S9<2=c#C&@3fDe33a%i^`<^Cja,Vp"())[cH]aJAnCDK=)pYRsrS//Wm9ripGshm+K@!0OWeO?Er1m:Gf/Aqs=l\9kEFp80IPZ
%#s[i2"$XF,&^Z"M/(0."JZ-22+*nH.`K8Q"'H92s'p6=S+SlQPE[)NLdoGO)eBBhMc<"@3n@#U^bEK!)B="Z<G2)1\LMfnDj$k"M
%)us6A"%,'DAV?9!X":f<:s0DF?8fG>S30"f6TB>s-P,1s:>pd*jYD=,/O;1GOG=D<&4.F%1GUnp+b\Xuh9CM,LCj"f668J70-?b;
%dLbttMR=Lt4FV\6s(`sN/dg/LcF-8rhW=!n?XGu$bP'n@Ac<VZh>6%nS"6-WI+idtV^G93?GZ(P*+?,)hIC@d[^jdg@^>Z-Yjos"
%%ZP\qo]#fEe_tfRI5goU!4iW4gFM4Bqt._]qZaWoQ?`#Cj_T,>-<OZ^2c%_[:S(h(q8patl0R][bLuET(RKp?:O6re!KA&F\,hR.
%d(#*uof"T18FDMD2I5dMbMfp+cE=?OI!.2L'"S%n)6`<gVV*Er@kGbLH/d-=T%t&u^E;D5\uUdW?1K9OG`QbTbMO]"l1q[=&Lag*
%H^Nc!ghX-ks!LQQM:_Ipk9&L?2<<'NIHqd'H8c[PI..USmhKO(.mVnpgh+?=?N+g_E1;j+D&B)mgkJ*7&)Rf*c%+OW\BTQY%(OQ4
%gMAlfF39$Q]h"h65c@`p69SlBD[TF@H[->##&r(BYRNHH?AWLN`Yoco$QX&.%?:>hg$fmurJQ482)I3H20JMUk.U\iam$ptH\WuL
%E;]+PR7$A#:">e%rM`N?SO<@T:",Xlo$94"J$,he[RG<KFf.F<\oW58qeL9=:igBB%c#ITmmYL#LJJGA00UDj?hF"-.6+^uP3?sn
%?!pm<JDTtVL(jBl^4gl_=S)<oromd^h#W`4+34dlRL\C_)_M.L?(,%]If+S:Kj3PWG.a-2^9MLdU[A)a+6ht+!P%s*hFC@L;c`"'
%JdP_d+G4I<ENWH<o%3`DjO;fIS?RYujn@F6m</F`I<oqH7QMUJIHr,(:mg)al>K)HKakH88G_)KG@B&l:h-Gu4b+GTl3?$6:nnpo
%NK#fLh0f;]q@@*:27C=!*C,V/<P&@3Z&+Wk!&XsW@oGZ&FNpruf>qeH*4)bjbT:+4*aKeX^2n;B58Tk3mQ!)oVHY+ndAoq$\a>N\
%LQQEB;:>FgfbT)5r8Q\cajncG'Jss%na6o_:=gmrd<OgI!TDm,_roWamt)t`A<!:ZO5,1BoXK*FViM=[ch9#)5CYgX5O.]B\";;#
%XY:GNg6Q2<pSufl\G'W2XtKPi+;^M!>TR6YSFtc&roQ:%@Qi3n)JU(2NbkY"oI<>=L;i\..p_d>5bejm00d$3Kur18*:]WN?<P2%
%h/LD_W(Z\2\*WfUX[R[Lo>fE!drsf5ocMLlB92^-a2[;&7:lF27Ho=G9Q>&:_A$(NI<KO\'KE)n'&PT<]QaA'p*&Gkk!A!Z]6CI7
%]lca$i:%0chr*u5%c=-C8qY$*q[QtO"(cHH[bB]PYBai7bI<H`?gg#qgZS/#*noQB%3FEbnI6Psi:3r.*LV9<nZ=OCmI9ll'_fT0
%>A#3#n+HY'`PqA2bJX<7G&[8cg?#r5+-9UjN;/."hmnd_07(5p6cFsf(C3AGcXd1r.UKc\;O0?TpHgbKofG'4N'0?.6^Bo&r5M7)
%LIWH$3?lnjZbrQ%X3]X)",)#Mp"=&/N19:Mr>b6J5.J8i4):t7CtiRU7n2:.^%<KPD)NCO?#S>2\9<;glT7l1P9@@;'g'4aG6DPs
%MS-Ps#5>]94PasrYi]o570`BZY^(\Gq=sGmp@.9b*K.;pd&diHe#-t$@6_^2$iKui&&k%IZ2N>B#AD[uan6FRn]^,*NAp%mir&W&
%iMpfGVPm,a\SVDp$e9Uq*e+"Im!=Z<>e'gbQeZMWHW(!Hl<R/!Fpe7O$Z&S0\2,(>pVcNi!tJo"7FhJ2_=-=bQG\?_G;g#iqVUKW
%9V`+OOa='1=l?]1m/2K[E,&h;;=8kufu<dR#,@+fISR!#_-X^"HYG1##'6b^+!._\g-U/N?KOc8^i13._#Z;5+EKQkdW[u@mOnl1
%^'d6RIip8Ai1pHPS*X%#]].4Y+N6gRaGPY2F<LDi#-r+pB&f0=^!%K\4h5n-n77g1\U?O1nFGZ*l.Km4O,OLYF42E-L?m.a"5.YL
%fjEhL\oVAPREa?Ul`-C>FUkEm_c>mni6]AC)E6%ZHK?>j$eF=fF^U+EiP(U%\qf0Rs'Y4L_:t^Zmsg=nqtm5#TrdZ/MtaPFBW?8F
%L2@Lg`@0oMl_d#44(S@is/dWWDh7E8FER9lGkCgsjK\)8Id#+5]e(1B>9q3O1n="*WOAM=a6%99#JD^a9s=*Wi8,1D\.p.OQH/Xc
%:`a+F7DR07B(NniCE%5^^5ihna//Xj*gX&P;Y`4F1u*c=[V6!>51[4q>H$ccg%3&4^@gl80=B2_O(XgV-^U;&O_i0$?QFUFIuUo<
%cn%]#@fq2H5J8+Ifm)ZI8o\./+2,EXdcB8)g";>UdH?/.^,#32*V*A'GnF\Q]1OgJc46GWro!A:r;#@o?]it\I_Xi=L/!FiDITY`
%KDeBbFXn6kJ;8NtnIV<Q[rZjVpc:(<"c$@-FZOJ3044&::Ts/u<TK57cB#kUTTE]Go&uX&oCnma?`)lbOXII_-g0_IZ?Mm[)u`nL
%5<Jc+i\^P\jRDa5/0F8ph[_rrY2Om!Ahf_9_p@6_?\KSN%S34Po]Y\i2nk]@Nq)Q3ZNo'Ijk,iu*'%m%EM3^u3bslF\?][/6D>CM
%H)6U)NHLeYSnQ-?0$8i,Ka+'P@r%T-a9S;AO7QQ07MDrIa+^X#j(0[%46G9,A<X(!WuSU<ONgmm[MYho1O1i9H0n(8`r^7Ld4d%]
%dsDTf=cZQh\4.-OE_NXV[E<?EW5dO,QJ7t"hh,b9&[:)X^4)(nE]eYgH$F]<L>^-QYE'acj1KnH93AJ)26>gt02#=:HI@9j:GTQl
%s1g<g5-AXFgOhg/@qClBna@sbX$$$S)V7FpUCYZh:IAJ><NUXP_.jiijiLBr1sA^+@+JDn],]GJWR9cRn(-'LPq!,gpLE.9ab1HW
%f.\pS]6p\bi7gMOl-=.>QplqGdaV6f4'G#h;;k28,eetDFugok0KZlbqO0>$N.WReVX^sF-lo(+KoD3m'p\-@8;>Ah3]fr@k4u&1
%r?_gk$Uiu-)+G_jAEf2>-K=)302%/WZ"`t10'$5R4PqVo>#b^><N`cV&`5p!P_K'C_cAE)bWu9ID6/18]dbk[(O.(]>C="'"*9\W
%T/JC#'&E]&"!(>#U<8DE:DIWGC025/<ufLF2_^WL:Z]qNX8".=QR^P.L[kKL(T^#GCD6q'2@?_N:P/Wf_\f5Fjk,eM?TFt(X_$Uo
%oUYrY'Ettb"c:tGPR`et!d7!B)a2eQm@Ucr[KQT&5])HD7Xir3"D`oFUfJV.H.tA^VHTIRI*a'=A#G$N1pVWO)L:\!@E)L&-q[_R
%Co[9,nU;W7Co5V$!ci,<EN=4<2RStmWK:=/?-np,jNu!.m-@e;qU4])%t=e4HL2<3I9-mDp9dD"l[TS@h?,!BG'X'NQkI`K/q(7p
%"#bL4HW8;JLdg;UYMq/0kf]0JMppfOkD8GOjne&*/C2ohJ^s??oI:bEA@ck%1S_E4Y+O$0],.*2ceC<emBj0t-rd$8=5XV3:B9ZS
%;j@R>Cp8@HgA6*m'%M3^WP6n$lJ$H\DqD,*?+9ZR^"'SqTYBa(<8Zt`gcVg5=ET6%f@GK;>&87HpIkbESQ1AMW8+$^7;5saB*ko8
%RptL.?m"OHetfqLhCnK3E6[,ZBJ=AJ2+AiejWtgP/"Qf(B5C7IKr9gNBY4*iQt9C2BMZDsh<LoRoWi=4]B>D'Z^A>,'&=%\V:$dc
%Eo]SgnJ-jgND3CI]0Wd<HHj1+qY^3TlCt8uY<`H]4C`M?QJb!%Ud7`#N4,#R[qOZc.+i<C@W8/7O$p;FSqq$#r"3I(b563qMqi)j
%Hn;I!iXr=\NrLMMj'Dsk\UlukBJgr*%t"J1N,mV1CXZ;nr#/OsC%NMZZ%:Q^o\M:)Ut(JcT\W8ma*p5%fP"409iE1PgK\$"SgIP"
%?7dY2$C#=#',+rGb$5[@Hf8E&lb2g%>>9puBbE02W2tnSg*h8H``,rRQC'),7%I'@%E"'_G0Bq];NZ"R0M`)=#n.'tVTI:^)knb)
%ler[fbAJ^JFM6$G;TenJkp]26IM:qH`1tP7g)use&*.9[Mp7lMLk6Gg_#Pt$\`1JOEad(#1>nr(Kr\Sf.SJ'r=LFe[CILJsCc@^P
%0!$YWpLVHW<!PDQn=uu9l8,A5R><)G4eS'11(kV[p6o<AD>Ls^hJY$9mmj+n+mNjbb?;B-"Bc]qZs"k8lC<DSb\!d0q"!0pcTh+f
%IJ@`sJ$-K[#FUPN9D68=O$!ueIr[Ss6iQ&@qtl/p4aR&4oDgGX=0P7iHLrrNcUK"j",(TG"i<k#,#=343<J1&=lI8rMsiqEh+.Kf
%#tO6BB-cihCVDI6LKB7LN0L?K&)[5t5B<M`J(@>Cl>$V0?i-gZqm2DGqMDt+q&fRp?iT4prYp@[00]EUS,YO5s,F4Qrkbl;XoJ4c
%rQam00>I=lIdJe<r78rQ^GnCP`W,'Zs2"1(_*@g0J+3@8i&C]%?^U5.&a;OVmsOu(r=Aq_5Q'\opb2[/+9(k]pq+<2X&nc'L@d_)
%hC&?fDu?fRs8W)W^\AUpq#C;"^[pd+r;<*ML\)[Y4T3J'jkomihtnf$oUl,Hhtu70n\=il+8sr$V"]=Lp)j4Thu#RNrV-?kDu]5)
%p6Ru?BNI7e,PipsJ,^>aP@+0_^\/b!o'btH+%Z\1V)S.`H>rB)Y5?V9:!=]q=U+hbF,\?6;o/]'$U!q(6JFopM0cOYrU"NQ2F=Q>
%b_XjlTii%fM+8ZeS+%N0s72%b$8!6fS:<X_DODqlSUWE,]UC'@:J[QF42DQW%J&r/F#7J'mPfQt*jti3(.j"TZc"QfG8t6qJ7Hs,
%E`Hl(jQR-**oDKP@dE:0CMu>gG.d(:Du]1UE76\Q;h77?rq"BsY"'h:/[sXJ,gfoi?T1=0[W'J3QgV?:jm(tIY5?O`rV(g5&,Q3P
%RI>M@J,8kc'?B`#qL2LUGnkbBXg-YNhd>JIm\9_7Eu]DWs-GI#]C,QSNoR;>r1`5]lb:*s3:=A=005-*mb>o%a'JH*7E9B!I<ldk
%\Ej.,kSWa!0/$fTGMS<g%,9V<q_Eobn*kPr48^,u%Y'8K_r"PoGM?u3qdOm_A%;ENg[8"t2dBi3a3iH;q_EnC)99&^Do4R2oRE(F
%Ytk<XE?$q%s!E`c7Jab*j*2I?^WUW0bl6Mn=C,"bDdt?-eb<-"QFlGZU-BUFkO/\+qVD+@?hhJ[oma^FL$r:B&D[4ihu17Gp\fR]
%rd=b?rNYheY!;cRb9"LS^\<fhX+0u(J*)N8pkO@_c[>7iq\)3`IGaX%n=IV.s03[@;a9p."7=rio?B4a*rl&`(]Qns]aGnWNplnK
%n'1k(O8PC$J,_0L1jefSnOML7i2](FrqRZ8;t*>u'Ar>6n,E;Nq85EtJ*i^As5>X1oj@OF?i?8)nQ5bM-Vo3RVqd@3n=TXXn,>ZN
%M=:5Vp\_f;ri#e\UT;0#TDs+bqmV%On,D/#riQ4bfDhmYr_#KUc*,hCrP9TNT%4S4nV-H1=+9ALjPRZK/&1csJ+%me]mo[(s5SV,
%s88YloDeUAhtm$GT=m17P3f+W7(&bC/o<26"US`l=d?C*f%]b,^=mY1]kcNWXN[cGm)lGNd:/14`r7dS58\3FRi*/t@)hfS`Wgh[
%fH,<SJ!N;QE3MVFIt8']j's#QYmDt4(A)N5]KP/<<S?YTe0V(orEdFU2f@E\>JuNqmU%q[$[_?Wm7'e\eG]Jp4T1RirVe2ElL2IW
%Xm\FMrU2uJ^$e)^O'd>+'>ORM\"q(/#;eSoT%b;oVN0O0rr;0'^\d0frq2%"]Eg_Tr93quI-4kNroB]ds/edibQG='<*apslYa8*
%T$%#[LHbAihtZV\5C2SU+6/u[?[D64c[GO,J+KWMrDINj^AjMN8\DXsqUaWb*C'CsO*pZechmc#Ims9$I=Cg@B>4AuO8RGR\G)TH
%?[&n7J@"Y%oNOQPft[FXF"]#f8Y;>VI.#a=pXp(j2'$R!.h:U.l^Jq$XM<lqTDJDnT@^Qm4eD]If0As-T3_-IJ*-U.$%b7N-B@!V
%kC<*IF"cgJj";uKpWQ_<m+:k!N]V,DUU^0s1\V-_rr#@$nBX=DnR[@HYIsGsMa.""^\kd;>@Hs5)3*XE)fBl?$h*ref>%3X)L<[/
%Ie]JKrR5+:(inF61]^$hH0=)__9[Vk?O[;c7/c$c5P&5'Rd^;Od,F,6\]t0DLJN?aLW0Ij%PL!FbqFP@kE^GOE7;3r?[^brh\]$N
%p8;9ph@!p$?kbj%c<(#?X]sSo2kpjqmdJp1[?(:BZ_eE;MAO#$[6K".1AF>+46Z1L^qi)srkH3de`"J[s8HNC[blT7)6q*<J,Fso
%L[Y93O2(9oi.628I,[@3St^l9(c3Moh[`ugHV5u*#*%d(*IhZ]%iVmNRGN8U++ND,5;JdDR(.&b'6ih<Dt#?mj[3DQk&W2Db0ir/
%IIi@=HHW#nM$?N:*?>gDpO2l[^2HWmO'h\]5CE<UeHrT*d!E4`_85bR:OMtBc^UR-g&'?eT6MnMp`L2f,d-l<$U=7^cht\e0,Q<t
%+2@`jZiBN_p]&G=FjJ<G;-sb_W%E,\fH5P+?iJSpah@W3^])ECrogV>:ttA^M-^@E]pG19q!jFDm5$UlK;acBrq9i_5<MTp/*\#!
%A%0#F[XS2XTDn\r%+WS2^Ad@-r;9TflS_=u?%(O'GC$"\DuJ$q^.&g)e43JK?i/'&hRXg%gj,*^aH.i2F0BNAkj?,T<99%4Y*;rJ
%n%J[5_KYGd`N3J/8g.dDk>-R*?bZ,akC<,U?5ZZkeOn?cXUe61h1+G+YQ!S2hZ8//;>8QB\)*c:&@[6W=ZcV:GCTD654casI-pD&
%?>EAT]s5Q[&X0VFr:@]"?U"D.@'cq/Q>@7f@k.cprS1W7nS<;;;)Gn/51%+S9e:2LV>&FsAlnU,RdR];e_rl]h:Afg?#I1JQ93q'
%^;KpCXon*4oek?,J&>"54)s2KO=mj=j2CnY4./049&U")qp6+,S5Y\l?7DO_:]VRa?N,UM9dq1M8*0[l?NNTg8o%c&f@8@HGfl'T
%_Lk#ZQ(t=-O^@#*E0LnFYD-G=TW6/[Uo`4]4KMEQ@/*>#pg_M/B3fuHH8)0)H:6JL5987+0gX[Rkk^NFl0%R'ms=n[nFQFehKIaa
%O*CNIQ_&KjKbn*Bl,=I1HfhM\pQlD,]:AoG00\ujgA8JSoM`O%/!fr?hXst-X#5bfIJXDeBo]@gWG`^ppK,*-M5j.>o&j=5l1<%J
%07Mcf=8DIMNX?WkcTYgfk:`q5J;*qg/M:g$"P:P6ik`;l?e4f80CAW:2u]_Do*><e70e6IH0(H<WB.`5Cju"@IpJ05*.G_4T3$L2
%DRn4X^?)`N.pkh?SNch3I;AB9Rr=Xlqi]u'Y<;i3@]-\"j1Nhks.@C*G<K"tVl/EA3ka-M\8-Scq[M!<IElGjr4MMYl1CU=1Cln<
%I4+7NdYU$`k?"e7qbFpiM%Pg#1J\Y,l]MNfEo0oYlocSNq>%e*UXPEiReWOs:AjUjV+(1&hfRZ<)imR];U4P(bD`MJ*e2aLT4`UY
%;.2J_$iY3-Q/_]6V]GI+L0@_dQ27j$[J[p<ACR0QHJ$*-8O"kV7V`!cWNkd\o&h(*9)nMH?Wc?7q/]"0Zsp#^?iHSPUkuTFqn-X8
%(I)\IhN'no?'@J0qL:"BIBL0HkZqQjAhCISs5bojD<^A^J,)H-I9Wg0?MrsKJ,?L0<>YRsq:-")nJfe<pVS*Pn@A"9isQrV]0f*T
%Wq7tD`d?S>hY4bI2h'-qa!LNP)CtPPnH7gEQClUVo!9snm6nNPrgLoq^(M<U1,:0me=j[F!`5uUL$t@>36pMeA3/XYr.%*0^N(&-
%^1rABbQZ-,F;^ec&RQI.V9l;c'ai!SIgs;*<de6\Bh//F&0B:$54GS+`t#TKY.e)r^pD^P]C,OIh0@t>2r/T9NAnK[ji5O!h0@E7
%Rr5e0em!('jim%/]$[>@e^n,Wj3;4S^&<ttGJ2t<]?]8QgF[&U]&@sfI,Qs7^$_aR\)),Vh=ocMh](HthnAd>IFmkqT"4*.f3M>(
%n:mF%DSPM/qsJsl_$=8K#N,0hrV&V4VOMMN28/iIS/T'/r\qAk>2.u5[Dhg9qalh;3c+rkFjTXG2nmDag=G->JY.tr[MIHspY?9Q
%27^tIY.pqB2/I/GpN6.S^##?P/l-guo:+T]2p,'*UV_H>RG6V<hj[g)*Silm?F2b>I6CjVd.G%2gjV_Hs-i7l^@eXU+)#hE\p_7K
%_nlpOpNjHFkl^\:FmDaW:^$?L]C0sOF`dL/L./\hc`mo?K;PgKmfoEtV,q#Re#dfpme/7d`GdpfO^K<ik8;@re_]koHdCOm-a^(&
%h<SuL+?_m$W$1@[5mR[>Npc98TPo4qD)]5t)NdHIS@R[O#6:Q\B)Mb(&+.%'#m!6u5i']Zh]nm$12f1"n!dKB\e.K?6T[!Kh_,*5
%W37/8Dn>I"\`I,k4kSHha:UsV#Yb=Ja7OP!Zm%iuQ=rPKQ:"$LV4RcT>MjOpWhjd(5j*P*l"mrk?IQ/DE6fQqfRZ\Mquec<R%LRK
%V@u]$)h:bK3P+OBS$&)i'@<Ab7m$0gA_ul8F/-B2EU=4=^C:Pka:]fBP-<X#`j2D'AX&\i6%0A&oh+c]6K`4e;8+&9b+ah1a/sml
%_3VNi/hHVNSo.=o>K_XAo0B-eH!GFHNN\,7YWQ+F*M+nYnT;9F@<((Dp=@i2Q5nTu3--#qIGhs(ei#Jb['_eV#R_+\hPa`"\EU,.
%hf(6UFZ%'tlbNg&U)u>DDeiU-j6LWo*N9UW*H;#tn%7cNZaZ^[?DEqhl4'D(D?m:cpHA9+IJ7$o%MY+h%`>=7jtjL%HJ@h2gi<4.
%[l0d3<H^XDFk>LnT7"0=L?l$!cu`aGX07)oYIfAL=_k,j*Pf29VO>rdl+)i's1H@Ag6m7?WR?*#bUG\/lpYXW]aA_=gh#T]GTdnL
%=*k=&&Dd"rE8=kd!*;,#&0F[/9ZrJ!!HNB<nk]3J3e/kk"UEQ8g.talh4>2M"kb#rBcEj-*uj/:)Q9Zk&d?2m<urTnU?=-r%0jr1
%Jf4ulLW#[JWE$?+%9J*abCelPF5^I+ha@n0.17jGAUNI/g]fncmDtn04BT=[pQ+/#TGq]ua6gI5k1+<$n'K"ib1bRlgr*#boBkge
%\%)4\j](c42ui6j^A3n#C3e>/@$B$D-a\9rn@sD<5J?6nmsXq[qW7bKiPVLSDQ3LN:Lq0.QH.kR42:ec:H\0&^]3'WIdC_=CD"l1
%o(J&kbIO8Be_g6%5Q0[CqV:95f-gU=7t0c*hND.WhM>OqgbkOFjDBs-jNg$gKti*%W@r]!;h+Z&a+*WA`+TtL`?"U#_4,r9s8Hr/
%pkuodS$.85DnbkSO8m%GrKT;`9[S)qG>M6&T6\J,rI^/\mRpp_lJI'PY<MigO8d]lIO6Y\^"F(RY5X46r7r_aq7.lfoVEp"pW<I7
%_0>ibea8`ZE;@5`m(pG^qg1O%LO]<F:OVMlJ,\>Sk;Rn\V[mD8qns)Sp!"L>ndFo6hsYsRUEBHUn%ADHrr#3`ftQ#ndXWG3:Mf-A
%qVT!bS\P0in,29spZU#E)##A2=]aG9-;:Kd$e7`gXVR)C@t?NIUOi!uStV"o`PpN8rgr9+=h<muZOaLP\$s'8XNaF#rH[cJ%Hm#c
%SpLtON?o.['.7JC=<X)C8ou^]Ot/g@:73]M+AS1T_;dLT`l,QS2c9.oGMYSZLW3VnC8Ki4_OC9LeHaMJ3CjnYdQ9u<B(jC3dR39K
%c=He!*R[KkmCQG\62u/4i+E2t7M-=f(agC]/X1:(n4TdCF-Y3(g#GfBed7(K'HF,-E#>H,E*1g2%[ei6gfa<d3KXsj/SGA`.,-)s
%&1s>AeB>-TShF.Xq.+dVC!iLA.&`\GB<CsJ*_@`[BXlb+.fDb&o6_^B0);pO]$8@bVDnP1N1@qB2&]:A/t;b%.<K;.InP<#?tnf2
%O+WB%J&)>g!Uu)&J0=,$6+dpOIJM"2W?+Z7?8fUq2/U_]o/&&G)Q9Zk&d?^3o].b&KEW<6WM00&`Y\-f2dm@,jG1Z.Q)I]lQ,f_Q
%C;9p!H!Z4L#GBG/i;!>bM[P&YAC.e8KE03IS:>!F,BQ:0+JBYJs'Fpn)+uYKnUqU:=(Q]]bggFi$HIc5K=h<o*DkdAoJH[kIBF-0
%%7rKW!=42%[t!V7NsY:Vq>XdcKfB^&jbTnrR%Wk*p]b)cN7mDb$$IBgCN);>g]FD*H0&E1bE7E^j0S'<85YE7cfJ1=Fh&6^?&jVh
%Y6N72VZ#&@\P]_@%%9sbqo,B,UpOKFH;?m)`MW5PZsRYG:."isVX(%b?Yl0+6MJHrkG5IlCg'S#pVj#i[6h>jqo,Gk$Jee_]COjE
%s/u9DjhFIe^WTW,?_R?(h+m4Kgh=IXj.4AMm[o_grc4[fN98<OmRrgg4.7fkg7?Z>.FDHTc'JM!-`-WJdXGAg?Z"L97IR9Ks+R3C
%6IGgJd+]uF0*!G&?[WC[EE"]6c*]LeEq[d?mlYs?NHV]XfA:Jifm>aa-YI%(-3lX#3GWS>R*t]JZgPZ/Q2G,6q!a&'r.2oZ.oV)g
%Zhj"/`1Lg_385M!4SF>eIf-0pHMZm(s66MDJ+Ni(AYSR)DpXgN_U#W&=sBAYrlJ+=r64o,J*H']?[h88mlg9g:]8Bs1QdtZf@DkR
%X?ZEsQ_/P0^>f[Yg%P>"?[h">FcX94[:_P0++NiqrCqN$Id-[+T6u$u;qi9LIc"KsCN+(GO'd5,YMZ6p:)\W>jMo=1CR\[P`adk-
%D!j;.EouX+>1OcSDiC/M^><l4iVU#q,EG"`XQ?9BcT_/,j=I1il5SJ6:HWKB298Ed5ETqqi7FQ[^%9FnS)8mTIX_4m;i_CDMQRu4
%_4>l2)7s*C?M_\10&-o3>^afR@o(d.#0O^XZ!>>/='p*pfuXd&PO4&NLm5_[T_4k^++DrCqMCR<kl[,^YIWrPHWU4))$fmG4oM)-
%40Q3k`fBu;^Lp%pCAhSjg<h%>f$4IK\%ZqG6f3!)a2U\Yf11%54@/oEW+1:obYL5B>b"H"KM-=eK]bPm>rtqjH:D-LfA=41]Dl\g
%/^09Js7/6]Gc=tilepO3@'PG4d-WdOq_<#&hY=4Vrm6OC"Z0+)hYa!J/n;8E$#$]+mu1GM#aL"G<Bj"f.`t7^D+7,2!<3UE=]r"4
%-tEJUqd9:D2&]^sp8[gWh*:l!Drkc:K4mf[E=dV+HN(P6Gj:.+2S=7b=rq.K_!iH[Kn'*dWK7#7A(^,b=>bL#0f!Jc(4SO;=DhQg
%D.q@np24DEnIMq/GMd.Q?:A@OVt`Vq[qT(%T""nMIY%1"PQo`XL_iu.*4=$s!_7)\rc)HF_nP-LP`4NjeXq@Ui"J*(Kdp[3XNO8h
%%0*)J?4_L5NYgVTL?3iRT;D([*.X=fd"-#!nca:kW;IjSJ^I=[-d._M(S7@Hbsdmi+d(a:Iufrhd2_Ni=B.dV3#kO;X1A$m-%Xcb
%.\6X.H!)UGo.^dnm>DX7$n20;Q-bUrW)JP4<"!gU_(i&ZE]t9U\73S1H`g25:F?OH'Z`(VD'uEuoBAYd3WTd6_'OAhd.jQL$l2^N
%$[H;[_ua1GW'$MCmjRr?$WmI>flIn#BqLNShN;,O"^mVk3Q=k_D%-\O;Oa>*b)te;*XY)sk3ta**F:9\6g*]Jog;X8$o8pbokjZ+
%2F7LEIRK9]^='=fi"M$9'lZG\(C9k[W5XN[;^u<-D,g[9T[o&B'fKF#bA(HOq4pnOf9QeE2]1+%le:=<\1RO*afR[a9hk4$U8ual
%r4P<_^OM#`%GsIdMa#T_k]cQgc)5Q.Hsu?Mr]BBC`&$;"_TMA^`bJgUGl*hK+hSA?op:ao5/;kAa27f\d-o1^nYcE3nHOo#mlUIC
%a56?)chF3lg$L`5m;;mD/r+n*E+J_<G\>YtH?Tf,FBoKudgDj>a=Jg@%?-/Cq$G7O#'"+)6@,9@UlZ1Y`i-P-V:7Oj+P=b%f!.Oo
%Xf5T+=0MJ9HXi0#:'H=onp/(#$(t2h)Q1KMYZ:1dqbN"U8>?L6M:\!q!s)Z8(IY*MIb0hH0llEU+F%&M1!C5(dh\!A=^a!T*ofh)
%6m+%u1AGi#jG`dgXGRY]R.deTj=)$2#3VA/EJUi%T>34p`FIapU\JFnFC"YA/Qb,9!t!DkFIkC?X<u;EYuBTJLiKNW*?rok?[rOD
%Rq2XbNa[QN!eBY=5:<BN:MCmQ(E!S>[4*[=PK+#lI;*:qRb&bnEo\l7Urm0VF9RKB@l70=:p8a+0qLn,4,H#*MkoZ*X:ntf'1B;`
%EY-UGSA:!1"HWM_3$7?&2,UD?e4#RV5t]Xt@'\H.9aY>-!<=Ekc[H(*F+M9J+(SW0KgD":+%d>@^dHJ)p`Tm8+Da].T`[ErE;]nR
%H,ot>oT8h;I\,(Q%/>F59S)aOjITiY+u4P"-EL&_Q7a\D(*j08OG=eo+c.:KA/pVl.27q#U:+\_6$rle,n%L"jT0?K'9qosid<T+
%"c8Q'q&jB%=r9q40HeFI.=?m`4ChPY-NfGO#F.qC37&1(Aq=k_`J>&@GN&o6GW$+p"!Eo(7E3^4@u5q7&1E:;:_<QCr;plb61mSH
%+FlZ:_<T_Y_;MS5AD2fPNr@-!<9,c3M)6I6B+!Z#X[Po;bD?4\C^G^YTem"]T4PEId3MTjd=tRV9ciku'53-EK#$rWql*!TN04Vq
%FTDlBV25ouL_\9#%)Am+qC>?mRt@$:nG=Vb(Nj,9V?N(^XRu/n!UMdZFg>[?8ebE9P(9alJcVTm$Di[oK@MarF[0O>P">kYB>GCG
%g^B.;3:_mf"1i+f(lVhd/3X4L!;'/fnbs@Heqb^jN%_sXSLQgfKb.h0Zu'BN!Dlq6hlhA4b+&Wr-"<r`Z:%chAW>g^hdRi*@FaI]
%O$Q:OgkeZ4CH6Wq^]eD6@OuuN6YXUm=U_==BSeNoL-Xi;;3$lr5QSb,A^r(iVL34,+40Qeh.,R`;cP4b(/R5[GXc]*R&SgiirZn\
%1BEgc%oDPaCPc:]j<0Vdf=EN/';ac`cEPCCSOPYIi%C/hh^G(^S1bFI2Ad"%*[tjG/\u;F$B^8SbL!>(Jlu:"\-i5.\7i+9/BtXG
%>r@9O!uhY@e&Ckt/$0#$I;u?u(1<7[6pQBtR:ookJcJC^9C<<Bn>o9qY)\h9Y`nu:5eo(TplH)4JYXDs<8tb*JF<":U<!?:E^LHj
%Hs$2433a-*aKC?Pc$5It1CopW=0do<(971pX*g9_VHp`!.]r9uD*8Qd3NSZOXfB<T893(LP4(oh]`o*7?5PH5OB"/SNQA>H0;deH
%[Bj@&O0s$]_QK.9&[nAu)+n4pPU`>K0;deH[DHgc-u,)E`/N@TZAA^0cp_Yt=P%`LmQ/9RT:h9!CCK/d6-U5nR>dC:mP/W)7RjCG
%$F!=-9VdM/\N1lZ(ap*_*jnqF'P[B56E->!&F*(BqRQ=D-7XfJR=$JiE\16HQ#ro`afD`W:cjXl9&`Qp[![ud%]<uAZq3%5,l!&7
%i+5+u./<b8lUl'n$%`]0cr0Xhj)f9J8t\T0QN:.1=0)1Cc;-PmMT>5l8d<(QYsdp[*6X.7H'X7+3;NZEQ+_,*]4p8NZ,g2rSe/V4
%PrNkO7Wdi^3EC_R&.'[3#4L2q,ARDBJ0>tO!'+TpK2:K$9SkDZ\sNgX*1[#LM+NJq?b.:ZN_@/"j=$-CJIuh&755;/Z,<OG^[_[:
%Nafs2aY@$sj:'!3BG(LV<02'R-6=/(R,_]^$\D#R.O*+<0k88IqiSZiks?uLLEpkrTCpB9Kb20Q&Of0&o2a?SITDD&H!6<"9H=X3
%&$9j6=VaHK2/ar3P>+#=!;5rfMg%m&&`"AQ/RK)qCXF^m<cj[s6sXTp+a+GV0rfJT^*"pu2+j*0pl[aq^]Q,M,Hdem8;T8)`'Pbq
%$muf@.JJ=L<CMXcWc^a83XW4B:dW,'+/b<"$2,gD<-EI]/uR-(bpc[D@@*Cl?VEC\ZRkD6Lhdb)V';EGH%kB<CVrF92ajHj@[:*P
%@VoACBY]H`DsIB@q>2)68F?*!>-G^"HSl1d"gWodc_o0Mhku#/`T#DSJKNob,_lRe-;r"&@M_HL8OQD!Q3q<ofS`\u'[KD_"Y!)u
%'B"?4@o;s9-qdD862;Z?O=1A;AH6s*#`#E277h>FQ4bEJ5<t;Y#]O6XN29_K'ks+H<KEtraT8W]#qeRdR!q?<K<O@4+o6A(^s\,S
%r<u2QO`^XD&p`e>H43tSU^hib3'kcRA+k1frh""Ba:G-FIt/89?/$JM;lgkd:mHe["d2)$4_?rr:str%"BAm!M?5Yf<Re&&.cXDm
%Xl0:iYe9@:[l=[H]IAQB-AN?_5.1k</a+!1e`/+C-nlSSL_:)i"H0W?b>8m?1a1,:V[K`)-=CPX(SM-9Br`EpP]qBR2iDlkUrTF+
%i<spG;)X5Hj!,=1m5_QR,JKh]J<[c;(Ma8pD1<_ME4ETkCrP3_JI_I3ZGr2)g@Aih7aMQm6/#P:K491YV#j8N6FND+mBO'q`-jrn
%NCZ[BZf6E;=HalNM=$H(iAjXi#6MK3=;j-T>uD`=p:?;,kR[)dLs:ap`1B_Fdct&\3JY0X>RE182#^$4JF!X+[#YB4l:)oEV*)a:
%Kns$u+\+_gK?jPFLhZ&rj.jtX>NI$b0]5gnOJPs<Z./VYRY([D!>4hmA4Ka]9R/$"L>aVCV.!%8O)>;qJiEW$Ud0-5QD*afR=B#c
%+G0L.\cV(4"_`;R"cLD@e72_-WOiL4\oMJ"3p6nu@>\1J+bHS1L+JjI/q2_3>!:GBd+9rh=DbPUg9RLPZs=Jf)]X'1TM'gAl[nh^
%5o&?"0WdGJnmKoKd/n>"Y+'?C4'OuLF#^-u&m1co1Qd.B$Ut'&02AkUYkr.A#4RQ"XTAR@?lbVnF:*B#auM>oQr#$1(O.U3+97p@
%SgC"bJJJ<cJ+R_75DjE?RL&p2EmP-.iqGIXA#/Nq<X=T+;0g@uZU-(8=@#&&-uSS\)0EYJW.%:'\H&LrQlY_ePdpPnT&MRL+NT+*
%@0I)qog=iq!`s\!%qEb,FQBOQ's/p!:%G\O8jHbYU0M"*J,2[nBJsP,6G3eN]Rd6>"c[+\+s0K=W#_uMon"r,(jtu)Z82ke:'2!-
%7Ob76YbnG([21%e+HJ\[\iS6c<3YV?O#.//V%Y*31J?;I^gWG/JX=BKMrSV8Tc,MSdHY"m]LE,`!WgHIe%AbHD6:*$5(MGH0/!WS
%Ip#=Pn6beG*?M(cB+pP&\s/fl?aj8hiE10kdA!!d@;6b$*[qjs'r;55<!4Udo&s3TBJkuGX,grGj)&G7BqnH.Tr8GJ)5c%Tj:'(Q
%*6nO^pimE'Qt9S@PUHqY3oqmq+$>[4^Q1l/QE,F-"ZW6Zji9pG+=Ij2*j\BWM:"Sdg2P2"s&][WN???.9GnL'L%gXikJ0n>W:dD0
%54q?>[QsI.)HoU8]\l/O>\^E:2!0/cCQ/B\($mAZPfSZU@Mt!C79[Z_f@ZXi8P08_<s1O]H)uR5K!<O769sa":k`r4QkD_C:*CbJ
%&gn)E15AXe*#VPH"a:Cn,<cm(ko)`T"Aq"rS'0'jZ76E^%$-_UKsDX_[7DbpSh7)'Zk57^(3)]EY!K%W^'D(H.o8u1>0bQ!HuhVi
%k/UG!'He``2&)T86\#QAG0UinZ_5i!T\-qaeJFG!0:L0$d@28(1RkM`T/1iWe&b4GBI1NlCAH46S]E/gdO!L=.?uN.>/,-@Q]XZo
%RfVu^GaM'[/Jg\npUV2CZ/TiL4HtBRCR]LY]Dt:ShJ_(Re!.gG0o1'4;6at65T;Q!+O&ciUI;gJC^_LagB"0m-BI`pRb!V=6n)88
%L59&B&2d0pe+mN$lghV&%l8KHW8Rj`OjCr;cur-'/#Kf)jWbrM18GM<"q-_'j$8,/!J/!Nd#\1b+m+!rIe9gW6ETH6&R&3N#)nk%
%Ig#O:6:tNKUf]lmX>EB)s&B"T*3W^2=MN$4A\<[(NDuKOKTsI^]qG1'1:-TV^`1WT3<9*/alGo`^<lub]#5=Sit]r,OofIJ#+E1%
%]e8OklrsZR5;oNm+G[W]Smg#a:+oJ<Ga1i"SU<>tM.KA;A[TH3IS'n*cbcHmPsRKs!%_k^9jUq*-/E<./#1IK8Eb2)3M_)IKq_,5
%_KBD:6"=Z"d8IHD$KR1gPsr6_G;<NM304(@cA!epfR"+lK:&Vs"O>(UBrOO>7,6LVB<i(XTg$9]9\r2VOJa@rhCCMK1$Z,B8L0@u
%4,"@09N']A<&dKSG%'n/fpS#U(4]NC(",aDM*l>E58K/U*50bl^8p/AjRT7bTI@/(KsA5cRp<Y5M,M<#/<N7_<R"K:L8"$[,'N:V
%+eDe[Yi:fc=>,rgZ%pd'R1rCV?qr5RRk]qGbtf(0pL(Stgl9-1-ACnD"V/'acDL34P;ApLpK*+9FL+[b=92erZ15"6GT>#+XfbMX
%ou]9=quZUMd5Ch:?#rHd>SLK(Hk58c;EPb'_-WEoi+T=":/O%I,hJjFC!Da)jLm4/.>#hi^)X^:8CW)0Fc(W&;p!`C'q%u8WMc-Y
%`n>8*D(3/j"c%*Bki"";Laot)[:h0g3LRscQZm&jV'IT(r6e[<2P*H?$7--@r+7FB-]*#8i\Xr\F9(uP2#taf&isuthO0/,RZPRb
%Gnj$qPgX:%;";7*^;-SCM%b(BMVtTQ1'G.09J^&#71."mf\OS@Y]GMRd-rPhN9KMno^n$sQEId1@^dus]7$*7?n([[4uBXdelRs)
%c61lAm:`IqF=eIZ;MBmA'K:>.?C>PG9m:6]gVB<_31aqTn,[oK'&A'N5^PVX%ilVn]64O&<_d7"C'D,6c)6Bc$VFU*:eW.b9p4TN
%rk!PX=tu-gM%<.<]kirrTO_&j8sG>m](<.&qC/04AM\r+<kE$"gB@l:l;=%e.r+[`XZ"9c(XOnE<Hd[)&p:bq^P_FIK4ektm,I7t
%jUe];RA*(#56i$>kp(\\C?@uk$KNu+*3K6/jSi]cGJY(`FbqNHb:+^7..CJDPXl)b8OtK'5np)$$,mp=iZ)MNM5,`FSUiaB0TX,6
%T6Y.iiEhs:>o\;B(_GPdmC5jAGGBdSRO1U.F;taa5(WCeN?<uV32+/[fZRAGW5:';r*93B3Q`O+GA1aolLNO3%!=!YP:4&iG^o:A
%%`:>$9O6ULEcdcN])N1=L,0Ohjp:qoU<9Y"XQmo10huai8r?6d>+HdKFiDd6Yr!99dTh/e_d8/#`FWap^`;;/1C2]"6fL7CBp\\H
%%u$^hOWo\E+%g/R`O$"RN,'_:.[isRHKdEJ-a<s7)1i16rVKhCFH*S(IMU1mMqQ%DjKIjf9$!9Q.5+$YHs+t;f]6dSN>5'RT/(]$
%SB+`<"0ho;Z'C@[k16TNrJ\8o#CEG"H]b]qc!C<`S@eQ2*5r:Ore`&;5k0H@;f$GFT5^V[X=aHDh0uu+6lUR;'32$\Up?6*=(ki1
%e6f"-F+0$T8It<b>M<#q9,H^.*9@hdeu!1A%Bd-TTs.n7ZE8Eb[oG#:^<Djf6dEXIBtPMiFob;UlhB@R?YCMpn-:R:(@tNiN8cB+
%he3<=6_2of0;g>!#4\p0XQ1CJANEdbpGtZu>W.cZZ_1EcT?gU.bqAPkE+-NJ1qe0;M).YXo5[rrR8\IfYGm`BiTf8@JoSb;>r73,
%>-ULS0sb53FcQi6P$>k+A:`f;fSd)nHC9Me=#T[hQjLJN"0X!g\>!rI_W@c?,[ZN`eo/4%Hs+UBO(B^T+2hapNpK,k?];Q5gX!'k
%P=frA8L6A"DeO9afANS?FeSrLbM',(Q77(W>6h$b[4lHDJ3Q?Nm3b,`0j713lGCS/$Mb$JB2g^*WoV/d-<JF6ac1TtWQ"f[/on4Q
%Z/Lqsa=J0jME1(q!;'8<SSf#'ZIZaQ6+W4F]$rY'03qq=5p,Beco3@THo!MIhh%c\S2^1>!e.hH6JFLLk\E/(5K.!qVD(3&fD@#^
%B,6NMCW\bV^sb\/>M6;ZlH5igGN@2@>X<9^-JCk]j%CV,q35o2V!YjZZeugS5DR@Oh.n5/=jeqKLAGrj/Mp8(jX0rTVV.b[S=Z!5
%oK>V?d#ePD1BOF=Jg+3gP!c^Mq9cDSN2[)C>h4rd<65/HWQA=)Rt]rs>*29(!2JJcji*R8nM5:cBjSR&-Lth:C(^s5CVPFH?>;!u
%$DR^&U_Ue*LP<j:ifl@MM$(!&$*b@"NE6DDF$&k!6f[`@r1-03a5$sIV^b.@=htgojS[G>.@/=h:m_Vr(cDA"QlpKZH's']JJ%GB
%>YpA";.GW@`o%eL)Z)7.r&"tp*<JjNT?r[_)m[nI'7tU^%L2%GIKYoGnBflB87ZccQ"[)tYAVT-Jltc%/+H,I/+Q2H9B3iCS@YiT
%:umAP30$<N#RDj)b$rC&.adX&N/D"-*Zak_%gG"-]);]@P)L_CMA8)04A5NYp`(1r0+CdC?$(?06U%.c8GARH01OCTSeN)p?^fFD
%H&ZH/>T9IjbK6!BdtV=IMiVUFn9H98Zp,Z>5E\VaAi*"kPT"URWXo5diFPk&YL</$XJRiZ%<);h0ISh[M4o/VSmp)fElk%J&Fn,6
%_c1UY&)jMcD#oA"SBNd\AgEZR1@&OJ(/:Vn?&aW:O>q6/N(DqF-cg^)@O^kZ%p<-=dQ4-`8R,BZ!sl!H&GR?9:t!H-KMI=o5o*ZC
%Y61<1P#.$8MXnq]!u$o1,csW[Or?g!P$-!4L6hH>,O,Z$"!YT/8tDb4"?`AD4T4hI,g#*a;;k,'X&V*-Ui'k3_r<#bNaG[DIPL<P
%j!d3\!<bf&#OP$m"S"/oG=@]Bi#X]u)h#4.5N1f+q<A-*%3i/]#'mt4S1L*_dSp'4S2tZ"BF^-2+]4@;,)Zss+sbTY#?Y]sYsK$a
%o113BXA+;*e5oiJGYMVM9tH3YUe.CjY^V]N).F7cR.;@G9a=KLa$`CjH,\K7;S'XQHt$$^:h?=3a+1c/LgVu?Brmh85Q\$s/:s&Y
%5rL&,,X(Zo=hJd3.$8`dAP<^_3>.Uo7C-CLTY1V(RsE"VPH8i0[I"\A;:)C3CBr+WLB7u6&F'@2fYqgfZdf\uH7n#uCquN^63n^8
%9.,d.4CVd%;ZhgQZ_7H3jXSjTOo,FT$U(`&iUqZ;8IWkC['YHi5Z(lhODQZI34c%,>mF)q8X6u^aTG,\qAAetT_*Gor&l2$SKiXI
%V8)oLhu2!\H1H/S[R]EIOuq_4P.rg$hZ\iZl0f6Mr:emKm!_T6G!5T5:P#:C%Q<Am53>E`Mq"/bhU*<]XbdlKdZ[p:YPf:S!co)#
%\5Fd:4/H:hdtMNSU36g>3lR0?HGYLOq,@##J'6"k<lh!7NTX0uR=*IerD@U]!\Dsa@Aj)t3s<7m0LSZ+$d!,nR"ISYL-N[)rnV/\
%Kt#UsWH3bmg@/[gbO\7WRtoU%=HKB'?F:u*`N2!t6?D^4J7nq1<NG1h-CZK]`NP(jLCpAlk`:W!5rVSd^:a&6U/^P^Pmj[^4sUm8
%6!NuoCsifi2G#]eP-X4gQRR.LKm_STA$Q96e"(GIC>!ZJa0h8UVgqUt_:V"4(=JIhGS'T/;n$YkoUh9[Zm@(>NB`%ZE9K^ZD.iN^
%>3LAF3F;!Lks^nO1q[A,>Ue_dXsUc"EnFGgTN!5CH*G5WMW4kI(I6.i7*8<B.P:*RHjO$;MnBJ@fhCsWf>T<0o*9o"ZoqnWeAHCj
%i6]U*P$;6t*R%DI+2tISh7+NOUah-pL*\aj\>/%3#Tn\`m;+rFBIR9Sd4bXf'=\$X2k!7-N98NG4W8U`e8,tK"UJIV;sF8'9IU'p
%UQ\R*p:1=-5?<+=Kk`')%\p?6(Z#"AOh00jjO0;]$@`]eFE@edUn]dnVB;=!Q`;e.]J5sPAZ@cBI(ES(<lI4+),+_6VHn4c"8nX'
%&V"2qP"&f9S1UR7XeHGFknbEl*s!c:;I\-)T+/p$\f8nhEj8Hg4\B6@U6l1][?rFUI,pDs3l"Q7LE=Mam)ND*C8KjW:R!BoP'GbW
%oBCM9<D4*Xrc0>ec'%.L7NbNc7&dIn8<d")J6aSRJ,m#KN-&W]F,<NC[>0bKLmK*L2Eo8N"CA$->R.)l[4($7c;Yq9e*6Fs9Ka^u
%2*9g5)3,#l;X7ds,q6oJ.1PX3C8D3WXeG?85O17`::h#*m^TU3Ha9<u2O0,2<3>Z[d:*/X9CbqFS4UQ(8TSXi"pMPS;q77Kc.$/N
%00PPC/Z'Vh\72F2-*`fYAh&kao.0sF>q/d0r'<2[OESkaMUH%e\:GRc]o^O",q8m!@&?TWd5$/dV!$j*;h\a+Mq4Q4Xh)=mMG4Z5
%g<id#I<d[tZ^E"V"3#MG^f29RNRGsJAkgaLKVcce:`:@9FmUK\M0uUP[;!4&jC^:E[&X8@'`B!$Ukl#SWLgY8!qFo#KlYJiKGUHk
%.QiqJ'iD]RCu%B$U5TWAQ"=5fQH<gK!(3/M(TZ5p]HgIhpF,nh1b(G=+'0R-cp#5>HVjN$kf:G^U2K#m-biX1X>jXN;P=pWV%]kC
%P_;\YKb%3V;r"E7j.m>>r=LHk5)RT;+C0NNYUIg$Xd3PR7)r.D**Cm%#ec+ZdYjdC7cQSZ"jh[QV*ZeoEqL]ITN=:^W9F:A'Kb$Y
%2hTHjeVD^U^+rnBm#1'&AddPNM!UGPPnEhf1-Z9@LJ!he$`,*/U=CZ2D,3[Egkt;$dS>ok*p*J0URG9ue%M!l,f/\;(>NRKatb1W
%>VY0,heiL\W>j07Addu@*jXqA1DRf3TG;a66gG^H@5=#_m=`N']W.Ai#A>oL9B4qC<AOH>F@e?:VV';9R(9l\-Sb3bR*762P-,5(
%DH7]s92q]^Y\Jqs%oUM=L6<iZSs?:nUEH`fR%p,#WO3>h>/a<+lC4Hc6IC6VMWBc[PM)sb;*%e^L=W7d1;c(>[%A*jTk:$lEX_V%
%bE8!%L"AlE.oTojhK5K!O0X_AbEYaBPH18gPAq4WiG:QGP,I,nYW/js-,$dX8O"aTi:/?h!'8U:G"?baf0\9/gI.<$5bTCX:)9-&
%'CnBhDBr()IV;36+o?8ZoT,9SeVT9#jt&Q%"B1`dOZb)Tdg+?YdS\\k1,G(:od-M**>_A:*5\tTb"Q!$1^gl)*>UVo?#d:o%9J3/
%$ck_h8sQuD;_82Be1=aQr4I+XEG\RpfD0881HKN\TFS;FKM\e`9^&aA(`Y:r4E:A!m6\^m(Fk8h$K=?u5"VIpMD&a$G;'-aE07SN
%OVb$E8CJCGQ$G3-:0FTAU*dYn6?o5,PXB91M+*#"1U#A=&5JJ4%[8B0f0r\9DncG9.)^Rn9BA!r@j#+'`-<%.6&@qH%mkB*G,:"h
%FoeA#*\FuF5"t-FjhsMWOqN&,>,``.mn/hl@o>8h394>)cNVr48GH*km*S/M<J7Tp"a2[re29]i^`B(WXGd?\Nsh&k?1TbHY"A_G
%8>][\$>Q)MAJ:-!]Fi@2Qo8E;bLPYs,&]RSX$(Nc=25A`H&rqd2QF!bT[/j.ebg#Z9CY#C,frr]kYT0j24LP?(D!RW]mM#f<Asj7
%2$l2cZ43lEdhu5#>RjFDe/jd$G[!Pbq8/^6)-l]\Ecj!7hlI+[+(XrX6;sOhjeGLh%jolEaJ!4B1lBo5LcTZb&grl>iQXc!%iH=Q
%P*DZaG[MAYP8<<6%`+D`.+o.W4t,VEPVWpsm*iZcKgi#NB$qkO[YosHh7PeWe"eooA,.f3\s&_=aC^8/W=/5cH^@=R+'(o1RN*\h
%N=P$\^gpmW3,rTh8F#ah(*bNXSS1F@8MV</[U?.^fVGdk\@%8Ac0[NljVI)lcRt^KB=)'03F<8<Mo_A6hh'/Xr\JL1emlk1kuh,V
%RGI4O4iH!_bW0$m6sSI,Yc\FU?7\eR>*sZ)8hP\M.F$M(=spX&clFP';F.o-(8_PKPh4V1/kdL3"q4_&;SGI(btu93!,/kQ&h+Pp
%._?_t<d8&R@F]Z3(b<t#9b`#2%bj-W:0[62GN;E[;-qpY-3eZ:a.nlUFOCC@Xb+]2XhB2='^RkaP,_6';ppf:ccFtWBsWu&B$mJ)
%hF6'q]0I]BmNI(^YeTYMWdQe;`YDL(C=fniM0SAjn#<s>_^#A&SjWL[Q>-YaAZ?cX/SROM]@M<e0uQ8#B;o^PZsUmY/_smhQW2sL
%bBBPU;,!..VCFH,e+/WqYG>5Q`q^*XH/M(&5s%pS<GGb>j)u]QA.Gl/.[@EBQT!h_DC3>2AW'q:.qk*C8ELu$E/dg+$fpG<;hc)]
%U:N$KMqX!$]VlnUA*!^X<(\=T0kRQ;a-b6JA3cW[>^MOCU8?($pmsu+D$Bn0l8[N`\`tRtDffZV[D7dk`i(+VMC`,k1'`>GQt!,@
%9ge0\hL%SXLK(O]E@ZFGNWdP6SV8L:NJ^l>30LX?k0$dVKf0ZGctKHDbL/NR(2^:![Bg\rX'@GX@%&N!Cf@M)8Y\'3Ma28nPmp\+
%e[Cf1?CbYkI/4tZlo^`:dX25M.p01#dRfrBZ-5KYFaKL+fI:+7cqd*)SJ9mj\9A3nd<:9VWQo>"+pAAa$H8fp]7:ib/V]9)UoK`#
%K#J(Oma_c5.-kV3ksuuUeqnc\3c/@H(ZSP2/M,M<+[<\b3Km&OHD_-ti6X>0lWpZ(-'_d^fgnWN6/BKQ$C@:T.AkH!bN9fY<HRBk
%U+V+=EXt3EAp#kBT2"ELfsR'X.XrRKh,<?5"Y&Ih,e)<L<+a^^J@D7hm?auD@4[_].4^[)D5=sdD?^>Hii,9qLq'-.;RC8,.$J&c
%-pJB.g1rK$-U6eS/74[a+(`V1d%aSiNg7[(cQB\oD5)n/O-5SM=TfEh'l]VEXA@qO'_YcfjH]SK?8s0,(KuWRNsGX21m2PEOrL!,
%hrl+`)=6Q_XS,>lm5*Vg880o)fQWEqSqo?"GWI%:KWj1N09*sGf"R9Cd@k8l\8Q,g@sXqM9a9T3Aif.Q3NeXAb0fh.K-%%0Ujq.N
%2)<NW/<?#CRGK:b8H2Y18SU(Z#p5,N9oTR#l%MZ?E$uUsq)T"#:ede;!+-ieGP;9l7k<!Y>@DF*gCq^EVTPV&L!!iu&DpZN8%H'n
%nG-n@8s;?J:JL0n!c&/Lqgmk>NQogZ`4'QC<8F]qCLl?O^,=>?p>rl\4mm(?1Rd$9Ear_#GB[Z!dJ^245WCig?1$AW+''S@JTY/6
%NnsDBP+F]U)&VdD+`MtmEb,&T])]UR+%O@Mj3;"Nn9eGR_:tD+1or$%eL%bEhUA$S-2hnVa<A%A57hkAmG6`B4hKMpOcH8_,[KdU
%>+TCjlq\rA8*IEUGAMcoOC4rbhF+$$C"r$uCepkD=nclj\(&)o%8AF]+!^VD8,=SCfd8Z8^UuE:asT8kh1O2T]n+u$?mZHK/ap$>
%;KA;q53enSLrnjKGo>6MkXYqZ==VjfM=`-&Id-)_O1-JWc3@m%A-?[HmZGTc5jM%D8+;jR?H+r!etG@)Yh_IHSD*1:p0+pZfV,qs
%"uO8B[A#,'i)f]a4Q=gdpo'DNMP@YOR\K#Jf'-jd@\>m@gq@#\=EsII)ahG9RbZD!b;b9,miI>sLqaD#`$S(I85F&g!+XTIE=gr+
%WdAD-f#'n2%gGH^.t[s&WUo;]nP%(."2(&+?c3#*_@n[*>7(D<B5enL8oscq^H!:i_5rZobJP=7cC[me(8L')U\h`ga0A%,UFj^Y
%/^4U.ma\/\9I)_>h-\5CNuW*2*Ak=EgtL`t@HKVC>*&'th905E2)Gu-SmU0-ABse[rVJVL5s2I170<XIFp!<k<'e>:>WC#'L1[<o
%-KEM!e0O"4`+U@l0`.-0Dm"G33H7^s1rKV4,Q3OcQI+VZV-5r;*G8B"O="GEe1?/SJ<_o(WAM.qlRDQ/ZTBi\V;dsh//Eefh19eb
%Unaug4'W?*olHtkXEn?PM'.s;Hs!O\0#:Z>I%$E@%IHj9=CMKGMuC8-ci0^n6k(]M1S&C;",%4;48A*ROH+\AMk,ttIf:bH4lqSP
%OpVS)Xai7P67dg9F9E@ZXrW8Jg)2n1N0OMDaeef0@%CHJcb\sMG$+pZAMiQ:fb9=A6o[e77[i,+`T^>\BUBqd)P1+o185Pn<4*ZN
%$gbd*M(o]#b"^J[:1Z??3LfDs8,_aIpX&-,\&kb2$V$E:O2n!o5a_;k/7XCoUW8[I0[aY'DQt^>^66WmZh`]LB^p&L%7!U1aT.4'
%T#*K7hX1hhK]`">4.t?=G-G/A%'16H,&sb5hHB);@25rnOjNuMe31Ah&8!Lh*?58"gH29&2a($1VVU)@;PS=20t"Rn'^iCY2?h[G
%r'$RlDJY8r>$!53cGica\hp$Uc-,*7<JVr^Nn[!7c$'bbC&/TeE].7V2geu$)`nj>AEJ<Ui0>p'[QV8=ffb4QOLLLsb$]TEl`5[S
%Wbn0VhI=\2K3[)e:6%7daDZDO8Zkb+VkDE_2D)"6$\h]8mbsH!mD/XK8!<*VD]W=rCcKF&F&\O[D>&_RDfh$f+u%ELg^pfUlPNJ^
%g[/If\4;`eh(mML3\msP5!h<uZ9j5$LO3ZR+0i;.JA<>D#0,XrI'J0mM007qE>,Ts/;CAWjIo%X3#E#O"W[j`nT#.$\\UcB22!5C
%*/9&Y!%_ZJ(a:.R^(jhecNl3e.Y7isf!.ah=bh+f?t4`V#/NYHRk##MH6YjF-b['!3]YV(;R$k0O)D=aLg6JBcRCCfr:CG/c\YK\
%4$j9eS(tT317[(0-UKa$17"39;*liYPW[]'0+Nhdd]eA2;uVZ*iSe7i"uI0X`Q=A&&WklqLgi<f?a3_K]U0"[\QJX<G,J<7;FJKS
%=ni/.0k(n>/)c0"%b6qD@md,&fhaCj@\CXoh5F0m&YBIu99!\KP%B^D.7c0UJe[(9YpcrTSQ3Ng";*R_S1n+ridsSSciR#M.0`CV
%T=h@seTUM8=cPoaL*k*24Rl#cN":%nJJaP!ObScRL0$.I*>^bL`8<9Gd4iX4#=APjiJZKr0,"E!f2DZ.^$O^5QFLuZTf3oi)2u_f
%prl:.in98:X0"\KLphpNRi%t(U:h4`<l9!J<*OHlS3M`^ANh0ml"iOOVQ;:oi9_L2Ngf/k&uR"Q20kX6#K\D76Qt>b+%:J0'R*,a
%j186A)]dd,LZ\3!O[uK/Zl+o.kJref"o?iKiZSf9oUVbP)'"Pd%r/=FXWu"0T$^[7\O(&4FagQ%pGSPd-:7XQ``?Gg@^*C;(Rg0j
%en36qg4Rp2VAfSr`FEJ\29n[9mi\(eMToo<74j&Nr+qa)@JV;EN:2A^Fl:?mh7qQc(dPfHI&'_&>iPUW=,*t5)t[c8r2G*I'NkF?
%rpIV&-Q^O\@;<[:#Ch\1)9JZ1/"G<RDfTV=Pjac&gjTsb*YGT!2rJC=c;]8"fWrQjV/f)<A.B=RW$\fHJH?9ZJ,E>soS.b:HK2KG
%UGq\++]e4')2&:]Yruip/"/)UHDpK&@)"g*>!@p_7OQ*$#7*l`*Ys*[)'81,`*QsnaI$g@iDg.LhS3F2]#E?i($0hbI3^FqeauOW
%oZ3R-a*2D$jop$pe:-:I5u/m9;u4PXL&FQ>SDbV^%;-l?)j*mgEI,)0Ce[#82E>G26lKYp4W3Wm*?0`7F$4@:\Wo2FIA*2=**)`F
%WN""Q+t,&sA%Ji>WT!h^'QQU?I3C?uc@0o\*L\F3`t4POR%eqnb&YS6jb%j3fFA5dP@"'=/F4cS?L1;%1`^S9YcfAX?4;eb:Th*U
%llS-D;%d>f+%i<PKGI$UkMlZL_%JQ0e1?\h[\p6OA'e.cdc%IMp3lKu%S_RY?YKq<&^5*A3BnV:@4&$QO1Wf,S(s/tnmR'Tl&u\^
%inI[CXmoN-]$%U;>Yotl$m__t_K3%.ZV9Ocm[S#%k0>P0A!%F3XINq"=H)eD'dD\clmbQHS2[el=^$\/Fq;0rA':o_P2MC%7b<!2
%$ZXMRBEh3/">pcQNZ`(=76?-i**a#8/S)gCSDcj&d60+qJ7YfO@Kc/HreParWe!08]nuuH8DJ+]Nd7B5V64,$eZ0l^(V>=%$r?71
%8l<;0ib1<p+)E>5:!'p<9e]n7%]k!LH8jttIWD)+k0'F<]"@`c`C,!045oRhjgId8#iFS$ic2=acM!FB+.=_^@sktY7,;rg861(A
%0V>SCO7p!jGkK`eIluH&GPBM$k&^(<[FpGk@]cGP<D&l5YH<K?(V;V9]6pl8IQOb,@>MoMZ24R,fBjLtj%(Qdm[)G3>AVt59?qYi
%U1@I0qX!lPD#ZhK1u@)9%R1>6K,pL4o^q3N.NXLkZ65qfMp[CP>YkD!f\XG8hb*>Eb/6UX\jCtMK2.]464=2ci#*thKdo&$fbN"I
%(*`I4/d(*[_'tcR.%AZndF#@arTN>'+s$CNV2O!:Ok)_i,So.h(?.EXmFs=S+b))lM/(O!TCS$7SND=s12gj/pm-.g,3F*gB2d[I
%L&Mnpg0>A'/2GfA<kTskbgQ&U:FYuPcQCAGk<\1ei*\4V<gmZPo3_i=LSet0#m5I?IHsB%dIgdt-:0]HgY@]LNb+F_ntQVM+,1_M
%$$6*[@nC]O%9"cGB]#LFR6caC+L]n6?8R`QE$dki#J)@52Dil!RiLZ'(KK=c-kVT5cB8+.V-.Vs]nP0#&3M'_ZeH],I.Ki-BTQMa
%SR?FMK:-[&[d-)tJruJn`O6EfZ_@2C6Q#t&JqYi@0D2O,%2XJ\?QG,rM_*>7k:KSTi'%4I&6_=HF2K-)J[O_@rZ#F`:Ng9agK]\t
%c5\D\r<aH4.kI.s=D0l\/e\a`%J$SE-$$k'-QoX"QA:Mj#)8"4:gs==fQqRV?+-$N7e!N3Y_pj6,Cp301)`3Dk2OXV7iR1WJqs<*
%&UGm-mN.m#=5:+ki@#CE$jD=["#*3>k<kF`iTV73+=sW6B]>r-\X=VUZ]U,_SefI$`#VO5o(rZ:YV5P"^*@?d`k3P>PH,SJ+U=JZ
%VJHa=80_j\6cV2hBEud,a2?$+#&-Rb'\k2[W7DkjY(>$.-eRK$FiV'q(&J4`=Z84P0fgGcPk4-ahrGcBh&0s7(b?-gX:=e-LRYEb
%kiB\]dFdA(a6;W=RIarUZPu9$TZ7hJMcJ/)j6*@C1-%aXZfb7Wnq737$e^[!d#;oTN(j+,^bC%W\6=Ghmm0UQ#O>7jPZ*kYM-l?c
%;!Af7(d(t)koUE+D(WG=iV[\)*a.$!'\K4$%Q7@%+)dI\mL#YUV6P8Y^+d&1nrNP6i>j@a!(^5=j;o.rmXtg+gY>A>%B4NbX`]\a
%7m^Dbn]5Z6Y?HjI)oSeI3s5U!jV5pGJ3"7eQTA0,Z(OR3Z>hZ;cS$0;Z&VXgTm\,r+,YUsZ+i(sbH09iOFM(^4>bfYS;D,peln';
%9RB)6gs2i)M"XGSTf"S;b)^Zc`s:VGZBLQR'mm#69a"fu^6>[NjN?t4+1"$d&=qT[AE08u*3F*0KQ8KQh'T]Wil9sjGSeH8Gk4(V
%En!#""cK)@NK0('[\6MA)bgiZ[tNnTHC*"`5q?u=BReFA'NKIX_O9Yn:+DdY(3`>J6ZsD;)$@m_-pCpOO,iBYHcV?8:cl$.7%V$s
%AJ8bq.0VIb<JgFn*2daD"S'i9<G(NA*%Ink[)\=]r"cAnk)qX[6"Vfi4>oEX\+9CiF7&?+Q(I/+PA:POh+Z"8I6+qm`-e5KI@Z,$
%;YCk%=(9uA*So[j@,#JIDJ2'Pfq3'_b]06eB(5UBgaaTOfm'EW\B@T)`;O9RSnhnW["<rf/';=;r1"Z5=\A)3@N%aJe-*_<Wn[bY
%juH5A&C1,]g$nh/ZQmlfe6F:\iUOk6MB3jB?5ub6\\^,QV,7btf7PW[6bfO$C/'80E'5=a43;^mRA8;)G+r.p<O,?e^/QSmfQV4[
%Y8Z<SAob]F@9+0<p!CQ^EM"LiR)/DmNPZ]?S<'1uQIh7Q#kq-'75q"3;#A2P^f\OQ?BrlbZPBQ_3!d+A)o\RQ"\=egj?U3A(IRfi
%hY+e1BO=&6)qd3B)d#R9&!mRtJk$'WDP6ggo:*F@hqh%R-obD5OJ<$OMi%AIBJpBBFd,Lt7_j1m3r/'rr$q2_W<_N:@j,T#,,^S?
%8ZS/rJ8D[-]?*2qi]R\OWh.Vcp#+gVfSImHoYB@U#o*q_\s/:D<`5*0OqeX-B&Z4sn-i]7)`c[j30&c+7pmlre)b=1S)NH(@p57\
%-6nABBNM&i)&Qakl.Gk3GYClsi?erjV(BRF,?,s$$@7+P-pS]9FuX-d",jd$^%#bn7.ubhc[ffpJ2t`,VNJ@E)*[=-n;7QJ#Ou1I
%M[X#d3N8\Q44b,=GK+u>WP0e!0/J@cpat>;`U=UIj!,T/7@A?m83cM46cY`fWk9Y;nmJt;?n0a6'lJc?N%u]4=T^h;bm\^[RY^C6
%VWVBA%?5p_Z*mTd`?(\bBM:B=:C_C9@$%%WiiQm$F#^bg1#*7d3"Du\Re'M<T(0`!E,95HeVb_#m\W,P8:Z#\'@$DRD=\sr0-BY<
%Lj=2?"o?GN=6&]6#PmS4@B1>[0r3TY/g[W'6]pltB[p2>%Sa*M#*ml^2B\<e[VQ1]`n3_2m@!1!n+81*C%-sU:qXO[.tBhUY3?'`
%L9h8mICo[+>9RY_+uE6Z7mi!jEj(&MO+A563P]WG\Z9WmYro.I?]tnj!sa06hD+;UO+CLQ9n9\g"F"<pV9KgIk\g'o0kW"RZ/f4e
%$>$>p`Fl`Ip*M_epmpV4[6C6T]PIa@qR=.<'L;#8)+h5gJbCEWKhsgjahu%/334LWO+O'E+@!S28%/u:(ucp#TQVKa#gK5SrFH1@
%^`*(`MmnaB'p\A\^?0TIRHGqQ#Q1<?D4QM@Hc*OPq,F(_3*7U1X^gS\CLK8eC#8'0Fa#-mUK!^AO)rB:DLZ`'Mh[lL#8,qKdbZBE
%7(R++bsV'L3UPM/.))eoT+qh=PhWuqXd#Pmon@@r,Cd[#?92-C?[K@[q4a>O;ZZ)9+8LQi.^G8p2<"+/ob55!H/1jeh#OseHbEBs
%pN.3"h$T'hA%7*#5$!+e-i\p.oWuGnPq[G"UIQ_.Q%5i@)j9)6h1P=s@<3eX2V@B`m?hg4K-E;oB^S!l/i<;BB&M5-^9>)Zg:,Ga
%1VF]Dp/9?JeN:;'_<>;/3p4".;k=3QU.6mh]0gBoa9Fq;k10dM]C>qd'W/O>`cfdm-?lFG1q4@e.A!"GR2!e2_6JP+?bEVg/]UJQ
%lVqsh^:"k#$k4OtE+e_c(:J(_46#Xr#CKI_fl5&`I-d*E"rs[X1fZ/nqTFeIUh?4_jVGok'["S7G\*;r/f_8tWHK1iSl*:h[]&`s
%^^aDWLIRcfn\F\-7#u`/jkqO'4RPEEIiZd#n$T)0l"4XFH?7@Kl"FJZh`&::1ISh1Fq-V:*EiUqT:$[A)^?A:p6<_,]4?kBQJU\+
%R(b0VBp2ae>OL^Cp6m,s+*nP?CGB=p>j#_n!-;O1d['YdfApgT.V>T;`_+4fP9VDFq:<!%WH6Dhl.S$1h`nTC+N7tqA[J5W"7>a!
%cCuK1d4o7\PeG<;d,HZI$F7/Xe'@1b8FgA8BF:I#XIWA;)S;-.3rpd3W"GjT.P)d7mHDn?p%rel70TY7aTV!+C$RIfBS(=O_$At:
%Zm!lbiSAc8UgQpO=ASsonQ6$b\&th.l$6d7F-4bAj0ma-&^p+HCu:>+']qh78mT@#,;[>1\[=:E/l:^>Og`1=!c@NhB#Y**Ggc,a
%XglJTq,[5eIQCqm1dR,pln05%*Ml(CBhr+G,K1Eh_r+.&c`i4Ic0Nb3Gk`7;.'be?GnejQ>p#`:!aZcgmF!.pEgL"MdKP(`iFN"+
%TW"47WK$S(#u\JpE0Q5uRj!bhdp6/Z7Z(_M2qINZ^6/#`F7Y,W(]$3q;l#WA"dUo1MDRQ,iM@<53a7Q_>&K`J9:ss@n+7G@?1,cU
%Qm,fqSD2l;8=SDBA).uuQ7%Rm`^m"0pJQBL@*fa)EMCDX.Hk;qG'R`-V..="N>ZJBGVX#mFF#@DZTYe*AVbGDk%G_Z7J<R$XQS45
%WON8_bojDoc?bJ4Si^<'bm6U9LD6t#Zod=)]IAJ+mY1(@';TD:<%O6&0LQgAkA=oSg%'_9"13KsqF+?=$1*I=pXi6sU?PpT8p"L;
%9ZN6-9KUZOC:C5sKTPmU8-')b$Xh:&91j]<UdnT@Zk&$b/&U2SOZ%,)2ED/mn/=Hm<J3N3o$U>j?idXK>-0XL`FB(IO\1T_*,FL>
%dU@IMX&F[77ID/#1i-B'A.g+U=@BN5V,CbUO-!7#Unps;?'+,kU038Ylp'AT>+4Ea3M2>F/VWib@[$"?U_>i&QDh'bp?b2=l.`U+
%3k&r!p5g3IF]Xj;24>UdDm\>r2p=R7G=81kHodpIb6R:&7Ib6j-s3f*q>=[EWmQ0f'PGJ`2GN'5RBH?ko='L3m1,Oo[I6IVqg-]_
%m8S:YQna*&2m_DF][_"\Dk1T6mZ!Y,%Z[rX%4mddg\m.B6.^=[4!Qb`qfGJ<%EFe.-5Q/Amtm?gFruuChlaK`HCN1:DFXL--&rkU
%hfWiBg.^CqYKRd&9]$mC1Z:@UD%4O+8+E9iZedsq>ef1gm0(<9XdX=TS]pOS9UYQkDf-ZSlnWu.$Vg)d:#A]"__&5Ua$S$E>A'SM
%>Q5NT)sia-gumqR^$T-r.h@PV,JF3WWZ56u*UO1_n$t4*1TueR,#kRP,9lEF?$@'t/W/M#I)f#^:Uj4b7t/qN0rEBR,0WTaG=#Da
%#kRs<qSS)[`LD4Ko+CW8$BF$)k`+d3&RT!2/8;gr$e$gilP9(Q`&S`cCoEWdJ;t:']J`T^UKS8Ce%pD:`3H@C:ou>:J8]p&`n/q6
%);ON\mF2b!<HijtNOg^L1q=@.379NIb."*)B>YQ8\$g13'TC+Y>3CsGa,2)^;l%Lq--_OKe4@+RLlk\NKBL)Z.\s';p/V>GpASX!
%XH(!8qj0f6RaiPJ>f4si)Qeb1K8_6Wm/<CrKm40As(qogN(#PR/Q8I\i%er*'RB_U8=SDUs$&=]lThf&$L(NF.8oM2-qMb>f:YPr
%`M-sFdt35os!CK/B4O/jF4+s<R`hb`^.Cu3olrR,3b-piIjiI1W%Gk?k09!d/Sg[?Xs]"71TsEt%)o7n;7X%eN9F;iDl0qG8,6Yn
%kXd@`_)g"9,i0UmFq,3tL`Qt68/Q,(O/Ws/7Q7'7\.UNLR8m4MLjgc7(B<Td/r0e;$S3H_I7p4<"ufX0NHEi$:j_0X_fXB[s"U_N
%R)PTKN8-CMY`,T;]/q_uk*1DWV-/&iNZ?bfQc'p([u9NR21jM)/Hb*n)\>\;pt]ic#85)mD3SR!e<)Gf,>(\Y::10lGIiRo(oC8X
%1gN-RZQ-@6<]*!Ra)ps/83@4@%E@#ICc]9W[k^;JLZo4>o=*(U5C]g+pprj21E%EW?C*41ja@%7=?];eiK.1X_!%rjq7%lP-7@e*
%0rs29QXhOcV6S*0Z:6d6lfYo(hncj+(FAn,S7f_)_Lsf(S'7:s<BZn\Wb4Dj<B[F_l=mO;h:Uk78^0MgA.8XqM<ZhXh);:LP8J+&
%:J\'Ir#tWkc5Z@mc.d'7[`qi!cGpe4D69Z6TrG.2*ZR8S]JscKlI!^sEAt^qOD)+@<,*q\)HD+7f.P?tN>dcWQK:G="#A:Y+?L.[
%Xf?Ur013.;mrl,AEN;s#C$I.qM7/F!9EWE.T9(dl\Wo?0F:V!,UQT/Xe1h.s3sB4!$M.Q2bL9J'mLjN;lcsh,JZVVQXB$q9ZBai\
%U3k6/)r7MgMAi`"c01!Y)GMSu9Kf*5&"$0>&R?n+0KrVIf#l"VS4o*'/j,HBW$,_>UO-RY6&ne+b#3/;(KNUD9#N[E>rs@3;*-GT
%WTlJNQCH[,L<5"mW&+]sAtrgMQC?V%bjQt>a]SMuPL8)[NGA-n!OJX2MW(rcWA6SEC+ErZ7=(K6F?l#"6RPT6PM=b!6BlEQ=P3HI
%RMj>]/KKa1k&5?"VgotSHjX6hGmAGbRT1`NZj*@5\tg?Q&_NOp&6$mteR%(23OVk$+NLi-X\QHbg-!SsTMuT7<eeaEoStg+00mjN
%;(u\Gcl*g9-G4ZWCno$M%^to-X:2QpCfQ3kO5&q-Pf\AjbtO.k/X%W;2^f<BT0$g?m7r9EfsfIPB;dANA_T%nZ"#bj;[S9F`I=81
%b17`-NY#'NCIteY!fdQ6q3EDgM9W>-&OKsfDA*\+0SWKW)g0*[A5cBQa@JML_ebV4I&_iXr&0RG5#qmiPGAD-K$>&pN1p)%=WlbU
%DF]o&*hlh6VuX3Y&hUYrMVHi94&l:@M?7`8n!fBA_Z@rMS2"=0/(j#@oU`^YlT7=k2YC)h+]Qhr*SW').[iYE(="W'0o="<p((<(
%ngX!/=Y\+q&iU8HE0LLLWcO#4QmFD*gk0GWNdA)@Hif9r]>P/RDYrc588X9k%#It:@7$TLePftCP1=,7EYDUehBXMX:W^K#<!u9f
%rOUH''Bi]<[+"Z%*$si@RAalFnd3_`+:#pq*Y:N7;DVP&k=TAc:%CJBDQ><oD?=\CY+7'2K@jY*ldMg7PC*i!%durO<I.T-Bdd_$
%l&i"&Pm06&:F:r[fmtr=\3-a7V<d(\n]*=HDJOQgjql\/V*Kf2,#kgL?&!;rk6[bs^%BQl=qAkac6j@e-ejt$A>>'HHFmfJTI..%
%UkA#INS[5@_!mNAhdeP+c5<ltPGE-FR6!-2(:^+qFEVgumE:ZtW(\5cXQiWSha!rgB24,rFOd?93<JjJlH=J)Nd5c`aP(?P73-;4
%!\gs.X&6<j6l'D1<WoLa`Fg/D_4kXaT6c\&c^M8`CN9hR)bAOMNOU?2i1+ro&h%cWWBcSfE]nC,[sN/.DZEJ;6Wfrmea<rk@.0i1
%U\-Skpm>e`Fr2Fun7e*@IMk1#2[C8\X*]oR`/-`l3P-99;WWB$*G_aD?DEdH3bpQUq+/8Ok<Pd[Ak4,]R$$FXC:#9UUIijK4W_6W
%R(Yt)Ek$aTJ=Tr?afBH(\^1>9#.%p;dHY'8!2k:*<g1-<E)*Ua&<tZ4]j`r:]0SSgO1^D"gZ19`"uJe_\R6.<X1&RuI2&hs?@1NA
%@\0%D3-oc%%9U`dlusG=X!*7i=Tm=O9Z:["P72heC)2=O2qOm:S(slUp4T=c[#92Ia3pDIr$2aZbaRrrPF701LZ?Ud2hckT0EC;.
%7j'K"PCQiGo55(/]BS`;]kjpBJ:TR%=&!KSN3=1G(KtS[:VE[rmo;]CBULNG3oX@LELP-MjXs6/iC[DT]laf#!B[uE^NjX+$gY30
%B\)HEC"6BA"QqW@]aBX5$VtZZ0H:2ph?\uY]pc`VC(7:^+kA?:a/?A#)I'_Hh^?EGi+YQ=,9d"qGRdBRQ(#ThatX<'?XTdB0dUR8
%p,L]Q>?sBdY$.1T#@OH8h(#uEf!b6SCC?._Ed+@J6s.YW,+)#qUNLIZHPup60)&O[XrJFZdue/j&bp1'mIJ[EVMNQ&A!S=Q?:T"3
%"2i'1=&Z!:o?:"5RDetf)<6[@%MmZ&\T+Na!LW-.NL]BUHCu=0Z#0H';iSk[!6506\JQZ+&CF2>p`/C'#r%R^^1MZcQ:OE-PeVE1
%PXC;+=^7[i-;.FFB1)[_]O>=oc2k)6.j$Tpo5d"<4j2TbAoEL]7Wic,UC'&&F3Ef`kgWY7[Xq7U0m)Cn3pR,6XHOT"6YD8j=4!@9
%$eAHJB3dg$Xqj,o%@qVFS]9tW71Gf1"eDMon.[a%eeN9BeUhqocrjGsiG-15eBh@-'5OXE>sh]"E&AAPEb'14)ER0k3p_p\f?e4A
%,[468c$%$b]P[6rnE-!$]#--182AE]7dU_(G<)^jMX+a4'-DsglFgPWjFG]Qmm^8lmH^6&eK/'sIph<TI-U1KLo[sb<4;<<-cKKX
%oBBhu,`6c+cO-'43@nh'_mqtCauRN&dq,[sf8F^IpXW-'8`c^Ak/rQ,UQRVoQF_t9*9ioZmO3m3[\ph@W_-Pe6-/jV_o!ViViAra
%`qX/M;s144]WKaPCN<PDVEG5gDdj8N1<fQ.1WH6Cc"u-()^X/P]:$^;ef,)KD&KZB%&+&&mD=sPY*qXT.I7J1p';F>]481f*8=IW
%3n%5gG[3Tg?Bo,2miH7nKX.`n;dB2XmBGm&5.1].)=;"Yr`F%&bV!m['J/Ot,g^bWnBgM.G-"/-h(I/+0U8Q3Y62+R],]Gm<UJ)I
%f29StB35,]W_$B^Q_p/e_-"=t[:eDZ"qOq_L`.utd57I[gGA>Z:D'Bl[2DZUq/]`[(G+7i`)m=up2i=sf!#M/P-X[f<gchr0RJY#
%c7s0foopH&/JE7j84B;ELh#/W0,%Yto4edsNTgr()cUi<o4;]X^9qC8][Z,(o9Ru#E]OaY!016i(>/]+0!e9I5B\V[pR$S@:QG3d
%K"Zdka2+>b!<!eS'7d=!)?o8+^/`'RWSE>BBSWn&09St<]IZm9RsgHnaYG0%WmXRm\/MW]Wf_)&.<B[:jbX4QIH=%!9mC7.8+r3`
%Nq.Ok'aH9km>RE(o(hhPdQ7Z,'(M3&$KPs/Nd4&m`R('G^`OM>]&K"JDX*:R+0R?2@pWcF5='C#4rr?f)ObcAKXhB<R?>mYUo?ig
%U6p8T*u6,9(ULdiZeuM[PU,SDl1RPc<[?qumdTK3^SE-S&K-uCS<5hn.5gUJgDja7`'$;Rnsm-P?i+Om19,SKiq+*+!8t+Ah,-Z[
%g.=%T2:[;VccDb71gNSjX<Q2t5*)`p,@d,(T5[Vuj/b3FQ0?&9Z^538a7mrY3[h,:4K1<`k3'aT36U[X;Ko/D@Bcn+/5A+c,QjL%
%^:B9D,^!L.I3+k6]hZ_s:3_:pD-p*?R<`tTNq0HDUC2h,Jp)9ZFW['S4e[c!l5ZDIZ`L3+Q&]$I$JQpo-S7!N;QX8jDeXJrDmo?l
%;Y82,Tp'6Jbml'XVB-4UBuHE#l[$);miOV_4e0nKkh049letT9B2M/^SCIqr`mqu#XS"#DTS%PMK,[*NMmuMg&#VDs-2$M9F?Q/n
%hGI/_fB@N?gKO^t;@f\YZ#Xg5nmqE4qH1sX>6e06S\DBN)7YElM$-Z/1Qc:`V3<]tb6:CK,43s1q1q29)\Bgj,Yh^+NoBW_c+ZP)
%:?kADTb)\^_eD@^=3X;@M_jkr)@[G5R4#pfcTA2AARfc?\`:3#k/;>]Z->]#(85HNB6F#,b>9WO;IpS<]*n_-jg?j5HH^IKXqdK[
%6ORfPn[lM[d881.EuQff;r@.#WCI.P%4Qshp,]Nh[W'Ho"?*ebbNtU=m?PJq\"RNBd^n0O4*t^`=K)#=qI1i,J6K*HV-?]@5X[JA
%Z\sN5<0<V_fl9hVlEDHidB_p\ARJI%f8tm>c/ZfCU`qdXW(9AM@]-D#78On"Oc&'V]*;FT&f[D-_[FE\daYi=)0L8Eg".joePe+g
%>q);K*c#jH*'V\eH(q2KV/V1\ddU/EPNOO**4([]l\I&e;$s58K*W:2?'%rDK<2on."sJ&O#`0FeuTiY[45#1T57O&FD,u$e]Eg?
%>(8*_ZO)P[*qVdlr/NOi%MHhgR/,!MFo!dLQOMKX\Y,rl?ZW`2@s'jdW,a,HVdQb_DV!FiD44ddUGiZ\G1=;i.-h[t26Ot*T/[)N
%':2'BLSNPa`(mZs<K4tO[ZTtPim;LXUpnbQRQnMG**C+N%?I[48gC#aIW6PEp*CrGE:5(K#f/i)1.Uc6Q=M`1UohTkW]ELEP$"Kd
%@:"-nSElYEMjLm)XZng%X\M'\OSTL"g]Pe)ZO/d3D:PZ=/_+WoP_q,KXX`\m1R[K\):DduUn_6^KiDE;e^n)-A`<:#DVXO9Pl,)Z
%>mXVka/[dOp?@ZR^W4ru1TRb?>?d0alD@^hgP/_Y=jFUqY->ELMR7d]I@)cWR^W2:hqY4ldb)*i;,d1sjk9VR1Sf*G$9LANY[GFI
%j536bmrR-ahl%R;.VN"+Ro>=iEh0P4SS1'^GQUJ.S.m7Y`N*.T6++iU4#h8]ojGE'A1X04U=o6,@nM+7:T3Qb-Ka3j3d*cOC1#2:
%.(dBrG3:tYo\.A>aVfMM`8FB*#MCE(0?Mb0L"hDE4sF]>%>jP,XQ*QXh+-NWch0;b-_$1<R?#VW]5Mj7)f[o&qelp'B"HfB7W`jR
%S`9NdcI^6QgAF<+VT2u5IXo^)dsI6m\s)5alE-p>M?BYmEAjtgcJe^UVlZaOapI@bbNZ(lN,%TP>5;i<9kT]K2a1r*RVFkm>JrC7
%GlQEqWp,I-g"[-ZJnhk1>3%`Fl&>=MA6[`kC-&+n3d&*mQte[W=uqFOHg7Q,1Wm*u?XReW24`.]i_48XX6GS5)thn3``1D)e^Bl@
%2LgU!\lt7,>Ko=-P?--M3N#U>7T\%Vc(DgdW)HaGks=!O;trc2FCr6uA#njaF6ka6F?37p4n/_Ve");)F][$pelXf2Ra/FO]$]&M
%7K<E]K<+6qG"Zpii#>KeB;?TUd;'u,l"kN4)H9FDDdOD[9kVBQ`>`_p24\#!=(A8pN,%TN^W1Qp!77bLJ=>qbeTH"uq,b4D5>nK\
%2M]2eVdl48Y$jLq0`.0\ahLnY6W+*Tnhg2iFlqP71HngM46kgh_BmGu85tdelW?+\!DS,s8_(-b;*'l1WWEE4Qd]hGSVSQ00d*L!
%cRrFaA:0KU<5Vi-al9YM-7T[30l9<89M^mq&J<bE'Q$$MDOm2Z^QrI(Tt=6Qk"^'FPs^o9,bMV'rOUd[UKSt!T=HbYjDn9lkNIGL
%p%`.[6[,GtX3n>LPHW24AuQbuk0>l[L_t3uceO@@N:hto:ApSB;Yt(tTfZnV8&`RSgiLFE0@A@7ke,2MZ=-7fMN`q@IH"EO(trAq
%;u&9+jZsueZTWYK-_I>r%L(1E)0eZ*FA>Rf2q_7LRNLO.>[Ib=/<1b%EJP$Ca#*IeQ"4N7fE0:!*Vt(+FD7c>R#UNg1>D78S^!_0
%YY0$U$A?Ra4LjG#:]SZ3r0ZNn:]S_mM/MX3buj]tV"4'J>9W3gJelshMmMj`Nh^O))F75klrn)@$H,bU.bP7]L$`[/0ec+O[:\<H
%ckk7cjD,-=(\3Qt'bCC]aG5_ZMug=]PaU6KRBgk\Lm>F+HaPn%h,V(`M^n73:Jb7biaui%e)d?Z<2R_q+4osQe:O-h2X1[)n7'sr
%Mtm=UmE>C-\okDF6,#]7Ua-)+20i<2N+$N]6Q$5q(()4?[KJ#-^$kd[IeMB^jh6kK$-rA&F4j@%]PK0&Q=NSDpY(+ATSogo4+2a>
%f8cq-:bVF73Y0T`=/Z`sr>bL=C?e5'iD(*t%i25BE$'oF#<LgL=l!L(rjn.YL4+@*O*nj9jB(bma5%o)i=<[=LV:1n?oQlcbBuFh
%1)*4<)t(G_9mM*J'CG7c]VFU&ktQFn?\WW>\?#4ap6-S=QlGJUh=h8#g`?<I]DYbfL[:q6-eA:r_:5"2XOhkJes=VT<c]&MUZg(\
%FGEMjS^)Tk8+driIc7CLe"I:Qk6h)HK\W)s&HViXQ$gk]c2MOa4o<nq(Nq9bBjn2#'6mg>61WcS8n.@hU*(RRcRcu?bBnVmIJC52
%hR@p11$p?Fl/]Bfe!?re`V,M8<)7NFhl1aphdtCrVR+JCb#"^G[d0qU]=ab9\Xt.EPNUds/)Q,i.j#i]M.sF),.K^Sc;&^?`UGVF
%n/e8Qs-.!&6a=SM:Zr:EYE@kVZ*o!Z0sG!pH6_6sY'WQ7m]MU6q0Jm:T&Akf=3>N2Z>40SKBk3E598t!a$"=_><cYYX';27L9Zf@
%kIkqAbE2FgofOnJPs%D%+XUpdpPJ/?)/hIZ4h1'[h71,se"\G6[skp'Y]T!DlMUtNhZ(,)bJ14;`U(<SO+4q<W]PM*].:8YTPN0T
%Nqm$^'&N!`p\[[bI(4m,:WIs5En@q'l?h1/DEN?Q90V.RmR_XF^\iAcX_%'&)I@K"\(n`Cr'\-*o#GW>Ge`_DdP@0XY5R,D3nNNj
%n_YDUqU1Qd?`q*!m2i\NH`:Ut)1h72cFpS[:&B#fI;eicp/>+S/'Aa#DX[5GKd@l2oUU&')W$D:gcnTkT7=Mcb=gmcV;_-55KsEp
%SItUDc:b@5LqCFoqCfm=gZbPZmp!M'V,g@+o\R6-"FpDnpQo4"qX@Z'fi;@*!rdXPs2@Qs?V[.rYJ:&hmJ;fSf60?mZMF+Afh;5+
%EV8\qcW=tQ/9?7q9IlZ[=Ms!eHLopZj!WE;DP(@$KrAD`:P5ZObk;O:grJ8VqE?j/fX.Q3AG;=ag!Ha)LBO-[qk,k@PM3Bf@ah6Y
%FYaCdFSE;5A\Xh4/+Z-/G5ZM=2m\_bgcn=8g:XN!WQLDpa@b236Be@TYWmT*3qPJsr7#KkH$9M-AT=%[bsZ8?YEsYNrBO4`$VU'q
%[C`(+?pcElEq_OF*m[Mrm$,#kqYU(ep#5SoffN+BB1eE&DsjCmoc?<LB32iKn\uqhNpX$eiBFQ0k.6oRHcksHl;9%Y>#+'Naga\a
%]BsuVIA"1&c`S>;ZWpSZKIjp6(89Q`<nskR@XD60ZaJfT(dL1[a6K=[*KF6/>W^;\#J3WrCL>=UIW94._Ar:!RhG.4>K:tt[J0?:
%e]=Wdr-Q'Bn34Ql]dgpTR/hgtq;]<aO^7C(3dL/`mY?E"9-g";cf,5^ZH^^+3`(jeGb@)&DFd_%0<_P)o,[;!NE8JfU&'.?m8iTT
%;ZYdGfLIEhYB)QK'l^?,NVE3sG4PXtqVI&iqdtS^H]<6^A``u`m<+?4am&0G3Lrn3.S$8dT"-u\T4E@jGsmPWH(WB5-oMrlhkdZI
%FQ&dt6`/KZZN0`h"1[e\,eG@Ym4/E\:3?=rZ2jWg"$#UB5"HIIIWGL;Ku8OU!U_lO&A?YMc2t(LAWDI)*=$qq/AV5H!!:+LT*8p#
%S1chd*34^(!U_lO:i58\AHD3SUmW2fIpP_,R@VmU0BLsgNGM+qPg@V9)d^ZGj&Pk$Qh'Nd,MUh\P`KiSjsqiM^Q`YFBa:d0X'a".
%HU%)1\<Lq+qiSYUV0r0O^[`e>np.D?$nC[+-mm>JWPQ4(l?DmS:d9Afg/.[Zf5G$(ToON(T:=P9W"$/h]m^3E;`a9YIe.LN4&g'q
%*U`TimhOR0&jQ0)IQK@CgtGS[\CYY;:Au1+qTY'0;:!c)n+GEcPNs_ZFQ_NG\$0rsL[M>>qTYYdPjdVYp\IklRCUl:&3#.+Gd$$&
%$1/G#HC0'XG"bDr=4M]uK\:RHm#JKH%rnf1r5rAm-@Wm[rT8!>)n:fSKmWd\]7gbpJSNKDIe-:i*M]8<ENe7pBp,psNclN%=3,YO
%d(Oo"HN?A2f=9FNrdi5/^ABo_iqmgel='/SgHjA3\,,pT)4Df*lSl3[S,-1#Wb0k6do.0uf5K!Jf<94uhu$^WP`q/QYM]8.CR:00
%UjN%kIqpE<S>pXQk^39j'+d%RYAg]&S@/(T:&gLHj#]-5Q[Rc3\&WW3qnA-[8GDsp00:eYK4]2Kh!6mHmpXOUgT?+blSi17LPc=D
%j'KLVp@)F%:D+2)^U4Sp?;;.->)%C[lSnjV\W.jnr4RP:[AU.G_qrFXYTSq]n)O9Pb=?LD48OAQqak8NX*V["XN&)Zig\4a4kdSu
%Q",1'<^4_D3r6O=ROU2`?I:"TlSi1qfnIHVI';H*>Q'Re[>FAF4//osTD/3L,Ob:Uh!6p!<keaoa*4I5gaQqtH`u>cPMt?"IdSdX
%]%:lOQ0`G^gTAWO61=K9+5Sl_M]MY#^\NFU;a.$Fhs7bhGB(+gc*%Mas*O\Sn$fAIG4;$"?0o]Yh!8U)CStD8%NR\lFg'\-Nc6q-
%*:7(Iq2-=uY=H@ZDgk#(n&S#5f<:e,oW<QuqUiM4=k39CmB-SS%^SYOX*rjj[kAcaaS5Q,00+B01FKeXQh@o\]mfQ3LUgQX?S*Fe
%pAOY)[YNc&l"G8^mMtaO?!$;EWi.nb<u,n%fC&RPql-sAMOT:>m.BH<\UT#K4SblL<Qio&\b=kce#_H[MFu4LPpJKe"M&I,Vn\7W
%D<7[*X&!Z+B\"9?8^n%:WK*OZFoLN,Zi'7DqW?7VL]6=@5@$@crQ"]V_c+`khQEB]r8D[;j7Ve4a$4s^*0:'ti`0@bp#j;jOFOe1
%rN/.'mY)0iSig:\8muShbdX`<?Mf$8j0:;K55]^%hOB9:?JW@2+8tk?lZW'mlgiVV:-?+p10jY<]*J(ZIWK]0a2dYX/hFd7n2u,$
%qKVO9]RB.om0b:;oZPkHdXRkF]XdUpYN&E6pV1X;jgC/[S`_(Y\Gtm"[FJn+O*.Wjr4;`7J+@&imIJSiRqr&Wr2I4J^VBO5j.GB&
%a%uNYbtlBP`L!46bGTPAe+1??\b.b>f)!M`SYWstZi9LDn*f5@\a_Z@<mSpM._kV2h^6[i9:N]o$O4"F!=AKlIeg<U3d']HjJSQ)
%Ku>CgrVSg+Qi=q.?0@(_NQWtMDV[JTlYd<ZT6U*MrS%#%nG:>um8q>75pkhlOrSf7bNXM3gCUQ3lQ,+5*kQO]_1STH`7?HGp[>i"
%<VCp?Q;<q&h$o]-BDtpj[3F1FU;Qf:[..^9l,mqr[N=H4RN$`]^\9_EhK\_L`V%PArcE/Ye#ORnNQ9r3^&$r%s/_=Lh>-Bk^HVYq
%dZ&M<Aa/C0&(3%8T=Na[^.FF/puL,I+"##liiFcGI1Miql/tQtT!)K!p$iLd=./R6m57Gg4\]Peq=*Gi>#*?=k@KH=GlF*VnTn;!
%.K=.Ld<AhDP2;IrknIb.(4gPuht$BoBp:<l:R5;Ql,NjAXN?+HeurBHDWT=6NFqk+l(p&bQ>bQkfq(D'f5hhncR\u*j6%6TLK4A0
%am/$*P5a^)s3n<]V12VAJ,"6J[JlkBJ%0t'"(W5'539&)b:g+TIf8$!rL[C,YG@fFCO!U&HfN&`#.B0um>WpRHMBj3,glKJm>VMJ
%i9)c-n!C4ZJ[3%\VC%c[dTJ^L/#!U-lZ0U_k$/:RefetrD7b)P-BRU2mWS2gLY+1([JkCjW4`PK`OILjkZ5t;T`%)oAEd,I>l900
%ncKkVhn-P7pA3:8]:8hg>l"3XZ2;P(RZ=pU)m28*SX6sR)qTP/lEp'5dC]?gE_a6[*'W7CZ$$#+ht$)+pV36nqs&+'mPaiG*jir/
%h&g!q?/55P`Hp:?5C(ffUHKG6&[#A0S+>ebSO$.s=+8hQ^$sF\/:^5b;5X>C>M:.+HHHmBiQgp6rmfK4l92@8c2>9g!4k@<&HHAY
%!td45!7(R`kPau%8!e/mFEqHp,@oQL)jd`dCCb"\_"@T9-]&X8?-68bF[]*-MB(Zaq"W)`1!A\!cTX5PDn]F[s80F?htJM<\"B.%
%H0s)2br6_6>kT#^N/kgHF'-73fj=XU,5aR8>'U(>o<=rbj0p-;o6YcFf*9SZ<)=]lA.;8upA2*Q0UZj\n)>=td3t?/ms(V/fjtHK
%r6V$QhYl]ir[D"_V`0oJ.`O!>BNMFbIU;VDi:XYR.mO"-^1l0E:RWWCr;"2>nc3c_f6:oqQPVc0O"q?Frqe#AiE8h,n<QN=#,YKF
%43tFejQiQX,n9RV=!t.7$fs2$q[@5[03*:KaX=mL'J+a-`nt^sT:H%<fWicGT<n^3XOZqtk[HMoI;QK6l#$$,l.qVc+4%Vbj`bFO
%deUp>[r`:sd4LDTH;gkXLKqE<iehi^q0d*]@MbB_>o2n9a4FPGk("doDdeQ-`nbA-n+.'n,(HcqIJW;UjCuGZr?0aVO6_;QGusY!
%rksj^rd!o,b#8Qf\c$Tgr@mPG"fa>:a6_Mg\AnB4e;+s&o7bNF%rZgV'sFWk#o//h[p,6;?`0KElsCO"?bJpQ*5b$SlQq@OUP];C
%j.2aE0:"+2ObsN>:gE"ge51DG<9b*&>"96PjsSZlY3q7gS()!(X7_b.ZagCl`Ka6n<L]I-@<';o-g9Pc;3K4IU)t,XlK*kL^R$O%
%\8Jc>>?'drcT@1,?cjJMamL81_V)PnGFT4l#0c,^lU1/e/9Ps@F^87"FR"R%Y]aX1%eM</]"k<6eA]'T:bB>*@ji8^gei#2YJX-<
%r>ooiYmW;\23!B(f6?SSN8\,>1!nNIc"BFJ,t1q>m\<8`i+K87h4_!Z46#cDpYL)>I*7!uRb`;FcaRZ8S@I8CX01?ilu-8:3dks!
%bP&.aKDMKOh4]]4F5Vu>dJs,W.s[jaL3%LV[V$C0p^*Mh/,>g^]Bk#B<e'U'T;?W.kNd3PX7((Wo%iMBn8S3)s7pKUG?4@j+8sN8
%chbA6VL.2"4EKnAQS@fd34\8QIc9-0p[dLQ,sRKc$(kerW>HB+jX9FiV!"oCN:$LYd!QLJL@#d5BYK<`;^bZc1uH6A=]h+JBYK<`
%K4!LT1uH6AnJ"?Ck*q_ohni!S2.m\jV@8o3@a<nUnHR6cEsD@#+F^]lTUr<9%prgL*kV**H2l1@.Jc"Oce[dWEZ03.dNHg8FW0V@
%^[UIP$WPV@*l88sZ&C46)`4'!h]Vk<cZQiMB:c9cK%"jb#'gJU*M2fWH-?ZnqTgZ3k#[l-c6k@*AclAa?hc$FcLZqQ5:hF6[+;ln
%?9ZOh5(=?](sARX4?NG8TGMV8_eI$%&*;u^23g4PPaT75F*[YpGLpg.&Yn>\X%f/t^CXt[T0"?rdd:&c`m'D9^[hg^NU9nObQIjZ
%om:&S[m&[Eq"O*hh^tF+pgIV0d`o4Kq!Q]0CEL$o*c1eicWAtAIX/QumdoGk`Uumu2f@KriQBa6qc@![GjH4F9WiUANIak>^%8Wm
%C*`eknt5IKRiBE:SU5A<5L#D`mN<.%Mj=:]\RT:':Yo;X!fuQ+a-O0fT9#QBl_"(Do,=TTjG)L<qtFb!Yjp65.pF)KJ%<.:C[u.R
%Bq_pG[U3A>:^geeN\B2oB;,%S?V`?TH+U\\I_L'cFSWIm#58Ju]N'DukF^SHSQh&IcefgKq=4.Ye+aYIIAP0L`0Iuam.AH>Mh(eK
%D"X.`DBE*=>e:Gp\8^fYV>f#Me$gCU3-OT)nZiV:plMP1d]Kh"^!Zhpb]E0^D?G+?,=aDKVmC3dYKrtP_g<&!hse!Vhs:%NQHV,a
%l^oa?l8Mag[@I-p`QiD'o$=YcB6^hKT:ibj#4A36DkG"5^Y'IuQDO(r'J<03p'3g7oB001+'tJi3%'4..)OUgL!.4o]HD^8\Sco\
%:]0_YP5Ja'A\dG7(562rc.=mL4,;oRs6f23f3l?W<L3.CX([fcQ2&[lnqVQDrp2:#4B?pf]kDgYBD9C$CUfs3'od1u13+<R4ChF0
%-FmsfGKQhsHY4?%f]hsY%k#NGLY1uCqDdebTD%T[m_=>OlG9LTYK3;`1-)*_rDVR)*<06:fTl+G5CS+Uot-CuYPi]gprE2gadYu@
%8u7o21-PURb6[!B=H>Q:8)^!8mSQS8@ZN$(j^6#TrS#5S>7[mlI!+ioYGN\.>MXfjY?#`qgWtp:HTcX/kgWsap3M#I%.4Y-@(grt
%c><OOERVXlgfu<.HJ7r0o(#q-I_=@!DtWZ)*:L\XpZlX8X)aiU*nL%G,fb@cs1(C1s7D(rn*I^R<N[<PJ&L$XgAe&I,OUR"9AauD
%`8,EAko9)PbfTj#(&b*nSb;gM_(Zlj1VLZd]EU<_eT:Jg^(TI.I9;aJm,pma$+BB^j\RtR_N!Rtig3lt_4OBL*IN-XpB19Wb',"I
%h/D+F1Z#]a:Yr+\mbs,:Dg6<S]DKJBCXX<r2kNtQFAR7T]&3RE65.kRC%5JUI^31'HT;+^/f2_"FTXb>_UsbWV\jdPh(!feTF0p6
%UH@r^ErQa,&t"#"l\Kk!-]7";i"^ipIOFP-kG)3=(YUtVg=gmn6p:@j*)Tas<"E;A(6Pr4kCT^Jmcctum2Tg+ZJ(uXX],<\]Yfmb
%$pBKcP*-pMIYauLYcq*Qoq_CGd4_J)r8G9?]Q7kt06r^1lIBC;EjNB=@_.I6hd'SPp_[7t_FacA%lK@&S?'tt@f)T`;)-q/n'K#q
%;nVQj?;p4bl'=EXG,HBup2_8+bM[^(I>n&kjKc$qF5tFAQhm_+F\1WD>:\o\iB]W:XInRq+"H2,5VZU.*CQs\mSbDb3Xfr%hbka:
%C&)UGEhHN3b.k2RmWAGHW01)IPPgD?Eqh9!W6emK-2/&7gSs8AA*dF!jM57o.9Df4Z@+K3WN64=S"(NNH7c87(Z51EMg8<kP\!nj
%AI[-gfZ8RB"Fj_O#KR'>+43)AkKQiE\V`8T5O`DK]DOrqe&=+FVAn+?DacD[Q$pDOG8!W-ZLja>l'n+Yo:KY3IokJ%HVJP6!-dl-
%%\DJ+e_-=S1ZZ6G_rkZHb8jNJ0%-p^2ZA)FknQb9D,Q>=S@JB]3aYt<-Zg4gp1pbt?ba)XlG>.#K0T=lq1TmtQ#=%to;h=dGurA0
%dS`C!DghWU0/Ns\05nQ'qq^>PJ%%To[#=S6VYh802iW`4QP[7Fb)ZPdjQ466[U!]N(+8PdQCb9eqY9m/hj^8<IfJiTa8[c`"mGKY
%ahsTL(=+U2gZPF#%u\VB1sPX?])67Gr(kY^#bNb,MjMTd4oX>m0+4\l^or72s4f('f;ssC$u;gms3pY!D\a64=_[ilo&HY=O+.N/
%^Pg"hXi72f1lJQ1UO*BdfWE+IoS_Omej>kdi`hK:CZCNQ`Q?!D1i#*1j";0545$=BahiNC:-GEC'!:"A$uP7)cXF*I`jIFY4hS1>
%f2=\@_^6ETrs7F;'YCj\5\tLs5\So*aH0nMaC]_!=UVJ@L.r3uqB>\_S$g!!\F6;s!-g_N7#6i.a_PaWL)N^#@g^U;5]TQjA09N-
%,=Cl(k[(O.I*&OPgm;LK0[c07HU3B06LQZ65rKaK"bSfGCJAPjpLHSDe7\&0'_\X?*5goj@5?F$)XBb9\b3,3T)$g(Kcc%-Y79NJ
%A0&7u61F^1=pQi$2RHnpDaGpE=1TIYNsoeQk8":L(_!j4)(4[QIOHEDUl_PHdgg/%MHk.<Lc)H[QuX2F;mES$d(<*4&UZh97$rpS
%ij!s7mh5+j.\EdQ358;0AlPJ]d*]@ha$*[jY.V2W1\Xcqm1?%L@ZDcV,FT<WBR7u3"UTTn/#pDJ#TfHX(39(U=YF8@33mcsaJ,%1
%Fk^EsO^V>o,0C0ig]B%V/m]t7,HR^E?a2,R/sh(#oiPCU"0ci4@b6k_FEt!L?&o7EfY!OI4Q=3sem]\g;7cgdXKZm^#jGh0ch1j_
%h-^LNf,93^X7EBMLa6LZC^<Ru)K#Z7St9Gn8BfNF"JLo50gKR7Yin.252?beTqSqYZ@KA5"R]3L8/d5KVArF`oP<Q0N/JWGW`]$/
%Yo(Jud1L:F6]]>6AHenS,<'cgqf_cX%=XC@5'BRTkkd@1#73t4BL@E1D=rHs;Yl*0(h*(-TP8+16"Io*[:LsX9*.6J7#\DfJp]m9
%!tA\*C3d_<2un`pZ&/Aq@>/'XQj2C(A/W4mZHe$I6/^u5H<s:lQ&HB\fT1qKQ_#"\bubP>^o")7("*8JD1sh_J\Wj/Og0;GNeSV,
%`k_L82Y\/JA-jiiJ[+HdNtd^7FM-'V<5*/f?niR!jESU;X7T*p;V"LM3;\8L/bU4PTu_8YBtQm9@IB+8(&ISTc%DCtXQ]cJ3p(*H
%)&[gRgq-$0foFd^e-,t9&0T'=/]l-jqc%g2\9[:(#%dYhaNa4^$n,%,Jea[+0G+7o6D:2WOWdGr-W=o/Os+8,+n/g&Bm5:TN3]+r
%nsM`s_GnN%gWF^R2H^#jM*pp;3gpjWU[eeTo%qdTdjEI)V!)>)+Rn?)"B:_ek>E+nSkDpMeVmEtOha43KutCh%OpM5/ojaA)RO/N
%D%R77Enbg%rFLPa@KLjW%r8fu*UCU-Emn%sUl6SB[SErTp>a5bU[Tj+2hVs%?%rs\\Y=uTRBU:R7VStD48a1p)I!G7Os:nR"pJ2_
%gC>\o9pZMW(<VD"`Z,Yu>h>W:.cNT%_O)4L*>Caj^42sWO(;HV]'0Pg>_.NIXb:SjYU9@\?"R)\N/=N,?N@LdOe-(NL#"Y223NN_
%R4AOnSMioSD:_ku5[ZjG[\LgoO$/!M2"JdB4Ku)C1]T=>7g!EB(OP&".uW`f5C`V.h<W&AbEjl!((9Kcqp-pgBk7;[;%kuo'<jU2
%To>h(RSY:$a;?P_$"=c10uQ>[!Kp"QUr'UF(O.3d/M7RO$@d08e8li?M'mGH[K3?1mu%XS'h'1U1#_RfQI+*,@q:0^+&E:)B6r8f
%W)jNeLrd3W5U5W01WE9>GqPel9r(Va(L,i?n]:eqHPhWb)#.rXOX<L_.^'<7&El7i:UjGZdDqiud.SS'$isYG_.@K9:tA=U2.IJB
%.T-Qe@GU:^&P'gtM%SsPN3j&!DUguWLu=s&17>p>IGa`l(rD0mgo$n/9PUX:h<9Z"O;>;4p^DT*)R>397RS#.Jlk5GaZh5u#e^`k
%]01aUf[tadG@(kL8<uu^/,q'<I"VHe>oNJ;g3W;:XUEp9$Y<J;jDXV?@qC#QMVS\3e"Cq66Ri%%*b^;E+\_nM45UCTWQ1%=ZAEr)
%7hrFdF_!cOrQ?Zu,:4Q)Pg14K",\BE4UWqFI0J#6[$=C`X<ZA@*5X89Ylbk/4WS!/M&TU64_gi$Q":H2'7_cs\iesGOF$k2qMm^S
%+p`!00XrtM^Pft#\C8m<6hnpU%:_OU2=slAOF]!W@ON$N/P&aDQiJ7;LBn7Q&.C!u.Tk0/]l+(G+;V\:"MMti=@?`@Jh\[nj4a3o
%P,+d79BTB"m+`)2,bZVLrTIrnOO1p^19IV[gnhD[6]<@HnJJ_u<p#-tYs8Db!'>.9aT>=M'+*?76hIJf*P.R2^B'"&FCnJSdY'g,
%&@hH;Ee6Mo8A(5YpC4Bo/\"H0TZ9\;kc.`U3OOT9&0'@dqBsHYlr*;!G6eZZVW1lln/HWu[q.8n;n!YIXB0XRa/XHLgNLu(Wot$8
%0nCkVOEE\2WJ0o.-.U?iiU];ipT;JnPj0Jq$H[J$G!I=qVe-'2Q=:so/@i8jO_*anJ=b[,4+uK]cS8HOK;-&s]F?C."`teNe/nd!
%/N3f%2K@sB`S%`Kacqh$,&mn'DIWo,W"ElbiN3Ur<,=oWhdnn9qmGuQFr'"2A-fpR7].*<A`Bu5<h8mn)a9'!)Zq>3=##,,;,sPp
%g%&U=Hr#VZ@OoIYg@gno?@19A:=DLGc'W%..HY!j2c,khdfp0>JD^S?.XFN.(3.dcdJ!oKaJ!L9'0d5IbE.UhdjJ0l`di+[(m9Cb
%F4pEjkp(O4!XaC;UaF6*N-3XdG)_%rNh))D#ZX)/![tI6CuE+Pf%M#Hi[Pb(1HGpUo,rWBi=I?m`e)+N3_Bj]9aMO*_&sXF.uTAF
%fXnq667R^\Ka_gV>D1$d[]p8Tp"=YhD*nQ$S$.iMZtD`qnO-@o3Un=2n*H="BU0G[7e4U=@_ZC8M0<1?!dOJfM"/',*Gkq".[QD:
%U9DN\?la-0<n)+)PpDEmf,LIZj*4o_niI8eo<r<X)H)@q>OKKtKk4('[VH<G%+f]4UWqYfaKo!.Z@'6t*I,Ho_O;kM935t7`k-Jm
%bm0@16VAVpp:-&bWlL!!.!$4jVsi\G#Bn:BTTdgmZU80d^2\Mg2I\E7XadVi9<E<`KBq8:p^cYJYt/IXoMm/]8;*\s&!5;F:">t2
%IMbV.:o#Z6K!DZ>[2M-V\k>g^=It83NOnb?@o/-)[9[99S$Gu#UXqd=dLIGMZmgCMVHD<EE5jRArlHSf&uCRTPW"Eh=LUF/H(+nh
%Zq!)7!K@3<(CA0U7o<?8>Z^WX!S14YUkZ6o,utTu4o=-$V!P.%X`>"-%=)g;$fmC7-HF,X_]25g`[&gk>@t`_nekCP/W5)M9Y$-b
%lmdmQCT1qO1jA@!*5^ii_ocTnp\;2;?tmHg/V>JJ15SCUAUlW$\53>).Ko*ncF8[YgkET[*1-j'll5L+,]HGnFMJ:<Odp1F-l!RL
%o!o$M1l->8?Iq8G.((PJU`J-)(dKkoe-Et\L^h*QD&31G`$"FKYbXX%]>+E9@NO>`0Jo'YgdVGF2"F>f/m.e3?4Gk;D_+kiaN`aL
%Tekn^(+P8J7e!jpnSTWl&NcUC]LYtZIoc2iD;@5VO^Wf'*,dtUO]):r!T?Y.W8SH0X<4blTW*J'do<G13\A20%5)IPnE]!mL\5r.
%ZU[6]SZm[h:Y("o).s6AEs*rg(9o.]@OgO.+s8m'V!=$Gkn/"pD([fLV9_-#Z%O/;5e<)3+BT4)lCu9E]SY[n=jEeXiWk,o(f;<)
%NcM?LqIQ?jC7EV[.Zu!aUu(bFNqj)$BTIf/'J#(s,uc)tMl<C;k@LP(mp/0S:MG]5MKDPX>(Oc^LaR4?`'(u@KBEpNPH[=jjfs>o
%#*9VFm=Cf'5g>Aq"dgb0O;456:shHnNPW=:+/U]@@oAG/<T[rWT59)[6[*%jWX)UI6OemeBZ%!!&P+^:2W%*^Zu*9*-aaJ/JZofD
%G_#r]PfQQ2&Xe["RZ>ZJ'uQfa#c&tA_IK3iOD'=jOG8fUgG1iEPlU,j9BVJJ:I&;Y#J7Jhlpp35;8h0j/<3#*GSENQf6W4.KqXKD
%%"OGuXTNEC=gH-LP!c]l;\io-Nh#X<g0,6b6$_>l?H7fmUfl)R-"FTF[N/DGQmjRUH8gFNPMO7hN8WBOQb7GPn5Dh)eN&.2.nD:O
%mcVLoSQ(pb2>^Dp*@2oX#<Dn*>ojU9BR5]C14G0]TFcVsd$.uE)O,D_Le`d=3]a-h=t?1;1WmhE9TBFh0hVS5^]cu1ESiYg7f^I.
%='Q)e9kk)t*BdI&dIuLH/,q"Ukt$GB0THB?%,%/59oA7g"%:b@j5gRQCp,OqXs$sofYJuUWC*4J0LS_jXUmUjXIh")EEBUf@`-)'
%6.bi:L+ptqMW)!'WNi<$f)m.4hn&IdA*=h;a-ddB"m[HGF/AqR;M]k;#N]<fPk$KS1Zf62QY6#-i'2MmaG8GRE*,bJbJ[nE*!uFQ
%A4s02bn&)-?jPtt(PG8L+rj<\X.E!Zlj;])%,ppmob?Eq`Lqs%"@2/Z><$Jc+*A;#$+#!!>6bnG7[q'k9a&iS*VXO.CK"\qW/=*T
%f#kM7A!a2=2C4CfP,W=qZNra-.kU:Om^<:T$d74Qhj2e)i"N?E!GH1]'Q/LiFp^9?/<E5J;IedbC;F,)CE\dd"p3c'%WhtB2CX.d
%ST06Y:gH0B8ome&4!/eSLOY$9(oT+)+;D'IUbB^lic"1smtf0@TnsKM#>uQSTEk-IiZV8_coE)i#Ict=M*b+dY9T[FC9+M9m(&n;
%h2Ss3bfsd&;nbN:D+?=E*2WD<?FJ=TeJP_c`@fe9hDto^&1B[s#+Hea_EZh?(th;0BeWlA=qro5D#$*<aR&N9!X^b1@gNol*9S_3
%.;^0BK.1CGI;VYP(]jl0cF;fD^oDp%b9k74gmBC=/dAQ67>j_liF:a',_[QNFh-fH",$_Q@6)g;9B=?O$L8gl#eCp&C'*L=&&Ei/
%gG&o9P@:7uf2j.5]sjb<1l?I;Z%]\@T[drd*0=#oS&[49DW3@39'A[`iu'OI?r--npS$q]9eqCbK>&>A-6DJ$%].%X8k7_kg-W[a
%(*7)(*-5ZTN<o16e$5$Nea[@31)Lu_FZoC\7#gaWa3c"4B[M-ZcJP\C1.33cXjB2Jf>3;dKnu:1fRQ"DP>j7F=2WnZI".g!*#iLP
%,YaT.8nY\bN?*Foo'Mk#:eI-t.239UJ$E%:'GVH4"J"aqr[dP8<*]\gFPB*u`K;0NT$cj=U2n5e1+;bq]rK(0N(n8O'LO/`c5P[m
%EJ^F(Y=LHQ8?p&V#=B=4Tm*_<6gn\ZK0U8/d>L>e"PL_5OXna]%3-T"4lP@ZcDS=Y!>k4E%Wf!%Zc3<m5`lQgHDd5p?it`F4(c)/
%'M==Om/"lS:e\UI`+,m^@6bqV(YH3J1PN:1he'Y(1O`*<=5pFgHa7`S<8pOO-b]_I%<>?V*<epTW?SQ#jC[$U"JK6m4OFdX_Vp\Q
%W1V9gG.r0Ui#!`N/^geSUmYV`hEXOV0/!/>?/mkOqdd-sqM#&CW`FA]D+i;%SNb%i:O;YVNStMW^4dS>Qj-J&qLG^R[D:\Ja`,G7
%4%:pAH0OOp8jLJWF.5STPEkN=F^P^-DNcdB;#iR;)Ffb(b<0[tbpO>6#Qdl#63mb["4RR9TVN+Uo,&L0_';>[KnF?"(bZrr`],T^
%c@lpR!6.>d9]I7L!epI":eW*.R"?GaNZeWW25)2Z3K6/HSrVpZ=rtd@"q7nK_=/E`N//Cgk[ZuXY7)sa[E;tqbndLE30ITdR%#7t
%_!Nh8opon;7'32hoPJ^9`Zqd,%-pKaT@=\^,.ZQu*S_JKWQ+4j7PNf'$HmhLdt@WO>$[2O`rcO%.mQIuK3?$8g:>Q/_8(uC+;e?h
%+W/;=doK6Z`$B6P(pYV8+J;Fu:+o7FX2D_-fM5k.dto^/)WT26RRc0KA3c\R7'6P;EYX4D3tB]h+Nb+bH5-Y(UE^L)6W[eumuU7c
%rK$.eYZ?ohUV"q#R%i)Q'EhK@24-E)7OWLY&AduOn;e!&m,a=hpM7b'/nUL;@XtCf,Jk/*RIXJI@KiM/"&Df#!Va2H*fC"C(eGH]
%,Sa"-3q4$i@FARYZ,CuBWf,!G[XCTl^@6*aag]Eiku($._S'o8Vdi,K**isd\eKf12N7Z6d</?ekgIMZ1fdR)85,#p$@4Z=%AQe>
%!2GE\DK#7d99IYJp(@[ng^['dF$*>^-+4EkB\S/3)"$*%.\[pY`,Z)$GJS"E"XmCd/&Vag1j]P_'80hF`\t@sK;>9YR..&\BV/#>
%0?_8K9\bJoM=r8u7M)K[3pJ\s_S'gM3IeqM%@fS4q1u6_(rD3#NpR-o9"ABIetp^L$^b'OKYf1Rb3_aK(+1T%eD`cjF/!tSS>_=E
%'=Ar+O4h'6iIDhu=hGDj(g6ECX&.Ab(+1n!;'AQFk=LOi<$U#FVZ@'X>#r]]_t8!p*f+%$1@(ID(Y'bi3:N:`+s%s^.NjB8Tjg-6
%Ng1-_?u9FM/,<!Hd.4jNDhKn%XH8Vd>hUZh9qaaM"e6+R0_:tV-9fp&)RH1S$R=kf6YPEVa:"8:Q0EJ&oe'32bhqV=G+fg"0%>J\
%rfO`fB=Lej8)Oq@TQE@s_o.B=@1F.%U@(mJPW;Sa-E(Xl'@jTsS>_1pUccXL;a7?(T\>A4=U)0&71ffe\s@C`T-:NAZIWjZL1oj=
%XoXa4MRBS)`&au,CLJ:dUi/c<D1t5@l$h@o6STliJ)aQ3mT/b^6\%VWq/&bJ[r!!0gK"<fH,tG\4_o,ICP?ZKrhQoUh"Ue.8D>#V
%,DuV`/:tELb@@oc5i5l-$r@mogU:L_Ts%0gQk#uTfoo#GmG/qkDgD3$^(oS]Gb@oq!sh'nL6pTq%)V%BR3iFCZrR`''>7bs&7uH!
%N\Ir-(a_XFXMPh1V\pA]P1Ymu`#GPXUTI7MdK35pWf"19dU))??YmYJUTGI+AWg&.Lmb)s3>3XQk1!IeBn=>N'>$)OkCf0%%atMh
%QPsIZWQ/]@f=mLho_ld"2GW9W_osn/(n%6)_:TGX9acPu-f-[31i5h!1=HrAJ:&Rg-6P$<!MlfcAQgdp+KAHj!R*=lLfgO/\LC,j
%<K/:bas2L,c3LW9it5EXL7)W<0sXKTGHjhY$tbp]=H./3F-`e6@[S"M*/A38QMtkMH.*JaM41"l9jt,JE9*W2HWH'G2"cZlVM:LQ
%l7k%gTm&]dTd;e,3,-Kp*4Fu>p*.P8\[>KsOb$IQMI6tqI'G7L'e@4*DA*8sfp294;G,j8A6EY-I8jFI+u:q7>^J6EP3NJ9;/JBg
%LT\>Fm&"Ki3_'7rY-XJ-Fc`,FV6]rPd2gZH3LRl!3<mm=Jj>_l(3>@Pk%TXraY9=8`*mnf$YPQtGKM^CIG3go=uVC>$sdToPA)uY
%ct:=:gR+ggO+/[3*JOclTs<YQ2`_TfN$@KT<*17CfV;8B;G\>_V!Q5U7nYRKU&nZSVEBiXn;E*`JrCO:VL,731iQ8G:5kXk(`cX\
%mijr3$mn/SX<p+FF/k=1U'a2*hVddDM@rS-DM.onG(_q_-p_mJhh!S[DG8nO@#/MaMYXON'O'sKa9"4D]8L?\"@S7r'#[pQM!U7Y
%fcKB4rZKq,IP`'sD3?eVpUM#K<iIbZ%P'rC,hs/OS4o&gF@o((LE"[eD/I.W."2R4C>cQ2.)@ksS0#j6E[r\,!*k_U_c,XC6:ESC
%K_\=r%#3Q?YnghU+[eFoMe.4"U"IYIZ7ij6O_$_:8IC3?dDdG^W5aeXSH(s07J;p#fGm;423`atI<@u3%B7?N$Ossc)&$X'^S.b?
%`rR:r`:8(i817KUDeL57:Gt+&mbAt\oOJ6;BH33"Hj>e"h2VT:_R\^,(nfD);TEiKh]4p,'\O@E:JiDR)49B]FXhho6a/!1+1E.\
%VhnL^74Z_e6hE,KS1(#;Ddp(^9aGN;jl!BoU@[tIPb&"d3[MrGG-mcO,2N"9?odYOaR45in.3=U_[@((/^BjA^_/eDP[FUu!m4X_
%l;eU+mlJ>LAUPMG$s^nf6UU/G11cA$Qom8i;VdqaL(&@2fb?!5jK4:OK&f"ZX;J:.8$M%,OiB+KL0;``a!bQ!+N'9hMMWO<njp/W
%I*>L6S=/DHQ3nDsS5(0MS5Z@09-04W-,lATBpaQ)60DP>FCuSFpd-9;$&4mN+Ci@<a9AhB$WDpD?#>839q@=o(jcU-2I4Q=Mc_aY
%,*ipA0-0]A`2W3*IoYU`&[Lm&[-0lC$kmK[+@lUhiGDU2Znt*dYMf)(%,$rAO"&KFmt-ja-S/r1@!'o#5tf"I)"k#i82`!i4i0`O
%muOj/B[i3icbbu[k[5nbRJ*=),#Jdo,B2]P,@(ia_#u1$+:PR[iA"LI,6[H.Nn"0(%!T0'$:`u"[N7mLNG8"q%Vm9nNTl&aLb&hN
%gk%4R('O9dEHE6R#T1E4[+0bYTk<imdu"-,>3C;b8l<>I`\iVSALKAEALcnqE/6+PLZsCEbSJ.<Ffk"W9n-,H&0n+1q$!IZ/dMaJ
%NkmB)ABLu+#cQS0G.pu;dL`u4o_Z6(@6@s+@[&\[>7cY70cI)?;kA+tJB9tL=?i@9/I7o>>7f8*O9H4MMS8T#L'@^`.O>3?b!QsR
%&BYGm#FPZncShld/Ak&=@<Ed\*-VM4-?TFmCt^iPRNN:u2T_PC<49Rk$S^EE_%BLFKUKU$@;Il1mphR[Pc%%U>S\7N)[AE>!WijI
%C$Z7s+@I*PJcQK0R3E>L[78Nh[CP3LcL@4N=A"9BY'8IND$UPdqN3Nk6&`s'fn4hg**hY:_')W^N:B`RCQ'X:^$DJlW?jBs>V+3S
%"6Im/>Zdkkg567C0(GW?W.<np_9DXZ@H_%(cGe/9+db9%6T&onVqLoi6-EA6mg`dhSRJ*#'pAqqk;ML;C*=&FBJd+Lk6#CbV7Md1
%@9+3e@2^I_R"/!YNjqX^`8#G'$2[U%3_2;UWYrT:d^TBQ(_n@0gHd)o&lON&,,7pL!MjR\ap1("7nUKq:JN$uX;/T-Zbk?5Y:q4b
%p)^M4bJI+FFs$8e-;;d"%nDuf%7)(1AsC`g.%kdjl[5Hq8c*O]Bn.443_YSg*QCU:d!8id=Mb?B.%"kn!D>()cKto/F!k,];\/^5
%TVG0Uc0(D^F7B)cbCQr,#L$Zre"Sq4F;Q*(![U?1`"Da:Rtj$:OYc6X8m<`7o<G,ZCc3?01WjH74$_?$AWaH,PZkQtk.o-4\s!.<
%(Q3`UaPRZoQEW_<E32rP"d)X/\S)G'<CZBiLUC$agL2(jKY<G;f=l>8Sf^4[CHU45Z$0=b3N0n"#ePOfrS(RrQu2(/UFdK76S:aZ
%RbPdB=P]PY1`a7KBnBG2P=qOl&frNl\jp:0=%lZjG)c#ALWJ..pf0NV?&`WB<ijKl(Y:I+clq#-61pel=E;nLY(`+.khY4ePq]Zh
%\/(jP*Pu0M3/'*LJr.B5j29aD1rfa(Eh*lqi5gi0[n9Wl=L/o_c@A.\X,S.`TPL9?/@JUQD5]BSjh_?FjD0$b/g*07DOWGtp2.c&
%i@$)Ab-7U#0@gE!W$;r7?jQKq`;k=e=emG$Ub/'#5/n=Dn=.3/"[bgc.M=WA@.Ji5*N;m@NW9&Gl5[*dO/WJH(j#p$S[3f$8r/^T
%*k>IM$j$2C3$DX`3['Fp.<Ia8,3"DVap_b,q,W@aNBP^"kr-H'\*l$HX94fbZS+O^+Ucb*![MN>IB7^kkMdBQUgtQ^k6a2?d1jR*
%!WlsD<EOe2M>4r"N)!bHSjUsF^_=Y*/AZ"OP_l-\6$AbX8)YbEM#8_L>g&b2C,LXt6#)dOC=J>'7-NAjrQ0f(L`G#u:ffgM[VNju
%8ZjEN';sFoqf>dbO,B7OJ-DlfkbIJa3k]Nj:n+u3aY7aWJV\^]j,bVr1A53s7/$t9)X<57VZIgWh\kteH69m_.sOkom\*6IWbkle
%9I;c/_HMA`!lV6+30"hFpIYUJ[62H#BqYe'-b6$05aoj/)Bdq1l)U2[!;QiPB>58UY^A9&NlIkOLM0RhKlL"Z@?QiZ]ea_L\f$I,
%+.@!Oc\G8b1b$[XRZuqg:.g/qfIb$M2)*'jOH;7j8ct$hrN'!pp"RDj!WWuuE62[ABeC?6LdVPC:h6MgdXVa9++nL^8\QW$V,[dK
%V)_55dOGZR:"XeC(0tMro/JTX%4@Nj<Z2Ue]?;1j9G`=piAPkn<KbjL3fJ02VPP0m(QW%Ba^?c$Ecbo]W5`=S=qf@)k@e<C9J^=R
%R"c8mfPq-K!X1,,bsS"dAe6>d!ALtA"GV"STNB)/+"SiM`mdo_QF7./(#[3@c,GjoB'6(\bg9MW%Z]6M(r+:8#f<88Ls^#*=<f6G
%VV]+4cIfu<&^#GE`b[Y'A$ufP'BoKoo0$_rdtonHRb!<CdXZ;%$OYUf!'ZKfQl\e"(^=ifcGbiQ,;9XaNRU'5L2#.<KqXD1Oj)uf
%.(fVIB?F6((18-(Y#/DZL$58>&;b\&67@q#_mTOiFl0[&k\1@XWXoZpEgY+VYXhDN[L2=_'JQ)2j6=\Uit6;/(oC/7'o#Riei@f)
%)hCIa\<.]e-tYbL%ca36@,<(@g#3>_0nAbe[0CL,4*0il[!8OC$i\8.Me,K,<eYM>QGYOmX29s&Z1m=$_:c5QS,JH7B!>YV0p1AZ
%+j/JN'*4cj,.RnoX&mMsL`P&V^`WUdKu&X@#=\;`=8OM&^t0W0Wuti->hD#$$,W!,\i]D7_fLDip"D*>;FAGk1O+s/,WI%k1(8U(
%XN>e*a9f4:$":N";r.t&PS">R3d)TkN0HQjS.o9aicPOPr.h!._3t-V7?6EX-^?[F]0jM:Af)MBPB2)tZZ:4r!('Pk]$Wk;4c+*C
%m25Vs93&#dnHuj8*MRPlL:R980Hk2nHKmuo.8EA+%V>"f0/e#ld+g?skB]h9LLTPo%8r6c9n.utY"JJRnRJQsDY1%8>Nt4q`K9lQ
%cDTX3J]_Ml@hoWWr)Fo'ZD#T1$,\Cj<e9O)RR>[Oim@@clt.:`<t?FUcUkr-[-ia*L>MT4NM8WrkQ/>4i'o3NjTG:/40QDSL.bF&
%6WX<Oco'#e\qZ&/(G^,RF=JIETrH@?@H^\4aBAaf)444O&9EMNN'4cWM/sK9RY^<Y,k(.06`S]C1rL;rcF[kZG]t=X5??4\-=tU<
%(c=2-:DR3P,^FSCEKbD[]5mkSG(=>r0&.f#%eXuXHT!:Be;W<F)#Si7-0:on8f1r6;_cHjFVnbh!^]bFP&:mTA6KW53%6.]mXVe[
%W>/E"1_29.Y`GJM:'I_WaX*hddPnj4:9>(&:,U8_6\`]H'OBrbV@02U`QH=/E$9c8Xsc`4[e/eX+UIfaJhpgDE"j&2P#EAj3Mg:M
%40'&e"d]p&GsB)+=k$>dQ-IKF*J$;ao?!s93P$%SFFc93R(YB[GpIg/J/BF-BrnU=!NL3f!D0'\;&E\O;9U&'HAlrDk^<$]_D!I"
%'fAE%7bZBR0MEkhl2lu$g:9R=iUuj'QkUfd5<';qZ:H6+):N0TCLN'#QS/[f\a<W/Bu%q'50-"*$Y_D6;e;j.2tHo$@dLlcb&,Z@
%39"GLhZfBa:;57dhJi&\(o#]_L,i8L0]D>K_bQ0`Vo954!i`F076!R6p86+D"0>(RpM32Lk9mHTp&/t]3DB?S:jkQLFrJ[^bGg-\
%GYk_R2H\WKA!4c,D&(/[D14'(bcg+_nS9SNI]\3\:%Eb833k3Tq6aTo4Zgm,Y@X*s[1!_`(>^\eU(ogl;(>4#^D<Ud?qjg?Q./\V
%^K-;(>^HDa,_G+DrE=`I0MEX`SUM!\,ul1I2cdDR8&VN@R(9Ue7V`K[Db'9IZ=02+$g*d%/J-`A5_Io8-6&XP6c!O?HLKEW%GuFR
%DCkt7XehCh4,,I7VhQIunbUHZ;$Fp&[(3T'EQkNg(%o]I/T*/-3;^G2XX/L=CH4r@=pg*j$Z^^71*D>ejMJ9/gHaOtE#V-f<ND7c
%Ro$S[cGd?%B'-"+:""?=k15,`'Zp;>LCp=hpkj:r:ka5)YZ'MThWH'uAXr0k0Y`nsk1<MTq'T'1[gP73()099C,"Z!8eM.KIOu(d
%?ct.pCO(k,]lbs>QAr\g3ub0dGD;Mmb@BVb!X.sd;nlAuq9haqf7F-b:hM!s(45N%![P`6!#aV'[@j`Z/O.i:@'#6s[6,XN/]6?X
%K@Pg!R+>IdH:>Q>7<a$<a=_Cu\[=OhDCt6\gfcT;F)0H"*SUk^gffGh>:U.fO@5X<OA+0T\VU%+Z)QP_O<,X,+FZ)o`Gt%knqaf`
%$o>AYa2kB:aZ"ZeSlqPif4R)IZuEmH,^.Dk#n&YMNK5G<#Y1a`pmjo#T$T0L-hJ70r)rJ$(2.3^J3k3U"V`;V9<Ol1SG[3:4%',W
%%C:ROO7A19GFeC`]p+Ck4/FYX$(Z2W;rT9Jp/R8TjcGHK=d]cIQkXUF[`<WL8E[F?A-cN.j=0'+7&804I57:]ML0Q'/jR8NcDd1)
%8344?:K%X8Qs"@C#@"jF4$])=ePh``Vh1!d;tgI:>,_usbJ8/OQj00W$V8aPs!d]8(+KBTD*rp#0X]jKJpR#Wc,\*YAkUV^*J.3Z
%@%c?>h'G+MQL?'*.C1J.M,[lLY3[Kseg**c3fl05Jd7S5>VBN#\=lW3N:]O%]bBK;6>HR8>7lT(5`W`#gK_5IJU0]fVEEI'poV96
%k?N6$Xr+"Z#F"uK>M#m?MWc&q`,H!1(j_,ardGN98SN84]Fg2KqA>3!bS)GcZplecQ1I%FE><A;Q50.fP0P:?i;,J1%)*I).fV\$
%nF@FrO^Yr>MmkhrDF\93L==L]QPM/4.*1E6gq6(7NdP[%5W0kU,N*PJ\Yp>Sf944;^I@'1;Lj`t5fgOu\mV>9)5=SM<*6EWE<l4T
%P<sVO1bRk'5Xbn]TW[MD=Pno>l4GIGVpEK_oPJu*R<jB(U!+mS1T+\a/$8Xs>.>^e%7B9Ca&&N9,Y/OT8fDq]V?iZGU1e5-'_p(a
%FIOFNMVUuHWF`GhG\6GU<![5%T'@p!-M60X0m[8n,X9Y41sMrM<`psS'ksGtK\2eF=Ho"C1A^Q4$6(2I'Wr"4Bo;TEV4H*Q"[k]G
%6ZTUgNhQ&5KrM6u@bb.$`E,@48@El*HlQo!Am\O<c#KMD)=8<)G6Vum(F2Pr=U_NUM#0(?_iluD\:P.-43%BZVq(XK=:TbKJ:-^X
%rJV4+bR"RP`SfUiQlP+2F>R&DJ"8]e!B;Sl:o'&5p?;.A1!S3O!j&Q4"A"[ar*0?$#C0!*8#+#6WTOPmkp1J5"q,-VWBO,r#7gF8
%7Qjc6;SS=qju.7AG`;i(VpPcq*PDi/JcTj?5'%XY<)>P7VibEM1bqap7O(=^EA;:h/4f2D;oO2qE!<bM;;gI5\iGh(mDZs1JB8Zb
%/W,[+IT?I**EPI[2]c#%HEAEPlc(1/1c!:F7NNeP&KmJT%S2'$0MT^*"@6`\VbobDb%?o?8gtEg@qH7G29L<=PW4X20W1%B:A$J<
%GW8n1.C8jB!`>kXI;![?)<7+5BS<]J?g&DaJTnkuf16M:2Y*71N=;"&C\4H-d3UVA&I7JY.N%T=Y#V4#1\D^OFI_6%Ar>S,.dGd<
%ER*<jJ[\g)J!(b$KrQIK+G3_PXoXe,L08bT_mi0?&SD_hc0$j4;!*k1hF($=$rs@RMM^@J:2F22<][rLaGt0Y`lC#goRfBBM0Qd5
%W04>ne'LPDShLU\X)/A6%7)F4:]l_3Jsg%M@45XeiTluc4Oat1?&8[NlFJ,uSLU__;+<Wk#htUZrV6-lW8+i7.1q*/>(J1?^)*:)
%]"[,bZYNfM5tPLKN;?`\.g3,RXbb=Z8=Y9pH^]Rq@7Lms/_g/m`"Q@!*uEY<J9:bJXOUd4e9*6L9X&b2h^3Ae]VP$6@OXDLdhEjY
%nGt7c:+)H%,T_N7,[Z#%D*U6am10hSE,LZ")P[EVLM6fcKjfp7`8H1&jkBjRBkA:"KCg-gUBs873oV4AU77[f;^%[GA!lBH<#C(0
%6ot=KBO/l3;N]mT;OY?&(`sO!\r'J2^,2^L>#!u^hS-/YI3[*Vpqe1Jhf4ILml4"iG79]-*UFdW/B-C%IT)FITX"#14SZITh_9>r
%->^dcZU@V-%i90VXJhhNnh"<V(S#t&G)[aV$(n[OkE*3mct:#Hcrrk0X(!HJ+ctA4U.+%FT%*Una!02Df"2WZYq]@k)&Og[#U6Bm
%2D#k`3+krlK;5#4S29%8_TW;,Lc%jOFeM,U>`kUf%-fk2-.EY6#C-U5Ktu]%a4F1IL&0nN=Id4'ND^\l.3se#e/mqd@R$mO8:lDN
%)re+)&kZ&Pp`Lbi`nOV'8pkt)V"]E*a!(@hi&SdO"&9g_e^LUD@)@_UN'S$S=M7\Ca&_]77WBonjU[A;1Bh/@V$=JX">D&oKd7^j
%HZ!Y&CXQ8I#>sAGKs4dT_Uucd0XbqZKu=-N]=;hWJ]h];Y4D'MaE*MS93OAq0oMEG[#lbGV$7s;[0@Yk<Apq&h'@(NDC<7g,Msi3
%?L@Sd7*G-]9M5g5An.aQD0FAb:jELQ;H,kG.h+OuCN[QJg?!H&MJYg0YT_2k)6-_#F+BJnFGQEM@TmNn0I\jb]i3(=b$pj*8Sf7.
%cr@,X2S*(.ITgQ,Q4>CMqa<N#=3I;A]gO6*p=ZK0+R0M;W:'qgI2ZMIVd^F<jtMfn"/H7/@A:Vu=(*oqJ\E7(0)J+jLhBS*i'%P9
%R\J:CUPrT@;?N_k>=^bHX[5!>bqQ'@)^ai4oNl+C7*IThib\\\P!>q8+NDg*mQkqJ(dSmU";T.4e/Ur_A[1^f=Nlm7l8.OqVJ")T
%;JW*D6D^H3G("#b.-/LER$+;6\oIlaPQ[R1O:'Y9g1_5=OtVq!5kNX"r\gJVj@gNuOV%Zn[\Gna_mbE02K<,h=B`h73&$]cX<'kH
%l.dLmiHX(5K`_I<Eotps0=DLt_pMl]W@322@`ACX=/34h`Bd&X8cW80-5WB\bc0H(4DBCieOW(0G8+;%H?l'^#Kj03hPs0EP6)Yq
%VNA-`'G?F$V*?V9B&sQkC603r#NsBZM\o_(X`>L]EO>?ZClNse8a^_p;\4^u9s"c?RTb5<m%0H]!^u?lED<S+\>5F(;(]TK@W[.)
%Tu][1.YN^p)<U`^0m8[(&q'<tN^;Y7\Yp:(^):3[![+6X!724W1j-De>\A]H_ck/n(:m9\U/eT@VH(#4PL+[CIIPX3Zenc,lCmAr
%MH3a#@BrfB:jq"3eT-l%U0<)TH8>u;C>A>(3(Al.ltk-*Kbi4U-PI<:_P15\4'+pbQ-N+HPWTe]81AF&P>N:DVPckjB$$\bF_IZ?
%U]CN3"3rug-4&]cphciMFRtnO63Bo5H43TBW@KK"K.88pRWPh2TWl^>D7L+\%fRrD,_muQ0lh45S5Eg[*ep'opD=3?8:BK^*0S9a
%rItXK+g-O824>XUhpEL(P!,Uh4%+b3@6Dtp_od'j\Fg<0d)s0MQF[5l;2gY\ckkd183&SC2;0pgC%PbEUcXM5Qgo0;(gc`gT=l&e
%36cB;_0NmG%lqdc7da-:-UVD&RRA$S#\=]kincA$2<]F(?"Jan2F_s6_TWGoJ.5]@"6KmR,/1j;`$D$Yl2=&3\&<`5eam4%*)epe
%K*i'okcbn]dR:>t&l]-uQ=e-R1PXJn+Z)jtYaso1%4\G5g759dr=h9opCVarFcq,?`AFNt_D(loOW7W3/0K>eA%$b%36oa"$5!qe
%*\g&lRKB@h2up$Q;P[>sn^.OG'ip-8+UiEjKQQS99k1.H=-,2`b./!Zc;dPJ$7cMqPdG@@#PWZV.<OTl9I#pY'KV0t&-*#BFs2Rd
%592I\80P]Gm[E:"66'_/@>9;sh9(Ec<X=Hp3_VmJ.h#PqHV`1<SR._o?=QV?<\BXk6:(n,p!?[T$KG)P_^(L$6J=p"^<08OSBPjh
%0mt3:K.]fZ<fde*jjFFU,QoB9if^!o5fC`/(:=8V.;`UOfJN$,,hddWb!%l-"1%AW8Ck>(aPdPXCsh<_LA-UGbmnBR07G5n4JWPj
%dcFSf2PlTNJ=0'G>:[u!BIJd8Ip3PZ6(1/S&>p)VGN4jTU+=+H4.e,r"J@>@>J[unOi)>+m*$$c[];)S+`n9n&45Pik$e_>@^D#l
%$>%^D!)4VY(oIoH18N;XHJG=?o`GW&l!2_1)4OP1*Fb6'(r[Co_qG-k;@$ck;XV2aH];MD;Q!*fp)(_9&2sl*!Js1%mkm#Ig$ONN
%h%&+)K?ncBA8$Bh2tYXaHeL!A&[jp]%ZiBUjDP9jii/;DD`gKu*"s:i/I"*9[kgMKVcRGCMP9Y9)WRXJj:sn?a<k>_hJ8('en[#`
%,QU,!W_OW&PIWO_b;*q3>#D86$"Tur:*3t:mkq7%:e=pLapuloK+]-O'C%iuQs+[*WMG%QQrs0[+Q''Zj=>><P]<OSPnN0s5Vt,4
%h#iCBM=ml&$n7Rn(lI7-=_QZLKH[^2W.Zt(!Vm)JDP/&5NRBsKU(:=:GTh[qX@B)l8gui*JD?'Ir;f<L6:A'$_fZiO5`?d!fnSZ0
%<ZV@SoMT948nGpA?cRVpZMMV(L=o2c91M9,6n,-fc`Xbp8$6g^njP&=)/+d--;lB18d!*6%B,MX*,<;$0Vd,<IANOCDegXVVtA3@
%+C$<_KC/aZ1EX$`!fCr080#-S<rclr8*&mWYbI>g,Hb=5dA`<%0'?.k#"E87FAZT!C)4X$0^Iou7^QSp/4V1OFf?T^>+*A=T<#"f
%^Yj.)L5s>/43dj'1(M0G@K?$));=V3'd`%(Mg40A>%3IV$:`J5LR.AC#/]nq+t`Vp*9+J,0X,&6>lTGqrN\hY&fW5lEl4^Z`QRrj
%Yu^<7`+.X\RSq%oJQ4d4<QcS^Kua^-g^:nC3O]4eG!dg>hdO*W)T6(^fQl*F@ji@L'@/AZY#9(X1(s1n;q<XOJ5VW4%afaKO<lH/
%rSU)C&.sPLBc)>ROb4!e([!nAW$5R/+skFbAHg!BO;k)fUrJ@?$j3s)F[-&6DFhZ"8sp`bZHKnT<_<!0%c_bhK^h,p_tX\)0Ri4j
%YH0&ShtY17!$/#Hd`JG-V,OgII)iQ;q1Wu5+9L/UBfNZ3U/0lXV[/(J=-suu)CBdFZB4FUZV-2l>VA#VC'Iam*/BPC+_P`pVMT_W
%!Q&QZSF9E#SAF;@c/>TU4A9e/EupVdK4])5Z"aIZ@%CQ2`)$*f,IG`*OKCno:#GLQcUN94),J^R.4?*lGYdi^S?CFP1MjS8*R\A<
%LN<7GFP(CU]0q?q&F#S9Z0J%ZHDeUE0V&CU;]L0HUk2jr`k=H%1g%_eK?c0=NHB(0SYd+LDep3&XUf+PF9Z0^^;n1C=%mIZ#_&s0
%bDQpD0):R6arpb7BX2PV`'c6Z9k`l\RXhnV7DFJZG,`;Q=s+sTfM<YXT;S=1R\A5GFL?=+iHmu:I?05umkHTmU%b('^[TG!jo-qg
%q"*\TO4unS3@$3Wg)H#P[Y$niMc@+G<WcDd(Q2W$BC[!R2SW[0o]JKBJ%%AZ_4PS;E5tiEj/[_8S_T6!2SUDI*d`i_IY5T$0*o07
%`THp-W9-9?O#A[JpC.dW5A.Nb9K'+k#Fi$B!K.Fs@8eC^D6`dDZ0?Ll<>%Nr*MD-?LWK/9>Ld9lE7IaR.M5Z'XdVOK(,>n'LW\]s
%0Hm9[$]m8?!i/=<dNms#7-99=1+*G7M)qc@HG4%K5'TqhH\oY8ciJij$c4SP-4?R"<UfptWU&iB0CYQ[0f;6JARDMA&A?mEf79Vi
%CU\DAr:Uta=QhmDWtfIW:4U56;,-GRLA=g#'Ka`Vk7/+"m0P3(_hH<\CHP$V6Z,LL)5jk8#2sQ+TbubW*>!2Q;EqZ8,S%(%BuSjC
%@[N66etMB8Hjkoi24^PeX3m$e:7dIRUS6'8811#@Kir.U!ul8,o&/f,j=<a=Z,g;BDNW>>LbfqXe)b8)(_*5[HO@#o#Y%Z2W3?B5
%P0&O-?rL+$!MH-'gn>6&I"$o1K*U%>0M!c"&"s1<5Td]%O09)e9koK,m-h;^HLIjX;FF6OCJ@^rqm<RD91_W#PGNu#.<Nk))YL*^
%[29<LMnpOB)!m88Yo'/*Tlmeo@i!T@CnT@Z2=ZJqe#$r]^LLBcN-H'Mr5EdM>T^YUU#4#-:&m0h4N-rF6*)p\o8'q2];TDBA\"I+
%27A1;2B4X#)I%p#`b(TOC^JQ3HjRjC7(HpZ;&QM\nG1UbN/cU_"r\G>M_;V>`=&Bp46IY/@q]X'ZsGbfk@/S%%j7ig7o+;`YejFL
%XKY\A8ic6D$CN[61C)a'_?LZIEZTi?)^'"\Naj'*<-SFtlVm-!oNWVuoechF?ZVV"CCXj&%6>#bk_a`kOV_;7RdEq.Y0:c\ftAE#
%qFu[+]&k,9f)QtB>PN$#)b"C4NDt:'Q-CH&fDt-i1jCaM;c5?&4PC7l[o2'pQ-CIi8e.U*_%18r;2+De_hEjRj5TXPio<N:PKO>,
%QYqQ@=5U][]_LsHa"q?DQBpsQGeNe.j,:[][luFWrq,3"[ME5_Hh[O2MpGW-QG4ubrj_XcoD=SQMkBups1a)K8#5t/da^G2(B-Paq*BZ~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 25856 1553 a
 currentpoint grestore moveto
 25856 1553 a 1039 2949 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2948 w Fj(Abstract)269
3652 y Fl(W)-16 b(e)86 b(v)-11 b(alidate)85 b(the)h(results)g(of)f(lev)
-5 b(erage)85 b(based)g(sampling)g(for)h(LS-regression,)e(sho)-5
b(wn)85 b(b)-5 b(y)85 b(Ma)h(et)g(al.)f([1].)g(W)-16
b(e)269 3901 y(explore)57 b(the)g(p)5 b(ossibilit)-5
b(y)56 b(of)h(using)g(the)g(lev)-5 b(erage)56 b(based)h(sampling)f
(distribution)f(from)j(LS-regression)f(on)g(2)g(class)269
4150 y(classi\014cation,)73 b(and)h(in)-5 b(tro)5 b(duce)73
b(a)i(new)g(approac)-5 b(h)72 b(for)j(sampling)f(from)h(an)f(lev)-5
b(erage)74 b(distribution)f(\(imp)5 b(ortan)-5 b(t)269
4399 y(p)5 b(oin)-5 b(ts\).)1039 5125 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2835 w Fj(Motiv)-13 b(ation)269
5799 y Fl(The)78 b(imp)5 b(ortance)78 b(of)g(sampling)f(metho)5
b(ds)78 b(is)h(initiated)d(b)-5 b(y)77 b(v)-5 b(ery)79
b(large)e(datasets)i(where)f(it)g(is)g(not)g(feasible)f(to)269
6048 y(use)64 b(all)f(of)h(the)f(a)-5 b(v)-11 b(ailable)61
b(data.)i(This)g(is)h(illustrated)e(b)-5 b(y)63 b(the)h(rise)g(in)f
(online)f(access)i(to)g(video)e(data.)h(These)h(data)269
6297 y(con)-5 b(tain)60 b(man)-5 b(y)62 b(frames)h(that)f(are)g
(basically)f(the)h(same)g(and)f(therefore)h(redundan)-5
b(t.)1039 7010 y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 24.22093 neg 836.54453 36.45363 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2972 w Fj(Concept)269 9662 y @beginspecial 0 @llx 0 @lly
665 @urx 175 @ury 9490 @rwi @setspecial
%%BeginDocument: images/ThoughtModel.eps
%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 664.999878 174.000244
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F45) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 665 175
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 665 175
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000

14 dict begin/FontName /Helvetica def

/PaintType 0 def

/Encoding 256 array 0 1 255{1 index exch/.notdef put}for

dup 33 /L put

dup 34 /e put

dup 35 /v put

dup 36 /r put

dup 37 /a put

dup 38 /g put

dup 39 /space put

dup 40 /b put

dup 41 /s put

dup 42 /d put

dup 43 /U put

dup 44 /n put

dup 45 /i put

dup 46 /f put

dup 47 /o put

dup 48 /m put

dup 49 /t put

dup 50 /c put

dup 51 /R put

dup 52 /asterisk put

dup 53 /H put

dup 54 /h put

dup 55 /u put

dup 56 /y put

dup 57 /E put

dup 58 /S put

dup 59 /p put

dup 60 /l put

dup 61 /z put

readonly def

42/FontType resourcestatus{pop pop false}{true}ifelse

%APLsfntBegin

{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if

/FontType 42 def

/FontMatrix matrix def

/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def

/sfnts [<















B80106B3216242182B2B4EF43C4DFD3C4E10F64DED003F3C3FED3F1139390112393130005D133311363736333217161511231134272623220615112384B440335782E9532DB91E318770B6B405C2FDDC512139A3599EFD5102A37637589AD6FDC8000000000200840000013B05BD000300070036401C07E50400010006030A0917171A06010229070300190809AA216242182B2B4EF43C4DC4FD3CC44E456544E6003F3F3C3F4DED3130133311231133152384B7B7B7B7042AFBD605BDCC0000000100890000013D05BD0003002940150000030A0517171A0102290003190405AA216242182B2B4EF43C4DFD3C4E456544E6003F3F31301333112389B4B405BDFA4300000001008400000625044700260085403B0708070E060F1708170E170F2708270E270F4819560B670B0C23250A1A1D23190A02041725211D171D0D060700061B1C2503130A2817171A112914B80101B21A291DB80101400A00012E25292600192728B8010DB3216242182B2B4EF43C4DFDE410F4EDF4FD4E456544E6003F173C3F3F3C4DEDED111217390111123912393130005D13331536373633321716173E01333217161511231134262322061511231134272623220615112384B240345971804E2C243CA265D84E2ABB6B4D6A99B71A297066A7B4042F984F243D3F244656539C548EFD3702E86B508EA6FD9102BB6D324B9ECFFDC80000020084000003ED04490019001A005E4031B706C706020406140627147606740705140C021418101D05070006180B0A1A071A1A000C29091A1C012E18291900191B1CB80106B3216242182B2B4EF43C4DFDE44E10F64DED12392F003F3F3C3F3FED1139390112393130005D015D1333153E01333217161511231134272623220706070E011511230184AB4CAA68E4502CB71D307E40294A382D1BB401A7042F985E529F57A2FD5102A3623C640D1642357169FDCF0449000003003BFFD90421044E000C0018001900904033980896109916A504A808A610A916B808C808D704E50EE9140C3A08061D18070C1D120B190719191502270F1A1B092715191A1BB80109B321725D182B2B4EF44DED4E10F64DED12392F003F3FED3FED31304379402C001704260B1309260000110226010717092600050D0226010A140C260001100C26000816062601030E0626012B2B2B2B012B2B2B2B2B81005D241235342726232206151416331200111002212200351000330702E085304CBAA59696A3D6011EFCFEF7DDFEFC0112E70674010FA6965E94FCB2ABE403DAFEECFEF4FEFDFEAE012BFC010E01400500020076FE5504250449000E00220074402CA908A717022808201C110E061D15070F060E1D1C0B220E0227181A240A2E102E2129220F1923248721BD5D182B2B4EF43C4DFDE4E44E10F64DED003F3FED3F3FED113912393130437940

1C161B00051A260426001B022601051602260101190E260003170626012B2B012B2B2B2B8181005D243635342726232207061514171633013315363736333212111007062322272627112302C6A72546BABB45252546BAFE2EAF36405B7BB6FEB7749A7952303BB479D3D2805CB1BB649A7C57A603B18E49283CFEE9FEFDFEA2965F351E49FDDD00000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000020042FFD703B6044B002E002F012E408F38099805961299149815982A062824252736214621472447275624572766246726790C790D790E7623742474257426A61EA82C1303000B15052D042E13001A151B171C18152D142E280F0B6908262536250225220D0A042B1318C61C1D1307041D2E9A2B0B2F07090E100207002F212F1A1F18161827173E28260727281A310E1F27103E00272E193031B221A65D182B2B4EF44DEDF4FD394E10F64DFD3910F4FD3911123939392F111239113939003F3FEDED3FEDED111217397131304379404C012D022615251A26210E1F21000926072101032C002100052A0721011D121F21001B14182101200F22210021220E0D08270A21012625090A012D04210006290421001E111C210119161C2101002B2B2B2B103C103C2B103C103C2B012B2B2B2B2B2B2B2B2B81005D5D015D13161716333236353427262F01262726353436333217160723262726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083



0512004202390000031D004E055600AF05C700A10473009C05C700B40556006005C700AA04730052047300760400003B04730038047300480239001C0473003D0473008401C7008401C7008906AA0084047300840473003B0473007602AA00890400004202390017047300800400000B0400001504000034044500F600000034003400AC00F00128015001DA02A602EE03B8042204A4051005DA062606CE071E074C076E07EA084608BE093009760A560AA60B000B960C2C0C7C0CBE00010000001F00920009006B0007000200100010005D000007E80A1D00040001B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C00250401001F0126001E0401B61FE7312D1FE531B80201B21FC227B80401B21FC11EB80201400F1FC01D9E1FBF1D671FBE1D671FAB27B80401B21FAA29B80401B61FA91D6C1F931EB8019AB21F921DB80101B21F911DB80101B21F751DB80201B61F6D29961F6431B8019AB21F4C96B802ABB21F391DB80156400B1F3638211F351DE41F2F27B80801400B1F2D1D4C1F2A31CD1F241DB802ABB21F201EB8012540111F1C1D931F3A1D4C1F1E1D45273A1D4527BB01AA019B002A019BB2254A1FBA019B0025017AB349293896B8017BB348283125B8017A403648289629482725294C1F252946272729482756C80784075B07410732072B072807260721071B071408120810080E080C080A08080807B801ACB23F1F06BB01AB003F001F01ABB308060805B801AEB23F1F04BB01AD003F001F01ADB70804080208000814B8FFE0B40000010014B801ABB41000000100B801ABB606100000010006B801ADB300000100B801AD401F04000001000410000001001002000001000200000001000002010802004A00B0018DB806008516763F183F123E113946443E113946443E113946443E113946443E113946443E11394660443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B65422B2B4B5279B376706A66456523456023456560234560B08B766818B080622020B16A704565234520B003266062636820B003266165B070236544B06A234420B176664565234520B003266062636820B003266165B066236544

B0762344B10066455458B166406544B27640764523614459B36242725D456523456023456560234560B089766818B080622020B172424565234520B003266062636820B003266165B042236544B072234420B1625D4565234520B003266062636820B003266165B05D236544B0622344B1005D455458B15D406544B262406245236144592B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500

00>] def

/CharStrings 31 dict dup begin

/.notdef 0 def
/space 1 def
/asterisk 2 def
/E 3 def
/H 4 def
/L 5 def
/R 6 def
/S 7 def
/U 8 def
/a 9 def
/b 10 def
/c 11 def
/d 12 def
/e 13 def
/f 14 def
/g 15 def
/h 16 def
/i 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/v 27 def
/y 28 def
/z 29 def
/u10FB 30 def
 end readonly def

currentdict dup/FontName get exch definefont pop end

%APLsfntEnd

42/FontType resourcestatus{pop pop true}{false}ifelse

{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if

/FontType 1 def

/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def

/FontBBox{-1947 -985 2961 2297}def

/UniqueID 4208844 def

currentdict currentfile eexec

54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9310E889D4B294081CFBE92AFCC7FE3BB36C58496644FE561335DE14721EF6515215AC8431E22FEABF643B44607F71DA34D50107B608613AF7DA0DA6C0C7300CD8258F529CE85373203862EB8929BE05DF043187A066E93650263737642E71EF83539424E5308FED2BAF758B92A3762687B2C1062B57436DC1BFC3E3092EF8A7AEE3DC207C0B251972B16A6EE46B281E0DDCF421923188DF3033F79A8D4220C4A60E49E069682192C3C4D7D9E4825EFA81CBAA0064F3892BAC315AE73B480A79B9697EC6C6E5DA9A2B592E14F75003809007E647B508CEB0947E91F6CE2E4706211D2B7461AC02168611B6FF65F758014D2D23DD0C11583A0F5E74A591EE62AEE9810707CAECECE3F76B9B370E68465869864CCE4E1E3919E3902D96EB012A18110E2210E651BE5B50A1595CA3925D90190FD6D7FC43492DBF50C1BD873C3A0F2E575CC2CA9BC5EC609AE2A5E90E0B4FFB3045065D04BD6F69D5934CDF36A8190C3B59B529FF4DBD6366A1AF6C09074898792E17B28FD6C8398D9792C70B59E6EE877842B2EDE4CC2D45E4C84544F24BB41400B1B34A69F066A54FAFC36F34F0D1A627DB8C37F6D7D9A0FE3939BC5F4AE479FAC3D16FF2E2113AD22C3A3EDF33189202199379651A9DCC227D5725F8B90074638272AFD86ADBBCD8443BC2A077A7941B84C0D631694C0C025330679783BAD36DB2BD0548167372F4CD2A9F17BC9E42CBEA2FF131342F13CA4F36B26B60A932FA884611556FC08EE640F246A69689

0006B5DD857AC7B97E59F29A1F40D916CD6DF940F5E6FAD74B272F73ED8F4FC4C0715EC2414F26738DDAA681ECE752453587FD1B5D7A9A48439CA34E28D248AB940CD59353E4B163260CC63F1FF404800576E3BD08F69483F2F94EA530FAC6691946351804743626FB5AE95F193FCD2465412BB60163C28877EC573AD760B1846277EF6E9679014A2A7852A05B5007149FE67CDF87E3B1ADDF8FFF261A64397A34F1D0774B9969D782A966A575939F513B02EB0DD7F08F5EC20E5B8DE52F49F5FE0187472EAE517C6EAB2606DB95AA65E4BAA01739857D2FB2E439A18348B67620768532941436E1352D15D7A31EA60ED2B2FA4112D5D84A57D536366DCC12812E385C6860B84489597C77332D3D8E69EC9E40537F9643D4237BA6B0978E99F9BD18A55C225CADF323D25464C1BA5EF62BF52E854727B5C6408EC1742AF7C96CD7E92AD5AC5B0550BAC8FBB93925FB6FD07EA5E9681A5DA702EF1F917BCBEE375E1C0742D8E58810AA4701A9092C6744DD7C271EBD4FEF875C53EB8CEB26AA33DD87D3934DE980293358F2D5EE928D24C52D861E49E370533B619CC69006108CA4F61CB66872C31C078927627C76C6EFF392DA8E4F74443A43ABB10739D77EB02C65C9761CB07A2E86ED5A947C3638C0F12F20FABB5F8FB758529A55EACB84991869C7B93D1777AF9C98808556556311A3E1D73B198D8EF75EDC30459B745DDBB0C3DEAF88D89FB6BEB5EE39B52621C45FBBFD983D1873D0E933C5E2F78B69AEDD19F9043337EC11D92487ABB11BD84CAA3FA3F693D4756F01980FDA16C4DC9CB10219E955141B29A7F4478784B87F37A8BED158182038E9981A79C12C5C20517B47F226E2A49A775836AD054F69EC0C13DE767C44AF5A5A96E44A9C8EA6F257E0C4ABBE66524D985986D3665CA1DA4E986D1E4F74B02AF8684DF0466339B6D829684AFC757096B2DBD1E59A9529EC0B4B9C9913069EE1535B4E0CEBD8A92C336046592E9B85DE7CC86A677709142192CA906C507B16BFCEE15BD1AA2CE75290A80531AB9264E2F10D7C10E75A315A431FE083908268621FBCB8870D5FE7441399C0A8C90866C6982CF17F19F38C4B81E1A68A05214CF8416CBCB240CEBA3234058A423970812FE71D4E24D7ECC80054EE16B3914CC60176E1727CE068B6AD424375B17642BAA737E187562AE201477F072495EECEC14B28A57F515C2A9F695BA3B45F3F13D0712251C9D98BD7BDF96FA337AD3A028EBCE1BB09198C9AC35787545E93358A165AE46447907894DAFAA84CE27F777AABCF28725F7DA8670DAC130B9D17D2CB0AF6AC502C5514E4F929F4D636AA5E4933136ADC22AA6FF2C5A210EA146FEF2F2DCD4A91AA97EDCD6CCA7B56F8C2A645E189D4A0108BF5077BA8F3518A921B98525F0CA3467DDE9EC2C0B207A94E41A8CADEA05D9CD4C8CDAD852A

3054A1012F981BA8AED2AA7808A34DF5764FBBE659CD560E2D4DEDCA7CCFDB223404D899A326562F7C17AE4FB6808B1DDC901B21B558B0B76F7093A9EC2ACA8E43C590BD0E5D867CFD918A0951D80E96E1C2B89FA120948C95A84D3C93EAEECE8FD3D19A414B4C1194C0F07B2B4280BDEB7E8B1A94A547D30B47336953C91973AF2BC87CF17CD56EF7245E215D8E410BDFD55F10C26A13C8521E23E43EB7FD7BF673A965A3664AD853489B2DAD20F2C4A284579B345060C11D8A269F089A4936D44D93B0664DBE9E61E420C628F1D7B9A3F107E467471368B85FF0DA57C69F452BE200674038C905296BFBA1D84612068207F6AA65FAC6ECEBB5BDF9D8BAB6146757EBC1F0B5338C6C0F53064B74EC1AFF5B01BEB083089877C711003658216AEF2C0591B5132C31A8400B29DBBE65DA61635D423A05B52441C166CF9B92BBCAB7899A55925F0175B885D87A8F0EDD009DA5D483EA8A79A5D7DFBE38881B8D163A8B602C93EF51ED8B340B4563068780194D7B7F27CEF68323A6950C805EE71D47E2760DEDBCC9816A996FAF609FC39F12C728D22E0A02222678BE15A686B236FC5AE4773E76B844A25C222F188C83BAF575D63BF32BBB2E9875B3585279876EEB0260E737604B13CD0E2E09363AB690B197B79EDC8682C5F3CEFF00892FF81853907499F69B81A7C04B33ACD6743E015845FACB1DD984CA36B0D9C62B9952EA079F503ED03A9EFD6DB79360D9AF5A70F9FE564C3A58D2CB36601080F3C96085214A17C2CB4F265283E57670B0041B94F105F5E7C82DB4824A31F8F77E89ACF6486B92E42AD8977162056CDAEF577D63F008EC64098F1EC8602D71913E19CB0BE64EC2386280BD1FAA59F424D0C22F1EA12CF204CD081C30A6F04D7CCE59B335329E81E1D67A0F8D64EEDF4BCE7AFA7BEE6A74E09F19E0484B6C7653B84C7DE9A57CB84159E58FDFEDBADA2D2352472BDBD2623C1B3C55AD3CA2A2FCC97C31489F206563D3B678F7988F98189BAD7F4F21489D76A0CAC8F71C3932EE8AE7984BAC47AEADA5AFAF38C5CDAFEA6AF6B327162F20FDE6D9BF6BD53E7AE52B6D443316877392C18615C6D7358B9937AF57996297DA37F8F475D0F75F3C0CA01B26CCD40E86CAD7FC618DD82ED6A9D4602F80E76E1437E367BDEFB191FF7947ADF2E61E27ADF0C157CFF8AC016E20D0C38FB2859727384B920A750CC61B7F27B1EADAAC17A782DE484154642C0A91034EFA0EEEB8A31BB20C390B2BB6E01BF9297FAB0A11285B6EA46F4ECCA4953DA1FBC16CC4D07AD0E036F09369CA6F75C4BC432531B5BA984C3F181B0FFDC97B771439C1C4DAD6F2304A87339F2BB549A9F58926CDBE8F3561EDB9A8EF477DD399C9AA57DDEFB97F947AE1F0943F01B2E3DAB8878D7E8C1518EFE5ECA268B27F1EEAC3CBEBD4AD3484F0D45D3C541D3264FD3ED8

075F27FF45FCE24B87A7D1B3794E6A4C95C8E498696417B5F867FF11644D0F362101C76643B2F63FF1A8A6A127889CA4A2C16EF3A289ACBC14B97E52A85184B1068E5966AB5507ADF3FAB2F48779A9222834D89FCCA008843D4BE3E469A1F33EC6F3A34A0526F674F0B1BFDD0F2E769AA9951EEF6A415066F420B78F103422D078D96EE982BBD0D06A294E4BF351CA06ED4E4F10B6A05F42450528CE31FA612D61B4BCC021D9999FDFB95EFEDF0B6DF5C78F0A973EFB4B18DC3AC2A6C77E44021E5CC4F5563C69342A2BF72B95ECCF6AEC81C8B287559D3EB0C9C0E2032612097E4DB6538E3E426FD59FDDECE770CA6B29AF82983E7F4BA12DA167F10951EB3ABA6D85D49CCD5C75A6959FBE193B68C4065385AB87906355A3ED2FD3A0EA5EC3918318E64C2F6EF28158447233256252204B4BDED6B26FC1ABA654EF16C9BCF676B77342F9387DEDD50A90500B19999C41802F23465ACC9904B44AE203437FA477B71C7A7DEA6DB48C4301D9EA86AF6265165EC2195EF95EDF11F58CC9EF85703EA234429546746AC01E3C0F319F11EDB11E4B7CF6FC8F8E16127B6168CE5C5685CE004644DA06F6468FFB567FFFEF4A2CF459155D3EACC75A0E69849B30D659C260B8C733E5038F2B9DE6833C67DEE415ACF9C6A6CCCC1D6B04CB2A5716D5A721442E21DC9EBBBAE6D65B3869EE08480732B826717AC5BFA3C5CF4F122D74DE90FEB5E8B6ED3129CCAD254C20F3BF8309F8E06293AFD72427852258D7E319B65245CB0FE5870AF0387A7CB81FADAF43ED09DAEFBE39519401128E8F70D83B2873A6567B1A54955FD19D132E050193E440E7DD289677C509799D4A5D3704575A22965C49B149149369ECA9611441692495BCAF1A766971B99714913614C5E001CAF04E1B6790BDE47A5358FF0C917E0FF0EA9B90F6F272E75C37F2888C3040B7B0386FC38F63B148D0C1CA481E1B5BF9057A8FEDA4B343AEC9CBD567F3AD7F4570E12C675E13A74213642D14562649A92B7E60D0A2F4281773DD527164E692755068F3BE85F7E57523636FAA8CD5A4B12505F722E8EF50B8B8C68A6722C6B3E90C999D81539134AFC8D031B83ADE791C43CC6A3AECF339FF7AA933709F2A0593BEAF143AD4FE85C4114C05520BAA6BDBBBBA79AB57E9861500D376B73F68C0760126FB38FAF1DD905C8E3E9671A66DC23122415D4AF93BC552DEF6F13AABF12D8C03DECEF9BF98355DD166A0383DDD1B3B83A7D111BDA10CC071A942E068F5A9D372B321F6547BC0F88E08B9273579ECAAAE582E5D0BCB248EB62C1950D70F0E87471CB32E9C311A29C06DDF6EE503AEAE206EDAD5B2C3C976CDBA8B9D329393CBD6C938D7017078F716A4EEEBEB13A93AF9138AC7B458C535E7301EF36DA0E5C957B5A4B41434D8BD0E18A61C00D1EC41A52807A1506A808DB87F71C62B797E

E5BDCA35B8F31D648A3FD81E879AA1B6BC678D448293A92E7CFEABB90D68885AEAF5683B136DE660640B509F68263531F7CC6F39F8B577E8CFEA7017671310B788122A80B7BD49FBF52146A20563132729C16231562F4CA074C7FE03A24708F453C06667B5BCAE262E4DC3FD1A8B0507B375AA8ED88D90CD38283E8762C564F632E5116C0B0675679D21142466C3DA03FC992AAC97552AED1EC0CD53BC28CA0EE2F71EA199C34B8F106FD633A3468235F3F450092CBB46E086AA6D81109FE44DCC1751AED7E2A7EE1DA779EA070A0E185126D7E34C54342B0F441102C113197C790F8A9D7F41D0C600171A2549895BE5CB234F89156020CF65CBBC243EBDA23DC4EDE82FB374B1C21DD336FB55B4366DF5B073902D0589689FBA36CE837D4A423BE1B9F2A25E7470026F93371C09F81E6CF09C9E61F3EC33E873CB06AC4FAA93D8A4A10688A6FFE70174242BE1D900D1DD44DCF7F966DB2DF907F3DDCDD485EE4BD524AEFE33E03C438B657906617FDEFA326926F6099F050B26FAFF5CD2C7203585109C1F422A155825D763CCFD42EDCE0699E4F540D2AA07742620979570F6B7BB48C871D3603214C6DF3020C2EA900431DDBCF7CDFD83EA164FA9EC642DE88A7E447A0CD4C928803402B9311D7739FD05F33FD44B447DA959CD77A13DE84D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark end

%APLT1End

%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Helvetica-BoldOblique
%!FontType1-1.0: Helvetica-BoldOblique 1.0000.1.0000

14 dict begin/FontName /Helvetica-BoldOblique def

/PaintType 0 def

/Encoding 256 array 0 1 255{1 index exch/.notdef put}for

dup 33 /D put

dup 34 /a put

dup 35 /t put

dup 36 /space put

dup 37 /S put

dup 38 /m put

dup 39 /p put

dup 40 /l put

dup 41 /i put

dup 42 /n put

dup 43 /g put

dup 44 /s put

dup 45 /c put

dup 46 /h put

dup 47 /e put

dup 48 /M put

dup 49 /o put

dup 50 /d put

dup 51 /R put

dup 52 /u put

readonly def

42/FontType resourcestatus{pop pop false}{true}ifelse

%APLsfntBegin

{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if

/FontType 42 def

/FontMatrix matrix def

/FontBBox[2048 -2050 1 index div -985 2 index div 3255 3 index div 2407 5 -1 roll div]cvx def

/sfnts [<















243F1FF524311FD1371D1FD037471FCD41B80801B21FCB2AB80201B21FCA24B80401400F1FC824811FB537291FB4373B1FB227B80401B21FB141B80401B61FA437811FA384B80401B21FA22AB80401B21FA124B8019AB21FA024B8019AB61F9F243F1F9683B80401B21F9527B80401B21F8227B80401B21F7084B80801B21F6FB3B80801B21F6EB3B802ABB61F6D24261F6224B80101400B1F5D246C1F5C24391F5441B80125B21F4D27B80401B61F4C27CD1F4B41B80401B21F4024B8019AB21F3683B80401B21F3524B80201B21F3224B8019AB61F2C24BB1F2884B80801B21F2241B8040140131F20244C1F1D24261F2CA0961F2C245E1F412AB801A8B748282A2448279636B801F4B21F4D27B801F4B21F9527B801F4B21F6E27B801F4B21F6327BD01A700470029015A00250199B348296FB3B80190B21F83B3B8019AB348283725B803E840121FB327482784274827362748272527482755B80154402C0797076407550733072B072907260721071E071B071408120810080E080C080A080808060804080208000814B8FFE0402B00000100140610000001000604000001000410000001001002000001000200000001000002010802004A00B806008516763F183F123E113946443E113946443E113946443E113946443E11394660443E11394660442B2B2B2B2B2B2B2B2B2B2B182B2B2B2B2B2B2B2B2B2B2B18011DB0964B5358B0AA1D59B0324B5358B0FF1D592B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B65422B2B2B4B5279B35279EB56456523456023456560234560B08B766818B080622020B1EB794565234520B003266062636820B003266165B079236544B0EB234420B152564565234520B003266062636820B003266165B056236544B0522344B10056455458B156406544B25240524523614459B35045484E456523456023456560234560B089766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200

00>] def

/CharStrings 22 dict dup begin

/.notdef 0 def
/space 1 def
/D 2 def
/M 3 def
/R 4 def
/S 5 def
/a 6 def
/c 7 def
/d 8 def
/e 9 def
/g 10 def
/h 11 def
/i 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/s 18 def
/t 19 def
/u 20 def
/u10FB 21 def
 end readonly def

currentdict dup/FontName get exch definefont pop end

%APLsfntEnd

42/FontType resourcestatus{pop pop true}{false}ifelse

{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if

/FontType 1 def

/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def

/FontBBox{-2050 -985 3255 2407}def

/UniqueID 4082616 def

currentdict currentfile eexec

54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92608F4984E4A5769B1336AE461E05CD208550769783E471D7C20DE95AF973E3C7100591D725B8E15D66A614511E8AACFF5535B67E10FF7D067CC703C2D0FD780666B0A4C0CEC075D41A44CD54A17FD1117ED8ACD6633E577C949A7C71F8816E66CE41F0479350B2659DAD70A8FC6FBBF6CDDBEBCD5037887992F2586B9BC24695A7DD501F4738545F471604C16718A97BE9A4DA10146D55E55D01B338311B68CB6861CA7EBDEF93E68DEA747D745D314D3C97FF39FBA3A45D23C61E9460338BEA50AA59D3B7E3C5661A2453BD95466CEB587D2B55FAD8F41F26C24C9DFB8903751C49875F089941ED4FF518A28F9CC0EA634AB572A3F4446065C120462037D12AC8AA3D690DB85059DE094C1CE9FB3C3A58CB45072B7680EA4E61A4C4ACBF6FD2F22D0BB7B70FD751474408307C0C12EA6B8A73E4B403749884D4F52E028A1194E39E53F43BF9DF3C40502762693E16F7CFB301B2F4F96FA7EA1AAC197CB8C09CAA9FD733589821224E81995DC2E35F78A1FFD0270764E4D126F1DF75C2BB48A5DF8B86FE1F6C6A2D92D054548D00E7BD11526FA72D04A6DEC2DEBB222DD668A9EEB5B0C2E33DCF1617403828AF2A45F20A5B3BD50D48326BD94E1BCC2F76537E2A69BBDB1F50E8670E14B4572AFDD191EACB2927B1BA108FAA7B0FA28BA0F47A8784696552075BF0688D5C6C4F8C73B07058F7A51EC833AB3A90EF4E14C2CF85E60AC446B9ABDD1A8E1C3B06D83D07A6D53E0FBEE4A66A9FF9D575CCAA132D00

6D359641EA1FE6902D371A6772915D25486261A4449B486791AB81A36D0BCC285B9EDFDF9F4ED93E24DC31DBF177A446D9984AC9BFC4F6F82B25A2629F1CD2DB9CEA2FB0E4964B9545FE561F3DC549C6B9C8624581525F232941E0CC3425B2EBDB5B073F9342254CC329C5A3A0F8C84683348E899FB31DE1C82A6E347321AF36F449C7BD2670DBA60744687EA9FCB134F10E376A8898D9A7EEFB503925BC1D5997CE75D37AA4041A2CC6A7B25249459BE801635B206D24EAA6E6854BD1F7104963375BB490D356D7164C02EBB1009B5D3BAF8284DBD5DE5BDA103FA448426EFE4EA113C41FFA3A420D104FC1F528E9F7ECD49407B3908AFC3677F8E1B4056B38CB8ED0390767FB1C4DBD64B01046CEE5A7EB5875893DB595B75B31C21AB47B15C5F44E51BAA4C8E60EE43B8DDC1E01EC3452D87E64CE6BF56D086FDBB14497D2E7D5671A29206E5F824B9C4404E2D90123C2DFFB2818F9B8C739F5D6535E94E20F64E2FD6367756E2F144C30712BEB492DFF81F391BC06DA22AF9CCA256AD5FFC07B8B4A2E5F2DEE8840440888BD8FE40904C9E35D0178D4107BD02BE0CDC1C604B23EC9EECE4F47C33DB3B355EF831713519EFA6ABE3DE974C2FDEA4D7E6A5AB1DAF6131CF8072AD67C53005FED0F61454E3F5E32E408ED406000011AB6092B02766DE30DE86141DD8449C8166033A53E3F1B58A678DC7136076D3A4208BC0445BC1471A76D67F6EA86C4366204435155B134C81AB5E8541446D3DCFF95D1CB39B612CCCD08B4889C90FDC251ED90599529C22BB97A0DD71F7CEDAD5836D65F12FBD451BC2661B81EC671E089CC0550DD2A21FF3C66E1F99CF635221539F2AD75F76D129304E72841F57D940D808A7AA1C6CCDD551BD05564B07DBE0741ECE707B8715B1D3D5F98C6B9680EF0F89CDFD3C0EA278CF64233733B48340591362EB7A7EC35BFBC38DA7A9E31268CE115BBAC864110FBAC652C66D25151ED4801FFC9BA3B1FFCB1685E92CAA3F144A5A5B1DA65FEFEBD219212907D7717A11CAA7A912F35270B7AFD105FC25F9FD28FC4DA1E13CCEBF7E5B5D1EE06B6276A66F8DDB18E184C21F94E341B76733A742A83EC629A360577D5137314955C389F3ACB4ECF42C7DCBB66B893DBDA765618B6C04482B66D78DFFC897D6E71C43471817CA7FA3C95AB62D52AF1472E5D5799A52F31EA042FCC035DE7C226B7587B0DB8567FE86EA209EB9140F01894C816AB3AEB91834262424DE14BE5B3F3C4F3E59E9E99F29A6D56ECB114FA9AF1A82360B48A4FDD4CE28AB0CB58C57B22A450ABDC85B25139B889057C67946169DC29035DA15B9EBEC35E073044650552579EF85350A6AA7CE3D295EBD3AC44231FCE5ADF1755BE24D0824599CD1B2A825048E7A6857303EC7D93AEAD31D7ACDC8FF955DBF12AA620C6EAF5FCC195E99E180532EBFB4A

D9D757A415F722E68CF6897FCE249D90DBE1DF717F0CF06E7E3F52853F05548D01A902225C8C812F44E7BE8F74A1ADAE1635434DCF500F9B93B2EF7EA0BD176AFBE67E27816D458458CC5631C2CC40FB09917D68280F48E573F0EF3EB74479B9C6C3FCBBA71F56CD8AE77867E30C7CB71D5465009D0CB9E9742E4DD2F748F7922A29816AE81207E117BDD756C26FDB8ECB34725528F9D5AEECB847D196D1EFE0201D320F4154FA5719E88D28B2E0AB18DCF64695BF5B12BCCED19AEFF24CE09BFB5484AAB6528EDAAF70132984989FAB6809F519C8F648FDA5CE988F6187EEA4C074E9C2E680843B4A47B131CF1F01C76E146E96695F6C18EE533638B3BAA34408116483084926B568EDD26731FC2BBFE3B4C691C4B6BED78099BC71D3E95F254B013A91A76324E47ECF1C0881110C29D25D3483E5BDFB9DCDDDA7649EF1037D26BD449372AAE442F059259FA1BA7169C10AD8965EABA56EB635F81E15109515BBE39966841D547F76DCF2382888A02EAE7DD536216DF6F2D587463E5DEA5B6F185CD7A2C0E49544A84FBF326334E3AB7AB2A424AAC9D21FE66D29260CD4921842926CA418C914F8582CB3527E2A8DED7D46ADE38BFF25798DA340902E31542A23F8A77DAC397C03B590EF377F4CFEF51A4BABB802D30E0E0D4BE127BC1170DEC59D962B47FC740F47527747D3AF844668AAED3021626CAB4432CE74CC4DA11589B96A36F46622AF10F3D5F3A0A65DDF468047E6F60979DD453F4D85CF6B2412B186901B73D027EBE33E62013768888A1B749C829BA091A9D87D00791C98EEE1F6A16A29D8C654228593152B3D7E322591F68743D1527F12023EC78C37CE606289D8328C95A33E57D45E6366ADF0F9CF6583BBC4493F8134F5C52A118F57F5E159B56E284971E1A8D7E8BC38722B090CC3DD77B0BCD996009691D0AC26A59422E5FF39F882CB1A86EE0F2EE4A7E882D3D795F5C51C8C95C21DBEFE4E4C23C1D2692AA887339221506529966B432CA8D2F2AE6BF6604B3788ED857869DF5E1AB7203AE163F937BCFECA4CDD50F669296D2AA4EAD20759F9DD4D051037249F4714F4517225A16C24C94105564165F249603C7AE1029520CFC0F985452BA594E3751F064E215DE182E91E227B5C4DEF7A9C2903DA711D88A8E67638CC1A3BAE99E9433517F430F3B8F89DC5AE0B498F7983426041E5FA0FCACE0AAA8ECEB6C0AA4601C8EF1DCB0E371BF63C8CAB61A25B71F8C7CAA45AA7EFECC4391D4251DD9F3435B62D3D1B90E1A6EAE277E4ECC85CCBAB7103C35C5E9C2CE0BC69CD9991E0970DF7B33050ECBB3DADA5E07EABABB32752F338226C8DBF5AB2D0831C234ABF27C158D1122983BD495E0B908AA0C74118E803BCC2EB20632DBC50976233065C4B9A1A8D005F983D3246E8E8987B08E344F9A309F6655E709A47652D90163280D2

D75D3438060BEEE7272576C40DC878BF79A21D3D5D5FD044E050FAED8D17B0C94A1874CB732C2A93DABC035959278227811622B3960CD5B69AC63E8AF1D4418983961E3F9A3AD4043759A4CCAB66CC944350B4ADF5FE0AF32F7E8DBD218979E4F88A0B6CF0A7C0FB85B40CA89C9086A15A1E4118ADBE490C0A55095F86C99511A2FBBF2A56A3F9A8026DEE2F4F4AE714C7075529C34B9C38AAE965A4015750D8BBEF7F774805203346E563389823299FA501F37898597D68EB53BE98D16FCE051926EC3E94ACF9A2CBD861B012B68C78F6B9FD4F65D481D639AEDD90D311D465BD7BB906D2E010748199B44D255D1F434175107F785BC0D558C701FE32C341A147F73108ADEEC7B47510645D0BCF1286235612E58ABB0AF0A41A84220F0DE76C9CD28A8FA06A6C28124C9372B7CF44E979EAAECD3C3D5F5729F6B40A75C4017E5BC98A6D867CB393AD9EBF9F772517F74434DF153607285D444C5E300F6A9F46ABD4789DEA8F777C895DACBF24D69DB957AE9A31E035D6080A6AF165564D67C015B6AD84A8C870CC4AA986E38366D27543D22714E9DAF5B1AF615295E6C7152F1265C3E1C99E85375EBAA84E36423347EA1FA807FE8CE766545235415C154A2FE0B1D63205DFE13EDF73DBE2AD63F6CFD076BE3D3C7F734193E938193DD464B3556041894A613C1FA1E236ED8011D0BBE486D4B1B188ABAC9D515468B921B76037EC89F9D069BBD5C5AE3F6F3A964BDB6AF1CFF14A2748E48262E565070ED231A1687CFC65D825B67E4B03BA65AA748555BCED87E36B3A11EEA2A34FEE5FE5672930F1534F8DFA75124A55438D4475427D1E82F093F7940A3001D420929A2EF6B5641F730AF9214E0A7B16F6A440F106A0283BD29A08927365C3EF72C0759F43B8C0EC3E6F4320EF14F4D1991A52A9CA20ACEDBE1E383CC6D9F19F0BBBCA47C0EA3E84CAC180C87119EF484B1074D780193723CF1268B65C8B0873B5B7EA0AE962C5059975EEB7AFC2FD6D629A44FC1FC1C0FC57EDB069B95E6B4838A041E4D102DB198DC83AA85362573258CDFFEE5B2B4401F5BBDAB7D69378C66F8AB62D7DF6D71178C1F61EF649B6E61BCBB071488A3FD670E23C56C51F70E518CD26FFAEEEB3EECF627A1DCA5D4769828492B33AECCDA750A98D0D32930B0A72A1B01451FE5767C3717BB427457933D01E2291045917BE78E69CE86F58B57C209F11AF819481C94C38BA5D

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

0000000000000000000000000000000000000000000000000000000000000000

cleartomark end

%APLT1End

%RBIEndFontSubset
/Helvetica-BoldOblique cguidfix
/F2.1/Helvetica-BoldOblique renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
0 0 664.99988 174.00024 rc
181.45093 126.25531 m
283.42456 126.25531 l
283.42456 77.288895 l
181.45093 77.288895 l
h
181.45093 126.25531 m
f
3 w
1 J
1 j
0 0.039653402 0.942298 sc
1 0 0 -1 4.00032 219.00024 cm
177.45061 92.744934 m
279.42426 92.744934 l
279.42426 141.71135 l
177.45061 141.71135 l
h
177.45061 92.744934 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 232.43774 101.7721 cm
/F1.1[ 12 0 0 -12 0 0]sf
-43.03418 4 m
(!"#"$%&"'\(%\)"*)[ 6.673828 6.673828 6.000000 6.673828 3.996094 6.673828 6.673828 6.673828 3.333984 6.673828 6.673828 6.000000 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
180.73134 60.966644 m
282.70496 60.966644 l
282.70496 12.000214 l
180.73134 12.000214 l
h
180.73134 60.966644 m
f
1 0 0.058871701 sc
1 0 0 -1 4.00032 219.00024 cm
176.73102 158.0336 m
278.70465 158.0336 l
278.70465 207.00003 l
176.73102 207.00003 l
h
176.73102 158.0336 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 231.71815 36.483429 cm
-21.00293 4 m
(+,-./$0)[ 8.666016 6.673828 2.666016 3.333984 6.673828 3.996094 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
435.28162 116.32526 m
455.19327 107.55788 455.19327 93.343178 435.28162 84.575806 c
415.37003 75.80838 383.08701 75.80838 363.17542 84.575806 c
343.26376 93.343178 343.26376 107.55788 363.17542 116.32526 c
383.08701 125.09268 415.37003 125.09268 435.28162 116.32526 c
f
1 w
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
431.28131 102.67498 m
451.19296 111.44236 451.19296 125.65707 431.28131 134.42444 c
411.36972 143.19186 379.0867 143.19186 359.17511 134.42444 c
339.26346 125.65707 339.26346 111.44236 359.17511 102.67498 c
379.0867 93.907562 411.36972 93.907562 431.28131 102.67498 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 399.22852 100.45053 cm
-20.34375 -3.0000076 m
(!/&-\)1-2')[ 6.673828 6.673828 6.673828 2.666016 6.000000 3.333984 2.666016 6.000000 0.000000 ] xS
-30.348633 10.999992 m
(3"&$"\)\)-/,)[ 8.666016 6.673828 6.673828 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
11.000504 23.425751 m
11.000504 114.82977 l
11.000504 121.13665 33.842598 126.25528 61.98732 126.25528 c
90.132042 126.25528 112.97414 121.13665 112.97414 114.82977 c
112.97414 23.425751 l
112.97414 17.118866 90.132042 12.000244 61.98732 12.000244 c
33.842598 12.000244 11.000504 17.118866 11.000504 23.425751 c
f
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
7.0001836 195.57449 m
7.0001836 104.17047 l
7.0001836 97.863594 29.842278 92.744965 57.987 92.744965 c
86.131721 92.744965 108.97382 97.863594 108.97382 104.17047 c
108.97382 195.57449 l
108.97382 201.88138 86.131721 207 57.987 207 c
29.842278 207 7.0001836 201.88138 7.0001836 195.57449 c
7.0001836 104.17047 m
7.0001836 110.47735 29.842278 115.59598 57.987 115.59598 c
86.131721 115.59598 108.97382 110.47735 108.97382 104.17047 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 61.98732 69.127762 cm
/F1.1[ 10 0 0 -10 0 0]sf
-45.986816 3.7127533 m
(4'!/1\)'/.'*%1%)[ 3.891602 2.778320 5.561523 5.561523 2.778320 5.000000 2.778320 5.561523 2.778320 2.778320 5.561523 5.561523 2.778320 0.000000 ] xS
-45.986816 15.712753 m
(4'5-&6'$"*7,*%,28)[ 3.891602 2.778320 7.221680 2.221680 5.561523 5.561523 2.778320 3.330078 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 5.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
510.67151 126.25528 m
614.23853 126.25528 l
627.4314 126.25528 638.13861 100.66215 638.13861 69.127762 c
638.13861 37.593369 627.4314 12.000244 614.23853 12.000244 c
510.67151 12.000244 l
478.80472 69.127762 l
h
510.67151 126.25528 m
f
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
506.6712 92.744965 m
610.23822 92.744965 l
623.43109 92.744965 634.13831 118.3381 634.13831 149.87248 c
634.13831 181.40688 623.43109 207 610.23822 207 c
506.6712 207 l
474.80441 149.87248 l
h
506.6712 92.744965 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 348.38495 151.75865 cm
/F2.1[ 20 0 0 -20 0 0]sf
-307.61523 7 m
(!"#"$$$$$$$$$$$$%"&'\(\)*+$,-./&/$$$$$$$$012/\($$$$$$$$$$$$$$$$$$$$3/,4\(#,)[ 14.443359 11.123047 6.660156 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 13.339844 11.123047 17.783203 12.216797 5.556641 5.556641 12.216797 12.216797 5.556641 11.123047 11.123047 12.216797 11.123047 17.783203 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 16.660156 12.216797 12.216797 11.123047 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 5.556641 14.443359 11.123047 11.123047 12.216797 5.556641 6.660156 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
108.97382 149.87248 m
120.87383 149.87248 l
127.06923 149.87248 l
127.06923 125.38921 l
127.06923 116.20802 l
164.05069 116.69994 l
166.05069 116.69994 l
S
CM
178.05101 102.3003 m
170.05101 105.3003 l
170.05101 99.300301 l
h
178.05101 102.3003 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
174.05069 116.69994 m
166.05069 113.69994 l
166.05069 119.69994 l
h
174.05069 116.69994 m
S
1 J
1 j
108.97382 149.87248 m
120.87383 149.87248 l
127.06923 149.87248 l
127.06923 182.51682 l
160.80768 182.51682 l
163.33101 182.51682 l
165.33101 182.51682 l
S
CM
177.33133 36.483429 m
169.33133 39.483429 l
169.33133 33.483429 l
h
177.33133 36.483429 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
173.33101 182.51682 m
165.33101 179.51682 l
165.33101 185.51682 l
h
173.33101 182.51682 m
S
1 J
1 j
280.9241 116.44739 m
292.8241 116.44739 l
311 116 l
337 116 l
337 117 l
331.93387 117.18188 l
333.93387 117.18188 l
S
CM
345.93417 101.81837 m
337.93417 104.81837 l
337.93417 98.818367 l
h
345.93417 101.81837 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
341.93387 117.18188 m
333.93387 114.18188 l
333.93387 120.18188 l
h
341.93387 117.18188 m
S
5 w
1 J
1 j
528.47797 100.4426 m
528.47797 182.36784 l
603.37634 184.77734 l
S
3 w
0 0.133312 1 sc
528.47797 121.93633 m
536.46143 126.79716 l
542.29211 134.25179 l
548.12274 142.53465 l
553.95355 150.81746 l
561.24188 160.75694 l
572.17432 166.55499 l
580.92047 169.86813 l
587.48035 172.35301 l
601.00708 174.00957 l
S
1 0.0353516 0 sc
530.44714 109.40304 m
540.61688 112.6032 l
550.09186 118.40123 l
559.784 121.82741 l
558.83801 126.68414 l
566.34375 132.59515 l
572.90326 137.56482 l
582.37793 142.53459 l
589.66638 148.33263 l
593.31055 152.47404 l
601.00677 154.95892 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 515.35083 76.390244 cm
/F1.1[ 12 0 0 -12 0 0]sf
-13.333008 4 m
(9$$/$)[ 8.003906 3.996094 3.996094 6.673828 0.000000 ] xS
1 0 0 -1 569.72736 23.455246 cm
-31.7323 4 m
(:%0;<"'\)-=")[ 8.003906 6.673828 9.996094 6.673828 2.666016 6.673828 3.333984 6.000000 2.666016 6.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
1 1 1 sc
CM
435.28162 50.325241 m
455.19327 41.557877 455.19327 27.343155 435.28162 18.57579 c
415.37003 9.8083649 383.08701 9.8083649 363.17542 18.57579 c
343.26376 27.343155 343.26376 41.557877 363.17542 50.325241 c
383.08701 59.092667 415.37003 59.092667 435.28162 50.325241 c
f
1 w
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
431.28131 168.675 m
451.19296 177.44237 451.19296 191.65709 431.28131 200.42445 c
411.36972 209.19188 379.0867 209.19188 359.17511 200.42445 c
339.26346 191.65709 339.26346 177.44237 359.17511 168.675 c
379.0867 159.90758 411.36972 159.90758 431.28131 168.675 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 399.22852 34.450516 cm
-20.34375 -3 m
(!/&-\)1-2')[ 6.673828 6.673828 6.673828 2.666016 6.000000 3.333984 2.666016 6.000000 0.000000 ] xS
-30.348633 11 m
(3"&$"\)\)-/,)[ 8.666016 6.673828 6.673828 3.996094 6.673828 6.000000 6.000000 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 4.00032 219.00024 cm
280.01813 184.40617 m
310.09406 183.95879 l
333.09918 183.95879 l
S
CM
345.04181 34.086411 m
337.45718 38.02005 l
336.74088 32.062973 l
h
345.04181 34.086411 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
341.0415 184.91383 m
333.45688 180.98019 l
332.74057 186.93727 l
h
341.0415 184.91383 m
S
1 J
1 j
447 183.44739 m
477.0759 183 l
488.1694 183 l
S
CM
500.11389 35.045151 m
492.52917 38.978622 l
491.81299 33.02153 l
h
500.11389 35.045151 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
496.11359 183.95509 m
488.52887 180.02162 l
487.81268 185.97871 l
h
496.11359 183.95509 m
S
1 J
1 j
447.21503 118.64777 m
477.29092 118.20038 l
488.38602 118.20038 l
S
CM
500.32892 99.84481 m
492.74429 103.77843 l
492.02798 97.821342 l
h
500.32892 99.84481 m
f
0 J
0 j
1 0 0 -1 4.00032 219.00024 cm
496.32861 119.15543 m
488.74399 115.22181 l
488.02768 121.1789 l
h
496.32861 119.15543 m
S
ep
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 1039 10337 a @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 24.22093 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
2402 w(Researc)f(h)77 b(Questions)p 0 TeXcolorgray 332
11134 a Fk(\017)p 0 TeXcolorgray 42 w Fl(Will)61 b(the)h(regression)g
(based)f(sampling)g(distribution)e(impro)-5 b(v)g(e)61
b(our)h(p)5 b(erformance)62 b(in)f(classi\014cation?)p
0 TeXcolorgray 332 11450 a Fk(\017)p 0 TeXcolorgray 42
w Fl(Can)g(lev)-5 b(erage)62 b(based)f(sampling)g(b)5
b(e)62 b(generalized)e(to)i(classi\014cation?)1039 12262
y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.45363 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2955 w Fj(Datasets)269
16270 y @beginspecial -121 @llx 219 @lly 733 @urx 574
@ury 9989 @rwi @setspecial
%%BeginDocument: images/Data_distributions.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/Data_distributions.eps
%%CreationDate: 05/16/2014  16:25:47
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -121   219   733   574
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -121   219   733   574
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -1452 6888 csm

    0     0 10248  4260 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
1332 3791 mt 3519 3791 L
1332  319 mt 3519  319 L
1332 3791 mt 1332  319 L
3519 3791 mt 3519  319 L
1332 3791 mt 3519 3791 L
1332 3791 mt 1332  319 L
1332 3791 mt 1332 3756 L
1332  320 mt 1332  354 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1142 3986 mt 
(-10) s
1878 3791 mt 1878 3756 L
1878  320 mt 1878  354 L
1733 3986 mt 
(-5) s
2425 3791 mt 2425 3756 L
2425  320 mt 2425  354 L
2380 3986 mt 
(0) s
2972 3791 mt 2972 3756 L
2972  320 mt 2972  354 L
2927 3986 mt 
(5) s
3519 3791 mt 3519 3756 L
3519  320 mt 3519  354 L
3429 3986 mt 
(10) s
1332 3791 mt 1366 3791 L
3519 3791 mt 3484 3791 L
1207 3855 mt 
(0) s
1332 3096 mt 1366 3096 L
3519 3096 mt 3484 3096 L
1207 3160 mt 
(1) s
1332 2402 mt 1366 2402 L
3519 2402 mt 3484 2402 L
1207 2466 mt 
(2) s
1332 1708 mt 1366 1708 L
3519 1708 mt 3484 1708 L
1207 1772 mt 
(3) s
1332 1014 mt 1366 1014 L
3519 1014 mt 3484 1014 L
1207 1078 mt 
(4) s
1332  320 mt 1366  320 L
3519  320 mt 3484  320 L
1207  384 mt 
(5) s
1332  266 mt 
(x 10) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 120 FMSR

1647  159 mt 
(4) s
1332 3791 mt 3519 3791 L
1332  319 mt 3519  319 L
1332 3791 mt 1332  319 L
3519 3791 mt 3519  319 L
gs 1332 320 2188 3472 rc
/c8 { 0.000000 0.000000 0.562500 sr} bdef
c8
0 1 25 0 0 -1 1863 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 1863 3791 5 MP stroke
c8
0 0 26 0 0 0 1888 3791 4 MP
PP
0 sg
-26 0 0 0 26 0 0 0 1888 3791 5 MP stroke
c8
0 1 25 0 0 -1 1914 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 1914 3791 5 MP stroke
c8
0 1 26 0 0 -1 1939 3791 4 MP
PP
0 sg
-26 0 0 1 26 0 0 -1 1939 3791 5 MP stroke
c8
0 1 25 0 0 -1 1965 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 1965 3791 5 MP stroke
c8
0 1 26 0 0 -1 1990 3791 4 MP
PP
0 sg
-26 0 0 1 26 0 0 -1 1990 3791 5 MP stroke
c8
0 2 25 0 0 -2 2016 3791 4 MP
PP
0 sg
-25 0 0 2 25 0 0 -2 2016 3791 5 MP stroke
c8
0 2 25 0 0 -2 2041 3791 4 MP
PP
0 sg
-25 0 0 2 25 0 0 -2 2041 3791 5 MP stroke
c8
0 3 26 0 0 -3 2066 3791 4 MP
PP
0 sg
-26 0 0 3 26 0 0 -3 2066 3791 5 MP stroke
c8
0 5 25 0 0 -5 2092 3791 4 MP
PP
0 sg
-25 0 0 5 25 0 0 -5 2092 3791 5 MP stroke
c8
0 7 26 0 0 -7 2117 3791 4 MP
PP
0 sg
-26 0 0 7 26 0 0 -7 2117 3791 5 MP stroke
c8
0 11 25 0 0 -11 2143 3791 4 MP
PP
0 sg
-25 0 0 11 25 0 0 -11 2143 3791 5 MP stroke
c8
0 17 26 0 0 -17 2168 3791 4 MP
PP
0 sg
-26 0 0 17 26 0 0 -17 2168 3791 5 MP stroke
c8
0 24 25 0 0 -24 2194 3791 4 MP
PP
0 sg
-25 0 0 24 25 0 0 -24 2194 3791 5 MP stroke
c8
0 36 26 0 0 -36 2219 3791 4 MP
PP
0 sg
-26 0 0 36 26 0 0 -36 2219 3791 5 MP stroke
c8
0 47 25 0 0 -47 2245 3791 4 MP
PP
0 sg
-25 0 0 47 25 0 0 -47 2245 3791 5 MP stroke
c8
0 61 26 0 0 -61 2270 3791 4 MP
PP
0 sg
-26 0 0 61 26 0 0 -61 2270 3791 5 MP stroke
c8
0 76 25 0 0 -76 2296 3791 4 MP
PP
0 sg
-25 0 0 76 25 0 0 -76 2296 3791 5 MP stroke
c8
0 96 25 0 0 -96 2321 3791 4 MP
PP
0 sg
-25 0 0 96 25 0 0 -96 2321 3791 5 MP stroke
c8
0 121 26 0 0 -121 2346 3791 4 MP
PP
0 sg
-26 0 0 121 26 0 0 -121 2346 3791 5 MP stroke
c8
0 143 25 0 0 -143 2372 3791 4 MP
PP
0 sg
-25 0 0 143 25 0 0 -143 2372 3791 5 MP stroke
c8
0 165 26 0 0 -165 2397 3791 4 MP
PP
0 sg
-26 0 0 165 26 0 0 -165 2397 3791 5 MP stroke
c8
0 192 25 0 0 -192 2423 3791 4 MP
PP
0 sg
-25 0 0 192 25 0 0 -192 2423 3791 5 MP stroke
c8
0 195 26 0 0 -195 2448 3791 4 MP
PP
0 sg
-26 0 0 195 26 0 0 -195 2448 3791 5 MP stroke
c8
0 217 25 0 0 -217 2474 3791 4 MP
PP
0 sg
-25 0 0 217 25 0 0 -217 2474 3791 5 MP stroke
c8
0 229 26 0 0 -229 2499 3791 4 MP
PP
0 sg
-26 0 0 229 26 0 0 -229 2499 3791 5 MP stroke
c8
0 226 25 0 0 -226 2525 3791 4 MP
PP
0 sg
-25 0 0 226 25 0 0 -226 2525 3791 5 MP stroke
c8
0 226 25 0 0 -226 2550 3791 4 MP
PP
0 sg
-25 0 0 226 25 0 0 -226 2550 3791 5 MP stroke
c8
0 216 26 0 0 -216 2575 3791 4 MP
PP
0 sg
-26 0 0 216 26 0 0 -216 2575 3791 5 MP stroke
c8
0 201 25 0 0 -201 2601 3791 4 MP
PP
0 sg
-25 0 0 201 25 0 0 -201 2601 3791 5 MP stroke
c8
0 188 26 0 0 -188 2626 3791 4 MP
PP
0 sg
-26 0 0 188 26 0 0 -188 2626 3791 5 MP stroke
c8
0 161 25 0 0 -161 2652 3791 4 MP
PP
0 sg
-25 0 0 161 25 0 0 -161 2652 3791 5 MP stroke
c8
0 136 26 0 0 -136 2677 3791 4 MP
PP
0 sg
-26 0 0 136 26 0 0 -136 2677 3791 5 MP stroke
c8
0 110 25 0 0 -110 2703 3791 4 MP
PP
0 sg
-25 0 0 110 25 0 0 -110 2703 3791 5 MP stroke
c8
0 97 26 0 0 -97 2728 3791 4 MP
PP
0 sg
-26 0 0 97 26 0 0 -97 2728 3791 5 MP stroke
c8
0 76 25 0 0 -76 2754 3791 4 MP
PP
0 sg
-25 0 0 76 25 0 0 -76 2754 3791 5 MP stroke
c8
0 57 26 0 0 -57 2779 3791 4 MP
PP
0 sg
-26 0 0 57 26 0 0 -57 2779 3791 5 MP stroke
c8
0 44 25 0 0 -44 2805 3791 4 MP
PP
0 sg
-25 0 0 44 25 0 0 -44 2805 3791 5 MP stroke
c8
0 32 25 0 0 -32 2830 3791 4 MP
PP
0 sg
-25 0 0 32 25 0 0 -32 2830 3791 5 MP stroke
c8
0 24 26 0 0 -24 2855 3791 4 MP
PP
0 sg
-26 0 0 24 26 0 0 -24 2855 3791 5 MP stroke
c8
0 14 25 0 0 -14 2881 3791 4 MP
PP
0 sg
-25 0 0 14 25 0 0 -14 2881 3791 5 MP stroke
c8
0 12 26 0 0 -12 2906 3791 4 MP
PP
0 sg
-26 0 0 12 26 0 0 -12 2906 3791 5 MP stroke
c8
0 6 25 0 0 -6 2932 3791 4 MP
PP
0 sg
-25 0 0 6 25 0 0 -6 2932 3791 5 MP stroke
c8
0 5 26 0 0 -5 2957 3791 4 MP
PP
0 sg
-26 0 0 5 26 0 0 -5 2957 3791 5 MP stroke
c8
0 3 25 0 0 -3 2983 3791 4 MP
PP
0 sg
-25 0 0 3 25 0 0 -3 2983 3791 5 MP stroke
c8
0 3 26 0 0 -3 3008 3791 4 MP
PP
0 sg
-26 0 0 3 26 0 0 -3 3008 3791 5 MP stroke
c8
0 2 25 0 0 -2 3034 3791 4 MP
PP
0 sg
-25 0 0 2 25 0 0 -2 3034 3791 5 MP stroke
c8
0 1 26 0 0 -1 3059 3791 4 MP
PP
0 sg
-26 0 0 1 26 0 0 -1 3059 3791 5 MP stroke
c8
0 1 25 0 0 -1 3085 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 3085 3791 5 MP stroke
c8
0 1 25 0 0 -1 3110 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 3110 3791 5 MP stroke
gr

%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 192 FMSR

2281  180 mt 
(GA) s
4 w
DO
SO
6 w
4210 3791 mt 6397 3791 L
4210  319 mt 6397  319 L
4210 3791 mt 4210  319 L
6397 3791 mt 6397  319 L
4210 3791 mt 6397 3791 L
4210 3791 mt 4210  319 L
4210 3791 mt 4210 3756 L
4210  320 mt 4210  354 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

3975 3986 mt 
(-100) s
4939 3791 mt 4939 3756 L
4939  320 mt 4939  354 L
4749 3986 mt 
(-50) s
5668 3791 mt 5668 3756 L
5668  320 mt 5668  354 L
5623 3986 mt 
(0) s
6397 3791 mt 6397 3756 L
6397  320 mt 6397  354 L
6307 3986 mt 
(50) s
4210 3791 mt 4244 3791 L
6397 3791 mt 6362 3791 L
4085 3855 mt 
(0) s
4210 3096 mt 4244 3096 L
6397 3096 mt 6362 3096 L
4085 3160 mt 
(1) s
4210 2402 mt 4244 2402 L
6397 2402 mt 6362 2402 L
4085 2466 mt 
(2) s
4210 1708 mt 4244 1708 L
6397 1708 mt 6362 1708 L
4085 1772 mt 
(3) s
4210 1014 mt 4244 1014 L
6397 1014 mt 6362 1014 L
4085 1078 mt 
(4) s
4210  320 mt 4244  320 L
6397  320 mt 6362  320 L
4085  384 mt 
(5) s
4210  266 mt 
(x 10) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 120 FMSR

4525  159 mt 
(4) s
4210 3791 mt 6397 3791 L
4210  319 mt 6397  319 L
4210 3791 mt 4210  319 L
6397 3791 mt 6397  319 L
gs 4210 320 2188 3472 rc
c8
0 1 24 0 0 -1 4856 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 4856 3791 5 MP stroke
c8
0 0 24 0 0 0 4880 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 4880 3791 5 MP stroke
c8
0 0 25 0 0 0 4904 3791 4 MP
PP
0 sg
-25 0 0 0 25 0 0 0 4904 3791 5 MP stroke
c8
0 0 24 0 0 0 4929 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 4929 3791 5 MP stroke
c8
0 0 24 0 0 0 4953 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 4953 3791 5 MP stroke
c8
0 0 24 0 0 0 4977 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 4977 3791 5 MP stroke
c8
0 0 25 0 0 0 5001 3791 4 MP
PP
0 sg
-25 0 0 0 25 0 0 0 5001 3791 5 MP stroke
c8
0 0 24 0 0 0 5026 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5026 3791 5 MP stroke
c8
0 0 24 0 0 0 5050 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5050 3791 5 MP stroke
c8
0 0 24 0 0 0 5074 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5074 3791 5 MP stroke
c8
0 0 25 0 0 0 5098 3791 4 MP
PP
0 sg
-25 0 0 0 25 0 0 0 5098 3791 5 MP stroke
c8
0 0 24 0 0 0 5123 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5123 3791 5 MP stroke
c8
0 0 24 0 0 0 5147 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5147 3791 5 MP stroke
c8
0 1 24 0 0 -1 5171 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5171 3791 5 MP stroke
c8
0 0 25 0 0 0 5195 3791 4 MP
PP
0 sg
-25 0 0 0 25 0 0 0 5195 3791 5 MP stroke
c8
0 0 24 0 0 0 5220 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5220 3791 5 MP stroke
c8
0 0 24 0 0 0 5244 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5244 3791 5 MP stroke
c8
0 1 24 0 0 -1 5268 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5268 3791 5 MP stroke
c8
0 1 25 0 0 -1 5292 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 5292 3791 5 MP stroke
c8
0 0 24 0 0 0 5317 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5317 3791 5 MP stroke
c8
0 1 24 0 0 -1 5341 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5341 3791 5 MP stroke
c8
0 1 24 0 0 -1 5365 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5365 3791 5 MP stroke
c8
0 1 25 0 0 -1 5389 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 5389 3791 5 MP stroke
c8
0 1 24 0 0 -1 5414 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5414 3791 5 MP stroke
c8
0 1 24 0 0 -1 5438 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5438 3791 5 MP stroke
c8
0 1 24 0 0 -1 5462 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5462 3791 5 MP stroke
c8
0 1 25 0 0 -1 5486 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 5486 3791 5 MP stroke
c8
0 2 24 0 0 -2 5511 3791 4 MP
PP
0 sg
-24 0 0 2 24 0 0 -2 5511 3791 5 MP stroke
c8
0 4 24 0 0 -4 5535 3791 4 MP
PP
0 sg
-24 0 0 4 24 0 0 -4 5535 3791 5 MP stroke
c8
0 9 24 0 0 -9 5559 3791 4 MP
PP
0 sg
-24 0 0 9 24 0 0 -9 5559 3791 5 MP stroke
c8
0 29 25 0 0 -29 5583 3791 4 MP
PP
0 sg
-25 0 0 29 25 0 0 -29 5583 3791 5 MP stroke
c8
0 117 24 0 0 -117 5608 3791 4 MP
PP
0 sg
-24 0 0 117 24 0 0 -117 5608 3791 5 MP stroke
c8
0 691 24 0 0 -691 5632 3791 4 MP
PP
0 sg
-24 0 0 691 24 0 0 -691 5632 3791 5 MP stroke
c8
0 1861 24 0 0 -1861 5656 3791 4 MP
PP
0 sg
-24 0 0 1861 24 0 0 -1861 5656 3791 5 MP stroke
c8
0 616 25 0 0 -616 5680 3791 4 MP
PP
0 sg
-25 0 0 616 25 0 0 -616 5680 3791 5 MP stroke
c8
0 102 24 0 0 -102 5705 3791 4 MP
PP
0 sg
-24 0 0 102 24 0 0 -102 5705 3791 5 MP stroke
c8
0 26 24 0 0 -26 5729 3791 4 MP
PP
0 sg
-24 0 0 26 24 0 0 -26 5729 3791 5 MP stroke
c8
0 9 24 0 0 -9 5753 3791 4 MP
PP
0 sg
-24 0 0 9 24 0 0 -9 5753 3791 5 MP stroke
c8
0 4 25 0 0 -4 5777 3791 4 MP
PP
0 sg
-25 0 0 4 25 0 0 -4 5777 3791 5 MP stroke
c8
0 2 24 0 0 -2 5802 3791 4 MP
PP
0 sg
-24 0 0 2 24 0 0 -2 5802 3791 5 MP stroke
c8
0 2 24 0 0 -2 5826 3791 4 MP
PP
0 sg
-24 0 0 2 24 0 0 -2 5826 3791 5 MP stroke
c8
0 1 24 0 0 -1 5850 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5850 3791 5 MP stroke
c8
0 1 25 0 0 -1 5874 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 5874 3791 5 MP stroke
c8
0 1 24 0 0 -1 5899 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5899 3791 5 MP stroke
c8
0 0 24 0 0 0 5923 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5923 3791 5 MP stroke
c8
0 0 24 0 0 0 5947 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 5947 3791 5 MP stroke
c8
0 1 25 0 0 -1 5971 3791 4 MP
PP
0 sg
-25 0 0 1 25 0 0 -1 5971 3791 5 MP stroke
c8
0 1 24 0 0 -1 5996 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 5996 3791 5 MP stroke
c8
0 0 24 0 0 0 6020 3791 4 MP
PP
0 sg
-24 0 0 0 24 0 0 0 6020 3791 5 MP stroke
c8
0 1 24 0 0 -1 6044 3791 4 MP
PP
0 sg
-24 0 0 1 24 0 0 -1 6044 3791 5 MP stroke
gr

%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 192 FMSR

5191  180 mt 
(T3) s
4 w
DO
SO
6 w
7087 3791 mt 9274 3791 L
7087  319 mt 9274  319 L
7087 3791 mt 7087  319 L
9274 3791 mt 9274  319 L
7087 3791 mt 9274 3791 L
7087 3791 mt 7087  319 L
7087 3791 mt 7087 3756 L
7087  320 mt 7087  354 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

6942 3986 mt 
(-2) s
7633 3791 mt 7633 3756 L
7633  320 mt 7633  354 L
7488 3986 mt 
(-1) s
8180 3791 mt 8180 3756 L
8180  320 mt 8180  354 L
8135 3986 mt 
(0) s
8727 3791 mt 8727 3756 L
8727  320 mt 8727  354 L
8682 3986 mt 
(1) s
9274 3791 mt 9274 3756 L
9274  320 mt 9274  354 L
9229 3986 mt 
(2) s
8899 4254 mt 
(x 10) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 120 FMSR

9214 4147 mt 
(4) s
7087 3791 mt 7121 3791 L
9274 3791 mt 9239 3791 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

6962 3855 mt 
(0) s
7087 3096 mt 7121 3096 L
9274 3096 mt 9239 3096 L
6962 3160 mt 
(1) s
7087 2402 mt 7121 2402 L
9274 2402 mt 9239 2402 L
6962 2466 mt 
(2) s
7087 1708 mt 7121 1708 L
9274 1708 mt 9239 1708 L
6962 1772 mt 
(3) s
7087 1014 mt 7121 1014 L
9274 1014 mt 9239 1014 L
6962 1078 mt 
(4) s
7087  320 mt 7121  320 L
9274  320 mt 9239  320 L
6962  384 mt 
(5) s
7087  266 mt 
(x 10) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 120 FMSR

7402  159 mt 
(4) s
7087 3791 mt 9274 3791 L
7087  319 mt 9274  319 L
7087 3791 mt 7087  319 L
9274 3791 mt 9274  319 L
gs 7087 320 2188 3472 rc
c8
0 1 38 0 0 -1 7154 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 7154 3791 5 MP stroke
c8
0 0 38 0 0 0 7192 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7192 3791 5 MP stroke
c8
0 0 37 0 0 0 7230 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7230 3791 5 MP stroke
c8
0 0 38 0 0 0 7267 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7267 3791 5 MP stroke
c8
0 0 38 0 0 0 7305 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7305 3791 5 MP stroke
c8
0 0 37 0 0 0 7343 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7343 3791 5 MP stroke
c8
0 0 38 0 0 0 7380 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7380 3791 5 MP stroke
c8
0 0 37 0 0 0 7418 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7418 3791 5 MP stroke
c8
0 0 38 0 0 0 7455 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7455 3791 5 MP stroke
c8
0 0 38 0 0 0 7493 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7493 3791 5 MP stroke
c8
0 0 37 0 0 0 7531 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7531 3791 5 MP stroke
c8
0 0 38 0 0 0 7568 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7568 3791 5 MP stroke
c8
0 0 37 0 0 0 7606 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7606 3791 5 MP stroke
c8
0 0 38 0 0 0 7643 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7643 3791 5 MP stroke
c8
0 0 38 0 0 0 7681 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7681 3791 5 MP stroke
c8
0 0 37 0 0 0 7719 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7719 3791 5 MP stroke
c8
0 0 38 0 0 0 7756 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7756 3791 5 MP stroke
c8
0 0 37 0 0 0 7794 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7794 3791 5 MP stroke
c8
0 1 38 0 0 -1 7831 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 7831 3791 5 MP stroke
c8
0 0 38 0 0 0 7869 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7869 3791 5 MP stroke
c8
0 0 37 0 0 0 7907 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 7907 3791 5 MP stroke
c8
0 1 38 0 0 -1 7944 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 7944 3791 5 MP stroke
c8
0 0 38 0 0 0 7982 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 7982 3791 5 MP stroke
c8
0 0 37 0 0 0 8020 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8020 3791 5 MP stroke
c8
0 1 38 0 0 -1 8057 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 8057 3791 5 MP stroke
c8
0 1 37 0 0 -1 8095 3791 4 MP
PP
0 sg
-37 0 0 1 37 0 0 -1 8095 3791 5 MP stroke
c8
0 5 38 0 0 -5 8132 3791 4 MP
PP
0 sg
-38 0 0 5 38 0 0 -5 8132 3791 5 MP stroke
c8
0 3463 38 0 0 -3463 8170 3791 4 MP
PP
0 sg
-38 0 0 3463 38 0 0 -3463 8170 3791 5 MP stroke
c8
0 2 37 0 0 -2 8208 3791 4 MP
PP
0 sg
-37 0 0 2 37 0 0 -2 8208 3791 5 MP stroke
c8
0 1 38 0 0 -1 8245 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 8245 3791 5 MP stroke
c8
0 1 37 0 0 -1 8283 3791 4 MP
PP
0 sg
-37 0 0 1 37 0 0 -1 8283 3791 5 MP stroke
c8
0 0 38 0 0 0 8320 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8320 3791 5 MP stroke
c8
0 1 38 0 0 -1 8358 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 8358 3791 5 MP stroke
c8
0 0 37 0 0 0 8396 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8396 3791 5 MP stroke
c8
0 0 38 0 0 0 8433 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8433 3791 5 MP stroke
c8
0 1 37 0 0 -1 8471 3791 4 MP
PP
0 sg
-37 0 0 1 37 0 0 -1 8471 3791 5 MP stroke
c8
0 0 38 0 0 0 8508 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8508 3791 5 MP stroke
c8
0 1 38 0 0 -1 8546 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 8546 3791 5 MP stroke
c8
0 0 37 0 0 0 8584 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8584 3791 5 MP stroke
c8
0 0 38 0 0 0 8621 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8621 3791 5 MP stroke
c8
0 0 37 0 0 0 8659 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8659 3791 5 MP stroke
c8
0 0 38 0 0 0 8696 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8696 3791 5 MP stroke
c8
0 0 38 0 0 0 8734 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8734 3791 5 MP stroke
c8
0 0 37 0 0 0 8772 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8772 3791 5 MP stroke
c8
0 0 38 0 0 0 8809 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8809 3791 5 MP stroke
c8
0 0 38 0 0 0 8847 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8847 3791 5 MP stroke
c8
0 0 37 0 0 0 8885 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8885 3791 5 MP stroke
c8
0 0 38 0 0 0 8922 3791 4 MP
PP
0 sg
-38 0 0 0 38 0 0 0 8922 3791 5 MP stroke
c8
0 0 37 0 0 0 8960 3791 4 MP
PP
0 sg
-37 0 0 0 37 0 0 0 8960 3791 5 MP stroke
c8
0 1 38 0 0 -1 8997 3791 4 MP
PP
0 sg
-38 0 0 1 38 0 0 -1 8997 3791 5 MP stroke
gr

%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 192 FMSR

8068  180 mt 
(T1) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 249 x Fl(These)g(datasets)g(are)g(dra)-5
b(wn)61 b(from)i(distributions)d(de\014ned)h(in)g(Ma)h(et)g(al.)f([1])h
(and)f(ha)-5 b(v)g(e:)p 0 TeXcolorgray 332 16851 a Fk(\017)p
0 TeXcolorgray 42 w Fl(GA:)62 b(Nearly)g(uniform)f(lev)-5
b(erage-scores)p 0 TeXcolorgray 8924 16891 48 14247 v
0 TeXcolorgray 0 TeXcolorgray 9365 2788 a Fk(\017)p 0
TeXcolorgray 42 w Fl(T3:)61 b(Mildly)g(non-uniform)f(lev)-5
b(erage-scores)p 0 TeXcolorgray 9365 3090 a Fk(\017)p
0 TeXcolorgray 42 w Fl(T1:)61 b(V)-16 b(ery)63 b(non-uniform)e(lev)-5
b(erage-scores)10072 3834 y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 24.22093 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end


@endspecial 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1297 w Fj(Lev)f(eraging)76 b(in)i(for)f(least)g(squares)
g(regression)9302 4530 y Fl(F)-16 b(or)58 b(an)-5 b(y)57
b(lev)-5 b(eraging)55 b(w)-5 b(e)57 b(w)-5 b(an)g(t)56
b(to)h(\014nd)g(for)g(eac)-5 b(h)57 b(datap)5 b(oin)-5
b(t)55 b(a)i(lev)-5 b(erage-score)57 b(represen)-5 b(ting)55
b(the)i(imp)5 b(ortance)57 b(of)9302 4779 y(the)62 b(p)5
b(oin)-5 b(t.)61 b(This)g(w)-5 b(e)62 b(can)g(normalize)f(in)-5
b(to)61 b(a)h(distribution)d(to)j(sample)g(from.)10072
5465 y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1664 w Fj(V)-19
b(alidation)76 b(of)i(the)g(results)f(Ma)h(et)g(al.)9302
6123 y Fl(W)-16 b(e)63 b(ha)-5 b(v)g(e)61 b(empirically)f(tested)i(and)
f(v)-11 b(alidated)61 b(the)h(results)g(sho)-5 b(wn)61
b(b)-5 b(y)61 b(Ma)h(et)h(al.)e([1)o(].)p 0 TeXcolorgray
9406 8266 a @beginspecial 25 @llx 185 @lly 585 @urx 605
@ury 3196 @rwi @setspecial
%%BeginDocument: images/GALS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GALS.eps
%%CreationDate: 05/16/2014  15:47:15
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 614 4549 mt 
(4.5) s
 874 3609 mt  926 3609 L
 749 3673 mt 
(5) s
 874 2734 mt  926 2734 L
 614 2798 mt 
(5.5) s
 874 1859 mt  926 1859 L
 749 1923 mt 
(6) s
 874  984 mt  926  984 L
 614 1048 mt 
(6.5) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -5 106 22 106 1 107 -16 106 17 106 12 107 -23 106 17 
106 26 107 -20 106 7 106 10 106 -23 107 40 106 -19 106 52 
107 -9 106 5 106 -35 107 36 106 -37 106 73 107 -18 106 -3 
106 9 106 24 107 -3 106 56 106 -87 107 66 106 6 106 7 
107 -1 106 15 106 99 107 -54 106 80 106 -13 106 92 107 -62 
106 9 106 101 107 150 106 -92 106 80 107 265 106 -23 106 621 
106 131 874 2648 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -16 106 -1 106 34 107 -6 106 -6 106 -6 107 12 106 -8 
106 47 107 -47 106 52 106 0 106 14 107 -3 106 6 106 -16 
107 3 106 -15 106 28 107 30 106 -31 106 -10 107 34 106 55 
106 17 106 -79 107 62 106 -16 106 -55 107 96 106 42 106 3 
107 77 106 -13 106 -6 107 -13 106 102 106 47 106 -63 107 -40 
106 268 106 -13 107 -52 106 229 106 -41 107 399 106 -326 106 383 
106 459 874 2594 50 MP stroke
DA
6 w
c8
106 -13 106 -3 106 10 107 -5 106 23 106 1 107 -18 106 40 
106 -12 107 -15 106 10 106 -22 106 8 107 38 106 -28 106 63 
107 -27 106 -3 106 7 107 -3 106 -10 106 77 107 -53 106 7 
106 8 106 17 107 -32 106 90 106 -59 107 -38 106 74 106 2 
107 -24 106 66 106 57 107 -62 106 -8 106 106 106 9 107 -63 
106 24 106 110 107 94 106 -3 106 -95 107 293 106 -4 106 493 
106 132 874 3006 50 MP stroke
106 6 106 -2 106 56 107 -59 106 29 106 1 107 -21 106 38 
106 2 107 15 106 -39 106 50 106 -38 107 43 106 36 106 20 
107 -3 106 -14 106 -20 107 46 106 -2 106 -4 107 5 106 -40 
106 39 106 79 107 19 106 -3 106 -30 107 0 106 31 106 -1 
107 -35 106 128 106 39 107 -9 106 108 106 26 106 -11 107 -2 
106 75 106 -25 107 194 106 -89 106 245 107 336 106 64 106 639 
106 171 874 2102 50 MP stroke
c9
106 8 106 -2 106 28 107 -18 106 -16 106 15 107 -6 106 28 
106 -5 107 3 106 20 106 -41 106 30 107 1 106 26 106 -26 
107 2 106 15 106 14 107 8 106 -19 106 1 107 54 106 -3 
106 17 106 -23 107 -24 106 -22 106 30 107 47 106 -23 106 86 
107 -33 106 13 106 -36 107 81 106 56 106 12 106 -61 107 -22 
106 137 106 99 107 -45 106 115 106 -13 107 211 106 -138 106 92 
106 507 874 3088 50 MP stroke
106 39 106 -66 106 39 107 29 106 -34 106 22 107 -10 106 38 
106 -24 107 -38 106 109 106 -63 106 68 107 -21 106 39 106 -35 
107 -1 106 -29 106 109 107 -15 106 -67 106 9 107 23 106 94 
106 -58 106 36 107 38 106 -21 106 -70 107 93 106 48 106 14 
107 11 106 104 106 -84 107 6 106 213 106 91 106 -105 107 -27 
106 335 106 -187 107 50 106 419 106 -221 107 333 106 -170 106 659 
106 1048 874 1399 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 512 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2727 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T3LS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3LS.eps
%%CreationDate: 05/16/2014  15:45:37
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 614 4549 mt 
(4.5) s
 874 3609 mt  926 3609 L
 749 3673 mt 
(5) s
 874 2734 mt  926 2734 L
 614 2798 mt 
(5.5) s
 874 1859 mt  926 1859 L
 749 1923 mt 
(6) s
 874  984 mt  926  984 L
 614 1048 mt 
(6.5) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 25 106 -26 106 33 107 -16 106 -16 106 27 107 -14 106 -15 
106 47 107 4 106 13 106 -1 106 -14 107 -8 106 58 106 -53 
107 48 106 -34 106 12 107 -18 106 37 106 -78 107 93 106 -16 
106 19 106 16 107 28 106 -8 106 -15 107 7 106 45 106 -38 
107 29 106 36 106 41 107 -60 106 -10 106 142 106 -61 107 72 
106 141 106 -54 107 106 106 63 106 19 107 199 106 -143 106 276 
106 855 874 2471 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -11 106 1 106 37 107 23 106 -52 106 49 107 -16 106 -12 
106 33 107 -11 106 17 106 60 106 -33 107 -26 106 32 106 -6 
107 43 106 -47 106 132 107 -104 106 45 106 -15 107 49 106 2 
106 3 106 66 107 -80 106 142 106 -46 107 11 106 -16 106 -28 
107 135 106 -55 106 92 107 120 106 -180 106 264 106 -67 107 39 
106 184 106 184 107 7 106 28 106 52 107 38 106 347 106 86 
106 362 874 2335 50 MP stroke
DA
6 w
c8
106 4 106 -15 106 18 107 -10 106 -5 106 29 107 16 106 -32 
106 0 107 12 106 5 106 7 106 -10 107 -9 106 11 106 -19 
107 39 106 -25 106 25 107 -17 106 18 106 -25 107 87 106 -54 
106 -22 106 51 107 33 106 -63 106 36 107 -20 106 33 106 -26 
107 22 106 87 106 -14 107 -23 106 -17 106 77 106 -39 107 70 
106 65 106 -26 107 3 106 124 106 -47 107 8 106 215 106 106 
106 661 874 2958 50 MP stroke
106 29 106 3 106 13 107 -26 106 -40 106 75 107 -42 106 -4 
106 58 107 28 106 -28 106 29 106 -47 107 41 106 45 106 -27 
107 33 106 -2 106 -23 107 -44 106 84 106 -71 107 68 106 -1 
106 118 106 -34 107 -44 106 -20 106 43 107 -65 106 68 106 46 
107 14 106 50 106 26 107 10 106 -89 106 177 106 100 107 -61 
106 198 106 -140 107 43 106 241 106 -61 107 372 106 -174 106 321 
106 1007 874 1925 50 MP stroke
c9
106 -20 106 1 106 8 107 24 106 -27 106 52 107 -43 106 5 
106 0 107 7 106 27 106 22 106 -11 107 -11 106 48 106 -47 
107 17 106 -5 106 32 107 -37 106 66 106 -40 107 39 106 58 
106 -31 106 -11 107 -1 106 71 106 27 107 34 106 -76 106 25 
107 47 106 -52 106 97 107 -75 106 50 106 108 106 -59 107 175 
106 23 106 179 107 -11 106 52 106 47 107 -30 106 348 106 42 
106 280 874 2824 50 MP stroke
106 19 106 19 106 0 107 17 106 -34 106 39 107 8 106 -8 
106 -15 107 78 106 63 106 9 106 -49 107 -9 106 35 106 -30 
107 112 106 -128 106 165 107 -78 106 -9 106 55 107 38 106 -28 
106 17 106 98 107 -13 106 2 106 -12 107 95 106 -5 106 -27 
107 60 106 -16 106 129 107 170 106 -272 106 311 106 -175 107 201 
106 28 106 315 107 57 106 38 106 29 107 525 106 54 106 82 
106 859 874 1345 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 512 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2726 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T1LS.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1LS.eps
%%CreationDate: 05/16/2014  15:51:23
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(4) s
 874 3901 mt  926 3901 L
 749 3965 mt 
(5) s
 874 3318 mt  926 3318 L
 749 3382 mt 
(6) s
 874 2734 mt  926 2734 L
 749 2798 mt 
(7) s
 874 2151 mt  926 2151 L
 749 2215 mt 
(8) s
 874 1567 mt  926 1567 L
 749 1631 mt 
(9) s
 874  984 mt  926  984 L
 659 1048 mt 
(10) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -19 106 5 106 -1 107 8 106 7 106 -19 107 5 106 1 
106 -4 107 4 106 -4 106 5 106 19 107 -23 106 4 106 3 
107 10 106 -10 106 -7 107 11 106 6 106 -19 107 12 106 5 
106 11 106 -12 107 -11 106 10 106 16 107 11 106 24 106 -22 
107 -31 106 7 106 22 107 63 106 -33 106 -2 106 -28 107 86 
106 -27 106 13 107 27 106 275 106 -56 107 736 106 -23 106 276 
106 23 874 2774 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 12 106 -38 106 42 107 21 106 72 106 -145 107 113 106 78 
106 70 107 -48 106 -7 106 27 106 -43 107 -19 106 68 106 -8 
107 20 106 77 106 -210 107 144 106 104 106 -12 107 -81 106 104 
106 107 106 -100 107 5 106 135 106 65 107 -187 106 158 106 122 
107 -108 106 -16 106 187 107 -134 106 113 106 103 106 -84 107 38 
106 62 106 136 107 10 106 78 106 68 107 166 106 59 106 130 
106 134 874 1675 50 MP stroke
DA
6 w
c8
106 -11 106 -1 106 4 107 -5 106 7 106 -6 107 5 106 0 
106 -5 107 1 106 2 106 0 106 9 107 -9 106 -2 106 6 
107 1 106 0 106 -7 107 5 106 1 106 -5 107 -2 106 6 
106 0 106 0 107 -4 106 3 106 3 107 -2 106 19 106 -12 
107 -2 106 1 106 1 107 0 106 11 106 9 106 -21 107 26 
106 -7 106 33 107 -31 106 69 106 -24 107 428 106 -95 106 452 
106 269 874 3021 50 MP stroke
106 -14 106 30 106 -25 107 4 106 60 106 -72 107 47 106 -24 
106 -16 107 22 106 -9 106 -7 106 44 107 -58 106 12 106 48 
107 -16 106 -37 106 -8 107 66 106 -13 106 -52 107 72 106 -41 
106 34 106 -15 107 13 106 6 106 1 107 68 106 -11 106 20 
107 -119 106 60 106 77 107 141 106 -195 106 0 106 124 107 23 
106 82 106 195 107 -63 106 376 106 172 107 400 106 -84 106 344 
106 20 874 2429 50 MP stroke
c9
106 34 106 -52 106 19 107 -21 106 43 106 -29 107 128 106 -12 
106 -32 107 76 106 -70 106 26 106 28 107 -22 106 89 106 -1 
107 36 106 -32 106 -128 107 169 106 -160 106 148 107 -130 106 109 
106 135 106 -113 107 153 106 48 106 101 107 -167 106 49 106 237 
107 -173 106 58 106 233 107 -190 106 84 106 80 106 24 107 29 
106 -36 106 126 107 56 106 24 106 -168 107 335 106 -89 106 216 
106 209 874 1948 50 MP stroke
106 7 106 85 106 -33 107 -50 106 96 106 -64 107 48 106 133 
106 -61 107 52 106 76 106 10 106 -90 107 9 106 -64 106 63 
107 224 106 -192 106 53 107 30 106 72 106 -50 107 27 106 28 
106 46 106 82 107 -173 106 206 106 37 107 -160 106 98 106 86 
107 105 106 -166 106 152 107 -54 106 147 106 39 106 -52 107 -36 
106 44 106 125 107 141 106 20 106 9 107 182 106 66 106 316 
106 14 874 1448 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 557 3543 mt  -90 rotate
(Log-squared error) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 12758 8723 a(Figur)g(2:)h(Lal)g(di)f(la)p
0 TeXcolorgray 0 TeXcolorgray 10072 9504 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2275 w Fj(LS-based)78 b(Distribution)9302
10160 y Fl(W)-16 b(e)63 b(seek)f(to)g(\014nd)g(the)g(e\013ect)g(that)g
(a)g(datap)5 b(oin)-5 b(t's)60 b(class)i(has)g(on)f(the)h(predicted)f
(class)h(for)g(that)g(datap)5 b(oin)-5 b(t.)13314 10454
y Fi(\016)25 b Fl(^)-112 b Fi(y)13511 10485 y Fh(n)p
13314 10546 301 9 v 13314 10736 a Fi(\016)8 b(y)13511
10767 y Fh(n)17386 10594 y Fl(\(1\))9302 11030 y(There)62
b(is)g(a)g(closed)g(form)g(solution)f(whic)-5 b(h)60
b(is)i(linear)f(in)h Fi(y)11459 11408 y Fl(^)11426 11462
y Fi(\014)11540 11509 y Fh(O)5 b(LS)11964 11462 y Fl(=)12170
11233 y Fg(\020)12293 11462 y Fi(X)12477 11377 y Fh(T)12604
11462 y Fi(X)12788 11233 y Fg(\021)12911 11291 y Ff(\000)p
Fe(1)13163 11462 y Fi(X)13347 11377 y Fh(T)13473 11462
y Fi(y)197 b Fl(where)206 b(^)-112 b Fi(y)14542 11493
y Fh(n)14703 11462 y Fl(=)58 b Fi(X)15078 11493 y Fh(n)15228
11462 y Fk(\003)15410 11408 y Fl(^)15377 11462 y Fi(\014)9302
11862 y Fl(Therefore)k(the)g(lev)-5 b(erage-score)61
b(\(1\))i(is)f(the)g(co)5 b(e\016cien)-5 b(t)12422 12167
y Fi(\016)25 b Fl(^)-112 b Fi(y)12619 12198 y Fh(n)p
12422 12259 V 12422 12449 a Fi(\016)8 b(y)12619 12480
y Fh(n)12790 12307 y Fl(=)57 b Fi(X)13214 12078 y Fg(\020)13338
12307 y Fi(X)13522 12222 y Fh(T)13648 12307 y Fi(X)13832
12078 y Fg(\021)13956 12136 y Ff(\000)p Fe(1)14207 12307
y Fi(X)14391 12222 y Fh(T)10072 13304 y @beginspecial
@setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2765 w Fj(T)-19 b(est)77
b(Results)9302 13962 y Fl(W)-16 b(e)121 b(compared)f(logistic)f
(regression)h(when)g(sampling)f(from)i(a)f(LS-distribution)e(\(blue\))i
(vs.)h(a)f(uniform-)9302 14211 y(distribution)60 b(\(red\).)i(The)f
(mean,)h(25th)g(and)f(75th)g(quan)-5 b(tile)60 b(are)i(plotted.)p
0 TeXcolorgray 9406 16354 a @beginspecial 25 @llx 185
@lly 585 @urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/GA.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GA.eps
%%CreationDate: 05/16/2014  16:04:19
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -14 106 0 106 -42 107 49 106 28 106 -35 107 14 106 -35 
106 63 107 -49 106 119 106 -63 106 56 107 -119 106 7 106 49 
107 -28 106 35 106 56 107 -35 106 -14 106 -14 107 56 106 -126 
106 70 106 84 107 -77 106 77 106 28 107 -63 106 84 106 77 
107 -147 106 63 106 49 107 -49 106 -14 106 84 106 -28 107 133 
106 -35 106 56 107 238 106 119 106 -14 107 301 106 294 106 -175 
106 1008 874 1866 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 42 106 -49 106 21 107 -63 106 70 106 70 107 -63 106 14 
106 0 107 -28 106 28 106 21 106 -7 107 14 106 -28 106 42 
107 -28 106 -14 106 42 107 28 106 -28 106 35 107 -70 106 77 
106 -14 106 0 107 -7 106 63 106 -28 107 28 106 -7 106 21 
107 -14 106 35 106 -70 107 77 106 98 106 -98 106 7 107 21 
106 182 106 -7 107 105 106 0 106 252 107 35 106 539 106 -49 
106 350 874 2377 50 MP stroke
DA
6 w
c8
106 -7 106 8 106 -7 107 7 106 56 106 -42 107 42 106 -42 
106 14 107 9 106 33 106 -63 106 62 107 -35 106 -18 106 16 
107 2 106 17 106 -2 107 -10 106 28 106 -2 107 9 106 -65 
106 53 106 66 107 -89 106 89 106 -30 107 -14 106 16 106 103 
107 -110 106 33 106 0 107 -12 106 18 106 8 106 41 107 96 
106 9 106 -62 107 111 106 85 106 -21 107 58 106 452 106 0 
106 378 874 2811 50 MP stroke
106 -35 106 -7 106 -61 107 89 106 25 106 -39 107 -7 106 49 
106 -30 107 88 106 16 106 -44 106 47 107 -91 106 -54 106 26 
107 7 106 46 106 66 107 -37 106 -26 106 25 107 38 106 -72 
106 62 106 89 107 -102 106 119 106 18 107 -75 106 145 106 5 
107 -138 106 26 106 186 107 -114 106 -135 106 240 106 161 107 -30 
106 -92 106 246 107 207 106 58 106 -119 107 644 106 606 106 -118 
106 574 874 1383 50 MP stroke
c9
106 23 106 -61 106 3 107 7 106 28 106 41 107 -55 106 7 
106 49 107 -56 106 -8 106 59 106 -23 107 9 106 -2 106 -3 
107 51 106 -69 106 25 107 38 106 14 106 -12 107 -37 106 23 
106 -12 106 24 107 49 106 -66 106 80 107 -28 106 -22 106 22 
107 28 106 -8 106 -69 107 133 106 -14 106 -22 106 0 107 31 
106 144 106 -58 107 44 106 52 106 33 107 42 106 499 106 -35 
106 137 874 3049 50 MP stroke
106 -63 106 -65 106 100 107 -91 106 80 106 19 107 -3 106 38 
106 -63 107 100 106 -129 106 61 106 24 107 -54 106 23 106 0 
107 24 106 -12 106 135 107 -28 106 -65 106 -24 107 77 106 17 
106 -75 106 73 107 -52 106 2 106 52 107 -40 106 149 106 -35 
107 -91 106 98 106 -76 107 30 106 102 106 33 106 12 107 49 
106 205 106 25 107 131 106 152 106 138 107 -84 106 634 106 131 
106 625 874 1530 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2727 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3.eps
%%CreationDate: 05/16/2014  16:06:02
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -7 106 -14 106 -42 107 35 106 28 106 -7 107 0 106 -42 
106 35 107 7 106 14 106 -7 106 -42 107 0 106 14 106 35 
107 -7 106 21 106 -35 107 0 106 84 106 -56 107 -35 106 84 
106 -77 106 14 107 21 106 14 106 28 107 14 106 7 106 0 
107 -35 106 56 106 42 107 -56 106 77 106 -21 106 35 107 84 
106 -42 106 28 107 -49 106 203 106 35 107 161 106 140 106 126 
106 756 874 2391 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -7 106 -21 106 28 107 -14 106 7 106 7 107 -14 106 0 
106 14 107 -14 106 14 106 0 106 63 107 -56 106 42 106 -56 
107 49 106 -28 106 7 107 -42 106 91 106 -49 107 42 106 -7 
106 0 106 -7 107 0 106 -28 106 70 107 -21 106 -28 106 35 
107 21 106 -49 106 70 107 14 106 70 106 -98 106 35 107 63 
106 49 106 77 107 147 106 28 106 -21 107 77 106 280 106 322 
106 378 874 2475 50 MP stroke
DA
6 w
c8
106 23 106 -3 106 -55 107 41 106 -11 106 25 107 -6 106 -28 
106 13 107 7 106 15 106 16 106 -38 107 15 106 -15 106 35 
107 -6 106 20 106 -42 107 1 106 51 106 -17 107 -39 106 75 
106 -91 106 34 107 1 106 14 106 13 107 -13 106 21 106 6 
107 -20 106 30 106 28 107 19 106 -7 106 23 106 42 107 -38 
106 52 106 -56 107 12 106 88 106 17 107 140 106 125 106 54 
106 541 874 2986 50 MP stroke
106 -2 106 -29 106 -25 107 30 106 2 106 -16 107 -5 106 -7 
106 22 107 14 106 13 106 5 106 10 107 -59 106 91 106 3 
107 -36 106 5 106 -25 107 35 106 53 106 -51 107 -45 106 105 
106 -100 106 16 107 87 106 21 106 -3 107 57 106 -52 106 -26 
107 -35 106 131 106 -23 107 -3 106 33 106 9 106 182 107 -23 
106 -86 106 119 107 -133 106 394 106 156 107 219 106 171 106 165 
106 942 874 1636 50 MP stroke
c9
106 0 106 6 106 -13 107 14 106 2 106 -3 107 -7 106 -11 
106 25 107 -6 106 20 106 -7 106 29 107 -21 106 7 106 -14 
107 14 106 -29 106 -7 107 8 106 51 106 -10 107 8 106 -28 
106 4 106 -32 107 48 106 -7 106 31 107 4 106 -21 106 28 
107 -21 106 3 106 60 107 -37 106 21 106 -21 106 16 107 50 
106 14 106 69 107 -20 106 -73 106 159 107 -24 106 154 106 325 
106 -133 874 3459 50 MP stroke
106 -19 106 0 106 0 107 -5 106 31 106 -21 107 -17 106 57 
106 44 107 -59 106 -53 106 74 106 43 107 -38 106 -5 106 -49 
107 33 106 -26 106 31 107 -70 106 149 106 -75 107 43 106 13 
106 22 106 -94 107 126 106 -77 106 59 107 -66 106 49 106 9 
107 -30 106 49 106 33 107 145 106 -87 106 -28 106 222 107 -117 
106 72 106 121 107 194 106 -23 106 100 107 -23 106 429 106 604 
106 411 874 1747 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2726 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1.eps
%%CreationDate: 05/16/2014  16:07:16
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6082 4485 L
 874 4485 mt  874  984 L
1299 4485 mt 1299 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1209 4680 mt 
(15) s
1830 4485 mt 1830 4432 L
1740 4680 mt 
(20) s
2362 4485 mt 2362 4432 L
2272 4680 mt 
(25) s
2893 4485 mt 2893 4432 L
2803 4680 mt 
(30) s
3425 4485 mt 3425 4432 L
3335 4680 mt 
(35) s
3956 4485 mt 3956 4432 L
3866 4680 mt 
(40) s
4488 4485 mt 4488 4432 L
4398 4680 mt 
(45) s
5019 4485 mt 5019 4432 L
4929 4680 mt 
(50) s
5551 4485 mt 5551 4432 L
5461 4680 mt 
(55) s
6083 4485 mt 6083 4432 L
5993 4680 mt 
(60) s
 874 4485 mt  926 4485 L
 569 4549 mt 
(100) s
 874 4047 mt  926 4047 L
 569 4111 mt 
(150) s
 874 3609 mt  926 3609 L
 569 3673 mt 
(200) s
 874 3172 mt  926 3172 L
 569 3236 mt 
(250) s
 874 2734 mt  926 2734 L
 569 2798 mt 
(300) s
 874 2296 mt  926 2296 L
 569 2360 mt 
(350) s
 874 1859 mt  926 1859 L
 569 1923 mt 
(400) s
 874 1421 mt  926 1421 L
 569 1485 mt 
(450) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
106 -88 106 0 106 88 107 -88 106 0 106 53 107 -105 106 52 
106 9 107 -9 106 123 106 -123 106 9 107 -18 106 44 106 0 
107 -17 106 26 106 -9 107 -35 106 18 106 52 107 0 106 -131 
106 96 106 44 107 -88 106 -17 106 52 107 18 106 -53 106 0 
107 18 106 0 106 17 107 -43 106 -18 106 18 106 157 107 -61 
106 87 106 -78 107 -53 106 271 106 -157 107 332 106 -166 106 350 
106 648 874 2804 50 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
106 -96 106 0 106 123 107 61 106 26 106 -61 107 -70 106 -35 
106 87 107 44 106 -131 106 9 106 70 107 105 106 -237 106 193 
107 9 106 -44 106 -61 107 52 106 18 106 87 107 18 106 -114 
106 52 106 -26 107 -79 106 62 106 -70 107 166 106 -114 106 61 
107 -96 106 105 106 79 107 -88 106 44 106 61 106 -140 107 167 
106 -79 106 114 107 122 106 193 106 -105 107 35 106 175 106 254 
106 901 874 2104 50 MP stroke
DA
6 w
c8
106 -62 106 0 106 0 107 -43 106 15 106 39 107 -92 106 35 
106 24 107 -24 106 44 106 -50 106 -9 107 0 106 11 106 20 
107 32 106 -39 106 44 107 -15 106 15 106 -13 107 22 106 -75 
106 59 106 -52 107 -11 106 -15 106 67 107 20 106 -33 106 -4 
107 -35 106 33 106 30 107 -52 106 22 106 -9 106 66 107 -38 
106 31 106 0 107 -35 106 149 106 -184 107 258 106 20 106 105 
106 551 874 3301 50 MP stroke
106 -68 106 51 106 124 107 -129 106 -37 106 2 107 46 106 -55 
106 38 107 -40 106 114 106 -155 106 65 107 0 106 -15 106 26 
107 29 106 41 106 -105 107 70 106 26 106 -17 107 133 106 -282 
106 123 106 96 107 -101 106 -13 106 90 107 -46 106 -4 106 -92 
107 85 106 -42 106 18 107 -59 106 41 106 77 106 105 107 -68 
106 107 106 -126 107 2 106 179 106 68 107 258 106 81 106 630 
106 626 874 2023 50 MP stroke
c9
106 -49 106 -10 106 15 107 125 106 26 106 -101 107 -2 106 -90 
106 88 107 103 106 -156 106 29 106 33 107 -20 106 -112 106 195 
107 57 106 -175 106 41 107 -8 106 -44 106 175 107 -7 106 -78 
106 17 106 -57 107 5 106 46 106 -14 107 60 106 -88 106 120 
107 -129 106 81 106 -26 107 9 106 116 106 -73 106 -13 107 -65 
106 159 106 99 107 -44 106 206 106 -31 107 -94 106 83 106 99 
106 693 874 2905 50 MP stroke
106 -48 106 -107 106 96 107 238 106 -164 106 -39 107 26 106 -37 
106 142 107 33 106 -206 106 -59 106 169 107 13 106 -180 106 182 
107 9 106 129 106 -214 107 -51 106 103 106 228 107 -189 106 -26 
106 24 106 -37 107 -26 106 13 106 -50 107 249 106 -116 106 -11 
107 -76 106 61 106 125 107 -114 106 286 106 -87 106 -123 107 70 
106 -30 106 74 107 282 106 88 106 -29 107 0 106 440 106 370 
106 1053 874 1250 50 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 12758 16811 a(Figur)f(3:)h(Lal)g(di)f(la)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 17957 16891
48 14247 v 0 TeXcolorgray 18335 2788 a(It)78 b(clearly)e(sho)-5
b(ws)77 b(that)g(a)h(LS-distribution)c(sample)j(sc)-5
b(heme,)77 b(do)5 b(es)78 b(not)f(outp)5 b(erform)77
b(a)g(uniform-distribution)18335 3037 y(for)g(classi\014cation.)e(The)h
(results)h(sho)-5 b(wn)75 b(are)i(for)g(dimension)e Fi(p)83
b Fl(=)g(10)76 b(and)g Fi(N)105 b Fl(=)83 b(1000)76 b(datap)5
b(oin)-5 b(ts,)74 b(but)i(it)h(is)18335 3287 y(consisten)-5
b(t)61 b(when)h(v)-11 b(arying)61 b Fi(p)h Fl(and)f Fi(N)22
b Fl(.)19105 4013 y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 24.22093 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1857 w Fj(Sensitivit)-6 b(y)75 b(Based)j(Distribution)18335
4740 y Fl(Vi)c(generalisere)f(til)h(noget)f(andet,)g(og)h(derfor)f(k)
-11 b(an)74 b(WLS)g(ikk)-5 b(e)74 b(bruges,)f(s)p Fj(r)p
Fl(a)h(vi)g(la)-5 b(v)g(er)73 b(bare)h(LS.)f(The)h(target)g(is)18335
4989 y(again)61 b(\(1\))21227 5368 y(^)-111 b Fi(y)21310
5399 y Fh(n)21471 5368 y Fl(=)57 b Fi(p)p Fl(\()p Fi(y)7
b Fk(j)16 b Fl(\026)-111 b Fi(x;)80 b Fl(\026)-141 b
Fi(w)6 b Fl(\))234 b(\026)-139 b Fi(w)67 b Fl(s.t.)23175
5228 y Fi(\016)8 b(L)p 23169 5320 248 9 v 23169 5509
a(\016)52 b Fl(\026)-139 b Fi(w)23484 5368 y Fl(=)57
b(0)18335 5811 y(Since)124 b(dep)5 b(ends)61 b(b)5 b(oth)61
b(directly)h(and)f(indirectly)f(on)i Fi(y)69 b Fl(w)-5
b(e)62 b(see)g(that)22228 6222 y Fh(\016)p 22184 6256
170 9 v 22184 6384 a(\016)6 b(y)22378 6222 y(\016)g(L)p
22373 6256 207 9 v 22373 6384 a(\016)g(w)22647 6304 y
Fl(=)57 b(0)21480 6594 y Fk(+)21758 6807 y Fh(\016)21839
6744 y Fd(2)21902 6807 y Fh(L)p 21700 6841 376 9 v 21700
6969 a(\016)6 b(y)g(\016)43 b Fe(\026)-116 b Fh(w)22131
6888 y Fl(+)22457 6807 y Fh(\016)22538 6744 y Fd(2)22601
6807 y Fh(L)p 22336 6841 502 9 v 22336 6980 a(\016)43
b Fe(\026)-116 b Fh(w)t(\016)43 b Fe(\026)-116 b Fh(w)22749
6931 y Fc(T)22857 6807 y Fh(\016)44 b Fe(\026)-117 b
Fh(w)p 22857 6841 207 9 v 22875 6969 a(\016)6 b(y)23131
6888 y Fl(=)57 b(0)18335 7409 y(and)62 b(from)g(this)g(w)-5
b(e)62 b(can)f(get)i(our)e(lev)-5 b(erage-score)62 b(\(1\))20061
7968 y Fi(\016)25 b Fl(^)-112 b Fi(y)20258 7999 y Fh(n)p
20061 8060 301 9 v 20061 8250 a Fi(\016)8 b(y)20258 8281
y Fh(n)20429 8108 y Fl(=)20646 7968 y Fi(\016)g(p)p Fl(\()p
Fi(y)f Fk(j)16 b Fl(\026)-111 b Fi(x)21197 7999 y Fh(n)21301
7968 y Fi(;)79 b Fl(\026)-140 b Fi(w)5 b Fl(\))p 20646
8060 970 9 v 20943 8263 a Fi(\016)52 b Fl(\026)-139 b
Fi(w)21192 8203 y Fh(T)21634 7968 y Fi(\016)52 b Fl(\026)-139
b Fi(w)p 21634 8060 248 9 v 21656 8250 a(\016)8 b(y)21949
8108 y Fl(=)57 b Fk(\000)22326 7968 y Fi(\016)8 b(p)p
Fl(\()p Fi(y)f Fk(j)16 b Fl(\026)-111 b Fi(x)22877 7999
y Fh(n)22981 7968 y Fi(;)79 b Fl(\026)-140 b Fi(w)6 b
Fl(\))p 22326 8060 970 9 v 22624 8263 a Fi(\016)51 b
Fl(\026)-138 b Fi(w)22873 8203 y Fh(T)23339 7755 y Fg(")23621
7968 y Fi(\016)23719 7893 y Fe(2)23802 7968 y Fi(L)p
23470 8060 622 9 v 23470 8263 a(\016)52 b Fl(\026)-139
b Fi(w)t(\016)52 b Fl(\026)-139 b Fi(w)23966 8203 y Fh(T)24101
7755 y Fg(#)24222 7813 y Ff(\000)p Fe(1)24549 7968 y
Fi(\016)24647 7893 y Fe(2)24730 7968 y Fi(L)p 24483 8060
451 9 v 24483 8250 a(\016)8 b(y)f(\016)51 b Fl(\026)-138
b Fi(w)18335 8668 y Fl(When)70 b(ev)-11 b(aluating)69
b(this)h(mo)5 b(del,)70 b(w)-5 b(eigh)g(ts)69 b(trained)h(on)g(a)g
(small)h(training-set)e(is)i(used.)e(This)h(is)h(exp)5
b(ected)70 b(to)h(b)5 b(e)18335 8917 y(b)g(etter)63 b(than)e(LS-based)g
(sampling)g(since)h(it)g(in)-5 b(tro)5 b(duces)60 b(dep)5
b(endence)60 b(on)i(class)g(information.)19105 9643 y
@beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2805 w Fj(T)-19
b(est)76 b(results)p 0 TeXcolorgray 18439 12296 a @beginspecial
25 @llx 185 @lly 585 @urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/GAsen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/GAsen.eps
%%CreationDate: 05/16/2014  16:27:36
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 7 237 -28 237 21 237 -32 236 11 237 42 237 24 237 -42 
236 60 237 -4 237 -66 237 80 237 49 236 7 237 -10 237 87 
237 109 236 -11 237 53 237 276 237 462 236 778 874 2331 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 25 237 -21 237 38 237 -38 236 -4 237 42 237 -10 237 35 
236 -7 237 -28 237 31 237 39 237 -18 236 39 237 0 237 87 
237 116 236 49 237 182 237 -21 237 812 236 798 874 2076 23 MP stroke
DA
6 w
c8
237 -14 237 0 237 -28 237 7 236 -14 237 63 237 -7 237 0 
236 35 237 -7 237 -63 237 14 237 91 236 -35 237 63 237 28 
237 21 236 77 237 14 237 35 237 434 236 476 874 3063 23 MP stroke
237 35 237 -28 237 21 237 -14 236 -21 237 133 237 -35 237 -63 
236 91 237 -49 237 -77 237 189 237 0 236 14 237 14 237 231 
237 42 236 133 237 301 237 7 237 812 236 847 874 1579 23 MP stroke
c9
237 0 237 7 237 7 237 35 236 -21 237 0 237 21 237 35 
236 -42 237 0 237 21 237 42 237 -35 236 21 237 42 237 35 
237 70 236 -98 237 203 237 105 237 406 236 182 874 3252 23 MP stroke
237 -21 237 105 237 -98 237 28 236 -63 237 84 237 42 237 -49 
236 91 237 -70 237 77 237 35 237 -35 236 7 237 -7 237 161 
237 315 236 -49 237 224 237 406 237 371 236 1127 874 1446 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

2902  718 mt 
(GA) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2727 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T3sen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T3sen.eps
%%CreationDate: 05/16/2014  16:28:45
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 749 4549 mt 
(0) s
 874 3784 mt  926 3784 L
 569 3848 mt 
(100) s
 874 3084 mt  926 3084 L
 569 3148 mt 
(200) s
 874 2384 mt  926 2384 L
 569 2448 mt 
(300) s
 874 1684 mt  926 1684 L
 569 1748 mt 
(400) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 7 237 -42 237 31 237 14 236 -7 237 14 237 -14 237 46 
236 -74 237 70 237 4 237 87 237 -94 236 108 237 -21 237 11 
237 45 236 81 237 119 237 189 237 154 236 1183 874 1957 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 84 237 -101 237 45 237 4 236 0 237 -7 237 0 237 35 
236 14 237 -21 237 17 237 70 237 25 236 -7 237 -14 237 136 
237 -98 236 56 237 270 237 -231 237 623 236 861 874 2132 23 MP stroke
DA
6 w
c8
237 91 237 -42 237 -42 237 35 236 -14 237 -7 237 -7 237 56 
236 -21 237 98 237 -35 237 14 237 -35 236 14 237 49 237 -28 
237 28 236 154 237 0 237 133 237 14 236 973 874 2580 23 MP stroke
237 -21 237 0 237 -28 237 49 236 -28 237 49 237 56 237 0 
236 -119 237 119 237 35 237 14 237 -63 236 140 237 -14 237 35 
237 49 236 133 237 126 237 329 237 140 236 1400 874 1355 23 MP stroke
c9
237 63 237 -56 237 35 237 0 236 -28 237 14 237 -7 237 77 
236 -21 237 -35 237 0 237 28 237 63 236 21 237 -7 237 -14 
237 7 236 35 237 203 237 -210 237 441 236 616 874 2762 23 MP stroke
237 28 237 -49 237 -21 237 7 236 42 237 -21 237 42 237 -28 
236 140 237 -140 237 133 237 14 237 -14 236 147 237 -77 237 28 
237 14 236 -35 237 588 237 -105 237 595 236 1029 874 1432 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T3) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 2726 w @beginspecial 25 @llx 185 @lly 585
@urx 605 @ury 3196 @rwi @setspecial
%%BeginDocument: images/T1sen.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Darwin 12.5.0 Darwin Kernel Version 12.5.0: Sun Sep 29 13:33:47 PDT 2013; root:xnu-2050.48.12~1/RELEASE_X86_64 x86_64.
%%Title: /Users/Brille_smurf/Desktop/GitHubRepositories/LeveragingML/T1sen.eps
%%CreationDate: 05/16/2014  16:31:01
%%DocumentNeededFonts: Times-Roman
%%+ Times-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    25   185   585   605
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    25   185   585   605
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0300 7260 csm

    0     0  6721  5039 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
6 w
4 w
DO
SO
6 w
 874 4485 mt 6083 4485 L
 874 4485 mt  874  984 L
1821 4485 mt 1821 4432 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

1731 4680 mt 
(15) s
3004 4485 mt 3004 4432 L
2914 4680 mt 
(20) s
4188 4485 mt 4188 4432 L
4098 4680 mt 
(25) s
5372 4485 mt 5372 4432 L
5282 4680 mt 
(30) s
 874 4485 mt  926 4485 L
 569 4549 mt 
(100) s
 874 4047 mt  926 4047 L
 569 4111 mt 
(150) s
 874 3609 mt  926 3609 L
 569 3673 mt 
(200) s
 874 3172 mt  926 3172 L
 569 3236 mt 
(250) s
 874 2734 mt  926 2734 L
 569 2798 mt 
(300) s
 874 2296 mt  926 2296 L
 569 2360 mt 
(350) s
 874 1859 mt  926 1859 L
 569 1923 mt 
(400) s
 874 1421 mt  926 1421 L
 569 1485 mt 
(450) s
 874  984 mt  926  984 L
 569 1048 mt 
(500) s
gs 874 984 5210 3502 rc
36 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
237 -74 237 166 237 -13 237 18 236 35 237 21 237 14 237 -88 
236 22 237 26 237 -127 237 70 237 210 236 -183 237 179 237 -48 
237 -31 236 167 237 122 237 341 237 -78 236 660 874 2415 23 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
237 131 237 -166 237 44 237 -9 236 -31 237 97 237 -79 237 149 
236 -153 237 83 237 -35 237 113 237 -65 236 -35 237 -18 237 390 
237 -311 236 -17 237 407 237 -119 237 75 236 1558 874 1806 23 MP stroke
DA
6 w
c8
237 0 237 105 237 -157 237 52 236 114 237 -96 237 61 237 44 
236 -53 237 -9 237 -78 237 96 237 114 236 -114 237 -18 237 219 
237 -262 236 253 237 97 237 271 237 -219 236 683 874 2909 23 MP stroke
237 -70 237 140 237 -35 237 -17 236 148 237 -70 237 70 237 -105 
236 184 237 -79 237 0 237 -26 237 315 236 -341 237 262 237 307 
237 -132 236 202 237 -315 237 560 237 245 236 980 874 1360 23 MP stroke
c9
237 97 237 -53 237 105 237 -122 236 -18 237 88 237 -62 237 79 
236 -79 237 114 237 -26 237 61 237 35 236 -140 237 -26 237 157 
237 -87 236 79 237 192 237 79 237 -158 236 692 874 3049 23 MP stroke
237 280 237 -333 237 79 237 -35 236 -79 237 228 237 -140 237 175 
236 -88 237 -52 237 0 237 227 237 -122 236 26 237 -52 237 315 
237 -149 236 297 237 79 237 -44 237 210 236 1742 874 1010 23 MP stroke
gr

c9
DA
0 sg
%%IncludeResource: font Times-Bold
/Times-Bold /ISOLatin1Encoding 768 FMSR

3030  718 mt 
(T1) s
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 216 FMSR

3057 4881 mt 
(#Samples) s
 467 3670 mt  -90 rotate
(#Miss-classifications) s
90 rotate
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 180 FMSR

 851 4547 mt 
( ) s
6061 1045 mt 
( ) s
SO
1 sg
0 1692 1479 0 0 -1692 4545 2736 4 MP
PP
-1479 0 0 1692 1479 0 0 -1692 4545 2736 5 MP stroke
4 w
DO
SO
6 w
0 sg
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
4545 2736 mt 6024 2736 L
4545 2736 mt 4545 1044 L
4545 2736 mt 6024 2736 L
4545 1044 mt 6024 1044 L
4545 2736 mt 4545 1044 L
6024 2736 mt 6024 1044 L
%%IncludeResource: font Times-Roman
/Times-Roman /ISOLatin1Encoding 240 FMSR

5000 1281 mt 
(Mean Lev) s
gs 4545 1044 1480 1693 rc
36 w
c8
350 0 4614 1199 2 MP stroke
gr

36 w
c8
0 sg
5000 1558 mt 
(Mean Uni) s
gs 4545 1044 1480 1693 rc
c9
350 0 4614 1475 2 MP stroke
gr

c9
0 sg
5000 1834 mt 
(q25 Lev) s
gs 4545 1044 1480 1693 rc
DA
6 w
c8
350 0 4614 1751 2 MP stroke
SO
gr

6 w
c8
0 sg
5000 2111 mt 
(q75 Lev) s
gs 4545 1044 1480 1693 rc
DA
c8
350 0 4614 2028 2 MP stroke
SO
gr

c8
0 sg
5000 2387 mt 
(q25 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2304 2 MP stroke
SO
gr

c9
0 sg
5000 2664 mt 
(q75 Uni) s
gs 4545 1044 1480 1693 rc
DA
c9
350 0 4614 2580 2 MP stroke
SO
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 21241 12753 a Fl(Figur)62
b(4:)f(Det)i(virk)-5 b(er)62 b(ikk)-5 b(e,)61 b(\034v)h(:\()p
0 TeXcolorgray 0 TeXcolorgray 19105 13625 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 2837 w Fj(Conclusion)18335
14334 y Fl(The)76 b(LS-based)g(lev)-5 b(erage)75 b(sampling)h(giv)-5
b(es)75 b(no)h(adv)-11 b(an)-5 b(tage)75 b(o)-5 b(v)g(er)76
b(uniform)g(sampling)f(and)g(generally)g(p)5 b(erforms)18335
14583 y(w)-5 b(orse.)43 b(LS-distribution)d(is)j(based)f(on)h(what)f
(is)h(imp)5 b(ortan)-5 b(t)42 b(for)h(linear)f(regression,)g(it)h(do)5
b(es)43 b(not)g(ha)-5 b(v)g(e)41 b(an)i(adv)-11 b(an)-5
b(tage)18335 14832 y(in)62 b(\014nding)e(imp)5 b(ortan)-5
b(t)62 b(p)5 b(oin)-5 b(ts)61 b(for)h(classi\014cation.)19105
15581 y @beginspecial @setspecial
  tx@Dict begin STP newpath 5.69054 SLW 0.349 0.376 0.431  setrgbcolor
 0.0 true 19.38318 neg 19.38318 neg 836.54453 36.66093 .5 Frame  gsave
0.0 -45 PtoC Shadow 0.25  setgray gsave fill grestore stroke grestore
gsave 1  setgray gsave fill grestore stroke grestore gsave false 1
0.0 0.0  gsave 0.988 1 0.96  setrgbcolor currentrgbcolor grestore gsave
0.678 0.658 0.58  setrgbcolor currentrgbcolor grestore 300 1.0 0. false
tx@GradientDict begin GradientFill end grestore gsave 5.69054 SLW 0.349
0.376 0.431  setrgbcolor  1. .setopacityalpha  0  setlinecap stroke
 grestore end
 
@endspecial 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2849 w Fj(References)18335
16136 y Fb(Litteratur)p 0 TeXcolorgray 18335 16602 a
Fl([1])p 0 TeXcolorgray 41 w(Ma)56 b(et)h(al.)74 b(A)57
b(statistical)f(p)5 b(ersp)g(ectiv)-5 b(e)57 b(on)f(algorithmic)f(lev)
-5 b(eraging.)72 b Fa(arXiv:1306.5362v1)f([stat.ME])p
Fl(,)56 b(June)18575 16851 y(2013.)p 0 TeXcolorgray 0
TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
